{
  "version": 3,
  "sources": [
    "../../xgov_registry_mock/contract.py"
  ],
  "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",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 4 6 1209600 604800 1814400"
    },
    "16": {
      "op": "bytecblock 0x151f7c75 0x70726f706f73616c5f666565 0x636f6d6d69747465655f6964 0x7061757365645f7265676973747279 \"Unauthorized\" \"Wrong Proposal Status\" \"ERR:\" 0x70726f706f73616c5f636f6d6d69746d656e745f627073 0x6d696e5f7265717565737465645f616d6f756e74 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d 0x6d61785f7265717565737465645f616d6f756e745f6c61726765 0x70726f706f73616c5f7075626c697368696e675f627073 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d 0x64697363757373696f6e5f6475726174696f6e5f6c61726765 0x636f6d6d69747465655f7075626c6973686572 base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573 0x766f74696e675f6475726174696f6e5f736d616c6c 0x766f74696e675f6475726174696f6e5f6d656469756d 0x766f74696e675f6475726174696f6e5f6c61726765 0x71756f72756d5f736d616c6c 0x71756f72756d5f6d656469756d 0x71756f72756d5f6c61726765 0x77656967687465645f71756f72756d5f736d616c6c 0x77656967687465645f71756f72756d5f6d656469756d 0x77656967687465645f71756f72756d5f6c61726765 0x78676f765f7265766965776572 0x636f6f6c5f646f776e5f6475726174696f6e"
    },
    "629": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "631": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "634": {
      "op": "bytec 7 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "636": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "100"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "100"
      ]
    },
    "638": {
      "op": "app_global_put",
      "stack_out": []
    },
    "639": {
      "op": "bytec 8 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "641": {
      "op": "pushint 10000000000 // 10000000000",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "10000000000"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "10000000000"
      ]
    },
    "647": {
      "op": "app_global_put",
      "stack_out": []
    },
    "648": {
      "op": "bytec 9 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "650": {
      "op": "pushint 50000000000 // 50000000000",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "50000000000"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "50000000000"
      ]
    },
    "657": {
      "op": "app_global_put",
      "stack_out": []
    },
    "658": {
      "op": "bytec 10 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "660": {
      "op": "pushint 250000000000 // 250000000000",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "250000000000"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "250000000000"
      ]
    },
    "667": {
      "op": "app_global_put",
      "stack_out": []
    },
    "668": {
      "op": "bytec 11 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "670": {
      "op": "pushint 500000000000 // 500000000000",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "500000000000"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "500000000000"
      ]
    },
    "677": {
      "op": "app_global_put",
      "stack_out": []
    },
    "678": {
      "op": "bytec 12 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "680": {
      "op": "pushint 500 // 500",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "500"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "500"
      ]
    },
    "683": {
      "op": "app_global_put",
      "stack_out": []
    },
    "684": {
      "op": "bytec 13 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "686": {
      "op": "intc 5 // 604800",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "604800"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "604800"
      ]
    },
    "688": {
      "op": "app_global_put",
      "stack_out": []
    },
    "689": {
      "op": "bytec 14 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "691": {
      "op": "intc 4 // 1209600",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "1209600"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "1209600"
      ]
    },
    "693": {
      "op": "app_global_put",
      "stack_out": []
    },
    "694": {
      "op": "bytec 15 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "696": {
      "op": "intc 6 // 1814400",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "1814400"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "1814400"
      ]
    },
    "698": {
      "op": "app_global_put",
      "stack_out": []
    },
    "699": {
      "op": "bytec 16 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "701": {
      "op": "bytec 17 // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)"
      ]
    },
    "703": {
      "op": "app_global_put",
      "stack_out": []
    },
    "704": {
      "op": "bytec_1 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565"
      ]
    },
    "705": {
      "op": "pushint 100000000 // 100000000",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "100000000"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565",
        "100000000"
      ]
    },
    "710": {
      "op": "app_global_put",
      "stack_out": []
    },
    "711": {
      "op": "bytec_2 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "712": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "714": {
      "op": "app_global_put",
      "stack_out": []
    },
    "715": {
      "op": "bytec 18 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "717": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "718": {
      "op": "app_global_put",
      "stack_out": []
    },
    "719": {
      "op": "bytec 19 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "721": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "722": {
      "op": "app_global_put",
      "stack_out": []
    },
    "723": {
      "op": "bytec 20 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "725": {
      "op": "intc 5 // 604800",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "604800"
      ]
    },
    "727": {
      "op": "app_global_put",
      "stack_out": []
    },
    "728": {
      "op": "bytec 21 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "730": {
      "op": "intc 4 // 1209600",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "1209600"
      ]
    },
    "732": {
      "op": "app_global_put",
      "stack_out": []
    },
    "733": {
      "op": "bytec 22 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "735": {
      "op": "intc 6 // 1814400",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "1814400"
      ]
    },
    "737": {
      "op": "app_global_put",
      "stack_out": []
    },
    "738": {
      "op": "bytec 23 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "740": {
      "op": "pushint 1000 // 1000",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "1000"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "1000"
      ]
    },
    "743": {
      "op": "app_global_put",
      "stack_out": []
    },
    "744": {
      "op": "bytec 24 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "746": {
      "op": "pushint 1500 // 1500",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "1500"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "1500"
      ]
    },
    "749": {
      "op": "app_global_put",
      "stack_out": []
    },
    "750": {
      "op": "bytec 25 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "752": {
      "op": "pushint 2000 // 2000",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "2000"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "2000"
      ]
    },
    "755": {
      "op": "app_global_put",
      "stack_out": []
    },
    "756": {
      "op": "bytec 26 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "758": {
      "op": "pushint 2000 // 2000",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "2000"
      ]
    },
    "761": {
      "op": "app_global_put",
      "stack_out": []
    },
    "762": {
      "op": "bytec 27 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "764": {
      "op": "pushint 3000 // 3000",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "3000"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "3000"
      ]
    },
    "767": {
      "op": "app_global_put",
      "stack_out": []
    },
    "768": {
      "op": "bytec 28 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "770": {
      "op": "pushint 4000 // 4000",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "4000"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "4000"
      ]
    },
    "773": {
      "op": "app_global_put",
      "stack_out": []
    },
    "774": {
      "op": "bytec 29 // 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572"
      ]
    },
    "776": {
      "op": "bytec 17 // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",
      "stack_out": [
        "0x78676f765f7265766965776572",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)"
      ]
    },
    "778": {
      "op": "app_global_put",
      "stack_out": []
    },
    "779": {
      "op": "bytec 30 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "781": {
      "op": "intc 4 // 1209600",
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "1209600"
      ]
    },
    "783": {
      "op": "app_global_put",
      "stack_out": []
    },
    "784": {
      "op": "bytec_3 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "785": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0x00"
      ]
    },
    "788": {
      "op": "app_global_put",
      "stack_out": []
    },
    "789": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "791": {
      "op": "bz main_bare_routing@37",
      "stack_out": []
    },
    "794": {
      "op": "pushbytess 0x86f7e0e6 0x98352e86 0xc386b03f 0x6811eb76 0x37235b22 0xbbc72d1b 0xd17676d9 0x7cd79aad 0x77152d58 0x29dfd021 0x34a5dc55 0xbb0db011 0xaa348d0d 0x97f1e857 0xb6c22459 0x56ad1c6f 0xf83579fd 0x520e1f64 0x53802148 0xa4f766f6 0xa9998b1d 0x4e9c607c 0x650dfa8b 0xc887f086 0x4af84ea5 0x2c64e86f 0x16acce3b 0x886b3b04 0x11cf9720 0x45f6ca71 0xe23713e9 0x57bf85dc // method \"pause_registry()void\", method \"resume_registry()void\", method \"create_empty_proposal(address)uint64\", method \"set_proposal_commitment_bps(uint64)void\", method \"set_min_requested_amount(uint64)void\", method \"set_max_requested_amount_small(uint64)void\", method \"set_max_requested_amount_medium(uint64)void\", method \"set_max_requested_amount_large(uint64)void\", method \"set_publishing_fee(uint64)void\", method \"set_discussion_duration_small(uint64)void\", method \"set_discussion_duration_medium(uint64)void\", method \"set_discussion_duration_large(uint64)void\", method \"set_committee_publisher(address)void\", method \"set_proposal_fee(uint64)void\", method \"set_committee_id(byte[36])void\", method \"clear_committee_id()void\", method \"set_committee_members(uint64)void\", method \"set_committee_votes(uint64)void\", method \"set_voting_duration_small(uint64)void\", method \"set_voting_duration_medium(uint64)void\", method \"set_voting_duration_large(uint64)void\", method \"set_quorum_small(uint64)void\", method \"set_quorum_medium(uint64)void\", method \"set_quorum_large(uint64)void\", method \"set_weighted_quorum_small(uint64)void\", method \"set_weighted_quorum_medium(uint64)void\", method \"set_weighted_quorum_large(uint64)void\", method \"vote(application,address,uint64,uint64)void\", method \"set_xgov_reviewer(address)void\", method \"fund(application)void\", method \"set_cooldown_duration(uint64)void\", method \"delete_proposal(application)void\"",
      "defined_out": [
        "Method(clear_committee_id()void)",
        "Method(create_empty_proposal(address)uint64)",
        "Method(delete_proposal(application)void)",
        "Method(fund(application)void)",
        "Method(pause_registry()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_id(byte[36])void)",
        "Method(set_committee_members(uint64)void)",
        "Method(set_committee_publisher(address)void)",
        "Method(set_committee_votes(uint64)void)",
        "Method(set_cooldown_duration(uint64)void)",
        "Method(set_discussion_duration_large(uint64)void)",
        "Method(set_discussion_duration_medium(uint64)void)",
        "Method(set_discussion_duration_small(uint64)void)",
        "Method(set_max_requested_amount_large(uint64)void)",
        "Method(set_max_requested_amount_medium(uint64)void)",
        "Method(set_max_requested_amount_small(uint64)void)",
        "Method(set_min_requested_amount(uint64)void)",
        "Method(set_proposal_commitment_bps(uint64)void)",
        "Method(set_proposal_fee(uint64)void)",
        "Method(set_publishing_fee(uint64)void)",
        "Method(set_quorum_large(uint64)void)",
        "Method(set_quorum_medium(uint64)void)",
        "Method(set_quorum_small(uint64)void)",
        "Method(set_voting_duration_large(uint64)void)",
        "Method(set_voting_duration_medium(uint64)void)",
        "Method(set_voting_duration_small(uint64)void)",
        "Method(set_weighted_quorum_large(uint64)void)",
        "Method(set_weighted_quorum_medium(uint64)void)",
        "Method(set_weighted_quorum_small(uint64)void)",
        "Method(set_xgov_reviewer(address)void)",
        "Method(vote(application,address,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(pause_registry()void)",
        "Method(resume_registry()void)",
        "Method(create_empty_proposal(address)uint64)",
        "Method(set_proposal_commitment_bps(uint64)void)",
        "Method(set_min_requested_amount(uint64)void)",
        "Method(set_max_requested_amount_small(uint64)void)",
        "Method(set_max_requested_amount_medium(uint64)void)",
        "Method(set_max_requested_amount_large(uint64)void)",
        "Method(set_publishing_fee(uint64)void)",
        "Method(set_discussion_duration_small(uint64)void)",
        "Method(set_discussion_duration_medium(uint64)void)",
        "Method(set_discussion_duration_large(uint64)void)",
        "Method(set_committee_publisher(address)void)",
        "Method(set_proposal_fee(uint64)void)",
        "Method(set_committee_id(byte[36])void)",
        "Method(clear_committee_id()void)",
        "Method(set_committee_members(uint64)void)",
        "Method(set_committee_votes(uint64)void)",
        "Method(set_voting_duration_small(uint64)void)",
        "Method(set_voting_duration_medium(uint64)void)",
        "Method(set_voting_duration_large(uint64)void)",
        "Method(set_quorum_small(uint64)void)",
        "Method(set_quorum_medium(uint64)void)",
        "Method(set_quorum_large(uint64)void)",
        "Method(set_weighted_quorum_small(uint64)void)",
        "Method(set_weighted_quorum_medium(uint64)void)",
        "Method(set_weighted_quorum_large(uint64)void)",
        "Method(vote(application,address,uint64,uint64)void)",
        "Method(set_xgov_reviewer(address)void)",
        "Method(fund(application)void)",
        "Method(set_cooldown_duration(uint64)void)",
        "Method(delete_proposal(application)void)"
      ]
    },
    "956": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(clear_committee_id()void)",
        "Method(create_empty_proposal(address)uint64)",
        "Method(delete_proposal(application)void)",
        "Method(fund(application)void)",
        "Method(pause_registry()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_id(byte[36])void)",
        "Method(set_committee_members(uint64)void)",
        "Method(set_committee_publisher(address)void)",
        "Method(set_committee_votes(uint64)void)",
        "Method(set_cooldown_duration(uint64)void)",
        "Method(set_discussion_duration_large(uint64)void)",
        "Method(set_discussion_duration_medium(uint64)void)",
        "Method(set_discussion_duration_small(uint64)void)",
        "Method(set_max_requested_amount_large(uint64)void)",
        "Method(set_max_requested_amount_medium(uint64)void)",
        "Method(set_max_requested_amount_small(uint64)void)",
        "Method(set_min_requested_amount(uint64)void)",
        "Method(set_proposal_commitment_bps(uint64)void)",
        "Method(set_proposal_fee(uint64)void)",
        "Method(set_publishing_fee(uint64)void)",
        "Method(set_quorum_large(uint64)void)",
        "Method(set_quorum_medium(uint64)void)",
        "Method(set_quorum_small(uint64)void)",
        "Method(set_voting_duration_large(uint64)void)",
        "Method(set_voting_duration_medium(uint64)void)",
        "Method(set_voting_duration_small(uint64)void)",
        "Method(set_weighted_quorum_large(uint64)void)",
        "Method(set_weighted_quorum_medium(uint64)void)",
        "Method(set_weighted_quorum_small(uint64)void)",
        "Method(set_xgov_reviewer(address)void)",
        "Method(vote(application,address,uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(pause_registry()void)",
        "Method(resume_registry()void)",
        "Method(create_empty_proposal(address)uint64)",
        "Method(set_proposal_commitment_bps(uint64)void)",
        "Method(set_min_requested_amount(uint64)void)",
        "Method(set_max_requested_amount_small(uint64)void)",
        "Method(set_max_requested_amount_medium(uint64)void)",
        "Method(set_max_requested_amount_large(uint64)void)",
        "Method(set_publishing_fee(uint64)void)",
        "Method(set_discussion_duration_small(uint64)void)",
        "Method(set_discussion_duration_medium(uint64)void)",
        "Method(set_discussion_duration_large(uint64)void)",
        "Method(set_committee_publisher(address)void)",
        "Method(set_proposal_fee(uint64)void)",
        "Method(set_committee_id(byte[36])void)",
        "Method(clear_committee_id()void)",
        "Method(set_committee_members(uint64)void)",
        "Method(set_committee_votes(uint64)void)",
        "Method(set_voting_duration_small(uint64)void)",
        "Method(set_voting_duration_medium(uint64)void)",
        "Method(set_voting_duration_large(uint64)void)",
        "Method(set_quorum_small(uint64)void)",
        "Method(set_quorum_medium(uint64)void)",
        "Method(set_quorum_large(uint64)void)",
        "Method(set_weighted_quorum_small(uint64)void)",
        "Method(set_weighted_quorum_medium(uint64)void)",
        "Method(set_weighted_quorum_large(uint64)void)",
        "Method(vote(application,address,uint64,uint64)void)",
        "Method(set_xgov_reviewer(address)void)",
        "Method(fund(application)void)",
        "Method(set_cooldown_duration(uint64)void)",
        "Method(delete_proposal(application)void)",
        "tmp%2#0"
      ]
    },
    "959": {
      "op": "match main_pause_registry_route@5 main_resume_registry_route@6 main_create_empty_proposal_route@7 main_set_proposal_commitment_bps_route@8 main_set_min_requested_amount_route@9 main_set_max_requested_amount_small_route@10 main_set_max_requested_amount_medium_route@11 main_set_max_requested_amount_large_route@12 main_set_publishing_fee_route@13 main_set_discussion_duration_small_route@14 main_set_discussion_duration_medium_route@15 main_set_discussion_duration_large_route@16 main_set_committee_publisher_route@17 main_set_proposal_fee_route@18 main_set_committee_id_route@19 main_clear_committee_id_route@20 main_set_committee_members_route@21 main_set_committee_votes_route@22 main_set_voting_duration_small_route@23 main_set_voting_duration_medium_route@24 main_set_voting_duration_large_route@25 main_set_quorum_small_route@26 main_set_quorum_medium_route@27 main_set_quorum_large_route@28 main_set_weighted_quorum_small_route@29 main_set_weighted_quorum_medium_route@30 main_set_weighted_quorum_large_route@31 main_vote_route@32 main_set_xgov_reviewer_route@33 main_fund_route@34 main_set_cooldown_duration_route@35 main_delete_proposal_route@36",
      "stack_out": []
    },
    "1025": {
      "block": "main_after_if_else@39",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1026": {
      "op": "return",
      "stack_out": []
    },
    "1027": {
      "block": "main_delete_proposal_route@36",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "1029": {
      "op": "!",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "1030": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1031": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%156#0"
      ]
    },
    "1033": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1034": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "1037": {
      "op": "btoi",
      "defined_out": [
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%158#0"
      ]
    },
    "1038": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "1040": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.delete_proposal",
      "op": "callsub delete_proposal",
      "stack_out": []
    },
    "1043": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1044": {
      "op": "return",
      "stack_out": []
    },
    "1045": {
      "block": "main_set_cooldown_duration_route@35",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%149#0"
      ]
    },
    "1047": {
      "op": "!",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "1048": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1049": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "1051": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1052": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%23#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%23#0"
      ]
    },
    "1055": {
      "op": "btoi",
      "defined_out": [
        "tmp%153#0"
      ],
      "stack_out": [
        "tmp%153#0"
      ]
    },
    "1056": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_cooldown_duration",
      "op": "callsub set_cooldown_duration",
      "stack_out": []
    },
    "1059": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1060": {
      "op": "return",
      "stack_out": []
    },
    "1061": {
      "block": "main_fund_route@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "1063": {
      "op": "!",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "1064": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1065": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "1067": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1068": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "1071": {
      "op": "btoi",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "1072": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "1074": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.fund",
      "op": "callsub fund",
      "stack_out": []
    },
    "1077": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1078": {
      "op": "return",
      "stack_out": []
    },
    "1079": {
      "block": "main_set_xgov_reviewer_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "1081": {
      "op": "!",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "1082": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1083": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "1085": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1086": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "1089": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_xgov_reviewer",
      "op": "callsub set_xgov_reviewer",
      "stack_out": []
    },
    "1092": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1093": {
      "op": "return",
      "stack_out": []
    },
    "1094": {
      "block": "main_vote_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "1096": {
      "op": "!",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "1097": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1098": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "1100": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1101": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "1104": {
      "op": "btoi",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "1105": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "1107": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "1110": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%21#0",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%21#0"
      ]
    },
    "1113": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%21#0",
        "reinterpret_bytes[8]%22#0",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%21#0",
        "reinterpret_bytes[8]%22#0"
      ]
    },
    "1116": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.vote",
      "op": "callsub vote",
      "stack_out": []
    },
    "1119": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1120": {
      "op": "return",
      "stack_out": []
    },
    "1121": {
      "block": "main_set_weighted_quorum_large_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "1123": {
      "op": "!",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "1124": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1125": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "1127": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1128": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%20#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%20#0"
      ]
    },
    "1131": {
      "op": "btoi",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "1132": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_large",
      "op": "callsub set_weighted_quorum_large",
      "stack_out": []
    },
    "1135": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1136": {
      "op": "return",
      "stack_out": []
    },
    "1137": {
      "block": "main_set_weighted_quorum_medium_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "1139": {
      "op": "!",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "1140": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1141": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "1143": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1144": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%19#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%19#0"
      ]
    },
    "1147": {
      "op": "btoi",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "1148": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_medium",
      "op": "callsub set_weighted_quorum_medium",
      "stack_out": []
    },
    "1151": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1152": {
      "op": "return",
      "stack_out": []
    },
    "1153": {
      "block": "main_set_weighted_quorum_small_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "1155": {
      "op": "!",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "1156": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1157": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "1159": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1160": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%18#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%18#0"
      ]
    },
    "1163": {
      "op": "btoi",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "1164": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_small",
      "op": "callsub set_weighted_quorum_small",
      "stack_out": []
    },
    "1167": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1168": {
      "op": "return",
      "stack_out": []
    },
    "1169": {
      "block": "main_set_quorum_large_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "1171": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "1172": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1173": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "1175": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1176": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "1179": {
      "op": "btoi",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "1180": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_large",
      "op": "callsub set_quorum_large",
      "stack_out": []
    },
    "1183": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1184": {
      "op": "return",
      "stack_out": []
    },
    "1185": {
      "block": "main_set_quorum_medium_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "1187": {
      "op": "!",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "1188": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "1191": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1192": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "1195": {
      "op": "btoi",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "1196": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_medium",
      "op": "callsub set_quorum_medium",
      "stack_out": []
    },
    "1199": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1200": {
      "op": "return",
      "stack_out": []
    },
    "1201": {
      "block": "main_set_quorum_small_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "1203": {
      "op": "!",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "1204": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1205": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "1207": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1208": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%15#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "1211": {
      "op": "btoi",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "1212": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_small",
      "op": "callsub set_quorum_small",
      "stack_out": []
    },
    "1215": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1216": {
      "op": "return",
      "stack_out": []
    },
    "1217": {
      "block": "main_set_voting_duration_large_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "1219": {
      "op": "!",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "1220": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1221": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "1223": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1224": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "1227": {
      "op": "btoi",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "1228": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_large",
      "op": "callsub set_voting_duration_large",
      "stack_out": []
    },
    "1231": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1232": {
      "op": "return",
      "stack_out": []
    },
    "1233": {
      "block": "main_set_voting_duration_medium_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "1235": {
      "op": "!",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "1236": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1237": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "1239": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1240": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "1243": {
      "op": "btoi",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "1244": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_medium",
      "op": "callsub set_voting_duration_medium",
      "stack_out": []
    },
    "1247": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1248": {
      "op": "return",
      "stack_out": []
    },
    "1249": {
      "block": "main_set_voting_duration_small_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1251": {
      "op": "!",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "1252": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1253": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "1255": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1256": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "1259": {
      "op": "btoi",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "1260": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_small",
      "op": "callsub set_voting_duration_small",
      "stack_out": []
    },
    "1263": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1264": {
      "op": "return",
      "stack_out": []
    },
    "1265": {
      "block": "main_set_committee_votes_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1267": {
      "op": "!",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "1268": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1269": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "1271": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1272": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "1275": {
      "op": "btoi",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1276": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_votes",
      "op": "callsub set_committee_votes",
      "stack_out": []
    },
    "1279": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1280": {
      "op": "return",
      "stack_out": []
    },
    "1281": {
      "block": "main_set_committee_members_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1283": {
      "op": "!",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "1284": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1285": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "1287": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1288": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "1291": {
      "op": "btoi",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1292": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_members",
      "op": "callsub set_committee_members",
      "stack_out": []
    },
    "1295": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1296": {
      "op": "return",
      "stack_out": []
    },
    "1297": {
      "block": "main_clear_committee_id_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "1299": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1300": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1301": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1303": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1304": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.clear_committee_id",
      "op": "callsub clear_committee_id"
    },
    "1307": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1308": {
      "op": "return",
      "stack_out": []
    },
    "1309": {
      "block": "main_set_committee_id_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1311": {
      "op": "!",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1312": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1313": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1315": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1316": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[36]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[36]%0#0"
      ]
    },
    "1319": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_id",
      "op": "callsub set_committee_id",
      "stack_out": []
    },
    "1322": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1323": {
      "op": "return",
      "stack_out": []
    },
    "1324": {
      "block": "main_set_proposal_fee_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "1326": {
      "op": "!",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "1327": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1328": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "1330": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1331": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "1334": {
      "op": "btoi",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1335": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_fee",
      "op": "callsub set_proposal_fee",
      "stack_out": []
    },
    "1338": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1339": {
      "op": "return",
      "stack_out": []
    },
    "1340": {
      "block": "main_set_committee_publisher_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "1342": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "1343": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1344": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "1346": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1347": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "1350": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_publisher",
      "op": "callsub set_committee_publisher",
      "stack_out": []
    },
    "1353": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1354": {
      "op": "return",
      "stack_out": []
    },
    "1355": {
      "block": "main_set_discussion_duration_large_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "1357": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1358": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1359": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1361": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1362": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "1365": {
      "op": "btoi",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "1366": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_large",
      "op": "callsub set_discussion_duration_large",
      "stack_out": []
    },
    "1369": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1370": {
      "op": "return",
      "stack_out": []
    },
    "1371": {
      "block": "main_set_discussion_duration_medium_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1373": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1374": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1375": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1377": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1378": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "1381": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1382": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_medium",
      "op": "callsub set_discussion_duration_medium",
      "stack_out": []
    },
    "1385": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1386": {
      "op": "return",
      "stack_out": []
    },
    "1387": {
      "block": "main_set_discussion_duration_small_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1389": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "1390": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1391": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1393": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1394": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "1397": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "1398": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_small",
      "op": "callsub set_discussion_duration_small",
      "stack_out": []
    },
    "1401": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1402": {
      "op": "return",
      "stack_out": []
    },
    "1403": {
      "block": "main_set_publishing_fee_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1405": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1406": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1407": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1409": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1410": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "1413": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "1414": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_publishing_fee",
      "op": "callsub set_publishing_fee",
      "stack_out": []
    },
    "1417": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1418": {
      "op": "return",
      "stack_out": []
    },
    "1419": {
      "block": "main_set_max_requested_amount_large_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1421": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1422": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1423": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1425": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1426": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "1429": {
      "op": "btoi",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1430": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_large",
      "op": "callsub set_max_requested_amount_large",
      "stack_out": []
    },
    "1433": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1434": {
      "op": "return",
      "stack_out": []
    },
    "1435": {
      "block": "main_set_max_requested_amount_medium_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1437": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1438": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1439": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1441": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1442": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "1445": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1446": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_medium",
      "op": "callsub set_max_requested_amount_medium",
      "stack_out": []
    },
    "1449": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1450": {
      "op": "return",
      "stack_out": []
    },
    "1451": {
      "block": "main_set_max_requested_amount_small_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1453": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1454": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1455": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1457": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1458": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "1461": {
      "op": "btoi",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1462": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_small",
      "op": "callsub set_max_requested_amount_small",
      "stack_out": []
    },
    "1465": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1466": {
      "op": "return",
      "stack_out": []
    },
    "1467": {
      "block": "main_set_min_requested_amount_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1469": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1470": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1471": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1473": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1474": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "1477": {
      "op": "btoi",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1478": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_min_requested_amount",
      "op": "callsub set_min_requested_amount",
      "stack_out": []
    },
    "1481": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1482": {
      "op": "return",
      "stack_out": []
    },
    "1483": {
      "block": "main_set_proposal_commitment_bps_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1485": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1486": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1487": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1489": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1490": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1493": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1494": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_commitment_bps",
      "op": "callsub set_proposal_commitment_bps",
      "stack_out": []
    },
    "1497": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1498": {
      "op": "return",
      "stack_out": []
    },
    "1499": {
      "block": "main_create_empty_proposal_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1501": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1502": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1503": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1505": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1506": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1509": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.create_empty_proposal",
      "op": "callsub create_empty_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1512": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1513": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1514": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1515": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1516": {
      "op": "log",
      "stack_out": []
    },
    "1517": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1518": {
      "op": "return",
      "stack_out": []
    },
    "1519": {
      "block": "main_resume_registry_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1521": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1522": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1523": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1525": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1526": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.resume_registry",
      "op": "callsub resume_registry"
    },
    "1529": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1530": {
      "op": "return",
      "stack_out": []
    },
    "1531": {
      "block": "main_pause_registry_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1533": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1534": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1535": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1537": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1538": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.pause_registry",
      "op": "callsub pause_registry"
    },
    "1541": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1542": {
      "op": "return",
      "stack_out": []
    },
    "1543": {
      "block": "main_bare_routing@37",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "1545": {
      "op": "bnz main_after_if_else@39",
      "stack_out": []
    },
    "1548": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%161#0"
      ]
    },
    "1550": {
      "op": "!",
      "defined_out": [
        "tmp%162#0"
      ],
      "stack_out": [
        "tmp%162#0"
      ]
    },
    "1551": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1552": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1553": {
      "op": "return",
      "stack_out": []
    },
    "1554": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.pause_registry",
      "params": {},
      "block": "pause_registry",
      "stack_in": [],
      "op": "bytec_3 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1555": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x7061757365645f7265676973747279",
        "0x80"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0x80"
      ]
    },
    "1558": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1559": {
      "retsub": true,
      "op": "retsub"
    },
    "1560": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.resume_registry",
      "params": {},
      "block": "resume_registry",
      "stack_in": [],
      "op": "bytec_3 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1561": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0x00"
      ]
    },
    "1564": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1565": {
      "retsub": true,
      "op": "retsub"
    },
    "1566": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.create_empty_proposal",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create_empty_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1569": {
      "op": "itxn_begin"
    },
    "1570": {
      "op": "pushint 19 // 19",
      "defined_out": [
        "19"
      ],
      "stack_out": [
        "19"
      ]
    },
    "1572": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": []
    },
    "1574": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1575": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "1577": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1578": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": []
    },
    "1580": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "1586": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "1588": {
      "op": "pushbytes base64(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)",
      "defined_out": [
        "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"
      ],
      "stack_out": [
        "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"
      ]
    },
    "4924": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "4926": {
      "op": "pushbytes 0xcc694eaa // method \"create(address)void\"",
      "defined_out": [
        "Method(create(address)void)"
      ],
      "stack_out": [
        "Method(create(address)void)"
      ]
    },
    "4932": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4934": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "proposer#0 (copy)"
      ]
    },
    "4936": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4938": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4939": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4941": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4942": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4944": {
      "op": "itxn_submit"
    },
    "4945": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4947": {
      "op": "itxn_begin"
    },
    "4948": {
      "op": "dup",
      "defined_out": [
        "res.CreatedApplicationID#0",
        "res.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "res.CreatedApplicationID#0 (copy)"
      ]
    },
    "4949": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "4951": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0"
      ]
    },
    "4952": {
      "op": "intc_1 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "0"
      ]
    },
    "4953": {
      "op": "bytec_1 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f666565",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "4954": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4955": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%0#0"
      ]
    },
    "4956": {
      "op": "pushint 941500 // 941500",
      "defined_out": [
        "941500",
        "maybe_value%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%0#0",
        "941500"
      ]
    },
    "4960": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "4961": {
      "op": "itxn_field Amount",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0"
      ]
    },
    "4963": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4965": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay",
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "pay"
      ]
    },
    "4966": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4968": {
      "op": "intc_1 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0"
      ]
    },
    "4969": {
      "op": "itxn_field Fee",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4971": {
      "op": "itxn_submit"
    },
    "4972": {
      "retsub": true,
      "op": "retsub"
    },
    "4973": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_commitment_bps",
      "params": {
        "commitment_bps#0": "uint64"
      },
      "block": "set_proposal_commitment_bps",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4976": {
      "op": "bytec 7 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "4978": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "commitment_bps#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "commitment_bps#0 (copy)"
      ]
    },
    "4980": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4981": {
      "retsub": true,
      "op": "retsub"
    },
    "4982": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_min_requested_amount",
      "params": {
        "min_requested_amount#0": "uint64"
      },
      "block": "set_min_requested_amount",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4985": {
      "op": "bytec 8 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "4987": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "min_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "min_requested_amount#0 (copy)"
      ]
    },
    "4989": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4990": {
      "retsub": true,
      "op": "retsub"
    },
    "4991": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_small",
      "params": {
        "max_requested_amount#0": "uint64"
      },
      "block": "set_max_requested_amount_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4994": {
      "op": "bytec 9 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "4996": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "max_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "max_requested_amount#0 (copy)"
      ]
    },
    "4998": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4999": {
      "retsub": true,
      "op": "retsub"
    },
    "5000": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_medium",
      "params": {
        "max_requested_amount#0": "uint64"
      },
      "block": "set_max_requested_amount_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5003": {
      "op": "bytec 10 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "5005": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount#0 (copy)"
      ]
    },
    "5007": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5008": {
      "retsub": true,
      "op": "retsub"
    },
    "5009": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_large",
      "params": {
        "max_requested_amount#0": "uint64"
      },
      "block": "set_max_requested_amount_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5012": {
      "op": "bytec 11 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "5014": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "max_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "max_requested_amount#0 (copy)"
      ]
    },
    "5016": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5017": {
      "retsub": true,
      "op": "retsub"
    },
    "5018": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_publishing_fee",
      "params": {
        "publishing_fee_bps#0": "uint64"
      },
      "block": "set_publishing_fee",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5021": {
      "op": "bytec 12 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "5023": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "publishing_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "publishing_fee_bps#0 (copy)"
      ]
    },
    "5025": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5026": {
      "retsub": true,
      "op": "retsub"
    },
    "5027": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_small",
      "params": {
        "discussion_duration#0": "uint64"
      },
      "block": "set_discussion_duration_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5030": {
      "op": "bytec 13 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "5032": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "discussion_duration#0 (copy)"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "discussion_duration#0 (copy)"
      ]
    },
    "5034": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5035": {
      "retsub": true,
      "op": "retsub"
    },
    "5036": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_medium",
      "params": {
        "discussion_duration#0": "uint64"
      },
      "block": "set_discussion_duration_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5039": {
      "op": "bytec 14 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "5041": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "discussion_duration#0 (copy)"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "discussion_duration#0 (copy)"
      ]
    },
    "5043": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5044": {
      "retsub": true,
      "op": "retsub"
    },
    "5045": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_large",
      "params": {
        "discussion_duration#0": "uint64"
      },
      "block": "set_discussion_duration_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5048": {
      "op": "bytec 15 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "5050": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "discussion_duration#0 (copy)"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "discussion_duration#0 (copy)"
      ]
    },
    "5052": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5053": {
      "retsub": true,
      "op": "retsub"
    },
    "5054": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_publisher",
      "params": {
        "committee_publisher#0": "bytes"
      },
      "block": "set_committee_publisher",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5057": {
      "op": "bytec 16 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "5059": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "committee_publisher#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "committee_publisher#0 (copy)"
      ]
    },
    "5061": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5062": {
      "retsub": true,
      "op": "retsub"
    },
    "5063": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_fee",
      "params": {
        "proposal_fee#0": "uint64"
      },
      "block": "set_proposal_fee",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5066": {
      "op": "bytec_1 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565"
      ]
    },
    "5067": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "proposal_fee#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565",
        "proposal_fee#0 (copy)"
      ]
    },
    "5069": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5070": {
      "retsub": true,
      "op": "retsub"
    },
    "5071": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_id",
      "params": {
        "committee_id#0": "bytes"
      },
      "block": "set_committee_id",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5074": {
      "op": "bytec_2 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "5075": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)"
      ]
    },
    "5077": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5078": {
      "retsub": true,
      "op": "retsub"
    },
    "5079": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.clear_committee_id",
      "params": {},
      "block": "clear_committee_id",
      "stack_in": [],
      "op": "bytec_2 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "5080": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "5082": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5083": {
      "retsub": true,
      "op": "retsub"
    },
    "5084": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_members",
      "params": {
        "committee_members#0": "uint64"
      },
      "block": "set_committee_members",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5087": {
      "op": "bytec 18 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "5089": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0 (copy)"
      ]
    },
    "5091": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5092": {
      "retsub": true,
      "op": "retsub"
    },
    "5093": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_votes",
      "params": {
        "committee_votes#0": "uint64"
      },
      "block": "set_committee_votes",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5096": {
      "op": "bytec 19 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "5098": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0 (copy)"
      ]
    },
    "5100": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5101": {
      "retsub": true,
      "op": "retsub"
    },
    "5102": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_small",
      "params": {
        "voting_duration#0": "uint64"
      },
      "block": "set_voting_duration_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5105": {
      "op": "bytec 20 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "5107": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "voting_duration#0 (copy)"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "voting_duration#0 (copy)"
      ]
    },
    "5109": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5110": {
      "retsub": true,
      "op": "retsub"
    },
    "5111": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_medium",
      "params": {
        "voting_duration#0": "uint64"
      },
      "block": "set_voting_duration_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5114": {
      "op": "bytec 21 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "5116": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "voting_duration#0 (copy)"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "voting_duration#0 (copy)"
      ]
    },
    "5118": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5119": {
      "retsub": true,
      "op": "retsub"
    },
    "5120": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_large",
      "params": {
        "voting_duration#0": "uint64"
      },
      "block": "set_voting_duration_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5123": {
      "op": "bytec 22 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "5125": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "voting_duration#0 (copy)"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "voting_duration#0 (copy)"
      ]
    },
    "5127": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5128": {
      "retsub": true,
      "op": "retsub"
    },
    "5129": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_small",
      "params": {
        "quorum#0": "uint64"
      },
      "block": "set_quorum_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5132": {
      "op": "bytec 23 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "5134": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "quorum#0 (copy)"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "quorum#0 (copy)"
      ]
    },
    "5136": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5137": {
      "retsub": true,
      "op": "retsub"
    },
    "5138": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_medium",
      "params": {
        "quorum#0": "uint64"
      },
      "block": "set_quorum_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5141": {
      "op": "bytec 24 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "5143": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "quorum#0 (copy)"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "quorum#0 (copy)"
      ]
    },
    "5145": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5146": {
      "retsub": true,
      "op": "retsub"
    },
    "5147": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_large",
      "params": {
        "quorum#0": "uint64"
      },
      "block": "set_quorum_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5150": {
      "op": "bytec 25 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "5152": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "quorum#0 (copy)"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "quorum#0 (copy)"
      ]
    },
    "5154": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5155": {
      "retsub": true,
      "op": "retsub"
    },
    "5156": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_small",
      "params": {
        "weighted_quorum#0": "uint64"
      },
      "block": "set_weighted_quorum_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5159": {
      "op": "bytec 26 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "5161": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "weighted_quorum#0 (copy)"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "weighted_quorum#0 (copy)"
      ]
    },
    "5163": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5164": {
      "retsub": true,
      "op": "retsub"
    },
    "5165": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_medium",
      "params": {
        "weighted_quorum#0": "uint64"
      },
      "block": "set_weighted_quorum_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5168": {
      "op": "bytec 27 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "5170": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "weighted_quorum#0 (copy)"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "weighted_quorum#0 (copy)"
      ]
    },
    "5172": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5173": {
      "retsub": true,
      "op": "retsub"
    },
    "5174": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_large",
      "params": {
        "weighted_quorum#0": "uint64"
      },
      "block": "set_weighted_quorum_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5177": {
      "op": "bytec 28 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "5179": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "weighted_quorum#0 (copy)"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "weighted_quorum#0 (copy)"
      ]
    },
    "5181": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5182": {
      "retsub": true,
      "op": "retsub"
    },
    "5183": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.vote",
      "params": {
        "proposal_app#0": "uint64",
        "voter#0": "bytes",
        "approvals#0": "bytes",
        "rejections#0": "bytes"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "5186": {
      "op": "itxn_begin"
    },
    "5187": {
      "op": "frame_dig -4",
      "defined_out": [
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0 (copy)"
      ]
    },
    "5189": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5191": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "5197": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5199": {
      "op": "frame_dig -3",
      "defined_out": [
        "voter#0 (copy)"
      ],
      "stack_out": [
        "voter#0 (copy)"
      ]
    },
    "5201": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5203": {
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)"
      ],
      "stack_out": [
        "approvals#0 (copy)"
      ]
    },
    "5205": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5207": {
      "op": "frame_dig -1",
      "defined_out": [
        "rejections#0 (copy)"
      ],
      "stack_out": [
        "rejections#0 (copy)"
      ]
    },
    "5209": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5211": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5212": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5214": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5215": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5217": {
      "op": "itxn_submit"
    },
    "5218": {
      "op": "itxn LastLog"
    },
    "5220": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5222": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "5225": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5226": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5227": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "5228": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "5231": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "5232": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5233": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "5234": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5235": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "5236": {
      "op": "bz vote_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5239": {
      "op": "intc_1 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5240": {
      "block": "vote_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ],
      "op": "bz vote_after_if_else@14",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5243": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5244": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4",
        "tmp%4#0"
      ]
    },
    "5246": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "5247": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)"
      ]
    },
    "5249": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "5250": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "5251": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%4#0 (copy)"
      ]
    },
    "5253": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "5255": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "bounded_index%0#0"
      ]
    },
    "5256": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "5258": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "5259": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%4#0"
      ]
    },
    "5261": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0"
      ]
    },
    "5262": {
      "op": "bytec 4 // \"Unauthorized\"",
      "defined_out": [
        "\"Unauthorized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\""
      ]
    },
    "5264": {
      "op": "pushbytess \"Voter not found\" \"Voter already voted\" \"Votes exceeded\" \"Missing Config\" // \"Voter not found\", \"Voter already voted\", \"Votes exceeded\", \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Unauthorized\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Missing Config\""
      ]
    },
    "5332": {
      "op": "bytec 5 // \"Wrong Proposal Status\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Unauthorized\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "\"Wrong Proposal Status\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Missing Config\"",
        "\"Wrong Proposal Status\""
      ]
    },
    "5334": {
      "op": "pushbytes \"Voting Period Expired\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Unauthorized\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "\"Wrong Proposal Status\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Missing Config\"",
        "\"Wrong Proposal Status\"",
        "\"Voting Period Expired\""
      ]
    },
    "5357": {
      "op": "uncover 7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "\"Unauthorized\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Missing Config\"",
        "\"Wrong Proposal Status\"",
        "\"Voting Period Expired\"",
        "error_without_prefix#0"
      ]
    },
    "5359": {
      "op": "match vote_switch_case_0@6 vote_switch_case_1@7 vote_switch_case_2@8 vote_switch_case_3@9 vote_switch_case_4@10 vote_switch_case_5@11 vote_switch_case_6@12",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5375": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "5376": {
      "block": "vote_switch_case_6@12",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Voting Period Expired",
      "op": "err // Voting Period Expired"
    },
    "5377": {
      "block": "vote_switch_case_5@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "err // Wrong Proposal Status"
    },
    "5378": {
      "block": "vote_switch_case_4@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "5379": {
      "block": "vote_switch_case_3@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Votes exceeded",
      "op": "err // Votes exceeded"
    },
    "5380": {
      "block": "vote_switch_case_2@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Voter already voted",
      "op": "err // Voter already voted"
    },
    "5381": {
      "block": "vote_switch_case_1@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Voter not found",
      "op": "err // Voter not found"
    },
    "5382": {
      "block": "vote_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Unauthorized",
      "op": "err // Unauthorized"
    },
    "5383": {
      "block": "vote_after_if_else@14",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "5384": {
      "block": "vote_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%0#0"
      ]
    },
    "5386": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "5389": {
      "op": "bytec 6 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0",
        "\"ERR:\""
      ]
    },
    "5391": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5392": {
      "op": "b vote_ternary_merge@4"
    },
    "5395": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_xgov_reviewer",
      "params": {
        "xgov_reviewer#0": "bytes"
      },
      "block": "set_xgov_reviewer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5398": {
      "op": "bytec 29 // 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572"
      ]
    },
    "5400": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "xgov_reviewer#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572",
        "xgov_reviewer#0 (copy)"
      ]
    },
    "5402": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5403": {
      "retsub": true,
      "op": "retsub"
    },
    "5404": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.fund",
      "params": {
        "proposal_app#0": "uint64"
      },
      "block": "fund",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5407": {
      "op": "itxn_begin"
    },
    "5408": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0 (copy)"
      ]
    },
    "5410": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5412": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)"
      ],
      "stack_out": [
        "Method(fund()string)"
      ]
    },
    "5418": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5420": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5421": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5423": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5424": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5426": {
      "op": "itxn_submit"
    },
    "5427": {
      "op": "itxn LastLog"
    },
    "5429": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5431": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "5434": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5435": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5436": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "5437": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "5440": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "5441": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5442": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "5443": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5444": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "5445": {
      "op": "bz fund_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5448": {
      "op": "intc_1 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5449": {
      "block": "fund_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ],
      "op": "bz fund_after_if_else@9",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5452": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5453": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4",
        "tmp%4#0"
      ]
    },
    "5455": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "5456": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)"
      ]
    },
    "5458": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "5459": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "5460": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%4#0 (copy)"
      ]
    },
    "5462": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "5464": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "bounded_index%0#0"
      ]
    },
    "5465": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "5467": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "5468": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%4#0"
      ]
    },
    "5470": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0"
      ]
    },
    "5471": {
      "op": "bytec 4 // \"Unauthorized\"",
      "defined_out": [
        "\"Unauthorized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\""
      ]
    },
    "5473": {
      "op": "bytec 5 // \"Wrong Proposal Status\"",
      "defined_out": [
        "\"Unauthorized\"",
        "\"Wrong Proposal Status\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\"",
        "\"Wrong Proposal Status\""
      ]
    },
    "5475": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "\"Unauthorized\"",
        "\"Wrong Proposal Status\"",
        "error_without_prefix#0"
      ]
    },
    "5477": {
      "op": "match fund_switch_case_0@6 fund_switch_case_1@7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5483": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "5484": {
      "block": "fund_switch_case_1@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "err // Wrong Proposal Status"
    },
    "5485": {
      "block": "fund_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Unauthorized",
      "op": "err // Unauthorized"
    },
    "5486": {
      "block": "fund_after_if_else@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "5487": {
      "block": "fund_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%0#0"
      ]
    },
    "5489": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "5492": {
      "op": "bytec 6 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0",
        "\"ERR:\""
      ]
    },
    "5494": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5495": {
      "op": "b fund_ternary_merge@4"
    },
    "5498": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_cooldown_duration",
      "params": {
        "cooldown_duration#0": "uint64"
      },
      "block": "set_cooldown_duration",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5501": {
      "op": "bytec 30 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "5503": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "cooldown_duration#0 (copy)"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "cooldown_duration#0 (copy)"
      ]
    },
    "5505": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5506": {
      "retsub": true,
      "op": "retsub"
    },
    "5507": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.delete_proposal",
      "params": {
        "proposal_app#0": "uint64"
      },
      "block": "delete_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5510": {
      "op": "itxn_begin"
    },
    "5511": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "DeleteApplication"
      ]
    },
    "5513": {
      "op": "itxn_field OnCompletion",
      "stack_out": []
    },
    "5515": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0 (copy)"
      ]
    },
    "5517": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5519": {
      "op": "pushbytes 0x1feb95da // method \"delete()string\"",
      "defined_out": [
        "Method(delete()string)"
      ],
      "stack_out": [
        "Method(delete()string)"
      ]
    },
    "5525": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5527": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5528": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5530": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5531": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5533": {
      "op": "itxn_submit"
    },
    "5534": {
      "op": "itxn LastLog"
    },
    "5536": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5538": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "5541": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5542": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5543": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "5544": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "5547": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "5548": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5549": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "5550": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5551": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "5552": {
      "op": "bz delete_proposal_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5555": {
      "op": "intc_1 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5556": {
      "block": "delete_proposal_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ],
      "op": "bz delete_proposal_after_if_else@9",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5559": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5560": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4",
        "tmp%4#0"
      ]
    },
    "5562": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)",
        "tmp%4#0 (copy)"
      ]
    },
    "5563": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)"
      ]
    },
    "5565": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "5566": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "5567": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%4#0 (copy)"
      ]
    },
    "5569": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4",
        "tmp%4#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "5571": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "bounded_index%0#0"
      ]
    },
    "5572": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "5574": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "5575": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%4#0"
      ]
    },
    "5577": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0"
      ]
    },
    "5578": {
      "op": "bytec 4 // \"Unauthorized\"",
      "defined_out": [
        "\"Unauthorized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\""
      ]
    },
    "5580": {
      "op": "bytec 5 // \"Wrong Proposal Status\"",
      "defined_out": [
        "\"Unauthorized\"",
        "\"Wrong Proposal Status\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "error_without_prefix#0",
        "\"Unauthorized\"",
        "\"Wrong Proposal Status\""
      ]
    },
    "5582": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "\"Unauthorized\"",
        "\"Wrong Proposal Status\"",
        "error_without_prefix#0"
      ]
    },
    "5584": {
      "op": "match delete_proposal_switch_case_0@6 delete_proposal_switch_case_1@7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5590": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "5591": {
      "block": "delete_proposal_switch_case_1@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "err // Wrong Proposal Status"
    },
    "5592": {
      "block": "delete_proposal_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Unauthorized",
      "op": "err // Unauthorized"
    },
    "5593": {
      "block": "delete_proposal_after_if_else@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "5594": {
      "block": "delete_proposal_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%0#0"
      ]
    },
    "5596": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "5599": {
      "op": "bytec 6 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0",
        "\"ERR:\""
      ]
    },
    "5601": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5602": {
      "op": "b delete_proposal_ternary_merge@4"
    }
  }
}
{
  "version": 3,
  "sources": [
    "../../xgov_registry_mock/contract.py"
  ],
  "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",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 4 6 1209600 604800 1814400"
    },
    "16": {
      "op": "bytecblock 0x151f7c75 0x70726f706f73616c5f666565 0x636f6d6d69747465655f6964 \"Unauthorized\" \"Wrong Proposal Status\" \"ERR:\" 0x70726f706f73616c5f636f6d6d69746d656e745f627073 0x6d696e5f7265717565737465645f616d6f756e74 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d 0x6d61785f7265717565737465645f616d6f756e745f6c61726765 0x70726f706f73616c5f7075626c697368696e675f627073 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d 0x64697363757373696f6e5f6475726174696f6e5f6c61726765 0x636f6d6d69747465655f7075626c6973686572 base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573 0x766f74696e675f6475726174696f6e5f736d616c6c 0x766f74696e675f6475726174696f6e5f6d656469756d 0x766f74696e675f6475726174696f6e5f6c61726765 0x71756f72756d5f736d616c6c 0x71756f72756d5f6d656469756d 0x71756f72756d5f6c61726765 0x77656967687465645f71756f72756d5f736d616c6c 0x77656967687465645f71756f72756d5f6d656469756d 0x77656967687465645f71756f72756d5f6c61726765 0x78676f765f7265766965776572 0x636f6f6c5f646f776e5f6475726174696f6e"
    },
    "613": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "615": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "618": {
      "op": "bytec 6 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073"
    },
    "620": {
      "op": "pushint 100 // 100"
    },
    "622": {
      "op": "app_global_put"
    },
    "623": {
      "op": "bytec 7 // 0x6d696e5f7265717565737465645f616d6f756e74"
    },
    "625": {
      "op": "pushint 10000000000 // 10000000000"
    },
    "631": {
      "op": "app_global_put"
    },
    "632": {
      "op": "bytec 8 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
    },
    "634": {
      "op": "pushint 50000000000 // 50000000000"
    },
    "641": {
      "op": "app_global_put"
    },
    "642": {
      "op": "bytec 9 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
    },
    "644": {
      "op": "pushint 250000000000 // 250000000000"
    },
    "651": {
      "op": "app_global_put"
    },
    "652": {
      "op": "bytec 10 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
    },
    "654": {
      "op": "pushint 500000000000 // 500000000000"
    },
    "661": {
      "op": "app_global_put"
    },
    "662": {
      "op": "bytec 11 // 0x70726f706f73616c5f7075626c697368696e675f627073"
    },
    "664": {
      "op": "pushint 500 // 500"
    },
    "667": {
      "op": "app_global_put"
    },
    "668": {
      "op": "bytec 12 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
    },
    "670": {
      "op": "intc 5 // 604800"
    },
    "672": {
      "op": "app_global_put"
    },
    "673": {
      "op": "bytec 13 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
    },
    "675": {
      "op": "intc 4 // 1209600"
    },
    "677": {
      "op": "app_global_put"
    },
    "678": {
      "op": "bytec 14 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
    },
    "680": {
      "op": "intc 6 // 1814400"
    },
    "682": {
      "op": "app_global_put"
    },
    "683": {
      "op": "bytec 15 // 0x636f6d6d69747465655f7075626c6973686572"
    },
    "685": {
      "op": "bytec 16 // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"
    },
    "687": {
      "op": "app_global_put"
    },
    "688": {
      "op": "bytec_1 // 0x70726f706f73616c5f666565"
    },
    "689": {
      "op": "pushint 100000000 // 100000000"
    },
    "694": {
      "op": "app_global_put"
    },
    "695": {
      "op": "bytec_2 // 0x636f6d6d69747465655f6964"
    },
    "696": {
      "op": "pushbytes 0x"
    },
    "698": {
      "op": "app_global_put"
    },
    "699": {
      "op": "bytec 17 // 0x636f6d6d69747465655f6d656d62657273"
    },
    "701": {
      "op": "intc_1 // 0"
    },
    "702": {
      "op": "app_global_put"
    },
    "703": {
      "op": "bytec 18 // 0x636f6d6d69747465655f766f746573"
    },
    "705": {
      "op": "intc_1 // 0"
    },
    "706": {
      "op": "app_global_put"
    },
    "707": {
      "op": "bytec 19 // 0x766f74696e675f6475726174696f6e5f736d616c6c"
    },
    "709": {
      "op": "intc 5 // 604800"
    },
    "711": {
      "op": "app_global_put"
    },
    "712": {
      "op": "bytec 20 // 0x766f74696e675f6475726174696f6e5f6d656469756d"
    },
    "714": {
      "op": "intc 4 // 1209600"
    },
    "716": {
      "op": "app_global_put"
    },
    "717": {
      "op": "bytec 21 // 0x766f74696e675f6475726174696f6e5f6c61726765"
    },
    "719": {
      "op": "intc 6 // 1814400"
    },
    "721": {
      "op": "app_global_put"
    },
    "722": {
      "op": "bytec 22 // 0x71756f72756d5f736d616c6c"
    },
    "724": {
      "op": "pushint 1000 // 1000"
    },
    "727": {
      "op": "app_global_put"
    },
    "728": {
      "op": "bytec 23 // 0x71756f72756d5f6d656469756d"
    },
    "730": {
      "op": "pushint 1500 // 1500"
    },
    "733": {
      "op": "app_global_put"
    },
    "734": {
      "op": "bytec 24 // 0x71756f72756d5f6c61726765"
    },
    "736": {
      "op": "pushint 2000 // 2000"
    },
    "739": {
      "op": "app_global_put"
    },
    "740": {
      "op": "bytec 25 // 0x77656967687465645f71756f72756d5f736d616c6c"
    },
    "742": {
      "op": "pushint 2000 // 2000"
    },
    "745": {
      "op": "app_global_put"
    },
    "746": {
      "op": "bytec 26 // 0x77656967687465645f71756f72756d5f6d656469756d"
    },
    "748": {
      "op": "pushint 3000 // 3000"
    },
    "751": {
      "op": "app_global_put"
    },
    "752": {
      "op": "bytec 27 // 0x77656967687465645f71756f72756d5f6c61726765"
    },
    "754": {
      "op": "pushint 4000 // 4000"
    },
    "757": {
      "op": "app_global_put"
    },
    "758": {
      "op": "bytec 28 // 0x78676f765f7265766965776572"
    },
    "760": {
      "op": "bytec 16 // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"
    },
    "762": {
      "op": "app_global_put"
    },
    "763": {
      "op": "bytec 29 // 0x636f6f6c5f646f776e5f6475726174696f6e"
    },
    "765": {
      "op": "intc 4 // 1209600"
    },
    "767": {
      "op": "app_global_put"
    },
    "768": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "770": {
      "op": "bz main_bare_routing@35",
      "stack_out": []
    },
    "773": {
      "op": "pushbytess 0xc386b03f 0x6811eb76 0x37235b22 0xbbc72d1b 0xd17676d9 0x7cd79aad 0x77152d58 0x29dfd021 0x34a5dc55 0xbb0db011 0xaa348d0d 0x97f1e857 0xb6c22459 0x56ad1c6f 0xf83579fd 0x520e1f64 0x53802148 0xa4f766f6 0xa9998b1d 0x4e9c607c 0x650dfa8b 0xc887f086 0x4af84ea5 0x2c64e86f 0x16acce3b 0x886b3b04 0x11cf9720 0x45f6ca71 0xe23713e9 0x57bf85dc // method \"create_empty_proposal(address)uint64\", method \"set_proposal_commitment_bps(uint64)void\", method \"set_min_requested_amount(uint64)void\", method \"set_max_requested_amount_small(uint64)void\", method \"set_max_requested_amount_medium(uint64)void\", method \"set_max_requested_amount_large(uint64)void\", method \"set_publishing_fee(uint64)void\", method \"set_discussion_duration_small(uint64)void\", method \"set_discussion_duration_medium(uint64)void\", method \"set_discussion_duration_large(uint64)void\", method \"set_committee_publisher(address)void\", method \"set_proposal_fee(uint64)void\", method \"set_committee_id(byte[36])void\", method \"clear_committee_id()void\", method \"set_committee_members(uint64)void\", method \"set_committee_votes(uint64)void\", method \"set_voting_duration_small(uint64)void\", method \"set_voting_duration_medium(uint64)void\", method \"set_voting_duration_large(uint64)void\", method \"set_quorum_small(uint64)void\", method \"set_quorum_medium(uint64)void\", method \"set_quorum_large(uint64)void\", method \"set_weighted_quorum_small(uint64)void\", method \"set_weighted_quorum_medium(uint64)void\", method \"set_weighted_quorum_large(uint64)void\", method \"vote(application,address,uint64,uint64)void\", method \"set_xgov_reviewer(address)void\", method \"fund(application)void\", method \"set_cooldown_duration(uint64)void\", method \"delete_proposal(application)void\""
    },
    "925": {
      "op": "txna ApplicationArgs 0"
    },
    "928": {
      "op": "match main_create_empty_proposal_route@5 main_set_proposal_commitment_bps_route@6 main_set_min_requested_amount_route@7 main_set_max_requested_amount_small_route@8 main_set_max_requested_amount_medium_route@9 main_set_max_requested_amount_large_route@10 main_set_publishing_fee_route@11 main_set_discussion_duration_small_route@12 main_set_discussion_duration_medium_route@13 main_set_discussion_duration_large_route@14 main_set_committee_publisher_route@15 main_set_proposal_fee_route@16 main_set_committee_id_route@17 main_clear_committee_id_route@18 main_set_committee_members_route@19 main_set_committee_votes_route@20 main_set_voting_duration_small_route@21 main_set_voting_duration_medium_route@22 main_set_voting_duration_large_route@23 main_set_quorum_small_route@24 main_set_quorum_medium_route@25 main_set_quorum_large_route@26 main_set_weighted_quorum_small_route@27 main_set_weighted_quorum_medium_route@28 main_set_weighted_quorum_large_route@29 main_vote_route@30 main_set_xgov_reviewer_route@31 main_fund_route@32 main_set_cooldown_duration_route@33 main_delete_proposal_route@34"
    },
    "990": {
      "block": "main_after_if_else@37",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "991": {
      "op": "return"
    },
    "992": {
      "block": "main_delete_proposal_route@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%177#0"
      ],
      "stack_out": [
        "tmp%177#0"
      ]
    },
    "994": {
      "op": "!",
      "defined_out": [
        "tmp%178#0"
      ],
      "stack_out": [
        "tmp%178#0"
      ]
    },
    "995": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "996": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%179#0"
      ],
      "stack_out": [
        "tmp%179#0"
      ]
    },
    "998": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "999": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%181#0"
      ],
      "stack_out": [
        "tmp%181#0"
      ]
    },
    "1002": {
      "op": "btoi",
      "defined_out": [
        "tmp%182#0"
      ],
      "stack_out": [
        "tmp%182#0"
      ]
    },
    "1003": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%183#0"
      ],
      "stack_out": [
        "tmp%183#0"
      ]
    },
    "1005": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.delete_proposal",
      "op": "callsub delete_proposal",
      "stack_out": []
    },
    "1008": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1009": {
      "op": "return"
    },
    "1010": {
      "block": "main_set_cooldown_duration_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0"
      ]
    },
    "1012": {
      "op": "!",
      "defined_out": [
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%172#0"
      ]
    },
    "1013": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1014": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%173#0"
      ],
      "stack_out": [
        "tmp%173#0"
      ]
    },
    "1016": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1017": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%175#0"
      ],
      "stack_out": [
        "tmp%175#0"
      ]
    },
    "1020": {
      "op": "btoi",
      "defined_out": [
        "tmp%176#0"
      ],
      "stack_out": [
        "tmp%176#0"
      ]
    },
    "1021": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_cooldown_duration",
      "op": "callsub set_cooldown_duration",
      "stack_out": []
    },
    "1024": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1025": {
      "op": "return"
    },
    "1026": {
      "block": "main_fund_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0"
      ]
    },
    "1028": {
      "op": "!",
      "defined_out": [
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%165#0"
      ]
    },
    "1029": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1030": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%166#0"
      ]
    },
    "1032": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1033": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%168#0"
      ],
      "stack_out": [
        "tmp%168#0"
      ]
    },
    "1036": {
      "op": "btoi",
      "defined_out": [
        "tmp%169#0"
      ],
      "stack_out": [
        "tmp%169#0"
      ]
    },
    "1037": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%170#0"
      ],
      "stack_out": [
        "tmp%170#0"
      ]
    },
    "1039": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.fund",
      "op": "callsub fund",
      "stack_out": []
    },
    "1042": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1043": {
      "op": "return"
    },
    "1044": {
      "block": "main_set_xgov_reviewer_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "1046": {
      "op": "!",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "1047": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1048": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%161#0"
      ]
    },
    "1050": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1051": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%163#0"
      ]
    },
    "1054": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_xgov_reviewer",
      "op": "callsub set_xgov_reviewer",
      "stack_out": []
    },
    "1057": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1058": {
      "op": "return"
    },
    "1059": {
      "block": "main_vote_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%149#0"
      ]
    },
    "1061": {
      "op": "!",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "1062": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1063": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "1065": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1066": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%153#0"
      ],
      "stack_out": [
        "tmp%153#0"
      ]
    },
    "1069": {
      "op": "btoi",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "1070": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "1072": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%155#0",
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%156#0"
      ]
    },
    "1075": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%155#0",
        "tmp%156#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%156#0",
        "tmp%157#0"
      ]
    },
    "1078": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%155#0",
        "tmp%156#0",
        "tmp%157#0",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%155#0",
        "tmp%156#0",
        "tmp%157#0",
        "tmp%158#0"
      ]
    },
    "1081": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.vote",
      "op": "callsub vote",
      "stack_out": []
    },
    "1084": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1085": {
      "op": "return"
    },
    "1086": {
      "block": "main_set_weighted_quorum_large_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "1088": {
      "op": "!",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "1089": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1090": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "1092": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1093": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "1096": {
      "op": "btoi",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "1097": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_large",
      "op": "callsub set_weighted_quorum_large",
      "stack_out": []
    },
    "1100": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1101": {
      "op": "return"
    },
    "1102": {
      "block": "main_set_weighted_quorum_medium_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "1104": {
      "op": "!",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "1105": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1106": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "1108": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1109": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "1112": {
      "op": "btoi",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "1113": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_medium",
      "op": "callsub set_weighted_quorum_medium",
      "stack_out": []
    },
    "1116": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1117": {
      "op": "return"
    },
    "1118": {
      "block": "main_set_weighted_quorum_small_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "1120": {
      "op": "!",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "1121": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1122": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "1124": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1125": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "1128": {
      "op": "btoi",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "1129": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_small",
      "op": "callsub set_weighted_quorum_small",
      "stack_out": []
    },
    "1132": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1133": {
      "op": "return"
    },
    "1134": {
      "block": "main_set_quorum_large_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "1136": {
      "op": "!",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "1137": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1138": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "1140": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1141": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "1144": {
      "op": "btoi",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "1145": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_large",
      "op": "callsub set_quorum_large",
      "stack_out": []
    },
    "1148": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1149": {
      "op": "return"
    },
    "1150": {
      "block": "main_set_quorum_medium_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "1152": {
      "op": "!",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "1153": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1154": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "1156": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1157": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "1160": {
      "op": "btoi",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "1161": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_medium",
      "op": "callsub set_quorum_medium",
      "stack_out": []
    },
    "1164": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1165": {
      "op": "return"
    },
    "1166": {
      "block": "main_set_quorum_small_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "1168": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "1169": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1170": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "1172": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1173": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "1176": {
      "op": "btoi",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "1177": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_small",
      "op": "callsub set_quorum_small",
      "stack_out": []
    },
    "1180": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1181": {
      "op": "return"
    },
    "1182": {
      "block": "main_set_voting_duration_large_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "1184": {
      "op": "!",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "1185": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1186": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "1188": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1189": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "1192": {
      "op": "btoi",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "1193": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_large",
      "op": "callsub set_voting_duration_large",
      "stack_out": []
    },
    "1196": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1197": {
      "op": "return"
    },
    "1198": {
      "block": "main_set_voting_duration_medium_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "1200": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "1201": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1202": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "1204": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1205": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "1208": {
      "op": "btoi",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "1209": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_medium",
      "op": "callsub set_voting_duration_medium",
      "stack_out": []
    },
    "1212": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1213": {
      "op": "return"
    },
    "1214": {
      "block": "main_set_voting_duration_small_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "1216": {
      "op": "!",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "1217": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1218": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "1220": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1221": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "1224": {
      "op": "btoi",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "1225": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_small",
      "op": "callsub set_voting_duration_small",
      "stack_out": []
    },
    "1228": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1229": {
      "op": "return"
    },
    "1230": {
      "block": "main_set_committee_votes_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "1232": {
      "op": "!",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "1233": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1234": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "1236": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1237": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "1240": {
      "op": "btoi",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "1241": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_votes",
      "op": "callsub set_committee_votes",
      "stack_out": []
    },
    "1244": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1245": {
      "op": "return"
    },
    "1246": {
      "block": "main_set_committee_members_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1248": {
      "op": "!",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "1249": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1250": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "1252": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1253": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1256": {
      "op": "btoi",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1257": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_members",
      "op": "callsub set_committee_members",
      "stack_out": []
    },
    "1260": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1261": {
      "op": "return"
    },
    "1262": {
      "block": "main_clear_committee_id_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "1264": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "1265": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1266": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1268": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1269": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.clear_committee_id",
      "op": "callsub clear_committee_id"
    },
    "1272": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1273": {
      "op": "return"
    },
    "1274": {
      "block": "main_set_committee_id_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "1276": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1277": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1278": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1280": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1281": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1284": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_id",
      "op": "callsub set_committee_id",
      "stack_out": []
    },
    "1287": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1288": {
      "op": "return"
    },
    "1289": {
      "block": "main_set_proposal_fee_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "1291": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1292": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1293": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1295": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1296": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1299": {
      "op": "btoi",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1300": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_fee",
      "op": "callsub set_proposal_fee",
      "stack_out": []
    },
    "1303": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1304": {
      "op": "return"
    },
    "1305": {
      "block": "main_set_committee_publisher_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "1307": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "1308": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1309": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "1311": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1312": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "1315": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_publisher",
      "op": "callsub set_committee_publisher",
      "stack_out": []
    },
    "1318": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1319": {
      "op": "return"
    },
    "1320": {
      "block": "main_set_discussion_duration_large_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1322": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1323": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1324": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1326": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1327": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "1330": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "1331": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_large",
      "op": "callsub set_discussion_duration_large",
      "stack_out": []
    },
    "1334": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1335": {
      "op": "return"
    },
    "1336": {
      "block": "main_set_discussion_duration_medium_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1338": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1339": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1340": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1342": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1343": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1346": {
      "op": "btoi",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "1347": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_medium",
      "op": "callsub set_discussion_duration_medium",
      "stack_out": []
    },
    "1350": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1351": {
      "op": "return"
    },
    "1352": {
      "block": "main_set_discussion_duration_small_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "1354": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1355": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1356": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "1358": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1359": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1362": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "1363": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_small",
      "op": "callsub set_discussion_duration_small",
      "stack_out": []
    },
    "1366": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1367": {
      "op": "return"
    },
    "1368": {
      "block": "main_set_publishing_fee_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1370": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1371": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1372": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1374": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1375": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1378": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1379": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_publishing_fee",
      "op": "callsub set_publishing_fee",
      "stack_out": []
    },
    "1382": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1383": {
      "op": "return"
    },
    "1384": {
      "block": "main_set_max_requested_amount_large_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1386": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1387": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1388": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1390": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1391": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1394": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1395": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_large",
      "op": "callsub set_max_requested_amount_large",
      "stack_out": []
    },
    "1398": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1399": {
      "op": "return"
    },
    "1400": {
      "block": "main_set_max_requested_amount_medium_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1402": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1403": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1404": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1406": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1407": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1410": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1411": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_medium",
      "op": "callsub set_max_requested_amount_medium",
      "stack_out": []
    },
    "1414": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1415": {
      "op": "return"
    },
    "1416": {
      "block": "main_set_max_requested_amount_small_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1418": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1419": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1420": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1422": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1423": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1426": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1427": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_small",
      "op": "callsub set_max_requested_amount_small",
      "stack_out": []
    },
    "1430": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1431": {
      "op": "return"
    },
    "1432": {
      "block": "main_set_min_requested_amount_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1434": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1435": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1436": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1438": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1439": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1442": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1443": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_min_requested_amount",
      "op": "callsub set_min_requested_amount",
      "stack_out": []
    },
    "1446": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1447": {
      "op": "return"
    },
    "1448": {
      "block": "main_set_proposal_commitment_bps_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1450": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1451": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1452": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1454": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1455": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1458": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1459": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_commitment_bps",
      "op": "callsub set_proposal_commitment_bps",
      "stack_out": []
    },
    "1462": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1463": {
      "op": "return"
    },
    "1464": {
      "block": "main_create_empty_proposal_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1466": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1467": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1468": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1470": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1471": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1474": {
      "callsub": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.create_empty_proposal",
      "op": "callsub create_empty_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1477": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1478": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1479": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1480": {
      "op": "concat",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1481": {
      "op": "log",
      "stack_out": []
    },
    "1482": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1483": {
      "op": "return"
    },
    "1484": {
      "block": "main_bare_routing@35",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%184#0"
      ],
      "stack_out": [
        "tmp%184#0"
      ]
    },
    "1486": {
      "op": "bnz main_after_if_else@37",
      "stack_out": []
    },
    "1489": {
      "op": "txn ApplicationID"
    },
    "1491": {
      "op": "!"
    },
    "1492": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "1493": {
      "op": "intc_0 // 1"
    },
    "1494": {
      "op": "return"
    },
    "1495": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.create_empty_proposal",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create_empty_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1498": {
      "op": "itxn_begin"
    },
    "1499": {
      "op": "pushint 19 // 19",
      "defined_out": [
        "19"
      ],
      "stack_out": [
        "19"
      ]
    },
    "1501": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": []
    },
    "1503": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1504": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": []
    },
    "1506": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1507": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": []
    },
    "1509": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "1515": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "1517": {
      "op": "pushbytes base64(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)",
      "defined_out": [
        "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"
      ],
      "stack_out": [
        "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"
      ]
    },
    "4764": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "4766": {
      "op": "pushbytes 0xcc694eaa // method \"create(address)void\"",
      "defined_out": [
        "Method(create(address)void)"
      ],
      "stack_out": [
        "Method(create(address)void)"
      ]
    },
    "4772": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4774": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "proposer#0 (copy)"
      ]
    },
    "4776": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4778": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4779": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4781": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4782": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4784": {
      "op": "itxn_submit"
    },
    "4785": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4787": {
      "op": "itxn_begin"
    },
    "4788": {
      "op": "dup",
      "defined_out": [
        "res.CreatedApplicationID#0",
        "res.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "res.CreatedApplicationID#0 (copy)"
      ]
    },
    "4789": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "4791": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0"
      ]
    },
    "4792": {
      "op": "intc_1 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "0"
      ]
    },
    "4793": {
      "op": "bytec_1 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f666565",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "4794": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4795": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%0#0"
      ]
    },
    "4796": {
      "op": "pushint 941500 // 941500",
      "defined_out": [
        "941500",
        "maybe_value%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%0#0",
        "941500"
      ]
    },
    "4800": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "4801": {
      "op": "itxn_field Amount",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0"
      ]
    },
    "4803": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4805": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay",
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "pay"
      ]
    },
    "4806": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4808": {
      "op": "intc_1 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0"
      ]
    },
    "4809": {
      "op": "itxn_field Fee",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "4811": {
      "op": "itxn_submit"
    },
    "4812": {
      "retsub": true,
      "op": "retsub"
    },
    "4813": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_commitment_bps",
      "params": {
        "commitment_bps#0": "uint64"
      },
      "block": "set_proposal_commitment_bps",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4816": {
      "op": "bytec 6 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "4818": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "commitment_bps#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "commitment_bps#0 (copy)"
      ]
    },
    "4820": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4821": {
      "retsub": true,
      "op": "retsub"
    },
    "4822": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_min_requested_amount",
      "params": {
        "min_requested_amount#0": "uint64"
      },
      "block": "set_min_requested_amount",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4825": {
      "op": "bytec 7 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "4827": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "min_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "min_requested_amount#0 (copy)"
      ]
    },
    "4829": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4830": {
      "retsub": true,
      "op": "retsub"
    },
    "4831": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_small",
      "params": {
        "max_requested_amount#0": "uint64"
      },
      "block": "set_max_requested_amount_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4834": {
      "op": "bytec 8 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "4836": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "max_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "max_requested_amount#0 (copy)"
      ]
    },
    "4838": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4839": {
      "retsub": true,
      "op": "retsub"
    },
    "4840": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_medium",
      "params": {
        "max_requested_amount#0": "uint64"
      },
      "block": "set_max_requested_amount_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4843": {
      "op": "bytec 9 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "4845": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount#0 (copy)"
      ]
    },
    "4847": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4848": {
      "retsub": true,
      "op": "retsub"
    },
    "4849": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_max_requested_amount_large",
      "params": {
        "max_requested_amount#0": "uint64"
      },
      "block": "set_max_requested_amount_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4852": {
      "op": "bytec 10 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "4854": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "max_requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "max_requested_amount#0 (copy)"
      ]
    },
    "4856": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4857": {
      "retsub": true,
      "op": "retsub"
    },
    "4858": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_publishing_fee",
      "params": {
        "publishing_fee_bps#0": "uint64"
      },
      "block": "set_publishing_fee",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4861": {
      "op": "bytec 11 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "4863": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "publishing_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "publishing_fee_bps#0 (copy)"
      ]
    },
    "4865": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4866": {
      "retsub": true,
      "op": "retsub"
    },
    "4867": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_small",
      "params": {
        "discussion_duration#0": "uint64"
      },
      "block": "set_discussion_duration_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4870": {
      "op": "bytec 12 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "4872": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "discussion_duration#0 (copy)"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "discussion_duration#0 (copy)"
      ]
    },
    "4874": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4875": {
      "retsub": true,
      "op": "retsub"
    },
    "4876": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_medium",
      "params": {
        "discussion_duration#0": "uint64"
      },
      "block": "set_discussion_duration_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4879": {
      "op": "bytec 13 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "4881": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "discussion_duration#0 (copy)"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "discussion_duration#0 (copy)"
      ]
    },
    "4883": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4884": {
      "retsub": true,
      "op": "retsub"
    },
    "4885": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_discussion_duration_large",
      "params": {
        "discussion_duration#0": "uint64"
      },
      "block": "set_discussion_duration_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4888": {
      "op": "bytec 14 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "4890": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "discussion_duration#0 (copy)"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "discussion_duration#0 (copy)"
      ]
    },
    "4892": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4893": {
      "retsub": true,
      "op": "retsub"
    },
    "4894": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_publisher",
      "params": {
        "committee_publisher#0": "bytes"
      },
      "block": "set_committee_publisher",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4897": {
      "op": "bytec 15 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "4899": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "committee_publisher#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "committee_publisher#0 (copy)"
      ]
    },
    "4901": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4902": {
      "retsub": true,
      "op": "retsub"
    },
    "4903": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_proposal_fee",
      "params": {
        "proposal_fee#0": "uint64"
      },
      "block": "set_proposal_fee",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4906": {
      "op": "bytec_1 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565"
      ]
    },
    "4907": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "proposal_fee#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565",
        "proposal_fee#0 (copy)"
      ]
    },
    "4909": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4910": {
      "retsub": true,
      "op": "retsub"
    },
    "4911": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_id",
      "params": {
        "committee_id#0": "bytes"
      },
      "block": "set_committee_id",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4914": {
      "op": "bytec_2 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "4915": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)"
      ]
    },
    "4917": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4918": {
      "retsub": true,
      "op": "retsub"
    },
    "4919": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.clear_committee_id",
      "params": {},
      "block": "clear_committee_id",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4922": {
      "op": "bytec_2 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "4923": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "4925": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4926": {
      "retsub": true,
      "op": "retsub"
    },
    "4927": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_members",
      "params": {
        "committee_members#0": "uint64"
      },
      "block": "set_committee_members",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4930": {
      "op": "bytec 17 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "4932": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0 (copy)"
      ]
    },
    "4934": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4935": {
      "retsub": true,
      "op": "retsub"
    },
    "4936": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_committee_votes",
      "params": {
        "committee_votes#0": "uint64"
      },
      "block": "set_committee_votes",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4939": {
      "op": "bytec 18 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "4941": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0 (copy)"
      ]
    },
    "4943": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4944": {
      "retsub": true,
      "op": "retsub"
    },
    "4945": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_small",
      "params": {
        "voting_duration#0": "uint64"
      },
      "block": "set_voting_duration_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4948": {
      "op": "bytec 19 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "4950": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "voting_duration#0 (copy)"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "voting_duration#0 (copy)"
      ]
    },
    "4952": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4953": {
      "retsub": true,
      "op": "retsub"
    },
    "4954": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_medium",
      "params": {
        "voting_duration#0": "uint64"
      },
      "block": "set_voting_duration_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4957": {
      "op": "bytec 20 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "4959": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "voting_duration#0 (copy)"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "voting_duration#0 (copy)"
      ]
    },
    "4961": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4962": {
      "retsub": true,
      "op": "retsub"
    },
    "4963": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_voting_duration_large",
      "params": {
        "voting_duration#0": "uint64"
      },
      "block": "set_voting_duration_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4966": {
      "op": "bytec 21 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "4968": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "voting_duration#0 (copy)"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "voting_duration#0 (copy)"
      ]
    },
    "4970": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4971": {
      "retsub": true,
      "op": "retsub"
    },
    "4972": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_small",
      "params": {
        "quorum#0": "uint64"
      },
      "block": "set_quorum_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4975": {
      "op": "bytec 22 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "4977": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "quorum#0 (copy)"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "quorum#0 (copy)"
      ]
    },
    "4979": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4980": {
      "retsub": true,
      "op": "retsub"
    },
    "4981": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_medium",
      "params": {
        "quorum#0": "uint64"
      },
      "block": "set_quorum_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4984": {
      "op": "bytec 23 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "4986": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "quorum#0 (copy)"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "quorum#0 (copy)"
      ]
    },
    "4988": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4989": {
      "retsub": true,
      "op": "retsub"
    },
    "4990": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_quorum_large",
      "params": {
        "quorum#0": "uint64"
      },
      "block": "set_quorum_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4993": {
      "op": "bytec 24 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "4995": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "quorum#0 (copy)"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "quorum#0 (copy)"
      ]
    },
    "4997": {
      "op": "app_global_put",
      "stack_out": []
    },
    "4998": {
      "retsub": true,
      "op": "retsub"
    },
    "4999": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_small",
      "params": {
        "weighted_quorum#0": "uint64"
      },
      "block": "set_weighted_quorum_small",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5002": {
      "op": "bytec 25 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "5004": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "weighted_quorum#0 (copy)"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "weighted_quorum#0 (copy)"
      ]
    },
    "5006": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5007": {
      "retsub": true,
      "op": "retsub"
    },
    "5008": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_medium",
      "params": {
        "weighted_quorum#0": "uint64"
      },
      "block": "set_weighted_quorum_medium",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5011": {
      "op": "bytec 26 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "5013": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "weighted_quorum#0 (copy)"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "weighted_quorum#0 (copy)"
      ]
    },
    "5015": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5016": {
      "retsub": true,
      "op": "retsub"
    },
    "5017": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_weighted_quorum_large",
      "params": {
        "weighted_quorum#0": "uint64"
      },
      "block": "set_weighted_quorum_large",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5020": {
      "op": "bytec 27 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "5022": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "weighted_quorum#0 (copy)"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "weighted_quorum#0 (copy)"
      ]
    },
    "5024": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5025": {
      "retsub": true,
      "op": "retsub"
    },
    "5026": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.vote",
      "params": {
        "proposal_app#0": "uint64",
        "voter#0": "bytes",
        "approvals#0": "bytes",
        "rejections#0": "bytes"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "5029": {
      "op": "itxn_begin"
    },
    "5030": {
      "op": "frame_dig -4",
      "defined_out": [
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0 (copy)"
      ]
    },
    "5032": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5034": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "5040": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5042": {
      "op": "frame_dig -3",
      "defined_out": [
        "voter#0 (copy)"
      ],
      "stack_out": [
        "voter#0 (copy)"
      ]
    },
    "5044": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5046": {
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)"
      ],
      "stack_out": [
        "approvals#0 (copy)"
      ]
    },
    "5048": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5050": {
      "op": "frame_dig -1",
      "defined_out": [
        "rejections#0 (copy)"
      ],
      "stack_out": [
        "rejections#0 (copy)"
      ]
    },
    "5052": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5054": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5055": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5057": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5058": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5060": {
      "op": "itxn_submit"
    },
    "5061": {
      "op": "itxn LastLog"
    },
    "5063": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5064": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "5067": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "awst_tmp%0#0"
      ]
    },
    "5068": {
      "op": "extract 0 4",
      "defined_out": [
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "5071": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5072": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "5073": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "error#0"
      ]
    },
    "5074": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "5077": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "5078": {
      "op": "len",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5079": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "5080": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5081": {
      "op": "<",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "5082": {
      "op": "bz vote_ternary_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5085": {
      "op": "intc_1 // 0"
    },
    "5086": {
      "block": "vote_ternary_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ],
      "op": "bz vote_after_if_else@14",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5089": {
      "op": "intc_2 // 4"
    },
    "5090": {
      "op": "frame_dig 1"
    },
    "5092": {
      "op": "dup"
    },
    "5093": {
      "op": "cover 2"
    },
    "5095": {
      "op": ">="
    },
    "5096": {
      "op": "intc_2 // 4"
    },
    "5097": {
      "op": "dig 2"
    },
    "5099": {
      "op": "uncover 2"
    },
    "5101": {
      "op": "select"
    },
    "5102": {
      "op": "frame_dig 0"
    },
    "5104": {
      "op": "swap"
    },
    "5105": {
      "op": "uncover 2"
    },
    "5107": {
      "op": "substring3"
    },
    "5108": {
      "op": "bytec_3 // \"Unauthorized\""
    },
    "5109": {
      "op": "pushbytess \"Voter not found\" \"Voter already voted\" \"Votes exceeded\" \"Missing Config\" // \"Voter not found\", \"Voter already voted\", \"Votes exceeded\", \"Missing Config\""
    },
    "5177": {
      "op": "bytec 4 // \"Wrong Proposal Status\""
    },
    "5179": {
      "op": "pushbytes \"Voting Period Expired\""
    },
    "5202": {
      "op": "uncover 7"
    },
    "5204": {
      "op": "match vote_switch_case_0@6 vote_switch_case_1@7 vote_switch_case_2@8 vote_switch_case_3@9 vote_switch_case_4@10 vote_switch_case_5@11 vote_switch_case_6@12"
    },
    "5220": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "5221": {
      "block": "vote_switch_case_6@12",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Voting Period Expired",
      "op": "err // Voting Period Expired"
    },
    "5222": {
      "block": "vote_switch_case_5@11",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "err // Wrong Proposal Status"
    },
    "5223": {
      "block": "vote_switch_case_4@10",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "5224": {
      "block": "vote_switch_case_3@9",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Votes exceeded",
      "op": "err // Votes exceeded"
    },
    "5225": {
      "block": "vote_switch_case_2@8",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Voter already voted",
      "op": "err // Voter already voted"
    },
    "5226": {
      "block": "vote_switch_case_1@7",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Voter not found",
      "op": "err // Voter not found"
    },
    "5227": {
      "block": "vote_switch_case_0@6",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Unauthorized",
      "op": "err // Unauthorized"
    },
    "5228": {
      "block": "vote_after_if_else@14",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "5229": {
      "block": "vote_ternary_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%1#0"
      ]
    },
    "5231": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "5234": {
      "op": "bytec 5 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0",
        "\"ERR:\""
      ]
    },
    "5236": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5237": {
      "op": "b vote_ternary_merge@4"
    },
    "5240": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_xgov_reviewer",
      "params": {
        "xgov_reviewer#0": "bytes"
      },
      "block": "set_xgov_reviewer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5243": {
      "op": "bytec 28 // 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572"
      ]
    },
    "5245": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "xgov_reviewer#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572",
        "xgov_reviewer#0 (copy)"
      ]
    },
    "5247": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5248": {
      "retsub": true,
      "op": "retsub"
    },
    "5249": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.fund",
      "params": {
        "proposal_app#0": "uint64"
      },
      "block": "fund",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5252": {
      "op": "itxn_begin"
    },
    "5253": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0 (copy)"
      ]
    },
    "5255": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5257": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)"
      ],
      "stack_out": [
        "Method(fund()string)"
      ]
    },
    "5263": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5265": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5266": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5268": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5269": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5271": {
      "op": "itxn_submit"
    },
    "5272": {
      "op": "itxn LastLog"
    },
    "5274": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5275": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "5278": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "awst_tmp%0#0"
      ]
    },
    "5279": {
      "op": "extract 0 4",
      "defined_out": [
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "5282": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5283": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "5284": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "error#0"
      ]
    },
    "5285": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "5288": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "5289": {
      "op": "len",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5290": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "5291": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5292": {
      "op": "<",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "5293": {
      "op": "bz fund_ternary_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5296": {
      "op": "intc_1 // 0"
    },
    "5297": {
      "block": "fund_ternary_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ],
      "op": "bz fund_after_if_else@9",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5300": {
      "op": "intc_2 // 4"
    },
    "5301": {
      "op": "frame_dig 1"
    },
    "5303": {
      "op": "dup"
    },
    "5304": {
      "op": "cover 2"
    },
    "5306": {
      "op": ">="
    },
    "5307": {
      "op": "intc_2 // 4"
    },
    "5308": {
      "op": "dig 2"
    },
    "5310": {
      "op": "uncover 2"
    },
    "5312": {
      "op": "select"
    },
    "5313": {
      "op": "frame_dig 0"
    },
    "5315": {
      "op": "swap"
    },
    "5316": {
      "op": "uncover 2"
    },
    "5318": {
      "op": "substring3"
    },
    "5319": {
      "op": "bytec_3 // \"Unauthorized\""
    },
    "5320": {
      "op": "bytec 4 // \"Wrong Proposal Status\""
    },
    "5322": {
      "op": "uncover 2"
    },
    "5324": {
      "op": "match fund_switch_case_0@6 fund_switch_case_1@7"
    },
    "5330": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "5331": {
      "block": "fund_switch_case_1@7",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "err // Wrong Proposal Status"
    },
    "5332": {
      "block": "fund_switch_case_0@6",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Unauthorized",
      "op": "err // Unauthorized"
    },
    "5333": {
      "block": "fund_after_if_else@9",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "5334": {
      "block": "fund_ternary_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%1#0"
      ]
    },
    "5336": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "5339": {
      "op": "bytec 5 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0",
        "\"ERR:\""
      ]
    },
    "5341": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5342": {
      "op": "b fund_ternary_merge@4"
    },
    "5345": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.set_cooldown_duration",
      "params": {
        "cooldown_duration#0": "uint64"
      },
      "block": "set_cooldown_duration",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5348": {
      "op": "bytec 29 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "5350": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "cooldown_duration#0 (copy)"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "cooldown_duration#0 (copy)"
      ]
    },
    "5352": {
      "op": "app_global_put",
      "stack_out": []
    },
    "5353": {
      "retsub": true,
      "op": "retsub"
    },
    "5354": {
      "subroutine": "smart_contracts.xgov_registry_mock.contract.XgovRegistryMock.delete_proposal",
      "params": {
        "proposal_app#0": "uint64"
      },
      "block": "delete_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5357": {
      "op": "itxn_begin"
    },
    "5358": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "DeleteApplication"
      ]
    },
    "5360": {
      "op": "itxn_field OnCompletion",
      "stack_out": []
    },
    "5362": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0 (copy)"
      ]
    },
    "5364": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5366": {
      "op": "pushbytes 0x1feb95da // method \"delete()string\"",
      "defined_out": [
        "Method(delete()string)"
      ],
      "stack_out": [
        "Method(delete()string)"
      ]
    },
    "5372": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5374": {
      "op": "intc_3 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5375": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5377": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5378": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5380": {
      "op": "itxn_submit"
    },
    "5381": {
      "op": "itxn LastLog"
    },
    "5383": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5384": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "5387": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "awst_tmp%0#0"
      ]
    },
    "5388": {
      "op": "extract 0 4",
      "defined_out": [
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "5391": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5392": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "5393": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "error#0"
      ]
    },
    "5394": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "5397": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "5398": {
      "op": "len",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5399": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0"
      ]
    },
    "5400": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%4#0",
        "4"
      ]
    },
    "5401": {
      "op": "<",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "5402": {
      "op": "bz delete_proposal_ternary_false@3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5405": {
      "op": "intc_1 // 0"
    },
    "5406": {
      "block": "delete_proposal_ternary_merge@4",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ],
      "op": "bz delete_proposal_after_if_else@9",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "5409": {
      "op": "intc_2 // 4"
    },
    "5410": {
      "op": "frame_dig 1"
    },
    "5412": {
      "op": "dup"
    },
    "5413": {
      "op": "cover 2"
    },
    "5415": {
      "op": ">="
    },
    "5416": {
      "op": "intc_2 // 4"
    },
    "5417": {
      "op": "dig 2"
    },
    "5419": {
      "op": "uncover 2"
    },
    "5421": {
      "op": "select"
    },
    "5422": {
      "op": "frame_dig 0"
    },
    "5424": {
      "op": "swap"
    },
    "5425": {
      "op": "uncover 2"
    },
    "5427": {
      "op": "substring3"
    },
    "5428": {
      "op": "bytec_3 // \"Unauthorized\""
    },
    "5429": {
      "op": "bytec 4 // \"Wrong Proposal Status\""
    },
    "5431": {
      "op": "uncover 2"
    },
    "5433": {
      "op": "match delete_proposal_switch_case_0@6 delete_proposal_switch_case_1@7"
    },
    "5439": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "5440": {
      "block": "delete_proposal_switch_case_1@7",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "err // Wrong Proposal Status"
    },
    "5441": {
      "block": "delete_proposal_switch_case_0@6",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "error": "Unauthorized",
      "op": "err // Unauthorized"
    },
    "5442": {
      "block": "delete_proposal_after_if_else@9",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "5443": {
      "block": "delete_proposal_ternary_false@3",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "awst_tmp%1#0"
      ]
    },
    "5445": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "5448": {
      "op": "bytec 5 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "tmp%6#0",
        "\"ERR:\""
      ]
    },
    "5450": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0",
        "ternary_result%0#0"
      ]
    },
    "5451": {
      "op": "b delete_proposal_ternary_merge@4"
    }
  }
}
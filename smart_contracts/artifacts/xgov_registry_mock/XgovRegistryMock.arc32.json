{
    "hints": {
        "create_empty_proposal(address,address)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_proposal_commitment_bps(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_min_requested_amount(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_max_requested_amount_small(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_max_requested_amount_medium(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_max_requested_amount_large(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_publishing_fee(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_discussion_duration_small(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_discussion_duration_medium(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_discussion_duration_large(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMueGdvdl9yZWdpc3RyeV9tb2NrLmNvbnRyYWN0Llhnb3ZSZWdpc3RyeU1vY2suY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy94Z292X3JlZ2lzdHJ5X21vY2svY29udHJhY3QucHk6MjEtMjkKICAgIC8vIGNsYXNzIFhnb3ZSZWdpc3RyeU1vY2soCiAgICAvLyAgICAgQVJDNENvbnRyYWN0LAogICAgLy8gICAgIHN0YXRlX3RvdGFscz1TdGF0ZVRvdGFscygKICAgIC8vICAgICAgICAgZ2xvYmFsX2J5dGVzPW1vY2tfY2ZnLkdMT0JBTF9CWVRFUywKICAgIC8vICAgICAgICAgZ2xvYmFsX3VpbnRzPW1vY2tfY2ZnLkdMT0JBTF9VSU5UUywKICAgIC8vICAgICAgICAgbG9jYWxfYnl0ZXM9bW9ja19jZmcuTE9DQUxfQllURVMsCiAgICAvLyAgICAgICAgIGxvY2FsX3VpbnRzPW1vY2tfY2ZnLkxPQ0FMX1VJTlRTLAogICAgLy8gICAgICksCiAgICAvLyApOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 9
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "discussion_duration_large": {
                    "type": "uint64",
                    "key": "discussion_duration_large"
                },
                "discussion_duration_medium": {
                    "type": "uint64",
                    "key": "discussion_duration_medium"
                },
                "discussion_duration_small": {
                    "type": "uint64",
                    "key": "discussion_duration_small"
                },
                "max_requested_amount_large": {
                    "type": "uint64",
                    "key": "maximum_requested_amount_large"
                },
                "max_requested_amount_medium": {
                    "type": "uint64",
                    "key": "maximum_requested_amount_medium"
                },
                "max_requested_amount_small": {
                    "type": "uint64",
                    "key": "maximum_requested_amount_small"
                },
                "min_requested_amount": {
                    "type": "uint64",
                    "key": "minimum_requested_amount"
                },
                "proposal_commitment_bps": {
                    "type": "uint64",
                    "key": "proposal_commitment"
                },
                "publishing_fee": {
                    "type": "uint64",
                    "key": "publishing_fee"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "XgovRegistryMock",
        "methods": [
            {
                "name": "create_empty_proposal",
                "args": [
                    {
                        "type": "address",
                        "name": "proposer",
                        "desc": "The proposer's address"
                    },
                    {
                        "type": "address",
                        "name": "committee_publisher",
                        "desc": "The committee publisher's address"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64",
                    "desc": "The ID of the created proposal"
                },
                "desc": "Create an empty proposal"
            },
            {
                "name": "set_proposal_commitment_bps",
                "args": [
                    {
                        "type": "uint64",
                        "name": "commitment_bps",
                        "desc": "The commitment in basis points"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the proposal commitment in basis points"
            },
            {
                "name": "set_min_requested_amount",
                "args": [
                    {
                        "type": "uint64",
                        "name": "min_requested_amount",
                        "desc": "The minimum requested amount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the minimum requested amount"
            },
            {
                "name": "set_max_requested_amount_small",
                "args": [
                    {
                        "type": "uint64",
                        "name": "max_requested_amount",
                        "desc": "The maximum requested amount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the maximum requested amount for small proposals"
            },
            {
                "name": "set_max_requested_amount_medium",
                "args": [
                    {
                        "type": "uint64",
                        "name": "max_requested_amount",
                        "desc": "The maximum requested amount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the maximum requested amount for medium proposals"
            },
            {
                "name": "set_max_requested_amount_large",
                "args": [
                    {
                        "type": "uint64",
                        "name": "max_requested_amount",
                        "desc": "The maximum requested amount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the maximum requested amount for large proposals"
            },
            {
                "name": "set_publishing_fee",
                "args": [
                    {
                        "type": "uint64",
                        "name": "publishing_fee",
                        "desc": "The publishing fee"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the publishing fee"
            },
            {
                "name": "set_discussion_duration_small",
                "args": [
                    {
                        "type": "uint64",
                        "name": "discussion_duration",
                        "desc": "The discussion duration"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the discussion duration for small proposals"
            },
            {
                "name": "set_discussion_duration_medium",
                "args": [
                    {
                        "type": "uint64",
                        "name": "discussion_duration",
                        "desc": "The discussion duration"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the discussion duration for medium proposals"
            },
            {
                "name": "set_discussion_duration_large",
                "args": [
                    {
                        "type": "uint64",
                        "name": "discussion_duration",
                        "desc": "The discussion duration"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the discussion duration for large proposals"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}
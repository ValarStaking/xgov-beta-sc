{
  "version": 3,
  "sources": [
    "../../council/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCY;;AAA6B;AAA7B;AADJ;AAGO;;AAAuB;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AASQ;;AADJ;AADJ;AAOQ;AADJ;AADJ;AA3BR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AAgIK;;AAAA;AAAA;AAAA;;AAAA;AAhIL;;;AAAA;AAgIK;;;AAAA;;AAlDA;;AAAA;AAAA;AAAA;;AAAA;AA9EL;;;AAAA;AAAA;;;;AAAA;AA8EK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AA3DL;;;AA2DK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAxCL;;;AAwCK;;;AAAA;;AAxCL;;AAAA;;;;;;;;;AAwCA;;;AAae;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AAC6B;AAAtB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAE+B;;AAA/B;AACA;AAAA;AAAA;AAAA;AAA2B;AAA3B;AAAA;AAAA;AAAA;;AAER;;;AAae;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACyB;AAAlB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEA;;AACA;AAAA;AAAA;AAAA;AAA2B;AAA3B;AAAA;AAAA;AAAA;;AAER;;;;;;AAiB6B;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAEG;;AAAA;AAAA;AAAmB;;;AAAnB;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAGC;AAGW;AAAA;;AAAA;AAAA;;;AAHX;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAUiC;;AACb;AAAA;AAAA;;AAAA;AAFZ;AADE;;;;AAAA;AAAA;AAFgB;;;;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;AAAA;;AAUW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAJ;AAAA;AAAP;AAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAArB;;;AACqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAd;;AAAA;AAAP;AADK;AAAA;AAAA;;;;;AAGT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAE6B;;AACb;AAAA;AAAA;;AAAA;AAFZ;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAOZ;;;;;;;;AAgB6B;AAAd;;AAAA;AAAA;AAAA;;AAAA;;;AAA8B;;AAAc;AAAA;AAAA;AAAA;AAAd;AAA9B;;;;AAAP;AACO;;AAAA;AAAe;;;AAAf;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAP;AACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAJ;AAAA;AAAP;AAEY;AAAZ;;AACa;AAAb;;AAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AACe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAf;;;AACgB;;AAAa;AAAb;AAAA;;AAFC;;AAAA;AAAA;AAAA;;;;;AAID;;AAAc;AAAd;AAAA;;;;;AAEO;AAAA;AAAA;AAAA;AAA2B;AAA3B;AAAgC;AAAjC;AAAd;AAAA;;AACO;;AAAA;AAAA;;;AAA4B;;AAAA;;AAAA;AAA5B;;;;AAAP;AACA;;AAAA;;AAAS;AAET;AAEI;AAAA;AAAA;;AAAA;;;;;AAFJ;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAMA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.council.contract.Council.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 33 2"
    },
    "7": {
      "op": "bytecblock 0x00 0x6d656d6265725f636f756e74 \"M\" 0x61646d696e 0x72656769737472795f6170705f6964"
    },
    "48": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "50": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "53": {
      "op": "txn GlobalNumByteSlice"
    },
    "55": {
      "op": "intc_1 // 1"
    },
    "56": {
      "op": "=="
    },
    "57": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation"
    },
    "58": {
      "op": "txn GlobalNumUint"
    },
    "60": {
      "op": "intc_3 // 2"
    },
    "61": {
      "op": "=="
    },
    "62": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation"
    },
    "63": {
      "op": "txn LocalNumByteSlice"
    },
    "65": {
      "op": "!"
    },
    "66": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation"
    },
    "67": {
      "op": "txn LocalNumUint"
    },
    "69": {
      "op": "!"
    },
    "70": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation"
    },
    "71": {
      "op": "bytec 4 // 0x72656769737472795f6170705f6964"
    },
    "73": {
      "op": "intc_0 // 0"
    },
    "74": {
      "op": "app_global_put"
    },
    "75": {
      "op": "bytec_1 // 0x6d656d6265725f636f756e74"
    },
    "76": {
      "op": "intc_0 // 0"
    },
    "77": {
      "op": "app_global_put"
    },
    "78": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "80": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "83": {
      "op": "pushbytess 0x19d702fa 0x92ebf6de 0xf7f4481f 0x25f6afb8 // method \"add_member(address)void\", method \"remove_member(address)void\", method \"vote(uint64,bool)void\", method \"submit(uint64)void\""
    },
    "105": {
      "op": "txna ApplicationArgs 0"
    },
    "108": {
      "op": "match main_add_member_route@5 main_remove_member_route@6 main_vote_route@7 main_submit_route@8"
    },
    "118": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "119": {
      "op": "return"
    },
    "120": {
      "block": "main_submit_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "122": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "123": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "126": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "127": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "130": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "131": {
      "callsub": "smart_contracts.council.contract.Council.submit",
      "op": "callsub submit",
      "stack_out": []
    },
    "134": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "135": {
      "op": "return"
    },
    "136": {
      "block": "main_vote_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "138": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "139": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "140": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "142": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "143": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "146": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "147": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "150": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "0"
      ]
    },
    "151": {
      "op": "getbit",
      "defined_out": [
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "152": {
      "callsub": "smart_contracts.council.contract.Council.vote",
      "op": "callsub vote",
      "stack_out": []
    },
    "155": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "156": {
      "op": "return"
    },
    "157": {
      "block": "main_remove_member_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "159": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "160": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "161": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "163": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "164": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "167": {
      "callsub": "smart_contracts.council.contract.Council.remove_member",
      "op": "callsub remove_member",
      "stack_out": []
    },
    "170": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "171": {
      "op": "return"
    },
    "172": {
      "block": "main_add_member_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "174": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "175": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "176": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "178": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "179": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "182": {
      "callsub": "smart_contracts.council.contract.Council.add_member",
      "op": "callsub add_member",
      "stack_out": []
    },
    "185": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "186": {
      "op": "return"
    },
    "187": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "189": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "192": {
      "op": "txn ApplicationID"
    },
    "194": {
      "op": "!"
    },
    "195": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "196": {
      "op": "intc_1 // 1"
    },
    "197": {
      "op": "return"
    },
    "198": {
      "subroutine": "smart_contracts.council.contract.Council.add_member",
      "params": {
        "address#0": "bytes"
      },
      "block": "add_member",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "201": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "204": {
      "op": "bytec_3 // 0x61646d696e",
      "defined_out": [
        "0",
        "0x61646d696e",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x61646d696e"
      ]
    },
    "205": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "206": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "207": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "208": {
      "error": "Forbidden",
      "op": "assert // Forbidden",
      "stack_out": []
    },
    "209": {
      "op": "bytec_2 // \"M\"",
      "defined_out": [
        "\"M\""
      ],
      "stack_out": [
        "\"M\""
      ]
    },
    "210": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"M\"",
        "address#0 (copy)"
      ],
      "stack_out": [
        "\"M\"",
        "address#0 (copy)"
      ]
    },
    "212": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "213": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "214": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "215": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "217": {
      "op": "!",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "218": {
      "error": "Already a member",
      "op": "assert // Already a member",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "219": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x"
      ]
    },
    "221": {
      "op": "box_put",
      "stack_out": []
    },
    "222": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "223": {
      "op": "bytec_1 // 0x6d656d6265725f636f756e74",
      "defined_out": [
        "0",
        "0x6d656d6265725f636f756e74"
      ],
      "stack_out": [
        "0",
        "0x6d656d6265725f636f756e74"
      ]
    },
    "224": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "225": {
      "error": "check self.member_count exists",
      "op": "assert // check self.member_count exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "226": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "227": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "228": {
      "op": "bytec_1 // 0x6d656d6265725f636f756e74",
      "stack_out": [
        "new_state_value%0#0",
        "0x6d656d6265725f636f756e74"
      ]
    },
    "229": {
      "op": "swap",
      "stack_out": [
        "0x6d656d6265725f636f756e74",
        "new_state_value%0#0"
      ]
    },
    "230": {
      "op": "app_global_put",
      "stack_out": []
    },
    "231": {
      "retsub": true,
      "op": "retsub"
    },
    "232": {
      "subroutine": "smart_contracts.council.contract.Council.remove_member",
      "params": {
        "address#0": "bytes"
      },
      "block": "remove_member",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "235": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "237": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "238": {
      "op": "bytec_3 // 0x61646d696e",
      "defined_out": [
        "0",
        "0x61646d696e",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x61646d696e"
      ]
    },
    "239": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "240": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "241": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "242": {
      "error": "Forbidden",
      "op": "assert // Forbidden",
      "stack_out": []
    },
    "243": {
      "op": "bytec_2 // \"M\"",
      "defined_out": [
        "\"M\""
      ],
      "stack_out": [
        "\"M\""
      ]
    },
    "244": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"M\"",
        "address#0 (copy)"
      ],
      "stack_out": [
        "\"M\"",
        "address#0 (copy)"
      ]
    },
    "246": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "247": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "248": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "249": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "251": {
      "error": "Not a member",
      "op": "assert // Not a member",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "252": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "253": {
      "op": "pop",
      "stack_out": []
    },
    "254": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "255": {
      "op": "bytec_1 // 0x6d656d6265725f636f756e74",
      "defined_out": [
        "0",
        "0x6d656d6265725f636f756e74"
      ],
      "stack_out": [
        "0",
        "0x6d656d6265725f636f756e74"
      ]
    },
    "256": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "257": {
      "error": "check self.member_count exists",
      "op": "assert // check self.member_count exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "258": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "259": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "260": {
      "op": "bytec_1 // 0x6d656d6265725f636f756e74",
      "stack_out": [
        "new_state_value%0#0",
        "0x6d656d6265725f636f756e74"
      ]
    },
    "261": {
      "op": "swap",
      "stack_out": [
        "0x6d656d6265725f636f756e74",
        "new_state_value%0#0"
      ]
    },
    "262": {
      "op": "app_global_put",
      "stack_out": []
    },
    "263": {
      "retsub": true,
      "op": "retsub"
    },
    "264": {
      "subroutine": "smart_contracts.council.contract.Council.vote",
      "params": {
        "proposal_id#0": "uint64",
        "approve#0": "uint64"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "267": {
      "op": "pushbytes \"\""
    },
    "269": {
      "op": "dup"
    },
    "270": {
      "op": "bytec_2 // \"M\""
    },
    "271": {
      "op": "txn Sender",
      "defined_out": [
        "\"M\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "\"M\"",
        "tmp%0#0"
      ]
    },
    "273": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%1#0"
      ]
    },
    "274": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "275": {
      "op": "bury 1",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "maybe_exists%0#0"
      ]
    },
    "277": {
      "error": "Not a member",
      "op": "assert // Not a member",
      "stack_out": [
        "i#0",
        "tmp%13#0"
      ]
    },
    "278": {
      "op": "frame_dig -2",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "proposal_id#0 (copy)"
      ]
    },
    "280": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0"
      ]
    },
    "281": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "282": {
      "op": "pushbytes \"V\"",
      "defined_out": [
        "\"V\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%2#0",
        "\"V\""
      ]
    },
    "285": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "\"V\"",
        "tmp%2#0"
      ]
    },
    "286": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "287": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "288": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "289": {
      "op": "bury 1",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_exists%1#0"
      ]
    },
    "291": {
      "op": "bnz vote_else_body@3",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "294": {
      "op": "itxn_begin"
    },
    "295": {
      "op": "intc_0 // 0"
    },
    "296": {
      "op": "bytec 4 // 0x72656769737472795f6170705f6964"
    },
    "298": {
      "op": "app_global_get_ex"
    },
    "299": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists"
    },
    "300": {
      "op": "itxn_field ApplicationID"
    },
    "302": {
      "op": "pushbytes 0x26983200 // method \"is_proposal(uint64)void\""
    },
    "308": {
      "op": "itxn_field ApplicationArgs"
    },
    "310": {
      "op": "frame_dig 2"
    },
    "312": {
      "op": "itxn_field ApplicationArgs"
    },
    "314": {
      "op": "pushint 6 // appl"
    },
    "316": {
      "op": "itxn_field TypeEnum"
    },
    "318": {
      "op": "intc_0 // 0"
    },
    "319": {
      "op": "itxn_field Fee"
    },
    "321": {
      "op": "itxn_submit"
    },
    "322": {
      "op": "txn Sender"
    },
    "324": {
      "op": "bytec_0 // 0x00"
    },
    "325": {
      "op": "intc_0 // 0"
    },
    "326": {
      "op": "frame_dig -1"
    },
    "328": {
      "op": "setbit"
    },
    "329": {
      "op": "concat"
    },
    "330": {
      "op": "pushbytes 0x0001"
    },
    "334": {
      "op": "swap"
    },
    "335": {
      "op": "concat"
    },
    "336": {
      "op": "pushbytes 0x000003"
    },
    "341": {
      "op": "swap"
    },
    "342": {
      "op": "concat"
    },
    "343": {
      "op": "frame_dig 3"
    },
    "345": {
      "op": "dup"
    },
    "346": {
      "op": "box_del"
    },
    "347": {
      "op": "pop"
    },
    "348": {
      "op": "swap"
    },
    "349": {
      "op": "box_put"
    },
    "350": {
      "retsub": true,
      "op": "retsub"
    },
    "351": {
      "block": "vote_else_body@3",
      "stack_in": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "353": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "354": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "355": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%3#0"
      ]
    },
    "356": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "357": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "is_true%0#0"
      ]
    },
    "358": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "359": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "360": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "362": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "encoded_bool%2#0"
      ]
    },
    "363": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "encoded_bool%2#0",
        "0x00"
      ]
    },
    "364": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "365": {
      "error": "Voting is closed",
      "op": "assert // Voting is closed",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "366": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "367": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0"
      ]
    },
    "368": {
      "op": "dup",
      "defined_out": [
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "369": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)",
        "1"
      ]
    },
    "370": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "maybe_value%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0",
        "item_start_offset%0#0"
      ]
    },
    "371": {
      "op": "dig 1",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0",
        "item_start_offset%0#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "373": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%4#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "374": {
      "op": "substring3",
      "defined_out": [
        "tmp%12#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%12#0"
      ]
    },
    "375": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%12#0",
        "0"
      ]
    },
    "376": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%13#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%13#0"
      ]
    },
    "377": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%13#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "379": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%13#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "380": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "tmp%13#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "382": {
      "block": "vote_for_header@4",
      "stack_in": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "384": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "386": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "continue_looping%0#0"
      ]
    },
    "387": {
      "op": "bz vote_after_for@7",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "390": {
      "op": "frame_dig 3"
    },
    "392": {
      "op": "box_get"
    },
    "393": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists"
    },
    "394": {
      "op": "dup"
    },
    "395": {
      "op": "intc_1 // 1"
    },
    "396": {
      "op": "extract_uint16"
    },
    "397": {
      "op": "dig 1"
    },
    "399": {
      "op": "len"
    },
    "400": {
      "op": "substring3"
    },
    "401": {
      "op": "extract 2 0"
    },
    "404": {
      "op": "frame_dig 0"
    },
    "406": {
      "op": "dup"
    },
    "407": {
      "op": "cover 2"
    },
    "409": {
      "op": "intc_2 // 33"
    },
    "410": {
      "op": "*"
    },
    "411": {
      "op": "intc_2 // 33"
    },
    "412": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds"
    },
    "413": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds"
    },
    "416": {
      "op": "txn Sender"
    },
    "418": {
      "op": "!="
    },
    "419": {
      "error": "Already voted",
      "op": "assert // Already voted"
    },
    "420": {
      "op": "intc_1 // 1"
    },
    "421": {
      "op": "+"
    },
    "422": {
      "op": "frame_bury 0"
    },
    "424": {
      "op": "b vote_for_header@4"
    },
    "427": {
      "block": "vote_after_for@7",
      "stack_in": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "429": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "430": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "431": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0"
      ]
    },
    "432": {
      "op": "dup",
      "defined_out": [
        "maybe_value%6#0",
        "maybe_value%6#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "maybe_value%6#0 (copy)"
      ]
    },
    "433": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%6#0",
        "maybe_value%6#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "maybe_value%6#0 (copy)",
        "1"
      ]
    },
    "434": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0"
      ]
    },
    "435": {
      "op": "dig 1",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "maybe_value%6#0 (copy)"
      ]
    },
    "437": {
      "op": "len",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "438": {
      "op": "dig 2",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%6#0 (copy)"
      ]
    },
    "440": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "item_start_offset%2#0 (copy)",
        "maybe_value%6#0",
        "maybe_value%6#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%6#0 (copy)",
        "item_start_offset%2#0 (copy)"
      ]
    },
    "442": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "maybe_value%6#0 (copy)",
        "item_start_offset%2#0 (copy)",
        "item_end_offset%2#0"
      ]
    },
    "444": {
      "op": "substring3",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%23#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "tmp%23#0"
      ]
    },
    "445": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "448": {
      "op": "txn Sender",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%24#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "tmp%24#0"
      ]
    },
    "450": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%24#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "tmp%24#0",
        "0x00"
      ]
    },
    "451": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%24#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "tmp%24#0",
        "0x00",
        "0"
      ]
    },
    "452": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "0x00",
        "approve#0 (copy)",
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%24#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "tmp%24#0",
        "0x00",
        "0",
        "approve#0 (copy)"
      ]
    },
    "454": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%24#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "tmp%24#0",
        "encoded_bool%3#0"
      ]
    },
    "455": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "456": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0"
      ]
    },
    "457": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "458": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "459": {
      "op": "intc_2 // 33",
      "defined_out": [
        "33",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "33"
      ]
    },
    "460": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%2#0",
        "len_%0#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "461": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "as_bytes%1#0"
      ]
    },
    "462": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%2#0",
        "len_16_bit%0#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "465": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "466": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "item_start_offset%2#0",
        "maybe_value%6#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "maybe_value%6#0",
        "item_start_offset%2#0",
        "concat_result%0#0"
      ]
    },
    "467": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "item_start_offset%2#0",
        "concat_result%0#0",
        "maybe_value%6#0"
      ]
    },
    "469": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "item_start_offset%2#0",
        "concat_result%0#0",
        "maybe_value%6#0",
        "0"
      ]
    },
    "470": {
      "op": "uncover 3",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "concat_result%0#0",
        "maybe_value%6#0",
        "0",
        "item_start_offset%2#0"
      ]
    },
    "472": {
      "op": "extract3",
      "defined_out": [
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "473": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "474": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "updated_data%0#0"
      ]
    },
    "475": {
      "op": "dig 1",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "updated_data%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "477": {
      "op": "box_del",
      "defined_out": [
        "tmp%3#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "478": {
      "op": "pop",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0",
        "updated_data%0#0"
      ]
    },
    "479": {
      "op": "box_put",
      "stack_out": [
        "i#0",
        "tmp%13#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "480": {
      "retsub": true,
      "op": "retsub"
    },
    "481": {
      "subroutine": "smart_contracts.council.contract.Council.submit",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "submit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "484": {
      "op": "intc_0 // 0"
    },
    "485": {
      "op": "pushbytes \"\""
    },
    "487": {
      "op": "dupn 4"
    },
    "489": {
      "op": "bytec_2 // \"M\""
    },
    "490": {
      "op": "txn Sender",
      "defined_out": [
        "\"M\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "\"M\"",
        "tmp%0#0"
      ]
    },
    "492": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%1#0"
      ]
    },
    "493": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "494": {
      "op": "bury 1",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_exists%0#0"
      ]
    },
    "496": {
      "op": "bnz submit_bool_true@2",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "499": {
      "op": "txn Sender"
    },
    "501": {
      "op": "intc_0 // 0"
    },
    "502": {
      "op": "bytec_3 // 0x61646d696e"
    },
    "503": {
      "op": "app_global_get_ex"
    },
    "504": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists"
    },
    "505": {
      "op": "=="
    },
    "506": {
      "op": "bz submit_bool_false@3"
    },
    "509": {
      "block": "submit_bool_true@2",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "or_result%0#0"
      ]
    },
    "510": {
      "block": "submit_bool_merge@4",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "or_result%0#0"
      ],
      "error": "Forbidden",
      "op": "assert // Forbidden",
      "defined_out": [],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "511": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "proposal_id#0 (copy)"
      ]
    },
    "513": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%4#0"
      ]
    },
    "514": {
      "op": "pushbytes \"V\"",
      "defined_out": [
        "\"V\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%4#0",
        "\"V\""
      ]
    },
    "517": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "\"V\"",
        "tmp%4#0"
      ]
    },
    "518": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "519": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "tmp%5#0"
      ]
    },
    "520": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "522": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "523": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "524": {
      "op": "bury 1",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_exists%2#0"
      ]
    },
    "526": {
      "error": "Bad proposal ID",
      "op": "assert // Bad proposal ID",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "527": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "528": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "529": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%3#0"
      ]
    },
    "530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "531": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "is_true%0#0"
      ]
    },
    "532": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "534": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "536": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "encoded_bool%0#0"
      ]
    },
    "537": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "538": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "tmp%8#0"
      ]
    },
    "539": {
      "error": "Already submitted",
      "op": "assert // Already submitted",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "540": {
      "op": "intc_0 // 0",
      "defined_out": [
        "approvals#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "approvals#0"
      ]
    },
    "541": {
      "op": "frame_bury 1",
      "defined_out": [
        "approvals#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "543": {
      "op": "intc_0 // 0",
      "defined_out": [
        "approvals#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "rejections#0"
      ]
    },
    "544": {
      "op": "frame_bury 4",
      "defined_out": [
        "approvals#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "546": {
      "op": "box_get",
      "defined_out": [
        "approvals#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "547": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0"
      ]
    },
    "548": {
      "op": "dup",
      "defined_out": [
        "approvals#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "549": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "approvals#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0",
        "maybe_value%4#0 (copy)",
        "1"
      ]
    },
    "550": {
      "op": "extract_uint16",
      "defined_out": [
        "approvals#0",
        "item_start_offset%0#0",
        "maybe_value%4#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0",
        "item_start_offset%0#0"
      ]
    },
    "551": {
      "op": "dig 1",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0",
        "item_start_offset%0#0",
        "maybe_value%4#0 (copy)"
      ]
    },
    "553": {
      "op": "len",
      "defined_out": [
        "approvals#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%4#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%4#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "554": {
      "op": "substring3",
      "defined_out": [
        "approvals#0",
        "rejections#0",
        "tmp%11#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "555": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%11#0",
        "0"
      ]
    },
    "556": {
      "op": "extract_uint16",
      "defined_out": [
        "approvals#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "557": {
      "op": "frame_bury 5",
      "defined_out": [
        "approvals#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "559": {
      "op": "intc_0 // 0",
      "defined_out": [
        "approvals#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "i#0"
      ]
    },
    "560": {
      "op": "frame_bury 3",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "562": {
      "block": "submit_for_header@5",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "i#0"
      ]
    },
    "564": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "566": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "continue_looping%0#0"
      ]
    },
    "567": {
      "op": "bz submit_after_for@11",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "570": {
      "op": "frame_dig 0"
    },
    "572": {
      "op": "box_get"
    },
    "573": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists"
    },
    "574": {
      "op": "dup"
    },
    "575": {
      "op": "intc_1 // 1"
    },
    "576": {
      "op": "extract_uint16"
    },
    "577": {
      "op": "dig 1"
    },
    "579": {
      "op": "len"
    },
    "580": {
      "op": "substring3"
    },
    "581": {
      "op": "extract 2 0"
    },
    "584": {
      "op": "frame_dig 3"
    },
    "586": {
      "op": "intc_2 // 33"
    },
    "587": {
      "op": "*"
    },
    "588": {
      "op": "intc_2 // 33"
    },
    "589": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds"
    },
    "590": {
      "op": "pushint 256 // 256"
    },
    "593": {
      "op": "getbit"
    },
    "594": {
      "op": "bytec_0 // 0x00"
    },
    "595": {
      "op": "intc_0 // 0"
    },
    "596": {
      "op": "uncover 2"
    },
    "598": {
      "op": "setbit"
    },
    "599": {
      "op": "bytec_0 // 0x00"
    },
    "600": {
      "op": "!="
    },
    "601": {
      "op": "bz submit_else_body@8"
    },
    "604": {
      "op": "frame_dig 1"
    },
    "606": {
      "op": "intc_1 // 1"
    },
    "607": {
      "op": "+"
    },
    "608": {
      "op": "frame_bury 1"
    },
    "610": {
      "block": "submit_after_if_else@9",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "i#0"
      ]
    },
    "612": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "i#0",
        "1"
      ]
    },
    "613": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "i#0"
      ]
    },
    "614": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "616": {
      "op": "b submit_for_header@5"
    },
    "619": {
      "block": "submit_else_body@8",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "rejections#0"
      ]
    },
    "621": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "rejections#0",
        "1"
      ]
    },
    "622": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "rejections#0"
      ]
    },
    "623": {
      "op": "frame_bury 4",
      "defined_out": [
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "625": {
      "op": "b submit_after_if_else@9"
    },
    "628": {
      "block": "submit_after_for@11",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "0"
      ]
    },
    "629": {
      "op": "bytec_1 // 0x6d656d6265725f636f756e74",
      "defined_out": [
        "0",
        "0x6d656d6265725f636f756e74"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "0",
        "0x6d656d6265725f636f756e74"
      ]
    },
    "630": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "631": {
      "error": "check self.member_count exists",
      "op": "assert // check self.member_count exists",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%6#0"
      ]
    },
    "632": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "maybe_value%6#0",
        "2"
      ]
    },
    "633": {
      "op": "/",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%18#0"
      ]
    },
    "634": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%18#0",
        "1"
      ]
    },
    "635": {
      "op": "+",
      "defined_out": [
        "halfPlusOne#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "halfPlusOne#0"
      ]
    },
    "636": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "halfPlusOne#0",
        "halfPlusOne#0"
      ]
    },
    "637": {
      "op": "frame_bury 2",
      "defined_out": [
        "halfPlusOne#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "halfPlusOne#0"
      ]
    },
    "639": {
      "op": "frame_dig 1",
      "defined_out": [
        "approvals#0",
        "halfPlusOne#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "halfPlusOne#0",
        "approvals#0"
      ]
    },
    "641": {
      "op": "<=",
      "defined_out": [
        "approvals#0",
        "halfPlusOne#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%19#0"
      ]
    },
    "642": {
      "op": "bnz submit_bool_true@13",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "645": {
      "op": "frame_dig 4"
    },
    "647": {
      "op": "frame_dig 2"
    },
    "649": {
      "op": ">="
    },
    "650": {
      "op": "bz submit_bool_false@14"
    },
    "653": {
      "block": "submit_bool_true@13",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "or_result%1#0"
      ]
    },
    "654": {
      "block": "submit_bool_merge@15",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "or_result%1#0"
      ],
      "error": "Failed vote",
      "op": "assert // Failed vote",
      "defined_out": [],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "655": {
      "op": "frame_dig 4",
      "defined_out": [
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "rejections#0"
      ]
    },
    "657": {
      "op": "frame_dig 2",
      "defined_out": [
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "rejections#0",
        "halfPlusOne#0"
      ]
    },
    "659": {
      "op": ">=",
      "defined_out": [
        "block#0",
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "block#0"
      ]
    },
    "660": {
      "op": "itxn_begin"
    },
    "661": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "block#0",
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "block#0",
        "0x00"
      ]
    },
    "662": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "block#0",
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "block#0",
        "0x00",
        "0"
      ]
    },
    "663": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "0x00",
        "0",
        "block#0"
      ]
    },
    "665": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0",
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "encoded_bool%2#0"
      ]
    },
    "666": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_bool%2#0",
        "halfPlusOne#0",
        "proposal_id#0 (copy)",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "encoded_bool%2#0",
        "proposal_id#0 (copy)"
      ]
    },
    "668": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "encoded_bool%2#0"
      ]
    },
    "670": {
      "op": "pushbytes 0x212d9f07 // method \"review(bool)void\"",
      "defined_out": [
        "Method(review(bool)void)",
        "encoded_bool%2#0",
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "encoded_bool%2#0",
        "Method(review(bool)void)"
      ]
    },
    "676": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "encoded_bool%2#0"
      ]
    },
    "678": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "680": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "halfPlusOne#0",
        "rejections#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "appl"
      ]
    },
    "682": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "684": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "0"
      ]
    },
    "685": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "687": {
      "op": "itxn_submit"
    },
    "688": {
      "op": "frame_dig 0",
      "defined_out": [
        "halfPlusOne#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0"
      ]
    },
    "690": {
      "op": "dup",
      "defined_out": [
        "halfPlusOne#0",
        "rejections#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "691": {
      "op": "box_get",
      "defined_out": [
        "halfPlusOne#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "692": {
      "error": "check self.votes entry exists",
      "op": "assert // check self.votes entry exists",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%7#0"
      ]
    },
    "693": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "694": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "halfPlusOne#0",
        "maybe_value%7#0",
        "rejections#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "maybe_value%7#0",
        "0",
        "1"
      ]
    },
    "695": {
      "op": "setbit",
      "defined_out": [
        "halfPlusOne#0",
        "rejections#0",
        "tmp%5#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "updated_data%0#0"
      ]
    },
    "696": {
      "op": "dig 1",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "updated_data%0#0",
        "tmp%5#0 (copy)"
      ]
    },
    "698": {
      "op": "box_del",
      "defined_out": [
        "halfPlusOne#0",
        "rejections#0",
        "tmp%5#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "699": {
      "op": "pop",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "tmp%5#0",
        "updated_data%0#0"
      ]
    },
    "700": {
      "op": "box_put",
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ]
    },
    "701": {
      "retsub": true,
      "op": "retsub"
    },
    "702": {
      "block": "submit_bool_false@14",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "or_result%1#0"
      ]
    },
    "703": {
      "op": "b submit_bool_merge@15"
    },
    "706": {
      "block": "submit_bool_false@3",
      "stack_in": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "approvals#0",
        "halfPlusOne#0",
        "i#0",
        "rejections#0",
        "tmp%12#0",
        "or_result%0#0"
      ]
    },
    "707": {
      "op": "b submit_bool_merge@4"
    }
  }
}
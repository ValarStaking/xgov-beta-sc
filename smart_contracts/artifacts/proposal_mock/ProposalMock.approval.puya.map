{
  "version": 3,
  "sources": [
    "../../proposal_mock/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBgB;AADJ;;AADJ;AAMQ;AADJ;AADJ;AAMQ;;;;;;;AADJ;AADJ;AAMQ;;;;;AADe;AADvB;AAMQ;;;;;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;AADe;AADvB;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;AADJ;AADJ;AAlER;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;;AA8FK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;;;AAAA;AAAA;;;AAAA;AAoFK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAhFL;;;AAAA;AAgFK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AA5EL;;;AAAA;AA4EK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAvEL;;;AAuEK;;;AAAA;;AAAL;;;AAEQ;AAAA;;AAAA;AACA;AAA6B;;AAA7B;;AAER;;;AAEQ;AAAA;;AAAA;;AAER;;;AAEQ;;AAAA;;AAAA;;AAER;;;AAEQ;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x 0x70726f706f736572 0x72656769737472795f6170705f6964 0x737461747573 0x7265717565737465645f616d6f756e74 0x636f6d6d69747465655f6964 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573"
    },
    "104": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "106": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "109": {
      "op": "bytec_1 // 0x70726f706f736572"
    },
    "110": {
      "op": "global ZeroAddress"
    },
    "112": {
      "op": "app_global_put"
    },
    "113": {
      "op": "bytec_2 // 0x72656769737472795f6170705f6964"
    },
    "114": {
      "op": "intc_0 // 0"
    },
    "115": {
      "op": "app_global_put"
    },
    "116": {
      "op": "pushbytes 0x7469746c65"
    },
    "123": {
      "op": "bytec_0 // \"\""
    },
    "124": {
      "op": "app_global_put"
    },
    "125": {
      "op": "pushbytes 0x636964"
    },
    "130": {
      "op": "bytec_0 // 0x"
    },
    "131": {
      "op": "app_global_put"
    },
    "132": {
      "op": "pushbytes 0x7375626d697373696f6e5f74696d657374616d70"
    },
    "154": {
      "op": "intc_0 // 0"
    },
    "155": {
      "op": "app_global_put"
    },
    "156": {
      "op": "pushbytes 0x66696e616c697a6174696f6e5f74696d657374616d70"
    },
    "180": {
      "op": "intc_0 // 0"
    },
    "181": {
      "op": "app_global_put"
    },
    "182": {
      "op": "bytec_3 // 0x737461747573"
    },
    "183": {
      "op": "intc_0 // 0"
    },
    "184": {
      "op": "app_global_put"
    },
    "185": {
      "op": "pushbytes 0x66756e64696e675f63617465676f7279"
    },
    "203": {
      "op": "intc_0 // 0"
    },
    "204": {
      "op": "app_global_put"
    },
    "205": {
      "op": "pushbytes 0x66756e64696e675f74797065"
    },
    "219": {
      "op": "intc_0 // 0"
    },
    "220": {
      "op": "app_global_put"
    },
    "221": {
      "op": "bytec 4 // 0x7265717565737465645f616d6f756e74"
    },
    "223": {
      "op": "intc_0 // 0"
    },
    "224": {
      "op": "app_global_put"
    },
    "225": {
      "op": "pushbytes 0x6c6f636b65645f616d6f756e74"
    },
    "240": {
      "op": "intc_0 // 0"
    },
    "241": {
      "op": "app_global_put"
    },
    "242": {
      "op": "bytec 5 // 0x636f6d6d69747465655f6964"
    },
    "244": {
      "op": "bytec_0 // 0x"
    },
    "245": {
      "op": "app_global_put"
    },
    "246": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273"
    },
    "248": {
      "op": "intc_0 // 0"
    },
    "249": {
      "op": "app_global_put"
    },
    "250": {
      "op": "bytec 7 // 0x636f6d6d69747465655f766f746573"
    },
    "252": {
      "op": "intc_0 // 0"
    },
    "253": {
      "op": "app_global_put"
    },
    "254": {
      "op": "pushbytes 0x766f7465645f6d656d62657273"
    },
    "269": {
      "op": "intc_0 // 0"
    },
    "270": {
      "op": "app_global_put"
    },
    "271": {
      "op": "pushbytes 0x617070726f76616c73"
    },
    "282": {
      "op": "intc_0 // 0"
    },
    "283": {
      "op": "app_global_put"
    },
    "284": {
      "op": "pushbytes 0x72656a656374696f6e73"
    },
    "296": {
      "op": "intc_0 // 0"
    },
    "297": {
      "op": "app_global_put"
    },
    "298": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "300": {
      "op": "bz main_after_if_else@11",
      "stack_out": []
    },
    "303": {
      "op": "pushbytess 0xcc694eaa 0x1394cc3c 0xd3791253 0xa4ddde0c 0xe94a444d 0xbb8e1d68 // method \"create(address)void\", method \"set_status(uint64)void\", method \"set_requested_amount(uint64)void\", method \"set_committee_details(byte[36],uint64,uint64)void\", method \"release_funds()void\", method \"vote(address,uint64,uint64)void\""
    },
    "335": {
      "op": "txna ApplicationArgs 0"
    },
    "338": {
      "op": "match main_create_route@5 main_set_status_route@6 main_set_requested_amount_route@7 main_set_committee_details_route@8 main_release_funds_route@9 main_vote_route@10"
    },
    "352": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "353": {
      "op": "return"
    },
    "354": {
      "block": "main_vote_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "356": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "357": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "358": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "360": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "361": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "362": {
      "op": "return"
    },
    "363": {
      "block": "main_release_funds_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "365": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "366": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "367": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "369": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "370": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "371": {
      "op": "return"
    },
    "372": {
      "block": "main_set_committee_details_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "374": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "375": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "376": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "378": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "379": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "382": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "385": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "386": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%24#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "389": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0"
      ]
    },
    "390": {
      "callsub": "smart_contracts.proposal_mock.contract.ProposalMock.set_committee_details",
      "op": "callsub set_committee_details",
      "stack_out": []
    },
    "393": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "394": {
      "op": "return"
    },
    "395": {
      "block": "main_set_requested_amount_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "397": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "398": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "399": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "401": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "402": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "405": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "406": {
      "callsub": "smart_contracts.proposal_mock.contract.ProposalMock.set_requested_amount",
      "op": "callsub set_requested_amount",
      "stack_out": []
    },
    "409": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "410": {
      "op": "return"
    },
    "411": {
      "block": "main_set_status_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "413": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "414": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "415": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "417": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "418": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "421": {
      "op": "btoi",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "422": {
      "callsub": "smart_contracts.proposal_mock.contract.ProposalMock.set_status",
      "op": "callsub set_status",
      "stack_out": []
    },
    "425": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "426": {
      "op": "return"
    },
    "427": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "429": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "430": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "431": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "433": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "434": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "435": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "438": {
      "callsub": "smart_contracts.proposal_mock.contract.ProposalMock.create",
      "op": "callsub create",
      "stack_out": []
    },
    "441": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "442": {
      "op": "return"
    },
    "443": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.create",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "446": {
      "op": "bytec_1 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "447": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ]
    },
    "449": {
      "op": "app_global_put",
      "stack_out": []
    },
    "450": {
      "op": "bytec_2 // 0x72656769737472795f6170705f6964"
    },
    "451": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ]
    },
    "453": {
      "op": "app_global_put",
      "stack_out": []
    },
    "454": {
      "retsub": true,
      "op": "retsub"
    },
    "455": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.set_status",
      "params": {
        "status#0": "uint64"
      },
      "block": "set_status",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "458": {
      "op": "bytec_3 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "459": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x737461747573",
        "status#0 (copy)"
      ],
      "stack_out": [
        "0x737461747573",
        "status#0 (copy)"
      ]
    },
    "461": {
      "op": "app_global_put",
      "stack_out": []
    },
    "462": {
      "retsub": true,
      "op": "retsub"
    },
    "463": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.set_requested_amount",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "set_requested_amount",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "466": {
      "op": "bytec 4 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "468": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#0 (copy)"
      ]
    },
    "470": {
      "op": "app_global_put",
      "stack_out": []
    },
    "471": {
      "retsub": true,
      "op": "retsub"
    },
    "472": {
      "subroutine": "smart_contracts.proposal_mock.contract.ProposalMock.set_committee_details",
      "params": {
        "cid#0": "bytes",
        "size#0": "uint64",
        "votes#0": "uint64"
      },
      "block": "set_committee_details",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "475": {
      "op": "bytec 5 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "477": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "cid#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "cid#0 (copy)"
      ]
    },
    "479": {
      "op": "app_global_put",
      "stack_out": []
    },
    "480": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "482": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "size#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "size#0 (copy)"
      ]
    },
    "484": {
      "op": "app_global_put",
      "stack_out": []
    },
    "485": {
      "op": "bytec 7 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "487": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "votes#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "votes#0 (copy)"
      ]
    },
    "489": {
      "op": "app_global_put",
      "stack_out": []
    },
    "490": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
{
  "version": 3,
  "sources": [
    "../../xgov_subscriber_app_mock/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AA6BA;;;AAGY;;AAAA;AADJ;AAGO;;AAAA;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;;AAjBR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAmBK;;AAAA;AAAA;AAAA;;AAAA;AAnBL;;;AAAA;AAAA;;;AAmBK;;;AAAA;AAAA;AAmBA;;AAAA;AAAA;AAAA;;AAAA;AAtCL;;;AAAA;AAsCK;;;AAAA;AAAA;AAtCL;;AAAA;;;;;;;;;AAAA;AAAA;AAmBA;;;AAG4C;;AACxB;;;;;;;;;;AADwB;AAAA;AAKvB;;AAAA;;AAAA;AAIb;;;;;AALU;;;AAAA;;;AAKV;;;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAOR;;;AAEQ;AAIS;;AAAqB;;AAArB;AAFQ;;;;;;AAFjB;;;;;;;;;;AAAA;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.approval_program",
      "params": {},
      "block": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "8": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "11": {
      "callsub": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.__init__",
      "op": "callsub __init__"
    },
    "14": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "return",
      "stack_out": []
    },
    "18": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "21": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "23": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "24": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "25": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "28": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "29": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "31": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "32": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "33": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "35": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "36": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "37": {
      "retsub": true,
      "op": "retsub"
    },
    "38": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "41": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "43": {
      "op": "bz __puya_arc4_router___bare_routing@6",
      "stack_out": []
    },
    "46": {
      "op": "pushbytess 0x42317b4f 0x5a2a3f16 // method \"subscribe_xgov(uint64,address)void\", method \"unsubscribe_xgov(uint64)void\""
    },
    "58": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(subscribe_xgov(uint64,address)void)",
        "Method(unsubscribe_xgov(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(subscribe_xgov(uint64,address)void)",
        "Method(unsubscribe_xgov(uint64)void)",
        "tmp%2#0"
      ]
    },
    "61": {
      "op": "match __puya_arc4_router___subscribe_xgov_route@2 __puya_arc4_router___unsubscribe_xgov_route@3",
      "stack_out": []
    },
    "67": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "68": {
      "retsub": true,
      "op": "retsub"
    },
    "69": {
      "block": "__puya_arc4_router___subscribe_xgov_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "71": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "72": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "73": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "75": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "76": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "79": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "80": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "83": {
      "callsub": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.subscribe_xgov",
      "op": "callsub subscribe_xgov",
      "stack_out": []
    },
    "86": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "87": {
      "retsub": true,
      "op": "retsub"
    },
    "88": {
      "block": "__puya_arc4_router___unsubscribe_xgov_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "90": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "91": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "92": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "94": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "95": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "98": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "99": {
      "callsub": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.unsubscribe_xgov",
      "op": "callsub unsubscribe_xgov",
      "stack_out": []
    },
    "102": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "103": {
      "retsub": true,
      "op": "retsub"
    },
    "104": {
      "block": "__puya_arc4_router___bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "106": {
      "op": "bnz __puya_arc4_router___after_if_else@10",
      "stack_out": []
    },
    "109": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "111": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "112": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "114": {
      "retsub": true,
      "op": "retsub"
    },
    "115": {
      "block": "__puya_arc4_router___after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "116": {
      "retsub": true,
      "op": "retsub"
    },
    "117": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.subscribe_xgov",
      "params": {
        "app_id#0": "uint64",
        "voting_address#0": "bytes"
      },
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "120": {
      "op": "frame_dig -2",
      "defined_out": [
        "app_id#0 (copy)"
      ],
      "stack_out": [
        "app_id#0 (copy)"
      ]
    },
    "122": {
      "op": "pushbytes 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "app_id#0 (copy)"
      ],
      "stack_out": [
        "app_id#0 (copy)",
        "0x78676f765f666565"
      ]
    },
    "132": {
      "op": "app_global_get_ex",
      "defined_out": [
        "xgov_fee#0",
        "xgov_min_balance_exists#0"
      ],
      "stack_out": [
        "xgov_fee#0",
        "xgov_min_balance_exists#0"
      ]
    },
    "133": {
      "op": "pop",
      "stack_out": [
        "xgov_fee#0"
      ]
    },
    "134": {
      "op": "frame_dig -2",
      "stack_out": [
        "xgov_fee#0",
        "app_id#0 (copy)"
      ]
    },
    "136": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0",
        "xgov_fee#0"
      ],
      "stack_out": [
        "xgov_fee#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "138": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "xgov_fee#0",
        "value%0#0"
      ]
    },
    "139": {
      "op": "itxn_begin"
    },
    "140": {
      "op": "itxn_field Receiver"
    },
    "142": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "144": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "145": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "147": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "148": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "150": {
      "op": "itxn_next"
    },
    "151": {
      "op": "frame_dig -2",
      "stack_out": [
        "app_id#0 (copy)"
      ]
    },
    "153": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "155": {
      "op": "pushbytes 0x2254162a // method \"subscribe_xgov(pay,address)void\"",
      "defined_out": [
        "Method(subscribe_xgov(pay,address)void)"
      ],
      "stack_out": [
        "Method(subscribe_xgov(pay,address)void)"
      ]
    },
    "161": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "163": {
      "op": "frame_dig -1",
      "defined_out": [
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "voting_address#0 (copy)"
      ]
    },
    "165": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "167": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "168": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "170": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "171": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "173": {
      "op": "itxn_submit"
    },
    "174": {
      "retsub": true,
      "op": "retsub"
    },
    "175": {
      "subroutine": "smart_contracts.xgov_subscriber_app_mock.contract.XGovSubscriberAppMock.unsubscribe_xgov",
      "params": {
        "app_id#0": "uint64"
      },
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "178": {
      "op": "itxn_begin"
    },
    "179": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "181": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "183": {
      "op": "*",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "184": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0"
      ]
    },
    "186": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_id#0 (copy)",
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0",
        "app_id#0 (copy)"
      ]
    },
    "188": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0"
      ]
    },
    "190": {
      "op": "pushbytes 0x76725559 // method \"unsubscribe_xgov(address)void\"",
      "defined_out": [
        "Method(unsubscribe_xgov(address)void)",
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0",
        "Method(unsubscribe_xgov(address)void)"
      ]
    },
    "196": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "tmp%1#0"
      ]
    },
    "198": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "200": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0",
        "appl"
      ]
    },
    "201": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "inner_txn_params%0%%param_Fee_idx_0#0"
      ]
    },
    "203": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "205": {
      "op": "itxn_submit"
    },
    "206": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
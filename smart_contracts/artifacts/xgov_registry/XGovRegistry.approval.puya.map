{
  "version": 3,
  "sources": [
    "../../xgov_registry/contract.py"
  ],
  "mappings": "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",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "5": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "7": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "28"
      ]
    },
    "9": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "10": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "11": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "13": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "36"
      ]
    },
    "15": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "16": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "17": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "19": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "20": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "21": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "23": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "24": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "25": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "27": {
      "op": "app_global_put",
      "stack_out": []
    },
    "28": {
      "op": "bytec 9 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "30": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "31": {
      "op": "app_global_put",
      "stack_out": []
    },
    "32": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "34": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ]
    },
    "36": {
      "op": "app_global_put",
      "stack_out": []
    },
    "37": {
      "op": "bytec 10 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "39": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "materialized_values%1#0"
      ]
    },
    "41": {
      "op": "app_global_put",
      "stack_out": []
    },
    "42": {
      "op": "bytec 11 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "44": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f7061796f72",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "materialized_values%2#0"
      ]
    },
    "46": {
      "op": "app_global_put",
      "stack_out": []
    },
    "47": {
      "op": "bytec 20 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c"
      ]
    },
    "49": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "materialized_values%3#0"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "materialized_values%3#0"
      ]
    },
    "51": {
      "op": "app_global_put",
      "stack_out": []
    },
    "52": {
      "op": "bytec 12 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "54": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "materialized_values%4#0"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "materialized_values%4#0"
      ]
    },
    "56": {
      "op": "app_global_put",
      "stack_out": []
    },
    "57": {
      "op": "bytec 13 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "59": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "materialized_values%5#0"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "materialized_values%5#0"
      ]
    },
    "61": {
      "op": "app_global_put",
      "stack_out": []
    },
    "62": {
      "op": "bytec 14 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e"
      ]
    },
    "64": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "materialized_values%6#0"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "materialized_values%6#0"
      ]
    },
    "66": {
      "op": "app_global_put",
      "stack_out": []
    },
    "67": {
      "op": "bytec 15 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565"
      ],
      "stack_out": [
        "0x78676f765f666565"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f765f666565",
        "0"
      ]
    },
    "70": {
      "op": "app_global_put",
      "stack_out": []
    },
    "71": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0x78676f7673"
      ],
      "stack_out": [
        "0x78676f7673"
      ]
    },
    "73": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f7673",
        "0"
      ]
    },
    "74": {
      "op": "app_global_put",
      "stack_out": []
    },
    "75": {
      "op": "bytec 16 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565"
      ],
      "stack_out": [
        "0x70726f706f7365725f666565"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "0"
      ]
    },
    "78": {
      "op": "app_global_put",
      "stack_out": []
    },
    "79": {
      "op": "bytec 17 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "81": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "0"
      ]
    },
    "82": {
      "op": "app_global_put",
      "stack_out": []
    },
    "83": {
      "op": "bytec 21 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ],
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "85": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "0"
      ]
    },
    "86": {
      "op": "app_global_put",
      "stack_out": []
    },
    "87": {
      "op": "bytec 22 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "0"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "bytec 23 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "94": {
      "op": "app_global_put",
      "stack_out": []
    },
    "95": {
      "op": "bytec 24 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "97": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "0"
      ]
    },
    "98": {
      "op": "app_global_put",
      "stack_out": []
    },
    "99": {
      "op": "bytec 25 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "0"
      ]
    },
    "102": {
      "op": "app_global_put",
      "stack_out": []
    },
    "103": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "0"
      ]
    },
    "106": {
      "op": "app_global_put",
      "stack_out": []
    },
    "107": {
      "op": "bytec 27 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "110": {
      "op": "app_global_put",
      "stack_out": []
    },
    "111": {
      "op": "bytec 28 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": []
    },
    "115": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "118": {
      "op": "app_global_put",
      "stack_out": []
    },
    "119": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "bytec 31 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "op": "bytec 32 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "130": {
      "op": "app_global_put",
      "stack_out": []
    },
    "131": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "135": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "138": {
      "op": "app_global_put",
      "stack_out": []
    },
    "139": {
      "op": "bytec 35 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "142": {
      "op": "app_global_put",
      "stack_out": []
    },
    "143": {
      "op": "bytec 36 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "146": {
      "op": "app_global_put",
      "stack_out": []
    },
    "147": {
      "op": "bytec 37 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "0"
      ]
    },
    "150": {
      "op": "app_global_put",
      "stack_out": []
    },
    "151": {
      "op": "bytec 38 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "154": {
      "op": "app_global_put",
      "stack_out": []
    },
    "155": {
      "op": "bytec 39 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "158": {
      "op": "app_global_put",
      "stack_out": []
    },
    "159": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "0"
      ]
    },
    "162": {
      "op": "app_global_put",
      "stack_out": []
    },
    "163": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "0"
      ]
    },
    "165": {
      "op": "app_global_put",
      "stack_out": []
    },
    "166": {
      "op": "bytec 41 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "168": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "169": {
      "op": "app_global_put",
      "stack_out": []
    },
    "170": {
      "op": "bytec 42 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "172": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "173": {
      "op": "app_global_put",
      "stack_out": []
    },
    "174": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "0"
      ]
    },
    "177": {
      "op": "app_global_put",
      "stack_out": []
    },
    "178": {
      "op": "bytec 43 // 0x726571756573745f6964",
      "defined_out": [
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0x726571756573745f6964"
      ]
    },
    "180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x726571756573745f6964",
        "0"
      ]
    },
    "181": {
      "op": "app_global_put",
      "stack_out": []
    },
    "182": {
      "op": "bytec 44 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ],
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "184": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "0"
      ]
    },
    "185": {
      "op": "app_global_put",
      "stack_out": []
    },
    "186": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "188": {
      "op": "bz main_after_if_else@40",
      "stack_out": []
    },
    "191": {
      "op": "pushbytess 0x4c5c61ba 0x86f7e0e6 0x39e26d8a 0x98352e86 0xfa4ed6e2 0xd6c9cc1a 0x5c484055 0x37d6adf1 0xd4216b6e 0xba8520f2 0x1677b30e 0x84b7d268 0x653a0bdb 0x4956c1ab 0xa082cef8 0x76725559 0x45077390 0x3c31bc02 0x0d2c7891 0x0da27885 0x7a4fee43 0x52dd10d7 0xd4d37a64 0x34349dcc 0x158f8dd6 0xdb27b9af 0xf5910756 0x65610a9f 0xfdc695c2 0xba90ab54 0xb3b58482 0x00b3cef5 0x6f752007 0x3a8d568f 0x26983200 // method \"create()void\", method \"pause_registry()void\", method \"pause_proposals()void\", method \"resume_registry()void\", method \"resume_proposals()void\", method \"set_xgov_manager(address)void\", method \"set_payor(address)void\", method \"set_xgov_council(address)void\", method \"set_xgov_subscriber(address)void\", method \"set_kyc_provider(address)void\", method \"set_committee_manager(address)void\", method \"set_xgov_daemon(address)void\", method \"config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void\", method \"update_xgov_registry()void\", method \"subscribe_xgov(address,pay)void\", method \"unsubscribe_xgov(address)void\", method \"request_subscribe_xgov(address,address,uint64,pay)void\", method \"approve_subscribe_xgov(uint64)void\", method \"reject_subscribe_xgov(uint64)void\", method \"set_voting_account(address,address)void\", method \"subscribe_proposer(pay)void\", method \"set_proposer_kyc(address,bool,uint64)void\", method \"declare_committee(byte[32],uint64,uint64)void\", method \"open_proposal(pay)uint64\", method \"vote_proposal(uint64,address,uint64,uint64)void\", method \"pay_grant_proposal(uint64)void\", method \"finalize_proposal(uint64)void\", method \"drop_proposal(uint64)void\", method \"deposit_funds(pay)void\", method \"withdraw_funds(uint64)void\", method \"withdraw_balance()void\", method \"get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64)\", method \"get_xgov_box(address)(address,uint64,uint64,uint64)\", method \"get_proposer_box(address)(bool,bool,uint64)\", method \"is_proposal(uint64)void\"",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(create()void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(is_proposal(uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(update_xgov_registry()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)"
      ],
      "stack_out": [
        "Method(create()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(update_xgov_registry()void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(is_proposal(uint64)void)"
      ]
    },
    "368": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(create()void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(is_proposal(uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(update_xgov_registry()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)",
        "tmp%2#1"
      ],
      "stack_out": [
        "Method(create()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(update_xgov_registry()void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(is_proposal(uint64)void)",
        "tmp%2#1"
      ]
    },
    "371": {
      "op": "match main_create_route@5 main_pause_registry_route@6 main_pause_proposals_route@7 main_resume_registry_route@8 main_resume_proposals_route@9 main_set_xgov_manager_route@10 main_set_payor_route@11 main_set_xgov_council_route@12 main_set_xgov_subscriber_route@13 main_set_kyc_provider_route@14 main_set_committee_manager_route@15 main_set_xgov_daemon_route@16 main_config_xgov_registry_route@17 main_update_xgov_registry_route@18 main_subscribe_xgov_route@19 main_unsubscribe_xgov_route@20 main_request_subscribe_xgov_route@21 main_approve_subscribe_xgov_route@22 main_reject_subscribe_xgov_route@23 main_set_voting_account_route@24 main_subscribe_proposer_route@25 main_set_proposer_kyc_route@26 main_declare_committee_route@27 main_open_proposal_route@28 main_vote_proposal_route@29 main_pay_grant_proposal_route@30 main_finalize_proposal_route@31 main_drop_proposal_route@32 main_deposit_funds_route@33 main_withdraw_funds_route@34 main_withdraw_balance_route@35 main_get_state_route@36 main_get_xgov_box_route@37 main_get_proposer_box_route@38 main_is_proposal_route@39",
      "stack_out": []
    },
    "443": {
      "block": "main_after_if_else@40",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "444": {
      "op": "return",
      "stack_out": []
    },
    "445": {
      "block": "main_is_proposal_route@39",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "447": {
      "op": "!",
      "defined_out": [
        "tmp%153#0"
      ],
      "stack_out": [
        "tmp%153#0"
      ]
    },
    "448": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "449": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "451": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "452": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "455": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "op": "callsub is_proposal",
      "stack_out": []
    },
    "458": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "459": {
      "op": "return",
      "stack_out": []
    },
    "460": {
      "block": "main_get_proposer_box_route@38",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "462": {
      "op": "!",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "463": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "464": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "466": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "467": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%17#0"
      ]
    },
    "470": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposer_box",
      "op": "callsub get_proposer_box",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "473": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0",
        "0x151f7c75"
      ]
    },
    "474": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%150#0"
      ]
    },
    "475": {
      "op": "concat",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "476": {
      "op": "log",
      "stack_out": []
    },
    "477": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "478": {
      "op": "return",
      "stack_out": []
    },
    "479": {
      "block": "main_get_xgov_box_route@37",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "481": {
      "op": "!",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "482": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "483": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "485": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "486": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%16#0"
      ]
    },
    "489": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_xgov_box",
      "op": "callsub get_xgov_box",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "492": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0",
        "0x151f7c75"
      ]
    },
    "493": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%144#0"
      ]
    },
    "494": {
      "op": "concat",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "495": {
      "op": "log",
      "stack_out": []
    },
    "496": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "497": {
      "op": "return",
      "stack_out": []
    },
    "498": {
      "block": "main_get_state_route@36",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "500": {
      "op": "!",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "501": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "502": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "504": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "505": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "508": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "0x151f7c75"
      ]
    },
    "509": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%138#0"
      ]
    },
    "510": {
      "op": "concat",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "511": {
      "op": "log",
      "stack_out": []
    },
    "512": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "513": {
      "op": "return",
      "stack_out": []
    },
    "514": {
      "block": "main_withdraw_balance_route@35",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "516": {
      "op": "!",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "517": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "518": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "520": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "521": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_balance",
      "op": "callsub withdraw_balance"
    },
    "524": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "525": {
      "op": "return",
      "stack_out": []
    },
    "526": {
      "block": "main_withdraw_funds_route@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "528": {
      "op": "!",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "529": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "530": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "532": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "533": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "536": {
      "op": "btoi",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "537": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "op": "callsub withdraw_funds",
      "stack_out": []
    },
    "540": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "541": {
      "op": "return",
      "stack_out": []
    },
    "542": {
      "block": "main_deposit_funds_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "544": {
      "op": "!",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "545": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "546": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "548": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "549": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "551": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0",
        "1"
      ]
    },
    "552": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "553": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "554": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "556": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "557": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "558": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "559": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "op": "callsub deposit_funds",
      "stack_out": []
    },
    "562": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "563": {
      "op": "return",
      "stack_out": []
    },
    "564": {
      "block": "main_drop_proposal_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "566": {
      "op": "!",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "567": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "568": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "570": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "571": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "574": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.drop_proposal",
      "op": "callsub drop_proposal",
      "stack_out": []
    },
    "577": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "578": {
      "op": "return",
      "stack_out": []
    },
    "579": {
      "block": "main_finalize_proposal_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "581": {
      "op": "!",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "582": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "583": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "585": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "586": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "589": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.finalize_proposal",
      "op": "callsub finalize_proposal",
      "stack_out": []
    },
    "592": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "593": {
      "op": "return",
      "stack_out": []
    },
    "594": {
      "block": "main_pay_grant_proposal_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "596": {
      "op": "!",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "597": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "598": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "600": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "601": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "604": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "op": "callsub pay_grant_proposal",
      "stack_out": []
    },
    "607": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "608": {
      "op": "return",
      "stack_out": []
    },
    "609": {
      "block": "main_vote_proposal_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "611": {
      "op": "!",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "612": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "613": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "615": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "616": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "619": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[32]%15#0"
      ]
    },
    "622": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "625": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "628": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal",
      "op": "callsub vote_proposal",
      "stack_out": []
    },
    "631": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "632": {
      "op": "return",
      "stack_out": []
    },
    "633": {
      "block": "main_open_proposal_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "635": {
      "op": "!",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "636": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "637": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "639": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "640": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "642": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0",
        "1"
      ]
    },
    "643": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "644": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "645": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "647": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "648": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "649": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "650": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "op": "callsub open_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "653": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "654": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "655": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "656": {
      "op": "concat",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "657": {
      "op": "log",
      "stack_out": []
    },
    "658": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "659": {
      "op": "return",
      "stack_out": []
    },
    "660": {
      "block": "main_declare_committee_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "662": {
      "op": "!",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "663": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "664": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "666": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "667": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%14#0"
      ]
    },
    "670": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "673": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "676": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "op": "callsub declare_committee",
      "stack_out": []
    },
    "679": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "680": {
      "op": "return",
      "stack_out": []
    },
    "681": {
      "block": "main_set_proposer_kyc_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "683": {
      "op": "!",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "684": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "685": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "687": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "688": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%13#0"
      ]
    },
    "691": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%13#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "694": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%13#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%13#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "697": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "op": "callsub set_proposer_kyc",
      "stack_out": []
    },
    "700": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "701": {
      "op": "return",
      "stack_out": []
    },
    "702": {
      "block": "main_subscribe_proposer_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "704": {
      "op": "!",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "705": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "706": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "708": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "709": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "711": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0",
        "1"
      ]
    },
    "712": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "713": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "714": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "716": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "717": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "718": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "719": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "op": "callsub subscribe_proposer",
      "stack_out": []
    },
    "722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "723": {
      "op": "return",
      "stack_out": []
    },
    "724": {
      "block": "main_set_voting_account_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "726": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "727": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "728": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "730": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "731": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%11#0"
      ]
    },
    "734": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%11#0",
        "reinterpret_bytes[32]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%11#0",
        "reinterpret_bytes[32]%12#0"
      ]
    },
    "737": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "op": "callsub set_voting_account",
      "stack_out": []
    },
    "740": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "741": {
      "op": "return",
      "stack_out": []
    },
    "742": {
      "block": "main_reject_subscribe_xgov_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "744": {
      "op": "!",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "745": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "746": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "748": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "749": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "752": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov",
      "op": "callsub reject_subscribe_xgov",
      "stack_out": []
    },
    "755": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "756": {
      "op": "return",
      "stack_out": []
    },
    "757": {
      "block": "main_approve_subscribe_xgov_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "759": {
      "op": "!",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "760": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "761": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "763": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "764": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "767": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "op": "callsub approve_subscribe_xgov",
      "stack_out": []
    },
    "770": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "771": {
      "op": "return",
      "stack_out": []
    },
    "772": {
      "block": "main_request_subscribe_xgov_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "774": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "775": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "776": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "778": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "779": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0"
      ]
    },
    "782": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0"
      ]
    },
    "785": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "788": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%72#0"
      ]
    },
    "790": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%72#0",
        "1"
      ]
    },
    "791": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "792": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "793": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "795": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "796": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "797": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "798": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "op": "callsub request_subscribe_xgov",
      "stack_out": []
    },
    "801": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "802": {
      "op": "return",
      "stack_out": []
    },
    "803": {
      "block": "main_unsubscribe_xgov_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "805": {
      "op": "!",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "806": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "807": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "809": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "810": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%8#0"
      ]
    },
    "813": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "op": "callsub unsubscribe_xgov",
      "stack_out": []
    },
    "816": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "817": {
      "op": "return",
      "stack_out": []
    },
    "818": {
      "block": "main_subscribe_xgov_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "820": {
      "op": "!",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "821": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "822": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "824": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "825": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0"
      ]
    },
    "828": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%63#0"
      ]
    },
    "830": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[32]%7#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%63#0",
        "1"
      ]
    },
    "831": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0"
      ]
    },
    "832": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "833": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "835": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "836": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "837": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0"
      ]
    },
    "838": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "op": "callsub subscribe_xgov",
      "stack_out": []
    },
    "841": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "842": {
      "op": "return",
      "stack_out": []
    },
    "843": {
      "block": "main_update_xgov_registry_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "845": {
      "op": "intc_2 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "UpdateApplication"
      ]
    },
    "846": {
      "op": "==",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "847": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "848": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "850": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "851": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "op": "callsub update_xgov_registry"
    },
    "854": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "855": {
      "op": "return",
      "stack_out": []
    },
    "856": {
      "block": "main_config_xgov_registry_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "858": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "859": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "860": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "862": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "863": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[184]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[184]%0#0"
      ]
    },
    "866": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "op": "callsub config_xgov_registry",
      "stack_out": []
    },
    "869": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "870": {
      "op": "return",
      "stack_out": []
    },
    "871": {
      "block": "main_set_xgov_daemon_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "873": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "874": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "875": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "877": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "878": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%6#0"
      ]
    },
    "881": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_daemon",
      "op": "callsub set_xgov_daemon",
      "stack_out": []
    },
    "884": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "885": {
      "op": "return",
      "stack_out": []
    },
    "886": {
      "block": "main_set_committee_manager_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "888": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "889": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "890": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "892": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "893": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "896": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "op": "callsub set_committee_manager",
      "stack_out": []
    },
    "899": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "900": {
      "op": "return",
      "stack_out": []
    },
    "901": {
      "block": "main_set_kyc_provider_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "903": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "904": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "905": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "907": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "908": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "911": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "op": "callsub set_kyc_provider",
      "stack_out": []
    },
    "914": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "915": {
      "op": "return",
      "stack_out": []
    },
    "916": {
      "block": "main_set_xgov_subscriber_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "918": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "919": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "920": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "922": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "923": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "926": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "op": "callsub set_xgov_subscriber",
      "stack_out": []
    },
    "929": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "930": {
      "op": "return",
      "stack_out": []
    },
    "931": {
      "block": "main_set_xgov_council_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "933": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "934": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "935": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "937": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "938": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "941": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_council",
      "op": "callsub set_xgov_council",
      "stack_out": []
    },
    "944": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "945": {
      "op": "return",
      "stack_out": []
    },
    "946": {
      "block": "main_set_payor_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "948": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "949": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "950": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "952": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "953": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "956": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "op": "callsub set_payor",
      "stack_out": []
    },
    "959": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "960": {
      "op": "return",
      "stack_out": []
    },
    "961": {
      "block": "main_set_xgov_manager_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "963": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "964": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "965": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "967": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "968": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "971": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "op": "callsub set_xgov_manager",
      "stack_out": []
    },
    "974": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "975": {
      "op": "return",
      "stack_out": []
    },
    "976": {
      "block": "main_resume_proposals_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "978": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "979": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "980": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "982": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "983": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_proposals",
      "op": "callsub resume_proposals"
    },
    "986": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "987": {
      "op": "return",
      "stack_out": []
    },
    "988": {
      "block": "main_resume_registry_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "990": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "991": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "992": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "994": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "995": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_registry",
      "op": "callsub resume_registry"
    },
    "998": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "999": {
      "op": "return",
      "stack_out": []
    },
    "1000": {
      "block": "main_pause_proposals_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1002": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1003": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1004": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1006": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1007": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_proposals",
      "op": "callsub pause_proposals"
    },
    "1010": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1011": {
      "op": "return",
      "stack_out": []
    },
    "1012": {
      "block": "main_pause_registry_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "1014": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1015": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1016": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1018": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1019": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_registry",
      "op": "callsub pause_registry"
    },
    "1022": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1023": {
      "op": "return",
      "stack_out": []
    },
    "1024": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "1026": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "1027": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1028": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "1030": {
      "op": "!",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "1031": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1032": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "op": "callsub create"
    },
    "1035": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1036": {
      "op": "return",
      "stack_out": []
    },
    "1037": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "params": {},
      "block": "is_xgov_manager",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1039": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1040": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "1042": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1043": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1044": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1045": {
      "retsub": true,
      "op": "retsub"
    },
    "1046": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "params": {},
      "block": "is_xgov_subscriber",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1048": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1049": {
      "op": "bytec 10 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "1051": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1052": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1053": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1054": {
      "retsub": true,
      "op": "retsub"
    },
    "1055": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "_is_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1058": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1060": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "1062": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "1063": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "1065": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1066": {
      "retsub": true,
      "op": "retsub"
    },
    "1067": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "get_proposal_proposer",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1070": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1072": {
      "op": "pushbytes 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)",
        "0x70726f706f736572"
      ]
    },
    "1082": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ]
    },
    "1083": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "1084": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "1085": {
      "op": "len",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%0#0"
      ]
    },
    "1086": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "proposer_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%0#0",
        "32"
      ]
    },
    "1088": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%1#0"
      ]
    },
    "1089": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "1090": {
      "retsub": true,
      "op": "retsub"
    },
    "1091": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "params": {
        "payment#0": "uint64"
      },
      "block": "valid_xgov_payment",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1094": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1096": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1098": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1100": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1101": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "1104": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1106": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1108": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "1109": {
      "op": "bytec 15 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "1111": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1112": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "1113": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1114": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "1117": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1118": {
      "retsub": true,
      "op": "retsub"
    },
    "1119": {
      "block": "valid_xgov_payment_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1120": {
      "retsub": true,
      "op": "retsub"
    },
    "1121": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "params": {
        "address#0": "bytes"
      },
      "block": "valid_kyc",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1124": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "1125": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "address#0 (copy)"
      ]
    },
    "1127": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1128": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1129": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1130": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1131": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1132": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ]
    },
    "1133": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1136": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1138": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1139": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1140": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1141": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1144": {
      "op": "frame_dig 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1146": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1147": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1148": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "1149": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1150": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1152": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "1153": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1156": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "1157": {
      "block": "valid_kyc_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ],
      "op": "swap",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "1158": {
      "retsub": true,
      "op": "retsub"
    },
    "1159": {
      "block": "valid_kyc_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "1160": {
      "op": "b valid_kyc_bool_merge@4"
    },
    "1163": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "decrement_pending_proposals",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1166": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1167": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1169": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1170": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1171": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1172": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1173": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "materialized_values%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1175": {
      "op": "swap",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "materialized_values%0#0"
      ]
    },
    "1176": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1177": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1179": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "1182": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "0x70"
      ]
    },
    "1183": {
      "op": "swap",
      "stack_out": [
        "0x70",
        "proposer#0"
      ]
    },
    "1184": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1185": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1186": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1187": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1188": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1189": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0",
        "0"
      ]
    },
    "1190": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "1191": {
      "op": "box_put",
      "stack_out": []
    },
    "1192": {
      "retsub": true,
      "op": "retsub"
    },
    "1193": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "params": {
        "voting_address#0": "bytes"
      },
      "block": "make_xgov_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1196": {
      "op": "global Round",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1198": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1199": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ]
    },
    "1201": {
      "op": "bytec 47 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "voting_address#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "1203": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1204": {
      "op": "bytec 47 // 0x0000000000000000",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "1206": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1207": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1208": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1209": {
      "retsub": true,
      "op": "retsub"
    },
    "1210": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "1212": {
      "op": "txn Sender",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ]
    },
    "1214": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1215": {
      "op": "bytec 50 // TMPL_entropy",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1217": {
      "op": "dup",
      "defined_out": [
        "TMPL_entropy",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "TMPL_entropy"
      ]
    },
    "1218": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1219": {
      "op": "assert",
      "stack_out": []
    },
    "1220": {
      "retsub": true,
      "op": "retsub"
    },
    "1221": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_registry",
      "params": {},
      "block": "pause_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1224": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1225": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1226": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ]
    },
    "1227": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1228": {
      "retsub": true,
      "op": "retsub"
    },
    "1229": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_proposals",
      "params": {},
      "block": "pause_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1232": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1233": {
      "op": "bytec 9 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "1235": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ]
    },
    "1236": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1237": {
      "retsub": true,
      "op": "retsub"
    },
    "1238": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_registry",
      "params": {},
      "block": "resume_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1241": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1242": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1243": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "1244": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1245": {
      "retsub": true,
      "op": "retsub"
    },
    "1246": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_proposals",
      "params": {},
      "block": "resume_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1249": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1250": {
      "op": "bytec 9 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "1252": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "1253": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1254": {
      "retsub": true,
      "op": "retsub"
    },
    "1255": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_xgov_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1258": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1261": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1262": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "1264": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1266": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1267": {
      "retsub": true,
      "op": "retsub"
    },
    "1268": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "params": {
        "payor#0": "bytes"
      },
      "block": "set_payor",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1271": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1274": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1275": {
      "op": "bytec 11 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "1277": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ]
    },
    "1279": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1280": {
      "retsub": true,
      "op": "retsub"
    },
    "1281": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_council",
      "params": {
        "council#0": "bytes"
      },
      "block": "set_xgov_council",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1284": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1287": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1288": {
      "op": "bytec 20 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c"
      ]
    },
    "1290": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "council#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "council#0 (copy)"
      ]
    },
    "1292": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1293": {
      "retsub": true,
      "op": "retsub"
    },
    "1294": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "params": {
        "subscriber#0": "bytes"
      },
      "block": "set_xgov_subscriber",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1297": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1300": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1301": {
      "op": "bytec 10 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "1303": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ]
    },
    "1305": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1306": {
      "retsub": true,
      "op": "retsub"
    },
    "1307": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "params": {
        "provider#0": "bytes"
      },
      "block": "set_kyc_provider",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1310": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1313": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1314": {
      "op": "bytec 12 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "1316": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ]
    },
    "1318": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1319": {
      "retsub": true,
      "op": "retsub"
    },
    "1320": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_committee_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1323": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1326": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1327": {
      "op": "bytec 13 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "1329": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1331": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1332": {
      "retsub": true,
      "op": "retsub"
    },
    "1333": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_daemon",
      "params": {
        "xgov_daemon#0": "bytes"
      },
      "block": "set_xgov_daemon",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1336": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1339": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1340": {
      "op": "bytec 14 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e"
      ]
    },
    "1342": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0 (copy)"
      ]
    },
    "1344": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1345": {
      "retsub": true,
      "op": "retsub"
    },
    "1346": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "params": {
        "config#0": "bytes"
      },
      "block": "config_xgov_registry",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1349": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1351": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1354": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1355": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "0"
      ]
    },
    "1356": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1358": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1359": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "awst_tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "1360": {
      "op": "!",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1361": {
      "error": "Cannot perform operation with pending proposals",
      "op": "assert // Cannot perform operation with pending proposals",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1362": {
      "op": "frame_dig -1",
      "defined_out": [
        "config#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "config#0 (copy)"
      ]
    },
    "1364": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "config#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "config#0 (copy)",
        "16"
      ]
    },
    "1365": {
      "op": "extract_uint64",
      "defined_out": [
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0"
      ]
    },
    "1366": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "config#0 (copy)"
      ]
    },
    "1368": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "config#0 (copy)",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "config#0 (copy)",
        "24"
      ]
    },
    "1370": {
      "op": "extract_uint64",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1371": {
      "op": "dup2",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding_bps#0 (copy)",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "daemon_ops_funding_bps#0 (copy)"
      ]
    },
    "1372": {
      "op": "*",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#3"
      ]
    },
    "1373": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#3",
        "10000"
      ]
    },
    "1376": {
      "op": "/",
      "defined_out": [
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0"
      ]
    },
    "1377": {
      "op": "pushint 16835300 // 16835300",
      "defined_out": [
        "16835300",
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0",
        "16835300"
      ]
    },
    "1382": {
      "op": "+",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "to_substract#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "1383": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "1385": {
      "op": "dig 1",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0",
        "to_substract#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0 (copy)"
      ]
    },
    "1387": {
      "op": ">",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "tmp%0#0"
      ]
    },
    "1388": {
      "error": "Invalid open proposal fee",
      "op": "assert // Invalid open proposal fee",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "1389": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "1391": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0"
      ]
    },
    "1392": {
      "op": "-",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0"
      ]
    },
    "1393": {
      "op": "pushint 19300 // 19300",
      "defined_out": [
        "19300",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "19300"
      ]
    },
    "1397": {
      "op": "/",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0"
      ]
    },
    "1398": {
      "op": "bytec 44 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "1400": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "materialized_values%0#0"
      ]
    },
    "1401": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1402": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "config#0 (copy)"
      ]
    },
    "1404": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "config#0 (copy)",
        "0"
      ]
    },
    "1405": {
      "op": "extract_uint64",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0"
      ]
    },
    "1406": {
      "op": "bytec 15 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#0",
        "0x78676f765f666565"
      ]
    },
    "1408": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565",
        "materialized_values%0#0"
      ]
    },
    "1409": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1410": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "config#0 (copy)"
      ]
    },
    "1412": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "config#0 (copy)",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "config#0 (copy)",
        "8"
      ]
    },
    "1414": {
      "op": "extract_uint64",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "materialized_values%1#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%1#0"
      ]
    },
    "1415": {
      "op": "bytec 16 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "daemon_ops_funding_bps#0",
        "materialized_values%1#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%1#0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1417": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565",
        "materialized_values%1#0"
      ]
    },
    "1418": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1419": {
      "op": "bytec 17 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "1421": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%1#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "open_proposal_fee#0"
      ]
    },
    "1423": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1424": {
      "op": "bytec 21 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "daemon_ops_funding_bps#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "daemon_ops_funding_bps#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "1426": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1427": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1428": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "config#0 (copy)"
      ]
    },
    "1430": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "config#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "config#0 (copy)",
        "32"
      ]
    },
    "1432": {
      "op": "extract_uint64",
      "defined_out": [
        "materialized_values%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "materialized_values%4#0"
      ]
    },
    "1433": {
      "op": "bytec 22 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "materialized_values%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "materialized_values%4#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1435": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "materialized_values%4#0"
      ]
    },
    "1436": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1437": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "config#0 (copy)"
      ]
    },
    "1439": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "config#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "config#0 (copy)",
        "40"
      ]
    },
    "1441": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "1442": {
      "op": "dup",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "1443": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "config#0 (copy)"
      ]
    },
    "1445": {
      "error": "Index access is out of bounds",
      "op": "extract 48 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1448": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "1449": {
      "op": "cover 2",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1451": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%13#0",
        "0"
      ]
    },
    "1452": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%12#0",
        "awst_tmp%0#0"
      ]
    },
    "1453": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%12#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1454": {
      "op": "cover 2",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "awst_tmp%0#0"
      ]
    },
    "1456": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%15#0"
      ]
    },
    "1457": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1460": {
      "op": "frame_dig 2",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "1462": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "8"
      ]
    },
    "1464": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "1465": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "1466": {
      "op": "frame_bury 0",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "1468": {
      "op": "frame_dig 3",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "1470": {
      "op": ">",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%18#0"
      ]
    },
    "1471": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1474": {
      "op": "frame_dig 2",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "1476": {
      "op": "intc_3 // 16",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "16"
      ]
    },
    "1477": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%21#0"
      ]
    },
    "1478": {
      "op": "frame_dig 0",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%21#0",
        "awst_tmp%1#0"
      ]
    },
    "1480": {
      "op": ">",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%22#0"
      ]
    },
    "1481": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1484": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "1485": {
      "block": "config_xgov_registry_bool_merge@5",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1486": {
      "op": "bytec 23 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "1488": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%12#0"
      ]
    },
    "1490": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1491": {
      "op": "bytec 24 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1493": {
      "op": "frame_dig 3",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0"
      ]
    },
    "1495": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1496": {
      "op": "frame_dig 2",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "1498": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1499": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "tmp%13#0 (copy)",
        "8"
      ]
    },
    "1501": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%7#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "materialized_values%7#0"
      ]
    },
    "1502": {
      "op": "bytec 25 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%7#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "materialized_values%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1504": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "materialized_values%7#0"
      ]
    },
    "1505": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "1506": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%13#0",
        "16"
      ]
    },
    "1507": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%8#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%8#0"
      ]
    },
    "1508": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%8#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%8#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1510": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "materialized_values%8#0"
      ]
    },
    "1511": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1512": {
      "op": "frame_dig -1",
      "defined_out": [
        "awst_tmp%0#0",
        "config#0 (copy)",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "config#0 (copy)"
      ]
    },
    "1514": {
      "error": "Index access is out of bounds",
      "op": "extract 72 32 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0"
      ]
    },
    "1517": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "1518": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "0"
      ]
    },
    "1519": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%9#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "materialized_values%9#0"
      ]
    },
    "1520": {
      "op": "bytec 27 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%9#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "materialized_values%9#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1522": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "materialized_values%9#0"
      ]
    },
    "1523": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0"
      ]
    },
    "1524": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "1525": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "8"
      ]
    },
    "1527": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "materialized_values%10#0"
      ]
    },
    "1528": {
      "op": "bytec 28 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "materialized_values%10#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1530": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "materialized_values%10#0"
      ]
    },
    "1531": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0"
      ]
    },
    "1532": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "1533": {
      "op": "intc_3 // 16",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "16"
      ]
    },
    "1534": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "materialized_values%11#0"
      ]
    },
    "1535": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "materialized_values%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1537": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "materialized_values%11#0"
      ]
    },
    "1538": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0"
      ]
    },
    "1539": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%30#0",
        "24"
      ]
    },
    "1541": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%12#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%12#0"
      ]
    },
    "1542": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "awst_tmp%0#0",
        "materialized_values%12#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%12#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "1544": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "materialized_values%12#0"
      ]
    },
    "1545": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1546": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "config#0 (copy)"
      ]
    },
    "1548": {
      "error": "Index access is out of bounds",
      "op": "extract 104 32 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0"
      ]
    },
    "1551": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0",
        "tmp%38#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "tmp%38#0 (copy)"
      ]
    },
    "1552": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "tmp%38#0 (copy)",
        "0"
      ]
    },
    "1553": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%13#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "materialized_values%13#0"
      ]
    },
    "1554": {
      "op": "bytec 31 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%13#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "materialized_values%13#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "1556": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "materialized_values%13#0"
      ]
    },
    "1557": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0"
      ]
    },
    "1558": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "tmp%38#0 (copy)"
      ]
    },
    "1559": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "tmp%38#0 (copy)",
        "8"
      ]
    },
    "1561": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%14#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "materialized_values%14#0"
      ]
    },
    "1562": {
      "op": "bytec 32 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%14#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "materialized_values%14#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "1564": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "materialized_values%14#0"
      ]
    },
    "1565": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0"
      ]
    },
    "1566": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "tmp%38#0 (copy)"
      ]
    },
    "1567": {
      "op": "intc_3 // 16",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "tmp%38#0 (copy)",
        "16"
      ]
    },
    "1568": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%15#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "materialized_values%15#0"
      ]
    },
    "1569": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%15#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "materialized_values%15#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "1571": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "materialized_values%15#0"
      ]
    },
    "1572": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0"
      ]
    },
    "1573": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%38#0",
        "24"
      ]
    },
    "1575": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%16#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%16#0"
      ]
    },
    "1576": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "awst_tmp%0#0",
        "materialized_values%16#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%16#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "1578": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "materialized_values%16#0"
      ]
    },
    "1579": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1580": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "config#0 (copy)"
      ]
    },
    "1582": {
      "error": "Index access is out of bounds",
      "op": "extract 136 24 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0"
      ]
    },
    "1585": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "1586": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "0"
      ]
    },
    "1587": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%17#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "materialized_values%17#0"
      ]
    },
    "1588": {
      "op": "bytec 35 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%17#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "materialized_values%17#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "1590": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "0x71756f72756d5f736d616c6c",
        "materialized_values%17#0"
      ]
    },
    "1591": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0"
      ]
    },
    "1592": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "1593": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "8"
      ]
    },
    "1595": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%18#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "materialized_values%18#0"
      ]
    },
    "1596": {
      "op": "bytec 36 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%18#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "materialized_values%18#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "1598": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "0x71756f72756d5f6d656469756d",
        "materialized_values%18#0"
      ]
    },
    "1599": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0"
      ]
    },
    "1600": {
      "op": "intc_3 // 16",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%46#0",
        "16"
      ]
    },
    "1601": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%19#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%19#0"
      ]
    },
    "1602": {
      "op": "bytec 37 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%19#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%19#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "1604": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x71756f72756d5f6c61726765",
        "materialized_values%19#0"
      ]
    },
    "1605": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1606": {
      "op": "frame_dig -1",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "config#0 (copy)"
      ]
    },
    "1608": {
      "error": "Index access is out of bounds",
      "op": "extract 160 24 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0"
      ]
    },
    "1611": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ]
    },
    "1612": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "tmp%52#0 (copy)",
        "0"
      ]
    },
    "1613": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%20#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "materialized_values%20#0"
      ]
    },
    "1614": {
      "op": "bytec 38 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%20#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "materialized_values%20#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "1616": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "materialized_values%20#0"
      ]
    },
    "1617": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0"
      ]
    },
    "1618": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ]
    },
    "1619": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "tmp%52#0 (copy)",
        "8"
      ]
    },
    "1621": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%21#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "materialized_values%21#0"
      ]
    },
    "1622": {
      "op": "bytec 39 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%21#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "materialized_values%21#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "1624": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "materialized_values%21#0"
      ]
    },
    "1625": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0"
      ]
    },
    "1626": {
      "op": "intc_3 // 16",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "tmp%52#0",
        "16"
      ]
    },
    "1627": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%22#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%22#0"
      ]
    },
    "1628": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%22#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "materialized_values%22#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "1630": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "materialized_values%22#0"
      ]
    },
    "1631": {
      "op": "app_global_put",
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1632": {
      "retsub": true,
      "op": "retsub"
    },
    "1633": {
      "block": "config_xgov_registry_bool_false@4",
      "stack_in": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0",
        "awst_tmp%0#0",
        "and_result%0#0"
      ]
    },
    "1634": {
      "op": "b config_xgov_registry_bool_merge@5"
    },
    "1637": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "params": {},
      "block": "update_xgov_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1640": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1641": {
      "retsub": true,
      "op": "retsub"
    },
    "1642": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "params": {
        "voting_address#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1645": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1646": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1647": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1648": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1649": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1650": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1651": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1653": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78",
        "materialized_values%0#0"
      ]
    },
    "1655": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1656": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1657": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1659": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1660": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": []
    },
    "1661": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1663": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1666": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "1667": {
      "op": "frame_dig -2",
      "defined_out": [
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "voting_address#0 (copy)"
      ]
    },
    "1669": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0"
      ]
    },
    "1672": {
      "op": "bytec 4 // 0x78",
      "stack_out": [
        "materialized_values%1#0",
        "0x78"
      ]
    },
    "1674": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%1#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "materialized_values%1#0",
        "0x78",
        "materialized_values%2#0"
      ]
    },
    "1676": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1677": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ]
    },
    "1678": {
      "op": "box_put",
      "stack_out": []
    },
    "1679": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1680": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1682": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1683": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1684": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1685": {
      "op": "+",
      "defined_out": [
        "materialized_values%3#0"
      ],
      "stack_out": [
        "materialized_values%3#0"
      ]
    },
    "1686": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "materialized_values%3#0",
        "0x78676f7673"
      ]
    },
    "1688": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "materialized_values%3#0"
      ]
    },
    "1689": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1690": {
      "retsub": true,
      "op": "retsub"
    },
    "1691": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "params": {
        "xgov_address#0": "bytes"
      },
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1694": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1695": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1696": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1697": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1698": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1699": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1700": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1702": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1704": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1705": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1707": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1708": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1710": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1711": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1712": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1713": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1716": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1718": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "voting_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1720": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "tmp%2#0"
      ]
    },
    "1721": {
      "op": "bnz unsubscribe_xgov_bool_true@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1724": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "voting_address#0"
      ]
    },
    "1726": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "voting_address#0",
        "tmp%3#0"
      ]
    },
    "1728": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "tmp%4#0"
      ]
    },
    "1729": {
      "op": "bz unsubscribe_xgov_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1732": {
      "block": "unsubscribe_xgov_bool_true@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "1733": {
      "block": "unsubscribe_xgov_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1734": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1736": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "{box_del}"
      ]
    },
    "1737": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1738": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "0"
      ]
    },
    "1739": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "0",
        "0x78676f7673"
      ]
    },
    "1741": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1742": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "maybe_value%2#0"
      ]
    },
    "1743": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "1744": {
      "op": "-",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "materialized_values%0#0"
      ]
    },
    "1745": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "materialized_values%0#0",
        "0x78676f7673"
      ]
    },
    "1747": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "0x78676f7673",
        "materialized_values%0#0"
      ]
    },
    "1748": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1749": {
      "retsub": true,
      "op": "retsub"
    },
    "1750": {
      "block": "unsubscribe_xgov_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "1751": {
      "op": "b unsubscribe_xgov_bool_merge@4"
    },
    "1754": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "params": {
        "xgov_address#0": "bytes",
        "owner_address#0": "bytes",
        "relation_type#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "request_subscribe_xgov",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "1757": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1758": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1759": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1760": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1761": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1762": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1763": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1765": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1767": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1768": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1769": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1771": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1772": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": []
    },
    "1773": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1775": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1778": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "1779": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1780": {
      "op": "bytec 43 // 0x726571756573745f6964",
      "defined_out": [
        "0",
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0",
        "0x726571756573745f6964"
      ]
    },
    "1782": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "maybe_exists%2#0"
      ]
    },
    "1783": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "rid#0"
      ]
    },
    "1784": {
      "op": "frame_dig -4",
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1786": {
      "op": "frame_dig -3",
      "defined_out": [
        "owner_address#0 (copy)",
        "rid#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)",
        "owner_address#0 (copy)"
      ]
    },
    "1788": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1789": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)"
      ]
    },
    "1791": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1792": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0",
        "rid#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "rid#0 (copy)"
      ]
    },
    "1794": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ]
    },
    "1795": {
      "op": "bytec 45 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1797": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1798": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1799": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1800": {
      "op": "box_put",
      "stack_out": [
        "rid#0"
      ]
    },
    "1801": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "1"
      ]
    },
    "1802": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1803": {
      "op": "bytec 43 // 0x726571756573745f6964",
      "stack_out": [
        "materialized_values%0#0",
        "0x726571756573745f6964"
      ]
    },
    "1805": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f6964",
        "materialized_values%0#0"
      ]
    },
    "1806": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1807": {
      "retsub": true,
      "op": "retsub"
    },
    "1808": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "approve_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1811": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1814": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1815": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "1817": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1818": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1819": {
      "op": "bytec 45 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1821": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1822": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1823": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1824": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "maybe_exists%0#0"
      ]
    },
    "1825": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0"
      ]
    },
    "1826": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "1827": {
      "error": "Index access is out of bounds",
      "op": "extract 32 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ]
    },
    "1830": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "materialized_values%1#0"
      ]
    },
    "1833": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "request#0"
      ]
    },
    "1834": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1837": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0",
        "0x78"
      ]
    },
    "1839": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "0x78",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1840": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1841": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ]
    },
    "1842": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1843": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1844": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "0x78676f7673"
      ]
    },
    "1846": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1847": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1848": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "1849": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%2#0"
      ]
    },
    "1850": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%2#0",
        "0x78676f7673"
      ]
    },
    "1852": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x78676f7673",
        "materialized_values%2#0"
      ]
    },
    "1853": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1854": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1855": {
      "op": "pop",
      "stack_out": []
    },
    "1856": {
      "retsub": true,
      "op": "retsub"
    },
    "1857": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "reject_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1860": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1863": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1864": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "1866": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1867": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1868": {
      "op": "bytec 45 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1870": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1871": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1872": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1873": {
      "op": "pop",
      "stack_out": []
    },
    "1874": {
      "retsub": true,
      "op": "retsub"
    },
    "1875": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "params": {
        "xgov_address#0": "bytes",
        "voting_address#0": "bytes"
      },
      "block": "set_voting_account",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1878": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1879": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1880": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1881": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1882": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1883": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1884": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1886": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1888": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1889": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1891": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "1892": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "1894": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1895": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "maybe_exists%2#0"
      ]
    },
    "1896": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "1897": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%1#0"
      ]
    },
    "1899": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "xgov_box#0"
      ]
    },
    "1900": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1903": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1904": {
      "op": "bnz set_voting_account_bool_true@2",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1907": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "1909": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1911": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "1912": {
      "op": "bz set_voting_account_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1915": {
      "block": "set_voting_account_bool_true@2",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "1916": {
      "block": "set_voting_account_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1917": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1919": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1920": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1921": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_value%2#0"
      ]
    },
    "1922": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "voting_address#0 (copy)"
      ]
    },
    "1924": {
      "op": "replace2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "1926": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1927": {
      "retsub": true,
      "op": "retsub"
    },
    "1928": {
      "block": "set_voting_account_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "1929": {
      "op": "b set_voting_account_bool_merge@4"
    },
    "1932": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "params": {
        "payment#0": "uint64"
      },
      "block": "subscribe_proposer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1935": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1936": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1937": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1938": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1939": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1940": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1941": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "1942": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "1944": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1945": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1946": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1948": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1949": {
      "error": "Already a proposer",
      "op": "assert // Already a proposer",
      "stack_out": []
    },
    "1950": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1952": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1954": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1956": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1957": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "1958": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1960": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1962": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1963": {
      "op": "bytec 16 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1965": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1966": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "1967": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1968": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "1969": {
      "op": "bytec_1 // 0x70",
      "stack_out": [
        "0x70"
      ]
    },
    "1970": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%2#0"
      ]
    },
    "1972": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1973": {
      "op": "pushbytes 0x000000000000000000",
      "defined_out": [
        "0x000000000000000000",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "0x000000000000000000"
      ]
    },
    "1984": {
      "op": "box_put",
      "stack_out": []
    },
    "1985": {
      "retsub": true,
      "op": "retsub"
    },
    "1986": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "params": {
        "proposer#0": "bytes",
        "kyc_status#0": "bytes",
        "kyc_expiring#0": "bytes"
      },
      "block": "set_proposer_kyc",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1989": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1991": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1992": {
      "op": "bytec 12 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "1994": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1995": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1996": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1997": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1998": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "1999": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x70",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2001": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2002": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2003": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2004": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2006": {
      "error": "Proposer does not exist",
      "op": "assert // Proposer does not exist",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2007": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2008": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2009": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "2010": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2011": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ]
    },
    "2012": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2014": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2015": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2017": {
      "op": "setbit",
      "defined_out": [
        "active_proposal#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0"
      ]
    },
    "2018": {
      "op": "frame_dig -2",
      "defined_out": [
        "active_proposal#0",
        "box_prefixed_key%0#0",
        "kyc_status#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0 (copy)"
      ]
    },
    "2020": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0 (copy)",
        "0"
      ]
    },
    "2021": {
      "op": "getbit",
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "is_true%0#0"
      ]
    },
    "2022": {
      "op": "intc_1 // 1"
    },
    "2023": {
      "op": "swap",
      "defined_out": [
        "1",
        "active_proposal#0",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "1",
        "is_true%0#0"
      ]
    },
    "2024": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2025": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)"
      ]
    },
    "2027": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2028": {
      "op": "box_put",
      "stack_out": []
    },
    "2029": {
      "retsub": true,
      "op": "retsub"
    },
    "2030": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "params": {
        "committee_id#0": "bytes",
        "size#0": "bytes",
        "votes#0": "bytes"
      },
      "block": "declare_committee",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2033": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2035": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "2036": {
      "op": "bytec 13 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "2038": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2039": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "tmp%0#1",
        "maybe_value%0#1"
      ]
    },
    "2040": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "2041": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2042": {
      "op": "frame_dig -2",
      "defined_out": [
        "size#0 (copy)"
      ],
      "stack_out": [
        "size#0 (copy)"
      ]
    },
    "2044": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2045": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "2046": {
      "op": "bytec 44 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "2048": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2049": {
      "error": "check self.max_committee_size exists",
      "op": "assert // check self.max_committee_size exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2050": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2052": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2053": {
      "error": "Committee size is too large",
      "op": "assert // Committee size is too large",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2054": {
      "op": "bytec 48 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "2056": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)"
      ]
    },
    "2058": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2059": {
      "op": "bytec 41 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2061": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#0"
      ]
    },
    "2062": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2063": {
      "op": "frame_dig -1",
      "defined_out": [
        "votes#0 (copy)"
      ],
      "stack_out": [
        "votes#0 (copy)"
      ]
    },
    "2065": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0"
      ]
    },
    "2066": {
      "op": "bytec 42 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2068": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "materialized_values%1#0"
      ]
    },
    "2069": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2070": {
      "retsub": true,
      "op": "retsub"
    },
    "2071": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "params": {
        "payment#0": "uint64"
      },
      "block": "open_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2074": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2075": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2076": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2077": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2078": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2079": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "2080": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2081": {
      "op": "bytec 9 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "2083": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2084": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2085": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2086": {
      "error": "Creation of proposals is paused",
      "op": "assert // Creation of proposals is paused",
      "stack_out": []
    },
    "2087": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "2088": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "2090": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2091": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2092": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%2#0"
      ]
    },
    "2094": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2095": {
      "op": "bytec_1 // 0x70",
      "stack_out": [
        "0x70"
      ]
    },
    "2096": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%1#0"
      ]
    },
    "2098": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "2099": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "2100": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "2101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "0"
      ]
    },
    "2102": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0"
      ]
    },
    "2103": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0",
        "0x00"
      ]
    },
    "2105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2106": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2108": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "2109": {
      "op": "bytec 8 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "2111": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2112": {
      "error": "Proposer already has an active proposal",
      "op": "assert // Proposer already has an active proposal",
      "stack_out": []
    },
    "2113": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2115": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2118": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": []
    },
    "2119": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2121": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2123": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "3"
      ]
    },
    "2125": {
      "op": "*",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "2126": {
      "op": ">=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "2127": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "2128": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2130": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2132": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "2134": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2135": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2136": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2138": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "2140": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "2141": {
      "op": "bytec 17 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "2143": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%4#0"
      ]
    },
    "2144": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "2145": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "tmp%12#0"
      ]
    },
    "2146": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "tmp%12#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "2148": {
      "op": "==",
      "defined_out": [
        "maybe_value%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "tmp%13#0"
      ]
    },
    "2149": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "2150": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "tmp%14#0"
      ]
    },
    "2152": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "maybe_value%3#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "check%0#0"
      ]
    },
    "2154": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0"
      ]
    },
    "2155": {
      "op": "itxn_begin"
    },
    "2156": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "2158": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0",
        "20"
      ]
    },
    "2160": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "2162": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0",
        "3"
      ]
    },
    "2164": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "2166": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0",
        "1"
      ]
    },
    "2167": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "2169": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0",
        "CoEBQw=="
      ]
    },
    "2175": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "2177": {
      "op": "pushbytes base64(CiAFAAEKFJBOJh8CAAAGc3RhdHVzAAlmaW5hbGl6ZWQIcHJvcG9zZXIPcmVnaXN0cnlfYXBwX2lkEGZ1bmRpbmdfY2F0ZWdvcnkBTRFjb21taXR0ZWVfbWVtYmVycwx2b3RlcnNfY291bnQPY29tbWl0dGVlX3ZvdGVzDXZvdGVkX21lbWJlcnMJYXBwcm92YWxzCnJlamVjdGlvbnMOYXNzaWduZWRfdm90ZXMEFR98dQ1sb2NrZWRfYW1vdW50BW51bGxzAQAOb3Blbl90aW1lc3RhbXAWdm90ZV9vcGVuaW5nX3RpbWVzdGFtcAxjb21taXR0ZWVfaWQoACZFUlI6V3JvbmcgUHJvcG9zYWwgU3RhdHVzIG9yIGZpbmFsaXplZAV0aXRsZRRzdWJtaXNzaW9uX3RpbWVzdGFtcAVmb2N1cwxmdW5kaW5nX3R5cGUQcmVxdWVzdGVkX2Ftb3VudBFtZXRhZGF0YV91cGxvYWRlZAFWC3hnb3ZfZGFlbW9uMRhAAG4xNYEDEkQxNCUSRDE3FEQxNhREJwQyA2cnBSJnJxcqZycTImcnGCJnJxQiZykiZysiZycGImcnGSJnJxoiZycbImcnECJnJxUqZycIImcnCiJnJwsiZycMImcnDSJnJxEiZycJImcnDiJnJxwiZzEbQQBwgg8EIWseBwTtrrnKBHFDmU8Ec3EyGgQ05hPKBA2asNcEGEGg0gRzTb7MBCEtnwcEil5MgAQqwZsFBIAgabQEJDeNPASoxvgKBNvYPdk2GgCODwDyANAAvgCtAKEAkgB4AGwAWwBKADsAKgAcAAsAAiJDMRkURDEYRCNDMRkURDEYRIgLkCcPTFCwI0MxGYEFEkQxGESIC18jQzEZFEQxGESICpgnD0xQsCNDMRkURDEYRDYaAYgJxSNDMRkURDEYRIgJgycPTFCwI0MxGRREMRhENhoBIlOICS0jQzEZFEQxGESIB8MjQzEZFEQxGEQ2GgE2GgI2GgOIBlUnD0xQsCNDMRkURDEYRDYaAYgFiiNDMRkURDEYRIgEhyNDMRkURDEYRIgEPCcPTFCwI0MxGRREMRhENhoBNhoCiAPiI0MxGRREMRhEMRYjCUk4ECMSRDYaATYaAjYaAzYaBIgCeCNDMRkURDEYFEQ2GgGIAZ4nD0xQsCNDigACIioyByInFGVECSInBmVMSU8CRCQSQQA4gBV2b3RpbmdfZHVyYXRpb25fc21hbGyIAKyMAIwBiwAoE0EACCKLAIwBjACJiwKLAQ4ojAGMAImLAyUSQQAigBZ2b3RpbmdfZHVyYXRpb25fbWVkaXVtiABsjACMAUL/vYAVdm90aW5nX2R1cmF0aW9uX2xhcmdliABLjACMAUL/nIgAmUQiKWVEJBJBAAoiK2VEQAADI0SJIkL/+ooBAYAXcHJvcG9zYWxfY29tbWl0bWVudF9icHOIAAooEkSL/wshBAqJigECIicFZUSL/2UoTEAAGIAUABJFUlI6TWlzc2luZyBDb25maWeMAYsAiwFPA08DiYoBASInBWVEi/9lRImAD3BhdXNlZF9yZWdpc3RyeYj/rigSRBREiTEAIicEZUQSiTEAJx6I/8lJFYEgEkQSiTINIicFZUQSiYoCALGL/7IIi/6yByOyECKyAbOJigEAIicQZUSL/0yI/94nECJniYoBAIv/OBgyCBJEi/85GgA2GgASRImKAQEiKkkyDUQnBIv/ZycFMg1nJxWI/2NJKhJBAB2AGAAWRVJSOkVtcHR5IENvbW1pdHRlZSBJRIwAiScIiP8KSU4CjACMASgTQQAFiwBC/+eLASIOQQAigB0AG0VSUjpXcm9uZyBDb21taXR0ZWUgTWVtYmVyc0L/vicKiP7LSU4CjACMAigTQQAFiwBC/6iLAiIOQQAggBsAGUVSUjpXcm9uZyBDb21taXR0ZWUgVm90ZXNC/4EnFYsDZycIiwFnJwqLAmcoQv9uigUAKkcCiP61iP7MRCIpZURAATAiK2VEQAEpI0SL/FcCAIz8i/0XSYwAi/4XjAKL/BWBew5Ei/wqE0QkEkAAB4sAJRJBAPkjRIAUbWluX3JlcXVlc3RlZF9hbW91bnSI/h4oEkSAGm1heF9yZXF1ZXN0ZWRfYW1vdW50X2xhcmdliP38KBJEiwJJTwMPRElPAg5ESYj9wIv7OAAiJwRlRBJEi/s4BzIKEkSL+zgIEkQnF4v8Z4AabWF4X3JlcXVlc3RlZF9hbW91bnRfc21hbGyI/awoEkSAG21heF9yZXF1ZXN0ZWRfYW1vdW50X21lZGl1bYj9iUyMASgSRA5BACgnBiRnJxqLAGcnG4sCSU4CZ4v/FycZTGeI/TsnEExnJxMyB2cpJGeJiwKLAQ5BAAcnBiVnQv/NJwaBIWdC/8UiQv8EIkL+1IoCAIj9cIj864v+IllJRCccI2eL/ycSE0EADicHvEiL/lcCACcHTL+JJwe9RCcHvUSLAAgnB0zTi/5XAgAnB04Cu4mKAAEiiP1eRCIpZUQkE0AAByIrZURBACEnFowAiwAoE0EABIsATIkiJwRlRIj9UycHvEgrI2coTIkojABC/92KAAAiiPztiPxoMgciJxNlRAkiJwZlTElPAkQkEkEAiYAZZGlzY3Vzc2lvbl9kdXJhdGlvbl9zbWFsbIj8eIwAiwAoEkSLAQ5EKSVnJxgyB2eAEW9wZW5fcHJvcG9zYWxfZmVliPxPKBJEIiccZUREgBxkYWVtb25fb3BlcmF0aW9uX2Z1bmRpbmdfYnBziPwlKBJEJx6I/E5JFYEgEkROAgshBAqI/IeJiwIlEkEAJIAaZGlzY3Vzc2lvbl9kdXJhdGlvbl9tZWRpdW2I++eMAEL/bIAZZGlzY3Vzc2lvbl9kdXJhdGlvbl9sYXJnZYj7xIwAQv9JigEAKkcCiPwXRCIpZUQlEkQxFkAAmjIEjAEjjACLAIsBDEEADYsASYj8NCMIjABC/+uL/yJZjAIijACLAIsCDEEASYv/VwIAiwBJTgKBKAuBKFhJVwAgTIEgWycdTwJQSb1FARRESwFESwEWJxJQvyInCWVEIwgnCUxnIicOZUQIJw5MZyMIjABC/68iJwllRCInCGVEEkEAFSInDmVEIicKZUQSRCmBGWcnFDIHZ4kiiPurQv97igMBIkcCKkcCiPtsRCIpZUSBGRNBAQYnFowBiwEoE0EABYsBjACJi/4XjAOL/xeMBScdi/1QSYwAvUUBQAB1gBUAE0VSUjpWb3RlciBub3QgZm91bmSMAYsBKBNBAAWLAYwAiYsASb5ESVcACIABgFBPAky/IicLZUQjCCcLTGciW4sDSU4CCYsFSU4DCSInDGVETwIIJwxMZyInDWVETwIIJw1MZyInEWVECCcRTGcojACJiwC+TElOAowCRIFAUycSIk8CVCcSE0EAIIAZABdFUlI6Vm90ZXIgYWxyZWFkeSB2b3RlZIwBQv9riwJXAAiLA4sFCBakQQAbgBQAEkVSUjpWb3RlcyBleGNlZWRlZIwBQv9BKIwBQv87iPkHSU4CjAGMBCgTQP7viwRAACKAGwAZRVJSOlZvdGluZyBQZXJpb2QgRXhwaXJlZIwBQv7IKIwBQv7CigAAIipHA4j54yIpZUSBGRJEiPi5KBJEQQAOIicLZUQiJwhlRBJBATEjRCInBmVMSU4CjAFEJBJBAOuADHF1b3J1bV9zbWFsbIj5Y4wAiwAoEkQiJwhlRAshBAqMAiInBmVMSU4CjAFEJBJBAHKAFXdlaWdodGVkX3F1b3J1bV9zbWFsbIj5J4wAiwAoEkQiJwxlRCInDWVECCInEWVECIwEIicKZUQLIQQKjAMiJwtlRIsCD0EAG4sEiwMPQQATIicMZUQiJw1lRA1BAAUpgR5niSmBKGciJwRlRIj5XYmLASUSQQAggBZ3ZWlnaHRlZF9xdW9ydW1fbWVkaXVtiPitjABC/4OAFXdlaWdodGVkX3F1b3J1bV9sYXJnZYj4jowAQv9kiwElEkEAF4ANcXVvcnVtX21lZGl1bYj4cIwAQv8KgAxxdW9ydW1fbGFyZ2WI+FqMAEL+9CJC/syKAQAxAIAMeGdvdl9jb3VuY2lsiPhsSRWBIBJEEkQiKWVEgR4SRIv/QQAQKYE8ZyInBWVEcghEiPikiSmBLWeJigABIoj4ekQiKWVEgS0TQQAeJxaMAIsAKBNBAASLAEyJKYEyZyInBGVEiPhxKEyJKIwAQv/gigEAIipHAyIpZUQlEkEAgYj4KUQxFkAAcTIEjAQjjAKLAosEDEEADYsCSYj4TSMIjAJC/+uL/yJZjAEijAOLA4sBDEEAQ4v/VwIAiwOBIAuBIFgnHUxQSYwAvUUBQQAgIicJZUQjCScJTGciJw5lRIsASU4CvkQiWwknDkxnvEiLAyMIjANC/7WJIoj37UL/pCIpZUSBMhJAABQiKWVEgTwSQAAKIillRIEoEkEADCIrZURAAAUjREL/WSJC//iKAAEiiPeFRCIrZURAAC4iKWVEQQCfIillRCQTQQCWIillRIEyE0EAjCIpZUSBPBNBAIIiKWVEgSgTQQB4JxaMAIsAKBNBAASLAEyJIicJZURBADSAMAAuRVJSOlRoZXJlIGFyZSB2b3RlcnMgYXNzaWduZWQgdG8gdGhpcyBwcm9wb3NhbEyJIillRCQSQQAIIicEZUSI9xAiJwVlRHIIRDIKcwBEMgpzAUQJiPbmKyNnKEyJKIwAQv+GiPa/RCIrZUREJwe8SCInBWVEcghEMgpzAESI9r2JIicEZUQiJwVlRBYiJxdlREkVFlcGAkxQIicTZUQWIicYZUQWIicUZUQWIillRBYiK2VEJxIiTwJUIicGZUQWIicZZUQWSZOBCA5EVwcBIicaZUQWIicbZUQWIicQZUQWIicVZUQiJwhlRBYiJwplRBYiJwtlRBYiJwxlRBYiJw1lRBYiJxFlRBZPE08TUIACALxQTxFQTxBQTw9QTw5QTw1QTwxQTwtQTwpQTwlQTwhQTwdQTwZQTwVQTwRQTwNQTwJQTFBMUIk=)",
      "defined_out": [
        "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",
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0",
        "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"
      ]
    },
    "5980": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "5982": {
      "op": "pushbytes 0x216b1e07 // method \"create(address)string\"",
      "defined_out": [
        "Method(create(address)string)",
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0",
        "Method(create(address)string)"
      ]
    },
    "5988": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%15#0"
      ]
    },
    "5990": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0"
      ]
    },
    "5992": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "maybe_value%3#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "appl"
      ]
    },
    "5994": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0"
      ]
    },
    "5996": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "0"
      ]
    },
    "5997": {
      "op": "itxn_field Fee",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0"
      ]
    },
    "5999": {
      "op": "itxn_submit"
    },
    "6000": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0",
        "maybe_value%3#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "awst_tmp%0#0"
      ]
    },
    "6002": {
      "op": "extract 0 4",
      "defined_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%17#0"
      ]
    },
    "6005": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "6006": {
      "op": "==",
      "defined_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%18#0"
      ]
    },
    "6007": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0"
      ]
    },
    "6008": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "6010": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tmp%19#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "tmp%19#0"
      ]
    },
    "6012": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%1#0",
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "check%1#0"
      ]
    },
    "6014": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0"
      ]
    },
    "6015": {
      "op": "bytec_1 // 0x70",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "0x70"
      ]
    },
    "6016": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%2#0",
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "0x70",
        "materialized_values%2#0"
      ]
    },
    "6018": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0"
      ]
    },
    "6019": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "6020": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%2#0",
        "maybe_exists%5#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%4#0",
        "maybe_exists%5#0"
      ]
    },
    "6021": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%4#0"
      ]
    },
    "6022": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "6023": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%4#0",
        "0",
        "1"
      ]
    },
    "6024": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%2#0",
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "updated_data%0#0"
      ]
    },
    "6025": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0"
      ]
    },
    "6026": {
      "op": "itxn_begin"
    },
    "6027": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "tx.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "6029": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%2#0",
        "maybe_value%3#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "6031": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0"
      ]
    },
    "6032": {
      "op": "swap",
      "stack_out": [
        "maybe_value%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "mbr_after#0"
      ]
    },
    "6033": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%3#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "mbr_after#0",
        "mbr_before#0"
      ]
    },
    "6035": {
      "op": "-",
      "defined_out": [
        "maybe_value%3#0",
        "tmp%20#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "tmp%20#0"
      ]
    },
    "6036": {
      "op": "uncover 3",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "tmp%20#0",
        "maybe_value%3#0"
      ]
    },
    "6038": {
      "op": "swap",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%3#0",
        "tmp%20#0"
      ]
    },
    "6039": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "6040": {
      "op": "itxn_field Amount",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ]
    },
    "6042": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "tx.CreatedApplicationID#0"
      ]
    },
    "6044": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "pay"
      ]
    },
    "6045": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tx.CreatedApplicationID#0"
      ]
    },
    "6047": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "6048": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tx.CreatedApplicationID#0"
      ]
    },
    "6050": {
      "op": "itxn_submit"
    },
    "6051": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "6052": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "6054": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%6#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "maybe_value%6#0",
        "maybe_exists%7#0"
      ]
    },
    "6055": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "maybe_value%6#0"
      ]
    },
    "6056": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "maybe_value%6#0",
        "1"
      ]
    },
    "6057": {
      "op": "+",
      "defined_out": [
        "materialized_values%3#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "materialized_values%3#0"
      ]
    },
    "6058": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "materialized_values%3#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "6060": {
      "op": "swap",
      "stack_out": [
        "tx.CreatedApplicationID#0",
        "0x70656e64696e675f70726f706f73616c73",
        "materialized_values%3#0"
      ]
    },
    "6061": {
      "op": "app_global_put",
      "stack_out": [
        "tx.CreatedApplicationID#0"
      ]
    },
    "6062": {
      "retsub": true,
      "op": "retsub"
    },
    "6063": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal",
      "params": {
        "proposal_id#0": "bytes",
        "xgov_address#0": "bytes",
        "approval_votes#0": "bytes",
        "rejection_votes#0": "bytes"
      },
      "block": "vote_proposal",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "6066": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6067": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "6068": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6069": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6070": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6071": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "6072": {
      "op": "frame_dig -4",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "6074": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6075": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "6076": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%2#0"
      ]
    },
    "6079": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6080": {
      "op": "dup",
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "6081": {
      "op": "bytec 46 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)",
        "0x737461747573"
      ]
    },
    "6083": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "status#1",
        "status_exists#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "status_exists#0"
      ]
    },
    "6084": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposal_id#1",
        "status#1"
      ]
    },
    "6085": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "proposal_id#1",
        "status#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "25"
      ]
    },
    "6087": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%4#0"
      ]
    },
    "6088": {
      "error": "Proposal is not in voting phase",
      "op": "assert // Proposal is not in voting phase",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6089": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "0x78"
      ]
    },
    "6091": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x78",
        "proposal_id#1",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "6093": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0"
      ]
    },
    "6094": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "6095": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "exists#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "6096": {
      "op": "bury 1",
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "6098": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0"
      ]
    },
    "6099": {
      "op": "dup",
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "6100": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "proposal_id#1",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "maybe_exists%2#0"
      ]
    },
    "6101": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "6102": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ]
    },
    "6103": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)",
        "32"
      ]
    },
    "6105": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "tmp%6#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%6#0"
      ]
    },
    "6106": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "tmp%6#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%6#0",
        "1"
      ]
    },
    "6107": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "to_encode%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "to_encode%0#0"
      ]
    },
    "6108": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "val_as_bytes%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "val_as_bytes%0#0"
      ]
    },
    "6109": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "val_as_bytes%0#0",
        "xgov_box#0 (copy)"
      ]
    },
    "6111": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "6112": {
      "op": "replace2 32",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "updated_data%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%0#0"
      ]
    },
    "6114": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "to_encode%1#0",
        "updated_data%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%0#0",
        "to_encode%1#0"
      ]
    },
    "6116": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "updated_data%0#0",
        "val_as_bytes%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "6117": {
      "op": "replace2 40",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "updated_data%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%1#0"
      ]
    },
    "6119": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id#1",
        "xgov_box#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "6121": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "xgov_box#0",
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "6122": {
      "op": "box_put",
      "stack_out": [
        "proposal_id#1",
        "xgov_box#0"
      ]
    },
    "6123": {
      "op": "txn Sender",
      "defined_out": [
        "proposal_id#1",
        "tmp%7#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "xgov_box#0",
        "tmp%7#0"
      ]
    },
    "6125": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "tmp%7#0",
        "xgov_box#0"
      ]
    },
    "6126": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "proposal_id#1",
        "reinterpret_bytes[32]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%7#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "6129": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%8#0"
      ]
    },
    "6130": {
      "error": "Must be voting address",
      "op": "assert // Must be voting address",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6131": {
      "op": "itxn_begin"
    },
    "6132": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "6134": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "6140": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6142": {
      "op": "frame_dig -3",
      "stack_out": [
        "xgov_address#0 (copy)"
      ]
    },
    "6144": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6146": {
      "op": "frame_dig -2",
      "defined_out": [
        "approval_votes#0 (copy)"
      ],
      "stack_out": [
        "approval_votes#0 (copy)"
      ]
    },
    "6148": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6150": {
      "op": "frame_dig -1",
      "defined_out": [
        "rejection_votes#0 (copy)"
      ],
      "stack_out": [
        "rejection_votes#0 (copy)"
      ]
    },
    "6152": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6154": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "6156": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "6158": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6159": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "6161": {
      "op": "itxn_submit"
    },
    "6162": {
      "op": "itxn LastLog"
    },
    "6164": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "6166": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "6169": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "6170": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "6171": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "6172": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6175": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "6176": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "6177": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "6178": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4"
      ]
    },
    "6179": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "6180": {
      "op": "bz vote_proposal_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "6183": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ]
    },
    "6184": {
      "block": "vote_proposal_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ],
      "op": "bz vote_proposal_after_if_else@13",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "6187": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4"
      ]
    },
    "6188": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4",
        "tmp%13#0"
      ]
    },
    "6190": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)",
        "tmp%13#0 (copy)"
      ]
    },
    "6191": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)"
      ]
    },
    "6193": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "6194": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "6195": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%13#0 (copy)"
      ]
    },
    "6197": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "6199": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "bounded_index%0#0"
      ]
    },
    "6200": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6202": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "6203": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%13#0"
      ]
    },
    "6205": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0"
      ]
    },
    "6206": {
      "op": "bytec 18 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "6208": {
      "op": "bytec 49 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "6210": {
      "op": "pushbytess \"Voter not found\" \"Voter already voted\" \"Votes exceeded\" \"Voting Period Expired\" // \"Voter not found\", \"Voter already voted\", \"Votes exceeded\", \"Voting Period Expired\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\""
      ]
    },
    "6285": {
      "op": "uncover 6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "error_without_prefix#0"
      ]
    },
    "6287": {
      "op": "match vote_proposal_switch_case_0@6 vote_proposal_switch_case_1@7 vote_proposal_switch_case_2@8 vote_proposal_switch_case_3@9 vote_proposal_switch_case_4@10 vote_proposal_switch_case_5@11",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "6301": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "6302": {
      "block": "vote_proposal_switch_case_5@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "error": "Voting Period Expired",
      "op": "err // Voting Period Expired"
    },
    "6303": {
      "block": "vote_proposal_switch_case_4@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "error": "Votes exceeded",
      "op": "err // Votes exceeded"
    },
    "6304": {
      "block": "vote_proposal_switch_case_3@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "error": "Voter already voted",
      "op": "err // Voter already voted"
    },
    "6305": {
      "block": "vote_proposal_switch_case_2@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "error": "Voter not found",
      "op": "err // Voter not found"
    },
    "6306": {
      "block": "vote_proposal_switch_case_1@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "6307": {
      "block": "vote_proposal_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "6308": {
      "block": "vote_proposal_after_if_else@13",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "6309": {
      "block": "vote_proposal_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "6311": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "6314": {
      "op": "bytec 19 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "\"ERR:\""
      ]
    },
    "6316": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ]
    },
    "6317": {
      "op": "b vote_proposal_ternary_merge@4"
    },
    "6320": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "pay_grant_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6323": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6325": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "6326": {
      "op": "bytec 11 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "6328": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6329": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "6330": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6331": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "6332": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "6334": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6335": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "6336": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%3#0"
      ]
    },
    "6339": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6340": {
      "op": "dup",
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "6341": {
      "op": "bytec 46 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)",
        "0x737461747573"
      ]
    },
    "6343": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "status#1",
        "status_exists#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "status_exists#0"
      ]
    },
    "6344": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposal_id#1",
        "status#1"
      ]
    },
    "6345": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "proposal_id#1 (copy)"
      ]
    },
    "6347": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "status#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "proposer#0"
      ]
    },
    "6350": {
      "op": "dig 2",
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "proposer#0",
        "proposal_id#1 (copy)"
      ]
    },
    "6352": {
      "op": "pushbytes 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "proposal_id#1",
        "proposal_id#1 (copy)",
        "proposer#0",
        "status#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "proposer#0",
        "proposal_id#1 (copy)",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "6370": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0",
        "status#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ]
    },
    "6371": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposal_id#1",
        "status#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "6372": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "status#1"
      ]
    },
    "6374": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "status#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "status#1",
        "45"
      ]
    },
    "6376": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ]
    },
    "6377": {
      "error": "Proposal was not reviewed",
      "op": "assert // Proposal was not reviewed",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "6378": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70"
      ]
    },
    "6379": {
      "op": "dig 2",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "proposer#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "6381": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "box_prefixed_key%0#0"
      ]
    },
    "6382": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "6383": {
      "op": "bury 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_exists%1#0"
      ]
    },
    "6385": {
      "error": "Wrong proposer",
      "op": "assert // Wrong proposer",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "6386": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "proposer#0 (copy)"
      ]
    },
    "6388": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%8#0"
      ]
    },
    "6391": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "6392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0"
      ]
    },
    "6393": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6394": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "6395": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "6396": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "6397": {
      "op": "dig 2",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "6399": {
      "op": ">=",
      "defined_out": [
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "tmp%9#0"
      ]
    },
    "6400": {
      "error": "Insufficient treasury funds",
      "op": "assert // Insufficient treasury funds",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "6401": {
      "op": "itxn_begin"
    },
    "6402": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "requested_amount#1 (copy)"
      ]
    },
    "6404": {
      "op": "itxn_field Amount",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "6406": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "proposer#0"
      ]
    },
    "6408": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "6410": {
      "op": "intc_1 // pay",
      "defined_out": [
        "maybe_value%1#0",
        "pay",
        "proposal_id#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "pay"
      ]
    },
    "6411": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "6413": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "0"
      ]
    },
    "6414": {
      "op": "itxn_field Fee",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "6416": {
      "op": "itxn_submit"
    },
    "6417": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "maybe_value%1#0",
        "requested_amount#1"
      ]
    },
    "6418": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "materialized_values%0#0"
      ]
    },
    "6419": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "proposal_id#1",
        "materialized_values%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6420": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "0x6f75747374616e64696e675f66756e6473",
        "materialized_values%0#0"
      ]
    },
    "6421": {
      "op": "app_global_put",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "6422": {
      "op": "itxn_begin"
    },
    "6423": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "6425": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)"
      ],
      "stack_out": [
        "Method(fund()string)"
      ]
    },
    "6431": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6433": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "6435": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "6437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6438": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "6440": {
      "op": "itxn_submit"
    },
    "6441": {
      "op": "itxn LastLog"
    },
    "6443": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "6445": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "6448": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "6449": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%12#0"
      ]
    },
    "6450": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "6451": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6454": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "6455": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "6456": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0"
      ]
    },
    "6457": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4"
      ]
    },
    "6458": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "6459": {
      "op": "bz pay_grant_proposal_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "6462": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ]
    },
    "6463": {
      "block": "pay_grant_proposal_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ],
      "op": "bz pay_grant_proposal_after_if_else@8",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "6466": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4"
      ]
    },
    "6467": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4",
        "tmp%14#0"
      ]
    },
    "6469": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)",
        "tmp%14#0 (copy)"
      ]
    },
    "6470": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)"
      ]
    },
    "6472": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "6473": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "6474": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%14#0 (copy)"
      ]
    },
    "6476": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "6478": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "bounded_index%0#0"
      ]
    },
    "6479": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6481": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "6482": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%14#0"
      ]
    },
    "6484": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0"
      ]
    },
    "6485": {
      "op": "bytec 18 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "6487": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "6488": {
      "op": "match pay_grant_proposal_switch_case_0@6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "6492": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "6493": {
      "block": "pay_grant_proposal_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "6494": {
      "block": "pay_grant_proposal_after_if_else@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "6495": {
      "block": "pay_grant_proposal_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "6497": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "6500": {
      "op": "bytec 19 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%16#0",
        "\"ERR:\""
      ]
    },
    "6502": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ]
    },
    "6503": {
      "op": "b pay_grant_proposal_ternary_merge@4"
    },
    "6506": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.finalize_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "finalize_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6509": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "6510": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6511": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "6513": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0 (copy)"
      ]
    },
    "6515": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1"
      ]
    },
    "6516": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1"
      ]
    },
    "6517": {
      "op": "bytec 46 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1",
        "0x737461747573"
      ]
    },
    "6519": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ]
    },
    "6520": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0"
      ]
    },
    "6521": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0",
        "status#0 (copy)"
      ]
    },
    "6522": {
      "op": "uncover 2",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "6524": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "6525": {
      "op": "bz finalize_proposal_if_body@2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6528": {
      "op": "frame_dig 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "6530": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "proposal_id#1",
        "status#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "10"
      ]
    },
    "6532": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%2#0"
      ]
    },
    "6533": {
      "op": "bz finalize_proposal_after_if_else@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6536": {
      "block": "finalize_proposal_if_body@2",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0"
      ]
    },
    "6538": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "0"
      ]
    },
    "6539": {
      "op": "bytec 14 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "6541": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6542": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "6543": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%4#0"
      ]
    },
    "6544": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6545": {
      "block": "finalize_proposal_after_if_else@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "6547": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "6548": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "tmp%6#0"
      ]
    },
    "6551": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "6552": {
      "op": "itxn_begin"
    },
    "6553": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6555": {
      "op": "pushbytes 0x802069b4 // method \"finalize()string\"",
      "defined_out": [
        "Method(finalize()string)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "Method(finalize()string)"
      ]
    },
    "6561": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6563": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "appl"
      ]
    },
    "6565": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6567": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "0"
      ]
    },
    "6568": {
      "op": "itxn_field Fee",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6570": {
      "op": "itxn_submit"
    },
    "6571": {
      "op": "itxn LastLog"
    },
    "6573": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "6574": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "6576": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "6577": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "6580": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "6581": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "6582": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "6583": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "6586": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "6587": {
      "op": "frame_bury 1",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "6589": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "6590": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "6591": {
      "op": "frame_bury 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "6593": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4"
      ]
    },
    "6594": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%12#0"
      ]
    },
    "6595": {
      "op": "bz finalize_proposal_ternary_false@6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6598": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "ternary_result%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "6599": {
      "block": "finalize_proposal_ternary_merge@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ],
      "op": "bz finalize_proposal_after_if_else@13",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6602": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4"
      ]
    },
    "6603": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0"
      ]
    },
    "6605": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "6606": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "6608": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "6609": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "6610": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "6612": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "6614": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "6615": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6617": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "6618": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "6620": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0"
      ]
    },
    "6621": {
      "op": "bytec 18 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "6623": {
      "op": "bytec 49 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "6625": {
      "op": "pushbytes \"There are voters assigned to this proposal\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\""
      ]
    },
    "6669": {
      "op": "uncover 3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "error_without_prefix#0"
      ]
    },
    "6671": {
      "op": "match finalize_proposal_switch_case_0@9 finalize_proposal_switch_case_1@10 finalize_proposal_switch_case_2@11",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6679": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "6680": {
      "block": "finalize_proposal_switch_case_2@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "error": "There are voters assigned to this proposal",
      "op": "err // There are voters assigned to this proposal"
    },
    "6681": {
      "block": "finalize_proposal_switch_case_1@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "6682": {
      "block": "finalize_proposal_switch_case_0@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "6683": {
      "block": "finalize_proposal_after_if_else@13",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "6685": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "6688": {
      "retsub": true,
      "op": "retsub"
    },
    "6689": {
      "block": "finalize_proposal_ternary_false@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "6691": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0"
      ]
    },
    "6694": {
      "op": "bytec 19 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "6696": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "6697": {
      "op": "b finalize_proposal_ternary_merge@7"
    },
    "6700": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.drop_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "drop_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6703": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6704": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "6705": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6706": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6707": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6708": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "6709": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "6711": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6712": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "6714": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "6717": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "6718": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "6719": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0"
      ]
    },
    "6722": {
      "op": "txn Sender",
      "defined_out": [
        "proposer#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0",
        "tmp%4#0"
      ]
    },
    "6724": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%5#0"
      ]
    },
    "6725": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "6726": {
      "op": "itxn_begin"
    },
    "6727": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6729": {
      "op": "pushbytes 0x7371321a // method \"drop()string\"",
      "defined_out": [
        "Method(drop()string)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "Method(drop()string)"
      ]
    },
    "6735": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6737": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "appl"
      ]
    },
    "6739": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6741": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "6742": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6744": {
      "op": "itxn_submit"
    },
    "6745": {
      "op": "itxn LastLog"
    },
    "6747": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "6749": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%7#0"
      ]
    },
    "6752": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "6753": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "6754": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "6755": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6758": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "6759": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "6760": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "6761": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "4"
      ]
    },
    "6762": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "6763": {
      "op": "bz drop_proposal_ternary_false@3",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "6766": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "ternary_result%0#0"
      ]
    },
    "6767": {
      "block": "drop_proposal_ternary_merge@4",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "ternary_result%0#0"
      ],
      "op": "bz drop_proposal_after_if_else@8",
      "defined_out": [],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "6770": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "4"
      ]
    },
    "6771": {
      "op": "frame_dig 3",
      "defined_out": [
        "4",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "4",
        "tmp%10#0"
      ]
    },
    "6773": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "4",
        "tmp%10#0 (copy)",
        "tmp%10#0 (copy)"
      ]
    },
    "6774": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "4",
        "tmp%10#0 (copy)"
      ]
    },
    "6776": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "6777": {
      "op": "intc_2 // 4",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "6778": {
      "op": "dig 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%10#0 (copy)"
      ]
    },
    "6780": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "4",
        "tmp%10#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "6782": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "bounded_index%0#0"
      ]
    },
    "6783": {
      "op": "frame_dig 2",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "6785": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "6786": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%10#0"
      ]
    },
    "6788": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "error_without_prefix#0"
      ]
    },
    "6789": {
      "op": "bytec 18 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "6791": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "6792": {
      "op": "match drop_proposal_switch_case_0@6",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "6796": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "6797": {
      "block": "drop_proposal_switch_case_0@6",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "6798": {
      "block": "drop_proposal_after_if_else@8",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%1#0"
      ]
    },
    "6800": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "6803": {
      "retsub": true,
      "op": "retsub"
    },
    "6804": {
      "block": "drop_proposal_ternary_false@3",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "awst_tmp%0#0"
      ]
    },
    "6806": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "6809": {
      "op": "bytec 19 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%12#0",
        "\"ERR:\""
      ]
    },
    "6811": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "ternary_result%0#0"
      ]
    },
    "6812": {
      "op": "b drop_proposal_ternary_merge@4"
    },
    "6815": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "params": {
        "payment#0": "uint64"
      },
      "block": "deposit_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6818": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "6820": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6822": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "6824": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "6825": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "6826": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6827": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6828": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6829": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6830": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "payment#0 (copy)"
      ]
    },
    "6832": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "6834": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "6835": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "materialized_values%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6836": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "materialized_values%0#0"
      ]
    },
    "6837": {
      "op": "app_global_put",
      "stack_out": []
    },
    "6838": {
      "retsub": true,
      "op": "retsub"
    },
    "6839": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "params": {
        "amount#0": "uint64"
      },
      "block": "withdraw_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6842": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6845": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "6846": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6847": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6848": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6849": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6850": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "6852": {
      "op": "dig 1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)",
        "maybe_value%0#0 (copy)"
      ]
    },
    "6854": {
      "op": "<=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "6855": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6856": {
      "op": "txn Fee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "6858": {
      "op": "global MinTxnFee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "6860": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "6862": {
      "op": "*",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "6863": {
      "op": ">=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "6864": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6865": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "6867": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "6868": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "materialized_values%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6869": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "materialized_values%0#0"
      ]
    },
    "6870": {
      "op": "app_global_put",
      "stack_out": []
    },
    "6871": {
      "op": "itxn_begin"
    },
    "6872": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6873": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "6875": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "6876": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "6877": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%2#0",
        "amount#0 (copy)"
      ]
    },
    "6879": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "6881": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "6883": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "6884": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "6886": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6887": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "6889": {
      "op": "itxn_submit"
    },
    "6890": {
      "retsub": true,
      "op": "retsub"
    },
    "6891": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_balance",
      "params": {},
      "block": "withdraw_balance",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6894": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "6895": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6897": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "6899": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "6901": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "6902": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "6903": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "6904": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "6906": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "6908": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "6909": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "6911": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "6913": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0",
        "value%1#0"
      ]
    },
    "6914": {
      "op": "-",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "6915": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "6916": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6917": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6918": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0"
      ]
    },
    "6919": {
      "op": "-",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0"
      ]
    },
    "6920": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "amount#0 (copy)"
      ]
    },
    "6921": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "amount#0"
      ]
    },
    "6922": {
      "op": "itxn_begin"
    },
    "6923": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "0"
      ]
    },
    "6924": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "6926": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "amount#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "6927": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "amount#0",
        "maybe_value%1#0"
      ]
    },
    "6928": {
      "op": "itxn_field Receiver"
    },
    "6930": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "6932": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "6933": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "6935": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6936": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "6938": {
      "op": "itxn_submit"
    },
    "6939": {
      "retsub": true,
      "op": "retsub"
    },
    "6940": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6941": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "6942": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6943": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6944": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x00"
      ]
    },
    "6946": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0x00",
        "0"
      ]
    },
    "6947": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "maybe_value%0#0"
      ]
    },
    "6949": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "6950": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "0"
      ]
    },
    "6951": {
      "op": "bytec 9 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "6953": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "6954": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0"
      ]
    },
    "6955": {
      "op": "bytec 8 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0",
        "0x00"
      ]
    },
    "6957": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0",
        "0x00",
        "0"
      ]
    },
    "6958": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00",
        "0",
        "maybe_value%1#0"
      ]
    },
    "6960": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "6961": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "6962": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "6964": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "6965": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0"
      ]
    },
    "6966": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "6967": {
      "op": "bytec 11 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "6969": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "6970": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "6971": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "6972": {
      "op": "bytec 20 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0",
        "0x78676f765f636f756e63696c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "0x78676f765f636f756e63696c"
      ]
    },
    "6974": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "6975": {
      "error": "check self.xgov_council exists",
      "op": "assert // check self.xgov_council exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "6976": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "6977": {
      "op": "bytec 10 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "6979": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "6980": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "6981": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "6982": {
      "op": "bytec 12 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "6984": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "6985": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "6986": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0"
      ]
    },
    "6987": {
      "op": "bytec 13 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "6989": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "6990": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ]
    },
    "6991": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "6992": {
      "op": "bytec 14 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "6994": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "6995": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ]
    },
    "6996": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "6997": {
      "op": "bytec 15 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "6999": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "7000": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "7001": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "7002": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "7003": {
      "op": "bytec 16 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "7005": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "7006": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "maybe_value%10#0"
      ]
    },
    "7007": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "7008": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "7009": {
      "op": "bytec 17 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "7011": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "7012": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%11#0"
      ]
    },
    "7013": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "7014": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "7015": {
      "op": "bytec 21 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "7017": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "7018": {
      "error": "check self.daemon_ops_funding_bps exists",
      "op": "assert // check self.daemon_ops_funding_bps exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%12#0"
      ]
    },
    "7019": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "7020": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "7021": {
      "op": "bytec 22 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "7023": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "7024": {
      "error": "check self.proposal_commitment_bps exists",
      "op": "assert // check self.proposal_commitment_bps exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%13#0"
      ]
    },
    "7025": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "7026": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "7027": {
      "op": "bytec 23 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "7029": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%14#0",
        "maybe_value%14#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "7030": {
      "error": "check self.min_requested_amount exists",
      "op": "assert // check self.min_requested_amount exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%14#0"
      ]
    },
    "7031": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "7032": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "7033": {
      "op": "bytec 24 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "7035": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "7036": {
      "error": "check self.max_requested_amount_small exists",
      "op": "assert // check self.max_requested_amount_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%15#0"
      ]
    },
    "7037": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "7038": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0"
      ]
    },
    "7039": {
      "op": "bytec 25 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "7041": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%16#0",
        "maybe_value%16#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "7042": {
      "error": "check self.max_requested_amount_medium exists",
      "op": "assert // check self.max_requested_amount_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%16#0"
      ]
    },
    "7043": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "7044": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "7045": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "7047": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%17#0",
        "maybe_value%17#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "7048": {
      "error": "check self.max_requested_amount_large exists",
      "op": "assert // check self.max_requested_amount_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%17#0"
      ]
    },
    "7049": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "7050": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "7052": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "result%1#0"
      ]
    },
    "7053": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%1#0",
        "val_as_bytes%8#0"
      ]
    },
    "7054": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0"
      ]
    },
    "7055": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0"
      ]
    },
    "7056": {
      "op": "bytec 27 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "7058": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%18#0",
        "maybe_value%18#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "7059": {
      "error": "check self.discussion_duration_small exists",
      "op": "assert // check self.discussion_duration_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%18#0"
      ]
    },
    "7060": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0"
      ]
    },
    "7061": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "7062": {
      "op": "bytec 28 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "7064": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%19#0",
        "maybe_value%19#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "7065": {
      "error": "check self.discussion_duration_medium exists",
      "op": "assert // check self.discussion_duration_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%19#0"
      ]
    },
    "7066": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "7067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "7068": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "7070": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%20#0",
        "maybe_value%2#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "7071": {
      "error": "check self.discussion_duration_large exists",
      "op": "assert // check self.discussion_duration_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%20#0"
      ]
    },
    "7072": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "7073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "7074": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "7076": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%21#0",
        "maybe_value%2#0",
        "maybe_value%21#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "7077": {
      "error": "check self.discussion_duration_xlarge exists",
      "op": "assert // check self.discussion_duration_xlarge exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%21#0"
      ]
    },
    "7078": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "7079": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0"
      ]
    },
    "7081": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "7083": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "result%4#0"
      ]
    },
    "7084": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%4#0",
        "val_as_bytes%11#0"
      ]
    },
    "7086": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%5#0"
      ]
    },
    "7087": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%12#0"
      ]
    },
    "7088": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0"
      ]
    },
    "7089": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0"
      ]
    },
    "7090": {
      "op": "bytec 31 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "7092": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%22#0",
        "maybe_value%2#0",
        "maybe_value%22#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "7093": {
      "error": "check self.voting_duration_small exists",
      "op": "assert // check self.voting_duration_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%22#0"
      ]
    },
    "7094": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0"
      ]
    },
    "7095": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "7096": {
      "op": "bytec 32 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "7098": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%23#0",
        "maybe_value%2#0",
        "maybe_value%23#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "7099": {
      "error": "check self.voting_duration_medium exists",
      "op": "assert // check self.voting_duration_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%23#0"
      ]
    },
    "7100": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "7101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "7102": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "7104": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%24#0",
        "maybe_value%2#0",
        "maybe_value%24#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "7105": {
      "error": "check self.voting_duration_large exists",
      "op": "assert // check self.voting_duration_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%24#0"
      ]
    },
    "7106": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "7107": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0"
      ]
    },
    "7108": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "7110": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%25#0",
        "maybe_value%2#0",
        "maybe_value%25#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%25#0",
        "maybe_exists%25#0"
      ]
    },
    "7111": {
      "error": "check self.voting_duration_xlarge exists",
      "op": "assert // check self.voting_duration_xlarge exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%25#0"
      ]
    },
    "7112": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ]
    },
    "7113": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%13#0"
      ]
    },
    "7115": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "7117": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "result%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "result%8#0"
      ]
    },
    "7118": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%8#0",
        "val_as_bytes%15#0"
      ]
    },
    "7120": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%9#0"
      ]
    },
    "7121": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%16#0"
      ]
    },
    "7122": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0"
      ]
    },
    "7123": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0"
      ]
    },
    "7124": {
      "op": "bytec 35 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x71756f72756d5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "7126": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%26#0",
        "maybe_value%2#0",
        "maybe_value%26#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%26#0",
        "maybe_exists%26#0"
      ]
    },
    "7127": {
      "error": "check self.quorum_small exists",
      "op": "assert // check self.quorum_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%26#0"
      ]
    },
    "7128": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0"
      ]
    },
    "7129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0"
      ]
    },
    "7130": {
      "op": "bytec 36 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x71756f72756d5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "7132": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%27#0",
        "maybe_value%2#0",
        "maybe_value%27#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%27#0",
        "maybe_exists%27#0"
      ]
    },
    "7133": {
      "error": "check self.quorum_medium exists",
      "op": "assert // check self.quorum_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%27#0"
      ]
    },
    "7134": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "7135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0"
      ]
    },
    "7136": {
      "op": "bytec 37 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x71756f72756d5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "7138": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%28#0",
        "maybe_value%2#0",
        "maybe_value%28#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%28#0",
        "maybe_exists%28#0"
      ]
    },
    "7139": {
      "error": "check self.quorum_large exists",
      "op": "assert // check self.quorum_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%28#0"
      ]
    },
    "7140": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0"
      ]
    },
    "7141": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%19#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "7143": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%12#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%19#0",
        "result%12#0"
      ]
    },
    "7144": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%12#0",
        "val_as_bytes%19#0"
      ]
    },
    "7145": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0"
      ]
    },
    "7146": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "0"
      ]
    },
    "7147": {
      "op": "bytec 38 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "7149": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%29#0",
        "maybe_value%2#0",
        "maybe_value%29#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "maybe_value%29#0",
        "maybe_exists%29#0"
      ]
    },
    "7150": {
      "error": "check self.weighted_quorum_small exists",
      "op": "assert // check self.weighted_quorum_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "maybe_value%29#0"
      ]
    },
    "7151": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0"
      ]
    },
    "7152": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "0"
      ]
    },
    "7153": {
      "op": "bytec 39 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "7155": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%30#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%30#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "maybe_value%30#0",
        "maybe_exists%30#0"
      ]
    },
    "7156": {
      "error": "check self.weighted_quorum_medium exists",
      "op": "assert // check self.weighted_quorum_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "maybe_value%30#0"
      ]
    },
    "7157": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0"
      ]
    },
    "7158": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "0"
      ]
    },
    "7159": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "7161": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%31#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%31#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "maybe_value%31#0",
        "maybe_exists%31#0"
      ]
    },
    "7162": {
      "error": "check self.weighted_quorum_large exists",
      "op": "assert // check self.weighted_quorum_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "maybe_value%31#0"
      ]
    },
    "7163": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%22#0"
      ]
    },
    "7164": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0"
      ]
    },
    "7166": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%15#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "result%15#0"
      ]
    },
    "7167": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%15#0",
        "val_as_bytes%22#0"
      ]
    },
    "7168": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0"
      ]
    },
    "7169": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "0"
      ]
    },
    "7170": {
      "op": "bytec_2 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "7171": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%32#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%32#0",
        "maybe_exists%32#0"
      ]
    },
    "7172": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%32#0"
      ]
    },
    "7173": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0"
      ]
    },
    "7174": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "0"
      ]
    },
    "7175": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "7177": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%33#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%33#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "maybe_value%33#0",
        "maybe_exists%33#0"
      ]
    },
    "7178": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "maybe_value%33#0"
      ]
    },
    "7179": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0"
      ]
    },
    "7180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "0"
      ]
    },
    "7181": {
      "op": "bytec 48 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "7183": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%34#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_exists%34#0"
      ]
    },
    "7184": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0"
      ]
    },
    "7185": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "0"
      ]
    },
    "7186": {
      "op": "bytec 41 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "7188": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%35#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_exists%35#0"
      ]
    },
    "7189": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0"
      ]
    },
    "7190": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0"
      ]
    },
    "7191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "0"
      ]
    },
    "7192": {
      "op": "bytec 42 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "7194": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%36#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%36#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "maybe_value%36#0",
        "maybe_exists%36#0"
      ]
    },
    "7195": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "maybe_value%36#0"
      ]
    },
    "7196": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ]
    },
    "7197": {
      "op": "uncover 23",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_bool%1#0"
      ]
    },
    "7199": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "7200": {
      "op": "getbit",
      "defined_out": [
        "encoded_bool%0#0",
        "is_true%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "is_true%0#0"
      ]
    },
    "7201": {
      "op": "uncover 24",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "is_true%0#0",
        "encoded_bool%0#0"
      ]
    },
    "7203": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "encoded_bool%0#0",
        "is_true%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "is_true%0#0",
        "encoded_bool%0#0",
        "1"
      ]
    },
    "7204": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_bool%0#0",
        "1",
        "is_true%0#0"
      ]
    },
    "7206": {
      "op": "setbit",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "7207": {
      "op": "uncover 23",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0"
      ]
    },
    "7209": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "7210": {
      "op": "uncover 22",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0"
      ]
    },
    "7212": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "7213": {
      "op": "uncover 21",
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%4#0",
        "maybe_value%4#0"
      ]
    },
    "7215": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%34#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "7216": {
      "op": "uncover 20",
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%5#0"
      ]
    },
    "7218": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "maybe_value%34#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "7219": {
      "op": "uncover 19",
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%6#0",
        "maybe_value%6#0"
      ]
    },
    "7221": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "maybe_value%34#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "7222": {
      "op": "uncover 18",
      "stack_out": [
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%7#0",
        "maybe_value%7#0"
      ]
    },
    "7224": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "maybe_value%34#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "7225": {
      "op": "uncover 17",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%8#0",
        "maybe_value%8#0"
      ]
    },
    "7227": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "7228": {
      "op": "uncover 16",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%0#0"
      ]
    },
    "7230": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "7231": {
      "op": "uncover 15",
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%1#0"
      ]
    },
    "7233": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "7234": {
      "op": "uncover 14",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%2#0"
      ]
    },
    "7236": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "7237": {
      "op": "uncover 13",
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%3#0"
      ]
    },
    "7239": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "7240": {
      "op": "uncover 12",
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%13#0",
        "val_as_bytes%4#0"
      ]
    },
    "7242": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "7243": {
      "op": "uncover 11",
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%5#0"
      ]
    },
    "7245": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "7246": {
      "op": "uncover 10",
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%15#0",
        "result%2#0"
      ]
    },
    "7248": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "7249": {
      "op": "uncover 9",
      "stack_out": [
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%16#0",
        "result%6#0"
      ]
    },
    "7251": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "7252": {
      "op": "uncover 8",
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%17#0",
        "result%10#0"
      ]
    },
    "7254": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "maybe_value%34#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "7255": {
      "op": "uncover 7",
      "stack_out": [
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%18#0",
        "result%13#0"
      ]
    },
    "7257": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "maybe_value%34#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "7258": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%19#0",
        "result%16#0"
      ]
    },
    "7260": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "maybe_value%34#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "7261": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%23#0"
      ]
    },
    "7263": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "maybe_value%34#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "7264": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%21#0",
        "val_as_bytes%24#0"
      ]
    },
    "7266": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "7267": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%22#0",
        "maybe_value%34#0"
      ]
    },
    "7269": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%23#0"
      ]
    },
    "7270": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%25#0"
      ]
    },
    "7272": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%24#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%24#0"
      ]
    },
    "7273": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%24#0",
        "val_as_bytes%26#0"
      ]
    },
    "7274": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%25#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%25#0"
      ]
    },
    "7275": {
      "retsub": true,
      "op": "retsub"
    },
    "7276": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_xgov_box",
      "params": {
        "xgov_address#0": "bytes"
      },
      "block": "get_xgov_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "7279": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "7281": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "7283": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "7284": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "7285": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "7286": {
      "retsub": true,
      "op": "retsub"
    },
    "7287": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposer_box",
      "params": {
        "proposer_address#0": "bytes"
      },
      "block": "get_proposer_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "7290": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "7291": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "proposer_address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "proposer_address#0 (copy)"
      ]
    },
    "7293": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "7294": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "7295": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "7296": {
      "retsub": true,
      "op": "retsub"
    },
    "7297": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "is_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "7300": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "7302": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7303": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "7306": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "7307": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
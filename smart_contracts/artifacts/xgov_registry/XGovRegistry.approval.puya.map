{
  "version": 3,
  "sources": [
    "../../xgov_registry/contract.py"
  ],
  "mappingsuCA;;;AAEe;;AAA6B;;AAA7B;AAAP;AACO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAGoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGkD;;AAApB;;AAA9B;AACqD;;AAApB;;AAAjC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAIwB;;AAApB;;AADJ;AAI0C;;AAAd;AAA5B;AACuC;AAAd;AAAzB;AAC8C;;AAAd;AAAhC;AAC8C;;AAAd;AAAhC;AAEkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAI8C;;AAAd;AAAhC;AAC+C;;AAAd;AAAjC;AAC8C;;AAAd;AAAhC;AAGkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAImD;AAAd;AAArC;AAGmD;;AAAd;AAArC;AACiD;;AAAd;AAAnC;AAEmD;;AAAd;AAArC;AAE4C;;AAAd;AAA9B;;AAhHR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAgLK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAYA;;AAAA;AAAA;AAAA;;AAAA;AA5LL;;;AA4LK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AA1ML;;;AA0MK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AAxNL;;;AAwNK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AAtOL;;;AAsOK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AApPL;;;AAoPK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AAlQL;;;AAkQK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AAhRL;;;AAgRK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AA9RL;;;AA8RK;;;AAAA;AAAA;AA6CA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAWA;;AAAA;AAAA;AAAA;;AAAA;AAtVL;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsVK;;;AAAA;AAAA;AAuBA;;AAAA;AAAA;AAAA;;AAAA;AA7WL;;;AA6WK;;;AAAA;AAAA;AAwBA;;AAAA;AAAA;AAAA;;AAAA;AArYL;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqYK;;;AAAA;AAAA;AA6BA;;AAAA;AAAA;AAAA;;AAAA;AAlaL;;;AAkaK;;;AAAA;AAAA;AAuBA;;AAAA;AAAA;AAAA;;AAAA;AAzbL;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAybK;;;AAAA;AAAA;AAsCA;;AAAA;AAAA;AAAA;;AAAA;AA/dL;;;AA+dK;;;AAAA;AAAA;AAqBA;;AAAA;AAAA;AAAA;;AAAA;AApfL;;;AAAA;;;AAofK;;;AAAA;AAAA;AA0BA;;AAAA;AAAA;AAAA;;AAAA;AA9gBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8gBK;;;AAAA;AAAA;AA0BA;;AAAA;AAAA;AAAA;;AAAA;AAxiBL;;;AAAA;;;AAAA;;;AAwiBK;;;AAAA;AAAA;AA4BA;;AAAA;AAAA;AAAA;;AAAA;AApkBL;;;AAAA;;;AAAA;;;AAokBK;;;AAAA;AAAA;AAqBA;;AAAA;AAAA;AAAA;;AAAA;AAzlBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAylBK;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgEA;;AAAA;AAAA;AAAA;;AAAA;AAzpBL;;;AAypBK;;;AAAA;AAAA;AA6DA;;AAAA;AAAA;AAAA;;AAAA;AAttBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAstBK;;;AAAA;AAAA;AAgBA;;AAAA;AAAA;AAAA;;AAAA;AAtuBL;;;AAAA;AAsuBK;;;AAAA;AAAA;AAwBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AA9vBL;AAAA;AAgLA;;;AAUQ;;AAAuC;;AAAvC;;AAER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAzER;;;AAEe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAyER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAWe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACO;;;AAAP;AAEsB;;AAAA;;;AAAA;AAAtB;;AAAA;AAAA;AAC0B;;AAAA;;;AAAA;AAA1B;;AAAA;AAAA;AAC0B;;AAAA;;;AAAA;AAA1B;;AAAA;AAAA;AACqC;;AAAA;;;AAAA;AAArC;;AAAA;AAAA;AACqC;;AAAA;;;AAAA;AAArC;;AAAA;AAAA;AAEwC;;AAAA;;;AAAA;AAAA;;;AAAA;AAAxC;;AAAA;AAAA;AACyC;AAAA;;;AAAA;AAAzC;;AAAA;AAAA;AACwC;;;AAAA;AAAxC;;AAAA;AAAA;AAEuC;;AAAA;;;AAAA;AAAA;;;AAAA;AAAvC;;AAAA;AAAA;AACwC;AAAA;;;AAAA;AAAxC;;AAAA;AAAA;AACuC;AAAA;;;AAAA;AAAvC;;AAAA;AAAA;AACwC;;;AAAA;AAAxC;;AAAA;AAAA;AAEmC;;AAAA;;;AAAA;AAAA;;;AAAA;AAAnC;;AAAA;AAAA;AACoC;AAAA;;;AAAA;AAApC;;AAAA;AAAA;AACmC;AAAA;;;AAAA;AAAnC;;AAAA;AAAA;AACoC;;;AAAA;AAApC;;AAAA;AAAA;AAEgC;;AAAA;;;AAAA;AAAhC;;AAAA;AAAA;AAE0B;;AAAA;;;AAAA;AAAA;;;AAAA;AAA1B;;AAAA;AAAA;AAC2B;AAAA;;;AAAA;AAA3B;;AAAA;AAAA;AAC0B;;;AAAA;AAA1B;;AAAA;AAAA;AAEmC;;AAAA;;;AAAA;AAAA;;;AAAA;AAAnC;;AAAA;AAAA;AACoC;AAAA;;;AAAA;AAApC;;AAAA;AAAA;AACmC;;;AAAA;AAAnC;;AAAA;AAAA;;AA9LR;;;AAEe;AAAA;;AAAA;AAAA;AAAA;AAAP;AA8LR;;;AASe;;;AAAP;;AAER;;;AAeiC;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;AAAA;;;AAAP;AAGA;AAAc;;AAAd;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAA;AAAA;AAAA;;AAzMR;;;AAGY;;AAAA;;AAAoB;;AAApB;AAAA;;;AACI;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AADJ;;;;;;;;AADJ;AAyMR;;;AAYsC;AAAvB;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAEiB;AAAA;AAGb;;AAAuB;;AAAvB;AAAA;;;AAAqC;;AAAkB;;AAAlB;AAArC;;;;;;;;AADJ;AAKA;;AAAA;;AACA;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAA;AAAA;AAAA;;AAER;;;AAgBkC;;AAAA;AAAZ;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGP;;AAAA;;AAAA;AAAP;AAE0B;AAAnB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;AAAA;;;AAAP;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAA;AAAA;AAAA;;AAER;;;AAWkC;;AAAA;AAAZ;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGQ;AAAf;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEsB;;AAAf;;AAAA;AAAP;AAGA;;AACA;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAA;AAAA;AAAA;;AAER;;;AAsB0C;AAA3B;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGO;;AAAA;;;AAAP;AAGM;AAAA;;AAAA;AAAA;AACkB;;AAAA;;AAAA;AAAA;;AAAA;AAAxB;AAAA;AAAA;AAAA;AAOA;AAAA;;AAAA;AAAA;AAAyB;AAAzB;AAAA;;AAAA;AAAA;;AAER;;;AAWe;;;AAAP;AAG2B;;AAAA;AAAjB;AAAA;AAAA;AAAA;AAEI;AAAA;;;AAAd;AAAA;AAAA;AAA0C;AAAA;;;AAA1C;AACA;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAA;AAAA;AAAA;AAEA;;;AA/WR;;;AAEe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AA+WR;;;AAeqC;AAAA;;AAAA;AAAA;AAAA;AAC7B;AAII;;AAAA;AAAA;;;AAAoC;;AAAA;;AAAA;AAApC;;;;;;;;AADJ;AAKA;;AAAA;;AAAA;;AAER;;;AAaiC;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEA;AAAkB;;AAAlB;AAAgC;;;;;;;;;;;AAAhC;;AAMR;;;AAiBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAC0B;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAEmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAArC;;AAMR;;;AAee;;;AAAP;AAEA;;AAAA;;AAAA;AAC+B;;AAAA;AAA/B;;AAAA;AAAA;AAC6B;;AAAA;AAA7B;;AAAA;AAAA;;AAhdR;;;AAEe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAgdR;;;AAiB6B;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGW;AACP;;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AAAA;AAAP;AAGsB;;AAAf;;;AAAP;AAEO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAMe;AAEX;;AAIgaf;AAAkB;;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACa;AAAA;;AAAA;AACF;AAAA;;AAAA;AAAA;AAA0B;;;;AAA1B;;;;;AAFX;;;AAGQ;;;AAHR;AAOA;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AAEA;AA9eR;;;AAGY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AACI;;AAAA;AAAA;AAAA;;;AAAA;AAAiD;;AAAjD;AADJ;;;;;;;;AADJ;AAAA;AA8eR;;;AAiB4B;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGO;;AAAA;;;AAAP;AAII;;AAAA;AADoB;AACA;;;;;;;;AADA;AAAA;AAAA;AAGU;AACV;;;;;;;;;;AADU;AAAA;AAGvB;AAAA;AAAA;AAAA;AAAA;AACiC;;AACpB;;;;;;;;;;;;;;;;;;AADoB;AAAA;AAAA;;AAKrC;;AAAU;;AAAV;AAAP;AAE0B;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;;AAAP;AAII;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AAIA;AAAA;;AAAA;;;AAEA;;;;AAAA;;;;;;;;AAAA;;;AAAA;;;AAAA;AAMA;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnkBR;;;AAGwB;;AAAA;AAAZ;;AAAA;AACG;;AADH;AADJ;AAKR;;;AAGQ;AACa;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AADb;;;AAGQ;;;AAHR;AAOA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAsjBR;;;AAYY;;AAAA;;AAAoB;;AAApB;AADJ;AAGA;AAAA;AAAA;AAAA;AAAgC;;AAAA;;AAAhC;AAAA;AAAA;AAAA;;AAER;;;AAae;;;AAAP;AACiB;AAAA;AAAA;AAAA;AAAV;;AAAA;AAAP;AACO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA;AACa;AAAA;;AAAA;AAAA;;;;;;;AADb;;;AAGQ;;;AAHR;;AAMR;;;AAKyB;AAAA;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;AACE;AAAA;;AAAA;AAAA;AACK;AAAA;;AAAA;AAAA;AACE;AAAA;;AAAA;AAAA;AACC;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACuB;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AAEL;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHiB;;AAAA;AAAA;AAAA;AAML;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOJ;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMe;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AAER;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHG;;AAAA;AAAA;AAAA;AAMS;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHY;;AAAA;AAAA;AAAA;AAKc;AAAA;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACL;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AA7Cb;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approval_program",
      "params": {},
      "block": "smart_contracts.xgov_registry.contract.XGovRegistry.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 6 32"
    },
    "7": {
      "op": "bytecblock 0x78676f7673 0x6f75747374616e64696e675f66756e6473 0x78 0x70 0x70656e64696e675f70726f706f73616c73 0x78676f765f6d616e61676572 0x70726f706f73616c5f666565 0x78676f765f7061796f72 0x6b79635f70726f7669646572 0x636f6d6d69747465655f6d616e61676572 0x78676f765f666565 0x70726f706f7365725f666565 0x726571756573745f6964 0x00 0x78676f765f73756273637269626572 0x636f6d6d69747465655f7075626c6973686572 0x70726f706f73616c5f7075626c697368696e675f627073 0x70726f706f73616c5f636f6d6d69746d656e745f627073 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d 0x6d61785f7265717565737465645f616d6f756e745f6c61726765 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d 0x64697363757373696f6e5f6475726174696f6e5f6c61726765 0x64697363757373696f6e5f6475726174696f6e5f786c61726765 0x766f74696e675f6475726174696f6e5f736d616c6c 0x766f74696e675f6475726174696f6e5f6d656469756d 0x766f74696e675f6475726174696f6e5f6c61726765 0x766f74696e675f6475726174696f6e5f786c61726765 0x636f6f6c5f646f776e5f6475726174696f6e 0x71756f72756d5f736d616c6c 0x71756f72756d5f6d656469756d 0x71756f72756d5f6c61726765 0x77656967687465645f71756f72756d5f736d616c6c 0x77656967687465645f71756f72756d5f6d656469756d 0x77656967687465645f71756f72756d5f6c61726765 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573 0x78676f765f7265766965776572 0x6d696e5f7265717565737465645f616d6f756e74 0x7374616c655f70726f706f73616c5f6475726174696f6e 0x151f7c75 0x636f6d6d69747465655f6964"
    },
    "757": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "759": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "762": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.__init__",
      "op": "callsub __init__"
    },
    "765": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "768": {
      "op": "return",
      "stack_out": []
    },
    "769": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "772": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "774": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "8"
      ]
    },
    "776": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "777": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "778": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "780": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "31"
      ]
    },
    "782": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "783": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "784": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "786": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "787": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "788": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "790": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "791": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "792": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572"
    },
    "794": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "new_state_value%0#0"
      ]
    },
    "796": {
      "op": "app_global_put",
      "stack_out": []
    },
    "797": {
      "op": "bytec 14 // 0x78676f765f73756273637269626572"
    },
    "799": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "new_state_value%1#0"
      ]
    },
    "801": {
      "op": "app_global_put",
      "stack_out": []
    },
    "802": {
      "op": "bytec 7 // 0x78676f765f7061796f72"
    },
    "804": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f7061796f72",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "new_state_value%2#0"
      ]
    },
    "806": {
      "op": "app_global_put",
      "stack_out": []
    },
    "807": {
      "op": "bytec 38 // 0x78676f765f7265766965776572"
    },
    "809": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "new_state_value%3#0"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572",
        "new_state_value%3#0"
      ]
    },
    "811": {
      "op": "app_global_put",
      "stack_out": []
    },
    "812": {
      "op": "bytec 8 // 0x6b79635f70726f7669646572"
    },
    "814": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "new_state_value%4#0"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "new_state_value%4#0"
      ]
    },
    "816": {
      "op": "app_global_put",
      "stack_out": []
    },
    "817": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d616e61676572"
    },
    "819": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "new_state_value%5#0"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "new_state_value%5#0"
      ]
    },
    "821": {
      "op": "app_global_put",
      "stack_out": []
    },
    "822": {
      "op": "bytec 15 // 0x636f6d6d69747465655f7075626c6973686572"
    },
    "824": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "new_state_value%6#0"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "new_state_value%6#0"
      ]
    },
    "826": {
      "op": "app_global_put",
      "stack_out": []
    },
    "827": {
      "op": "bytec 10 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565"
      ],
      "stack_out": [
        "0x78676f765f666565"
      ]
    },
    "829": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x78676f765f666565"
      ],
      "stack_out": [
        "0x78676f765f666565",
        "0"
      ]
    },
    "830": {
      "op": "app_global_put",
      "stack_out": []
    },
    "831": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0x78676f7673"
      ],
      "stack_out": [
        "0x78676f7673"
      ]
    },
    "832": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f7673",
        "0"
      ]
    },
    "833": {
      "op": "app_global_put",
      "stack_out": []
    },
    "834": {
      "op": "bytec 11 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565"
      ],
      "stack_out": [
        "0x70726f706f7365725f666565"
      ]
    },
    "836": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "0"
      ]
    },
    "837": {
      "op": "app_global_put",
      "stack_out": []
    },
    "838": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565"
      ]
    },
    "840": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f666565",
        "0"
      ]
    },
    "841": {
      "op": "app_global_put",
      "stack_out": []
    },
    "842": {
      "op": "bytec 16 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "844": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "0"
      ]
    },
    "845": {
      "op": "app_global_put",
      "stack_out": []
    },
    "846": {
      "op": "bytec 17 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "848": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "0"
      ]
    },
    "849": {
      "op": "app_global_put",
      "stack_out": []
    },
    "850": {
      "op": "bytec 39 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "852": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "853": {
      "op": "app_global_put",
      "stack_out": []
    },
    "854": {
      "op": "bytec 18 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "856": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "0"
      ]
    },
    "857": {
      "op": "app_global_put",
      "stack_out": []
    },
    "858": {
      "op": "bytec 19 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "860": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "0"
      ]
    },
    "861": {
      "op": "app_global_put",
      "stack_out": []
    },
    "862": {
      "op": "bytec 20 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "864": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "0"
      ]
    },
    "865": {
      "op": "app_global_put",
      "stack_out": []
    },
    "866": {
      "op": "bytec 21 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "869": {
      "op": "app_global_put",
      "stack_out": []
    },
    "870": {
      "op": "bytec 22 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "872": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "873": {
      "op": "app_global_put",
      "stack_out": []
    },
    "874": {
      "op": "bytec 23 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "876": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "877": {
      "op": "app_global_put",
      "stack_out": []
    },
    "878": {
      "op": "bytec 24 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "880": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "881": {
      "op": "app_global_put",
      "stack_out": []
    },
    "882": {
      "op": "bytec 25 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "884": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "885": {
      "op": "app_global_put",
      "stack_out": []
    },
    "886": {
      "op": "bytec 26 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "888": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "889": {
      "op": "app_global_put",
      "stack_out": []
    },
    "890": {
      "op": "bytec 27 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "892": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "893": {
      "op": "app_global_put",
      "stack_out": []
    },
    "894": {
      "op": "bytec 28 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "896": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "897": {
      "op": "app_global_put",
      "stack_out": []
    },
    "898": {
      "op": "bytec 29 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "0"
      ]
    },
    "901": {
      "op": "app_global_put",
      "stack_out": []
    },
    "902": {
      "op": "bytec 40 // 0x7374616c655f70726f706f73616c5f6475726174696f6e",
      "defined_out": [
        "0x7374616c655f70726f706f73616c5f6475726174696f6e"
      ],
      "stack_out": [
        "0x7374616c655f70726f706f73616c5f6475726174696f6e"
      ]
    },
    "904": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7374616c655f70726f706f73616c5f6475726174696f6e",
        "0"
      ]
    },
    "905": {
      "op": "app_global_put",
      "stack_out": []
    },
    "906": {
      "op": "bytec 30 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "908": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "909": {
      "op": "app_global_put",
      "stack_out": []
    },
    "910": {
      "op": "bytec 31 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "912": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "913": {
      "op": "app_global_put",
      "stack_out": []
    },
    "914": {
      "op": "bytec 32 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "916": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "0"
      ]
    },
    "917": {
      "op": "app_global_put",
      "stack_out": []
    },
    "918": {
      "op": "bytec 33 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "920": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "921": {
      "op": "app_global_put",
      "stack_out": []
    },
    "922": {
      "op": "bytec 34 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "924": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "925": {
      "op": "app_global_put",
      "stack_out": []
    },
    "926": {
      "op": "bytec 35 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "928": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "0"
      ]
    },
    "929": {
      "op": "app_global_put",
      "stack_out": []
    },
    "930": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "931": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "0"
      ]
    },
    "932": {
      "op": "app_global_put",
      "stack_out": []
    },
    "933": {
      "op": "bytec 36 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "935": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "936": {
      "op": "app_global_put",
      "stack_out": []
    },
    "937": {
      "op": "bytec 37 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "939": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "940": {
      "op": "app_global_put",
      "stack_out": []
    },
    "941": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "943": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "0"
      ]
    },
    "944": {
      "op": "app_global_put",
      "stack_out": []
    },
    "945": {
      "op": "bytec 12 // 0x726571756573745f6964",
      "defined_out": [
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0x726571756573745f6964"
      ]
    },
    "947": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x726571756573745f6964",
        "0"
      ]
    },
    "948": {
      "op": "app_global_put",
      "stack_out": []
    },
    "949": {
      "retsub": true,
      "op": "retsub"
    },
    "950": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "953": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "955": {
      "op": "bz __puya_arc4_router___after_if_else@30",
      "stack_out": []
    },
    "958": {
      "op": "pushbytess 0x4c5c61ba 0xd6c9cc1a 0x5c484055 0x11cf9720 0xd4216b6e 0xba8520f2 0x1677b30e 0xaa348d0d 0xae72cd8c 0x4956c1ab 0xa082cef8 0x76725559 0x5ed6cd29 0x04f9322b 0x45077390 0x3c31bc02 0x0da27885 0x7a4fee43 0x52dd10d7 0xd4d37a64 0x34349dcc 0xdb27b9af 0xfdc695c2 0xba90ab54 0x6f732269 // method \"create()void\", method \"set_xgov_manager(address)void\", method \"set_payor(address)void\", method \"set_xgov_reviewer(address)void\", method \"set_xgov_subscriber(address)void\", method \"set_kyc_provider(address)void\", method \"set_committee_manager(address)void\", method \"set_committee_publisher(address)void\", method \"config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3]))void\", method \"update_xgov_registry()void\", method \"subscribe_xgov(address,pay)void\", method \"unsubscribe_xgov(address)void\", method \"subscribe_xgov_app(uint64,pay)void\", method \"unsubscribe_xgov_app(uint64)void\", method \"request_subscribe_xgov(address,address,uint64,pay)void\", method \"approve_subscribe_xgov(uint64)void\", method \"set_voting_account(address,address)void\", method \"subscribe_proposer(pay)void\", method \"set_proposer_kyc(address,bool,uint64)void\", method \"declare_committee(byte[32],uint64,uint64)void\", method \"open_proposal(pay)uint64\", method \"pay_grant_proposal(uint64)void\", method \"deposit_funds(pay)void\", method \"withdraw_funds(uint64)void\", method \"get_state()(address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64)\""
    },
    "1085": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3]))void)",
        "Method(create()void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(get_state()(address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(open_proposal(pay)uint64)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_committee_publisher(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_reviewer(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(subscribe_xgov_app(uint64,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(unsubscribe_xgov_app(uint64)void)",
        "Method(update_xgov_registry()void)",
        "Method(withdraw_funds(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_reviewer(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_committee_publisher(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3]))void)",
        "Method(update_xgov_registry()void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(subscribe_xgov_app(uint64,pay)void)",
        "Method(unsubscribe_xgov_app(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(get_state()(address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "tmp%2#0"
      ]
    },
    "1088": {
      "op": "match __puya_arc4_router___create_route@2 __puya_arc4_router___set_xgov_manager_route@3 __puya_arc4_router___set_payor_route@4 __puya_arc4_router___set_xgov_reviewer_route@5 __puya_arc4_router___set_xgov_subscriber_route@6 __puya_arc4_router___set_kyc_provider_route@7 __puya_arc4_router___set_committee_manager_route@8 __puya_arc4_router___set_committee_publisher_route@9 __puya_arc4_router___config_xgov_registry_route@10 __puya_arc4_router___update_xgov_registry_route@11 __puya_arc4_router___subscribe_xgov_route@12 __puya_arc4_router___unsubscribe_xgov_route@13 __puya_arc4_router___subscribe_xgov_app_route@14 __puya_arc4_router___unsubscribe_xgov_app_route@15 __puya_arc4_router___request_subscribe_xgov_route@16 __puya_arc4_router___approve_subscribe_xgov_route@17 __puya_arc4_router___set_voting_account_route@18 __puya_arc4_router___subscribe_proposer_route@19 __puya_arc4_router___set_proposer_kyc_route@20 __puya_arc4_router___declare_committee_route@21 __puya_arc4_router___open_proposal_route@22 __puya_arc4_router___pay_grant_proposal_route@23 __puya_arc4_router___deposit_funds_route@24 __puya_arc4_router___withdraw_funds_route@25 __puya_arc4_router___get_state_route@26",
      "stack_out": []
    },
    "1140": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1141": {
      "retsub": true,
      "op": "retsub"
    },
    "1142": {
      "block": "__puya_arc4_router___create_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1144": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1145": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1146": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1148": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1149": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1150": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "op": "callsub create"
    },
    "1153": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1154": {
      "retsub": true,
      "op": "retsub"
    },
    "1155": {
      "block": "__puya_arc4_router___set_xgov_manager_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1157": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1158": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1159": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1161": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1162": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1165": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "op": "callsub set_xgov_manager",
      "stack_out": []
    },
    "1168": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1169": {
      "retsub": true,
      "op": "retsub"
    },
    "1170": {
      "block": "__puya_arc4_router___set_payor_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1172": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1173": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1174": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1176": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1177": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1180": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "op": "callsub set_payor",
      "stack_out": []
    },
    "1183": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1184": {
      "retsub": true,
      "op": "retsub"
    },
    "1185": {
      "block": "__puya_arc4_router___set_xgov_reviewer_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1187": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1188": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1191": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1192": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1195": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_reviewer",
      "op": "callsub set_xgov_reviewer",
      "stack_out": []
    },
    "1198": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1199": {
      "retsub": true,
      "op": "retsub"
    },
    "1200": {
      "block": "__puya_arc4_router___set_xgov_subscriber_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1202": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1203": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1204": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1206": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1207": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1210": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "op": "callsub set_xgov_subscriber",
      "stack_out": []
    },
    "1213": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1214": {
      "retsub": true,
      "op": "retsub"
    },
    "1215": {
      "block": "__puya_arc4_router___set_kyc_provider_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1217": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1218": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1219": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1221": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1222": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1225": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "op": "callsub set_kyc_provider",
      "stack_out": []
    },
    "1228": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1229": {
      "retsub": true,
      "op": "retsub"
    },
    "1230": {
      "block": "__puya_arc4_router___set_committee_manager_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1232": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1233": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1234": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1236": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1237": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1240": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "op": "callsub set_committee_manager",
      "stack_out": []
    },
    "1243": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1244": {
      "retsub": true,
      "op": "retsub"
    },
    "1245": {
      "block": "__puya_arc4_router___set_committee_publisher_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1247": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1248": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1249": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1251": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1252": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1255": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_publisher",
      "op": "callsub set_committee_publisher",
      "stack_out": []
    },
    "1258": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1259": {
      "retsub": true,
      "op": "retsub"
    },
    "1260": {
      "block": "__puya_arc4_router___config_xgov_registry_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1262": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1263": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1264": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1266": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1267": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1270": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "op": "callsub config_xgov_registry",
      "stack_out": []
    },
    "1273": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1274": {
      "retsub": true,
      "op": "retsub"
    },
    "1275": {
      "block": "__puya_arc4_router___update_xgov_registry_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "1277": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "UpdateApplication"
      ]
    },
    "1279": {
      "op": "==",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1280": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "1281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1283": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1284": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "op": "callsub update_xgov_registry"
    },
    "1287": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1288": {
      "retsub": true,
      "op": "retsub"
    },
    "1289": {
      "block": "__puya_arc4_router___subscribe_xgov_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1291": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1292": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1293": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1295": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1296": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1299": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "1301": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0",
        "1"
      ]
    },
    "1302": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0"
      ]
    },
    "1303": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "1304": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "1306": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1307": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1308": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0"
      ]
    },
    "1309": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "op": "callsub subscribe_xgov",
      "stack_out": []
    },
    "1312": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1313": {
      "retsub": true,
      "op": "retsub"
    },
    "1314": {
      "block": "__puya_arc4_router___unsubscribe_xgov_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1316": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1317": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1318": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1320": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1321": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "1324": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "op": "callsub unsubscribe_xgov",
      "stack_out": []
    },
    "1327": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1328": {
      "retsub": true,
      "op": "retsub"
    },
    "1329": {
      "block": "__puya_arc4_router___subscribe_xgov_app_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "1331": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "1332": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1333": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "1335": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1336": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "1339": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "1341": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "1"
      ]
    },
    "1342": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "gtxn_idx%1#0"
      ]
    },
    "1343": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "1344": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "1346": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "1347": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "1348": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%66#0",
        "gtxn_idx%1#0"
      ]
    },
    "1349": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov_app",
      "op": "callsub subscribe_xgov_app",
      "stack_out": []
    },
    "1352": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1353": {
      "retsub": true,
      "op": "retsub"
    },
    "1354": {
      "block": "__puya_arc4_router___unsubscribe_xgov_app_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "1356": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1357": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1358": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1360": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1361": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1364": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov_app",
      "op": "callsub unsubscribe_xgov_app",
      "stack_out": []
    },
    "1367": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1368": {
      "retsub": true,
      "op": "retsub"
    },
    "1369": {
      "block": "__puya_arc4_router___request_subscribe_xgov_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1371": {
      "op": "!",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "1372": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1373": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1375": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1376": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "1379": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%77#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0"
      ]
    },
    "1382": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ]
    },
    "1385": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ]
    },
    "1387": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "1"
      ]
    },
    "1388": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "gtxn_idx%2#0"
      ]
    },
    "1389": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "1390": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "1392": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "1393": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "1394": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%77#0",
        "tmp%78#0",
        "tmp%79#0",
        "gtxn_idx%2#0"
      ]
    },
    "1395": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "op": "callsub request_subscribe_xgov",
      "stack_out": []
    },
    "1398": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1399": {
      "retsub": true,
      "op": "retsub"
    },
    "1400": {
      "block": "__puya_arc4_router___approve_subscribe_xgov_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1402": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1403": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1404": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1406": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1407": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "1410": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "op": "callsub approve_subscribe_xgov",
      "stack_out": []
    },
    "1413": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1414": {
      "retsub": true,
      "op": "retsub"
    },
    "1415": {
      "block": "__puya_arc4_router___set_voting_account_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "1417": {
      "op": "!",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1418": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1419": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1421": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1422": {
      "op": "txna ApplicationArgs 1"
    },
    "1425": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%90#0",
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%90#0",
        "tmp%91#0"
      ]
    },
    "1428": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "op": "callsub set_voting_account",
      "stack_out": []
    },
    "1431": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1432": {
      "retsub": true,
      "op": "retsub"
    },
    "1433": {
      "block": "__puya_arc4_router___subscribe_proposer_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "1435": {
      "op": "!",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "1436": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1437": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "1439": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1440": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "1442": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "1"
      ]
    },
    "1443": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1444": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "1445": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "1447": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "1448": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "1449": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1450": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "op": "callsub subscribe_proposer",
      "stack_out": []
    },
    "1453": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1454": {
      "retsub": true,
      "op": "retsub"
    },
    "1455": {
      "block": "__puya_arc4_router___set_proposer_kyc_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "1457": {
      "op": "!",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "1458": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1459": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "1461": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1462": {
      "op": "txna ApplicationArgs 1"
    },
    "1465": {
      "op": "txna ApplicationArgs 2"
    },
    "1468": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%101#0",
        "tmp%102#0",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%101#0",
        "tmp%102#0",
        "tmp%103#0"
      ]
    },
    "1471": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "op": "callsub set_proposer_kyc",
      "stack_out": []
    },
    "1474": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1475": {
      "retsub": true,
      "op": "retsub"
    },
    "1476": {
      "block": "__puya_arc4_router___declare_committee_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "1478": {
      "op": "!",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "1479": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1480": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "1482": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1483": {
      "op": "txna ApplicationArgs 1"
    },
    "1486": {
      "op": "txna ApplicationArgs 2"
    },
    "1489": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%108#0",
        "tmp%109#0",
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%108#0",
        "tmp%109#0",
        "tmp%110#0"
      ]
    },
    "1492": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "op": "callsub declare_committee",
      "stack_out": []
    },
    "1495": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1496": {
      "retsub": true,
      "op": "retsub"
    },
    "1497": {
      "block": "__puya_arc4_router___open_proposal_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "1499": {
      "op": "!",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "1500": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1501": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "1503": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1504": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "1506": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0",
        "1"
      ]
    },
    "1507": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "1508": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "1509": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "1511": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "1512": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "1513": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "1514": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "op": "callsub open_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1517": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1518": {
      "op": "bytec 41 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1520": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1521": {
      "op": "concat",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "1522": {
      "op": "log",
      "stack_out": []
    },
    "1523": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1524": {
      "retsub": true,
      "op": "retsub"
    },
    "1525": {
      "block": "__puya_arc4_router___pay_grant_proposal_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "1527": {
      "op": "!",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "1528": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1529": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "1531": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1532": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "1535": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "op": "callsub pay_grant_proposal",
      "stack_out": []
    },
    "1538": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1539": {
      "retsub": true,
      "op": "retsub"
    },
    "1540": {
      "block": "__puya_arc4_router___deposit_funds_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "1542": {
      "op": "!",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "1543": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1544": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "1546": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1547": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "1549": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0",
        "1"
      ]
    },
    "1550": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "1551": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "1552": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "1554": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "1555": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "1556": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "1557": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "op": "callsub deposit_funds",
      "stack_out": []
    },
    "1560": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1561": {
      "retsub": true,
      "op": "retsub"
    },
    "1562": {
      "block": "__puya_arc4_router___withdraw_funds_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "1564": {
      "op": "!",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "1565": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1566": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "1568": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1569": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "1572": {
      "op": "btoi",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "1573": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "op": "callsub withdraw_funds",
      "stack_out": []
    },
    "1576": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1577": {
      "retsub": true,
      "op": "retsub"
    },
    "1578": {
      "block": "__puya_arc4_router___get_state_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "1580": {
      "op": "!",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "1581": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1582": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "1584": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1585": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "1588": {
      "op": "bytec 41 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0",
        "0x151f7c75"
      ]
    },
    "1590": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%137#0"
      ]
    },
    "1591": {
      "op": "concat",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "1592": {
      "op": "log",
      "stack_out": []
    },
    "1593": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1594": {
      "retsub": true,
      "op": "retsub"
    },
    "1595": {
      "block": "__puya_arc4_router___after_if_else@30",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1596": {
      "retsub": true,
      "op": "retsub"
    },
    "1597": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1600": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572"
    },
    "1602": {
      "op": "txn Sender",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "new_state_value%0#0"
      ]
    },
    "1604": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1605": {
      "retsub": true,
      "op": "retsub"
    },
    "1606": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_xgov_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1609": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1612": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1613": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "1615": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1617": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1618": {
      "retsub": true,
      "op": "retsub"
    },
    "1619": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "params": {},
      "block": "is_xgov_manager",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1622": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1624": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1625": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "1627": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1628": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1629": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1630": {
      "retsub": true,
      "op": "retsub"
    },
    "1631": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "params": {
        "payor#0": "bytes"
      },
      "block": "set_payor",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1634": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1637": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1638": {
      "op": "bytec 7 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "1640": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ]
    },
    "1642": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1643": {
      "retsub": true,
      "op": "retsub"
    },
    "1644": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_reviewer",
      "params": {
        "reviewer#0": "bytes"
      },
      "block": "set_xgov_reviewer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1647": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1650": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1651": {
      "op": "bytec 38 // 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572"
      ]
    },
    "1653": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "reviewer#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572",
        "reviewer#0 (copy)"
      ]
    },
    "1655": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1656": {
      "retsub": true,
      "op": "retsub"
    },
    "1657": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "params": {
        "subscriber#0": "bytes"
      },
      "block": "set_xgov_subscriber",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1660": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1663": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1664": {
      "op": "bytec 14 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "1666": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ]
    },
    "1668": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1669": {
      "retsub": true,
      "op": "retsub"
    },
    "1670": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "params": {
        "provider#0": "bytes"
      },
      "block": "set_kyc_provider",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1673": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1676": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1677": {
      "op": "bytec 8 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "1679": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ]
    },
    "1681": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1682": {
      "retsub": true,
      "op": "retsub"
    },
    "1683": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_committee_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1686": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1689": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1690": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "1692": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1694": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1695": {
      "retsub": true,
      "op": "retsub"
    },
    "1696": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_publisher",
      "params": {
        "publisher#0": "bytes"
      },
      "block": "set_committee_publisher",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1699": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1702": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1703": {
      "op": "bytec 15 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1705": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "publisher#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "publisher#0 (copy)"
      ]
    },
    "1707": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1708": {
      "retsub": true,
      "op": "retsub"
    },
    "1709": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "params": {
        "config#0": "bytes"
      },
      "block": "config_xgov_registry",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1712": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1715": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1716": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.no_pending_proposals",
      "op": "callsub no_pending_proposals",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1719": {
      "error": "Cannot perform operation with pending proposals",
      "op": "assert // Cannot perform operation with pending proposals",
      "stack_out": []
    },
    "1720": {
      "op": "frame_dig -1",
      "defined_out": [
        "config#0 (copy)"
      ],
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1722": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1725": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1726": {
      "op": "bytec 10 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f765f666565"
      ]
    },
    "1728": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f666565",
        "new_state_value%0#0"
      ]
    },
    "1729": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1730": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1732": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1735": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "1736": {
      "op": "bytec 11 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1738": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "new_state_value%1#0"
      ]
    },
    "1739": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1740": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1742": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1745": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%2#0"
      ]
    },
    "1746": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%2#0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "1748": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f73616c5f666565",
        "new_state_value%2#0"
      ]
    },
    "1749": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1750": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1752": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1755": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0"
      ]
    },
    "1756": {
      "op": "bytec 16 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "1758": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "new_state_value%3#0"
      ]
    },
    "1759": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1760": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1762": {
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1765": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%4#0"
      ],
      "stack_out": [
        "new_state_value%4#0"
      ]
    },
    "1766": {
      "op": "bytec 17 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "new_state_value%4#0"
      ],
      "stack_out": [
        "new_state_value%4#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1768": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "new_state_value%4#0"
      ]
    },
    "1769": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1770": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1772": {
      "op": "extract 48 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1775": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1776": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1779": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%5#0"
      ]
    },
    "1780": {
      "op": "bytec 18 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "new_state_value%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%5#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1782": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "new_state_value%5#0"
      ]
    },
    "1783": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1784": {
      "op": "dup",
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1785": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%10#0"
      ]
    },
    "1788": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%6#0"
      ]
    },
    "1789": {
      "op": "bytec 19 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "new_state_value%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%6#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1791": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "new_state_value%6#0"
      ]
    },
    "1792": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1793": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1796": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%7#0"
      ],
      "stack_out": [
        "new_state_value%7#0"
      ]
    },
    "1797": {
      "op": "bytec 20 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "new_state_value%7#0"
      ],
      "stack_out": [
        "new_state_value%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1799": {
      "op": "swap",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "new_state_value%7#0"
      ]
    },
    "1800": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1801": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1803": {
      "op": "extract 72 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1806": {
      "op": "dup",
      "defined_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1807": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1810": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%8#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%8#0"
      ]
    },
    "1811": {
      "op": "bytec 21 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "new_state_value%8#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%8#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1813": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "new_state_value%8#0"
      ]
    },
    "1814": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1815": {
      "op": "dup",
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1816": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "1819": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%9#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%9#0"
      ]
    },
    "1820": {
      "op": "bytec 22 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "new_state_value%9#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%9#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1822": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "new_state_value%9#0"
      ]
    },
    "1823": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1824": {
      "op": "dup",
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1825": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%18#0"
      ]
    },
    "1828": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%10#0"
      ]
    },
    "1829": {
      "op": "bytec 23 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "new_state_value%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%10#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1831": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "new_state_value%10#0"
      ]
    },
    "1832": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1833": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1836": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%11#0"
      ],
      "stack_out": [
        "new_state_value%11#0"
      ]
    },
    "1837": {
      "op": "bytec 24 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "new_state_value%11#0"
      ],
      "stack_out": [
        "new_state_value%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "1839": {
      "op": "swap",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "new_state_value%11#0"
      ]
    },
    "1840": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1841": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1843": {
      "op": "extract 104 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1846": {
      "op": "dup",
      "defined_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1847": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1850": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%12#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%12#0"
      ]
    },
    "1851": {
      "op": "bytec 25 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "new_state_value%12#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%12#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "1853": {
      "op": "swap",
      "stack_out": [
        "tmp%21#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "new_state_value%12#0"
      ]
    },
    "1854": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1855": {
      "op": "dup",
      "stack_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1856": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "1859": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%13#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%13#0"
      ]
    },
    "1860": {
      "op": "bytec 26 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "new_state_value%13#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%13#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "1862": {
      "op": "swap",
      "stack_out": [
        "tmp%21#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "new_state_value%13#0"
      ]
    },
    "1863": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1864": {
      "op": "dup",
      "stack_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1865": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%26#0"
      ]
    },
    "1868": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%14#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%14#0"
      ]
    },
    "1869": {
      "op": "bytec 27 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "new_state_value%14#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%14#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "1871": {
      "op": "swap",
      "stack_out": [
        "tmp%21#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "new_state_value%14#0"
      ]
    },
    "1872": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1873": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1876": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%15#0"
      ],
      "stack_out": [
        "new_state_value%15#0"
      ]
    },
    "1877": {
      "op": "bytec 28 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "new_state_value%15#0"
      ],
      "stack_out": [
        "new_state_value%15#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "1879": {
      "op": "swap",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "new_state_value%15#0"
      ]
    },
    "1880": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1881": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1883": {
      "op": "extract 136 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1886": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%16#0"
      ],
      "stack_out": [
        "new_state_value%16#0"
      ]
    },
    "1887": {
      "op": "bytec 29 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "new_state_value%16#0"
      ],
      "stack_out": [
        "new_state_value%16#0",
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "1889": {
      "op": "swap",
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "new_state_value%16#0"
      ]
    },
    "1890": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1891": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1893": {
      "op": "extract 152 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1896": {
      "op": "dup",
      "defined_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "1897": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "1900": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%17#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%17#0"
      ]
    },
    "1901": {
      "op": "bytec 30 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "new_state_value%17#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%17#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "1903": {
      "op": "swap",
      "stack_out": [
        "tmp%30#0",
        "0x71756f72756d5f736d616c6c",
        "new_state_value%17#0"
      ]
    },
    "1904": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1905": {
      "op": "dup",
      "stack_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "1906": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%30#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%33#0"
      ]
    },
    "1909": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%18#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%18#0"
      ]
    },
    "1910": {
      "op": "bytec 31 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "new_state_value%18#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%18#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "1912": {
      "op": "swap",
      "stack_out": [
        "tmp%30#0",
        "0x71756f72756d5f6d656469756d",
        "new_state_value%18#0"
      ]
    },
    "1913": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1914": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1917": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%19#0"
      ],
      "stack_out": [
        "new_state_value%19#0"
      ]
    },
    "1918": {
      "op": "bytec 32 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "new_state_value%19#0"
      ],
      "stack_out": [
        "new_state_value%19#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "1920": {
      "op": "swap",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "new_state_value%19#0"
      ]
    },
    "1921": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1922": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1924": {
      "op": "extract 176 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1927": {
      "op": "dup",
      "defined_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ]
    },
    "1928": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "1931": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%20#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%20#0"
      ]
    },
    "1932": {
      "op": "bytec 33 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "new_state_value%20#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%20#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "1934": {
      "op": "swap",
      "stack_out": [
        "tmp%36#0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "new_state_value%20#0"
      ]
    },
    "1935": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1936": {
      "op": "dup",
      "stack_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ]
    },
    "1937": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%36#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%39#0"
      ]
    },
    "1940": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%21#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%21#0"
      ]
    },
    "1941": {
      "op": "bytec 34 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "new_state_value%21#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%21#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "1943": {
      "op": "swap",
      "stack_out": [
        "tmp%36#0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "new_state_value%21#0"
      ]
    },
    "1944": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1945": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1948": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%22#0"
      ],
      "stack_out": [
        "new_state_value%22#0"
      ]
    },
    "1949": {
      "op": "bytec 35 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "new_state_value%22#0"
      ],
      "stack_out": [
        "new_state_value%22#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "1951": {
      "op": "swap",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "new_state_value%22#0"
      ]
    },
    "1952": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1953": {
      "retsub": true,
      "op": "retsub"
    },
    "1954": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.no_pending_proposals",
      "params": {},
      "block": "no_pending_proposals",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1957": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1958": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1960": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1961": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1962": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1963": {
      "retsub": true,
      "op": "retsub"
    },
    "1964": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "params": {},
      "block": "update_xgov_registry",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1967": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1970": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1971": {
      "retsub": true,
      "op": "retsub"
    },
    "1972": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "params": {
        "voting_address#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1975": {
      "op": "bytec_2 // 0x78"
    },
    "1976": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x78",
        "tmp%0#0"
      ]
    },
    "1978": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1979": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1980": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1982": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1983": {
      "error": "Already an xgov",
      "op": "assert // Already an xgov",
      "stack_out": []
    },
    "1984": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1986": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1989": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "1990": {
      "op": "bytec_2 // 0x78"
    },
    "1991": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "tmp%4#0"
      ],
      "stack_out": [
        "0x78",
        "tmp%4#0"
      ]
    },
    "1993": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1994": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%5#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "voting_address#0 (copy)"
      ]
    },
    "1996": {
      "op": "box_put",
      "stack_out": []
    },
    "1997": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1998": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1999": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2000": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2001": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2002": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2003": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2004": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2005": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2006": {
      "retsub": true,
      "op": "retsub"
    },
    "2007": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "params": {
        "payment#0": "uint64"
      },
      "block": "valid_xgov_payment",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2010": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2012": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2014": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2016": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2017": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "2020": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2022": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2024": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "2025": {
      "op": "bytec 10 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "2027": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2028": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "2029": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2030": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "2033": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "2034": {
      "op": "b valid_xgov_payment_bool_merge@4"
    },
    "2037": {
      "block": "valid_xgov_payment_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "2038": {
      "block": "valid_xgov_payment_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "2039": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "params": {
        "xgov_address#0": "bytes"
      },
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2042": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2043": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2045": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2046": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2048": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2049": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2051": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2052": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_exists%1#0"
      ]
    },
    "2053": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2054": {
      "op": "frame_dig -1"
    },
    "2056": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0",
        "voting_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "xgov_address#0 (copy)",
        "tmp%2#0"
      ]
    },
    "2058": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "tmp%3#0"
      ]
    },
    "2059": {
      "op": "bnz unsubscribe_xgov_bool_true@2",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2062": {
      "op": "frame_dig 1"
    },
    "2064": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%4#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "voting_address#0",
        "tmp%4#0"
      ]
    },
    "2066": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%5#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "tmp%5#0"
      ]
    },
    "2067": {
      "op": "bz unsubscribe_xgov_bool_false@3",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2070": {
      "block": "unsubscribe_xgov_bool_true@2",
      "stack_in": [
        "tmp%0#0",
        "voting_address#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "2071": {
      "op": "b unsubscribe_xgov_bool_merge@4"
    },
    "2074": {
      "block": "unsubscribe_xgov_bool_false@3",
      "stack_in": [
        "tmp%0#0",
        "voting_address#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "2075": {
      "block": "unsubscribe_xgov_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "voting_address#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2076": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "tmp%0#0"
      ]
    },
    "2078": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "{box_del}"
      ]
    },
    "2079": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2080": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "0"
      ]
    },
    "2081": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "0",
        "0x78676f7673"
      ]
    },
    "2082": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2083": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_value%2#0"
      ]
    },
    "2084": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "2085": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "new_state_value%0#0"
      ]
    },
    "2086": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2087": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2088": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2089": {
      "retsub": true,
      "op": "retsub"
    },
    "2090": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov_app",
      "params": {
        "app#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "subscribe_xgov_app",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2093": {
      "op": "frame_dig -2",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0 (copy)"
      ]
    },
    "2095": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2096": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2097": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "app_creator#0",
        "check%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "app_creator#0",
        "check%0#0"
      ]
    },
    "2099": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "app_creator#0"
      ]
    },
    "2100": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "tmp%0#0"
      ]
    },
    "2101": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "check%1#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "check%1#0"
      ]
    },
    "2103": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app_creator#0",
        "app_address#0"
      ]
    },
    "2104": {
      "op": "txn Sender",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "tmp%2#0"
      ]
    },
    "2106": {
      "op": "dig 2",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "app_creator#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "tmp%2#0",
        "app_creator#0 (copy)"
      ]
    },
    "2108": {
      "op": "==",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "tmp%3#0"
      ]
    },
    "2109": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "app_creator#0",
        "app_address#0"
      ]
    },
    "2110": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "app_address#0",
        "app_creator#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "0x78"
      ]
    },
    "2111": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "0x78",
        "app_address#0"
      ]
    },
    "2112": {
      "op": "concat",
      "defined_out": [
        "app_creator#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%4#0"
      ]
    },
    "2113": {
      "op": "dup",
      "defined_out": [
        "app_creator#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2114": {
      "op": "box_len",
      "defined_out": [
        "app_creator#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%4#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2115": {
      "op": "bury 1",
      "stack_out": [
        "app_creator#0",
        "tmp%4#0",
        "maybe_exists%0#0"
      ]
    },
    "2117": {
      "op": "!",
      "defined_out": [
        "app_creator#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2118": {
      "error": "Already an xgov",
      "op": "assert // Already an xgov",
      "stack_out": [
        "app_creator#0",
        "tmp%4#0"
      ]
    },
    "2119": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_creator#0",
        "payment#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%4#0",
        "payment#0 (copy)"
      ]
    },
    "2121": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "app_creator#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "2124": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "app_creator#0",
        "tmp%4#0"
      ]
    },
    "2125": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "app_creator#0"
      ]
    },
    "2126": {
      "op": "box_put",
      "stack_out": []
    },
    "2127": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2128": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "2129": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2130": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2131": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2132": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2133": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2134": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2135": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2136": {
      "retsub": true,
      "op": "retsub"
    },
    "2137": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov_app",
      "params": {
        "app#0": "bytes"
      },
      "block": "unsubscribe_xgov_app",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2140": {
      "op": "frame_dig -1",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0 (copy)"
      ]
    },
    "2142": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2143": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2144": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "app_creator#0",
        "check%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "app_creator#0",
        "check%0#0"
      ]
    },
    "2146": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "app_creator#0"
      ]
    },
    "2147": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "tmp%0#0"
      ]
    },
    "2148": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "check%1#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "check%1#0"
      ]
    },
    "2150": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app_creator#0",
        "app_address#0"
      ]
    },
    "2151": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "app_address#0",
        "app_creator#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "0x78"
      ]
    },
    "2152": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "0x78",
        "app_address#0"
      ]
    },
    "2153": {
      "op": "concat",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%2#0"
      ]
    },
    "2154": {
      "op": "dup",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2155": {
      "op": "box_len",
      "defined_out": [
        "app_creator#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2156": {
      "op": "bury 1",
      "stack_out": [
        "app_creator#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "2158": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "app_creator#0",
        "tmp%2#0"
      ]
    },
    "2159": {
      "op": "txn Sender",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2161": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "app_creator#0"
      ]
    },
    "2163": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "2164": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2165": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2166": {
      "op": "pop",
      "stack_out": []
    },
    "2167": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2168": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "2169": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2170": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2171": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2172": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2173": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2174": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2175": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2176": {
      "retsub": true,
      "op": "retsub"
    },
    "2177": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "params": {
        "xgov_address#0": "bytes",
        "owner_address#0": "bytes",
        "relation_type#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "request_subscribe_xgov",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2180": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2181": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2183": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2184": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2185": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2187": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2188": {
      "error": "Already an xgov",
      "op": "assert // Already an xgov",
      "stack_out": []
    },
    "2189": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2191": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2194": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "2195": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2196": {
      "op": "bytec 12 // 0x726571756573745f6964",
      "defined_out": [
        "0",
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0",
        "0x726571756573745f6964"
      ]
    },
    "2198": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "maybe_exists%1#0"
      ]
    },
    "2199": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "rid#0"
      ]
    },
    "2200": {
      "op": "frame_dig -4",
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)"
      ]
    },
    "2202": {
      "op": "frame_dig -3",
      "defined_out": [
        "owner_address#0 (copy)",
        "rid#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)",
        "owner_address#0 (copy)"
      ]
    },
    "2204": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2205": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)"
      ]
    },
    "2207": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2208": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ]
    },
    "2209": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%3#0"
      ]
    },
    "2210": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2211": {
      "op": "box_put",
      "stack_out": []
    },
    "2212": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2213": {
      "op": "bytec 12 // 0x726571756573745f6964",
      "stack_out": [
        "0",
        "0x726571756573745f6964"
      ]
    },
    "2215": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2216": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "2217": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "2218": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2219": {
      "op": "bytec 12 // 0x726571756573745f6964",
      "stack_out": [
        "new_state_value%0#0",
        "0x726571756573745f6964"
      ]
    },
    "2221": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f6964",
        "new_state_value%0#0"
      ]
    },
    "2222": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2223": {
      "retsub": true,
      "op": "retsub"
    },
    "2224": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "approve_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2227": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2230": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2231": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "2233": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2234": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2235": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2236": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "request#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "request#0",
        "maybe_exists%0#0"
      ]
    },
    "2237": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "tmp%2#0",
        "request#0"
      ]
    },
    "2238": {
      "op": "dup",
      "defined_out": [
        "request#0",
        "request#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "2239": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "request#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "request#0",
        "tmp%4#0"
      ]
    },
    "2242": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "request#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "request#0",
        "tmp%4#0",
        "0x78"
      ]
    },
    "2243": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "request#0",
        "0x78",
        "tmp%4#0"
      ]
    },
    "2244": {
      "op": "concat",
      "defined_out": [
        "request#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "request#0",
        "tmp%5#0"
      ]
    },
    "2245": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0",
        "request#0"
      ]
    },
    "2246": {
      "op": "extract 32 32 // on error: Index access is out of bounds",
      "defined_out": [
        "new_box_value%0#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0",
        "new_box_value%0#0"
      ]
    },
    "2249": {
      "op": "box_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2250": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "2251": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "0x78676f7673"
      ]
    },
    "2252": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2253": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "2254": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2255": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_state_value%0#0"
      ]
    },
    "2256": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "tmp%2#0",
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2257": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2258": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2259": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2260": {
      "op": "pop",
      "stack_out": []
    },
    "2261": {
      "retsub": true,
      "op": "retsub"
    },
    "2262": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "params": {},
      "block": "is_xgov_subscriber",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2265": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2267": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2268": {
      "op": "bytec 14 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "2270": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2271": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2272": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2273": {
      "retsub": true,
      "op": "retsub"
    },
    "2274": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "params": {
        "xgov_address#0": "bytes",
        "voting_address#0": "bytes"
      },
      "block": "set_voting_account",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2277": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2278": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2280": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2281": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2282": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "old_voting_address#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "old_voting_address#0",
        "exists#0"
      ]
    },
    "2283": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%0#0",
        "old_voting_address#0"
      ]
    },
    "2284": {
      "op": "txn Sender",
      "defined_out": [
        "old_voting_address#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "old_voting_address#0",
        "tmp%1#0"
      ]
    },
    "2286": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2287": {
      "op": "bnz set_voting_account_bool_true@2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2290": {
      "op": "frame_dig -2"
    },
    "2292": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "xgov_address#0 (copy)",
        "tmp%3#0"
      ]
    },
    "2294": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "2295": {
      "op": "bz set_voting_account_bool_false@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2298": {
      "block": "set_voting_account_bool_true@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "or_result%0#0"
      ]
    },
    "2299": {
      "op": "b set_voting_account_bool_merge@4"
    },
    "2302": {
      "block": "set_voting_account_bool_false@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "or_result%0#0"
      ]
    },
    "2303": {
      "block": "set_voting_account_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2304": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2306": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "voting_address#0 (copy)"
      ]
    },
    "2308": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2309": {
      "retsub": true,
      "op": "retsub"
    },
    "2310": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "params": {
        "payment#0": "uint64"
      },
      "block": "subscribe_proposer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2313": {
      "op": "bytec_3 // 0x70"
    },
    "2314": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%0#0"
      ]
    },
    "2316": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2317": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2318": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2320": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2321": {
      "error": "Already a proposer",
      "op": "assert // Already a proposer",
      "stack_out": []
    },
    "2322": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2324": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2326": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2328": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2329": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2330": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2332": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2334": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "2335": {
      "op": "bytec 11 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "2337": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2338": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "tmp%6#0",
        "maybe_value%1#0"
      ]
    },
    "2339": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2340": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "2341": {
      "op": "bytec_3 // 0x70"
    },
    "2342": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%8#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%8#0"
      ]
    },
    "2344": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2345": {
      "op": "pushbytes 0x000000000000000000",
      "defined_out": [
        "0x000000000000000000",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0x000000000000000000"
      ]
    },
    "2356": {
      "op": "box_put",
      "stack_out": []
    },
    "2357": {
      "retsub": true,
      "op": "retsub"
    },
    "2358": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "params": {
        "proposer#0": "bytes",
        "kyc_status#0": "bytes",
        "kyc_expiring#0": "bytes"
      },
      "block": "set_proposer_kyc",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2361": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2363": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2364": {
      "op": "bytec 8 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "2366": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2367": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2368": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2369": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2370": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "2371": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x70",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2373": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2374": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2375": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2376": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "2378": {
      "error": "Proposer does not exist",
      "op": "assert // Proposer does not exist",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2379": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2380": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2381": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "2382": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2383": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "is_true%0#0"
      ]
    },
    "2384": {
      "op": "bytec 13 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2387": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2389": {
      "op": "setbit",
      "defined_out": [
        "active_proposal#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0"
      ]
    },
    "2390": {
      "op": "frame_dig -2",
      "defined_out": [
        "active_proposal#0",
        "kyc_status#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "kyc_status#0 (copy)"
      ]
    },
    "2392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "kyc_status#0 (copy)",
        "0"
      ]
    },
    "2393": {
      "op": "getbit",
      "defined_out": [
        "active_proposal#0",
        "is_true%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "is_true%1#0"
      ]
    },
    "2394": {
      "op": "intc_1 // 1"
    },
    "2395": {
      "op": "swap",
      "defined_out": [
        "1",
        "active_proposal#0",
        "is_true%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "1",
        "is_true%1#0"
      ]
    },
    "2396": {
      "op": "setbit",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2397": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)"
      ]
    },
    "2399": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2400": {
      "op": "box_put",
      "stack_out": []
    },
    "2401": {
      "retsub": true,
      "op": "retsub"
    },
    "2402": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "params": {
        "cid#0": "bytes",
        "size#0": "bytes",
        "votes#0": "bytes"
      },
      "block": "declare_committee",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2405": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_committee_manager",
      "op": "callsub is_xgov_committee_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2408": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2409": {
      "op": "bytec 42 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "2411": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "cid#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "cid#0 (copy)"
      ]
    },
    "2413": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2414": {
      "op": "frame_dig -2",
      "defined_out": [
        "size#0 (copy)"
      ],
      "stack_out": [
        "size#0 (copy)"
      ]
    },
    "2416": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2417": {
      "op": "bytec 36 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2419": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "new_state_value%0#0"
      ]
    },
    "2420": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2421": {
      "op": "frame_dig -1",
      "defined_out": [
        "votes#0 (copy)"
      ],
      "stack_out": [
        "votes#0 (copy)"
      ]
    },
    "2423": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "2424": {
      "op": "bytec 37 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2426": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "new_state_value%1#0"
      ]
    },
    "2427": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2428": {
      "retsub": true,
      "op": "retsub"
    },
    "2429": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_committee_manager",
      "params": {},
      "block": "is_xgov_committee_manager",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2432": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2434": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2435": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "2437": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2438": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2439": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2440": {
      "retsub": true,
      "op": "retsub"
    },
    "2441": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "params": {
        "payment#0": "uint64"
      },
      "block": "open_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2444": {
      "op": "bytec_3 // 0x70"
    },
    "2445": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%0#0"
      ]
    },
    "2447": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2448": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2449": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2451": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2452": {
      "op": "bytec_3 // 0x70"
    },
    "2453": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%2#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%2#0"
      ]
    },
    "2455": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2456": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2457": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2458": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "2459": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0"
      ]
    },
    "2460": {
      "op": "bytec 13 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0",
        "0x00"
      ]
    },
    "2462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2463": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2465": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "2466": {
      "op": "bytec 13 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "2468": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2469": {
      "error": "Proposer already has an active proposal",
      "op": "assert // Proposer already has an active proposal",
      "stack_out": []
    },
    "2470": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2472": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2475": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": []
    },
    "2476": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2478": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2480": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "3"
      ]
    },
    "2482": {
      "op": "*",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2483": {
      "op": ">=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "2484": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "2485": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2487": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2489": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2491": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "2492": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2493": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2495": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2497": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "2498": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f666565",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "2500": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2501": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "tmp%14#0",
        "maybe_value%2#0"
      ]
    },
    "2502": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "2503": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "2504": {
      "op": "itxn_begin"
    },
    "2505": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2507": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "18"
      ]
    },
    "2509": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2511": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "5"
      ]
    },
    "2513": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2515": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "CoEBQw=="
      ]
    },
    "2521": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2523": {
      "op": "pushbytes base64(CiACAAEmCAAIcHJvcG9zZXIPcmVnaXN0cnlfYXBwX2lkBnN0YXR1cxByZXF1ZXN0ZWRfYW1vdW50DGNvbW1pdHRlZV9pZBFjb21taXR0ZWVfbWVtYmVycw9jb21taXR0ZWVfdm90ZXMxGEAAA4gABIgAukOKAAApMgNnKiJngAV0aXRsZShngANjaWQoZ4AUc3VibWlzc2lvbl90aW1lc3RhbXAiZ4AWZmluYWxpemF0aW9uX3RpbWVzdGFtcCJnKyJngAhjYXRlZ29yeSJngAxmdW5kaW5nX3R5cGUiZycEImeADWxvY2tlZF9hbW91bnQiZycFKGcnBiJnJwciZ4ANdm90ZWRfbWVtYmVycyJngAlhcHByb3ZhbHMiZ4AKcmVqZWN0aW9ucyJniYoAATEbQQB8ggUEzGlOqgQTlMw8BNN5ElMEAlqYBATpSkRNNhoAjgUAAgASACIAMgBJIokxGRREMRgURDYaAYgARCOJMRkURDEYRDYaAReIAEAjiTEZFEQxGEQ2GgEXiAA4I4kxGRREMRhENhoBNhoCFzYaAxeIACojiTEZFEQxGEQjiSKJigEAKYv/ZyoyDWeJigEAK4v/Z4mKAQAnBIv/Z4mKAwAnBYv9ZycGi/5nJweL/2eJ)",
      "defined_out": [
        "CiACAAEmCAAIcHJvcG9zZXIPcmVnaXN0cnlfYXBwX2lkBnN0YXR1cxByZXF1ZXN0ZWRfYW1vdW50DGNvbW1pdHRlZV9pZBFjb21taXR0ZWVfbWVtYmVycw9jb21taXR0ZWVfdm90ZXMxGEAAA4gABIgAukOKAAApMgNnKiJngAV0aXRsZShngANjaWQoZ4AUc3VibWlzc2lvbl90aW1lc3RhbXAiZ4AWZmluYWxpemF0aW9uX3RpbWVzdGFtcCJnKyJngAhjYXRlZ29yeSJngAxmdW5kaW5nX3R5cGUiZycEImeADWxvY2tlZF9hbW91bnQiZycFKGcnBiJnJwciZ4ANdm90ZWRfbWVtYmVycyJngAlhcHByb3ZhbHMiZ4AKcmVqZWN0aW9ucyJniYoAATEbQQB8ggUEzGlOqgQTlMw8BNN5ElMEAlqYBATpSkRNNhoAjgUAAgASACIAMgBJIokxGRREMRgURDYaAYgARCOJMRkURDEYRDYaAReIAEAjiTEZFEQxGEQ2GgEXiAA4I4kxGRREMRhENhoBNhoCFzYaAxeIACojiTEZFEQxGEQjiSKJigEAKYv/ZyoyDWeJigEAK4v/Z4mKAQAnBIv/Z4mKAwAnBYv9ZycGi/5nJweL/2eJ",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "CiACAAEmCAAIcHJvcG9zZXIPcmVnaXN0cnlfYXBwX2lkBnN0YXR1cxByZXF1ZXN0ZWRfYW1vdW50DGNvbW1pdHRlZV9pZBFjb21taXR0ZWVfbWVtYmVycw9jb21taXR0ZWVfdm90ZXMxGEAAA4gABIgAukOKAAApMgNnKiJngAV0aXRsZShngANjaWQoZ4AUc3VibWlzc2lvbl90aW1lc3RhbXAiZ4AWZmluYWxpemF0aW9uX3RpbWVzdGFtcCJnKyJngAhjYXRlZ29yeSJngAxmdW5kaW5nX3R5cGUiZycEImeADWxvY2tlZF9hbW91bnQiZycFKGcnBiJnJwciZ4ANdm90ZWRfbWVtYmVycyJngAlhcHByb3ZhbHMiZ4AKcmVqZWN0aW9ucyJniYoAATEbQQB8ggUEzGlOqgQTlMw8BNN5ElMEAlqYBATpSkRNNhoAjgUAAgASACIAMgBJIokxGRREMRgURDYaAYgARCOJMRkURDEYRDYaAReIAEAjiTEZFEQxGEQ2GgEXiAA4I4kxGRREMRhENhoBNhoCFzYaAxeIACojiTEZFEQxGEQjiSKJigEAKYv/ZyoyDWeJigEAK4v/Z4mKAQAnBIv/Z4mKAwAnBYv9ZycGi/5nJweL/2eJ"
      ]
    },
    "3009": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "3011": {
      "op": "pushbytes 0xcc694eaa // method \"create(address)void\"",
      "defined_out": [
        "Method(create(address)void)",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "Method(create(address)void)"
      ]
    },
    "3017": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "3019": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3021": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3022": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3024": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3025": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3027": {
      "op": "itxn_submit"
    },
    "3028": {
      "op": "itxn CreatedApplicationID"
    },
    "3030": {
      "op": "bytec_3 // 0x70"
    },
    "3031": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "proposal_app#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "0x70",
        "tmp%17#0"
      ]
    },
    "3033": {
      "op": "concat",
      "defined_out": [
        "proposal_app#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0"
      ]
    },
    "3034": {
      "op": "dup",
      "defined_out": [
        "proposal_app#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ]
    },
    "3035": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "proposal_app#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3036": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0",
        "maybe_value%3#0"
      ]
    },
    "3037": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3038": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "maybe_value%3#0",
        "proposal_app#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0",
        "maybe_value%3#0",
        "0",
        "1"
      ]
    },
    "3039": {
      "op": "setbit",
      "defined_out": [
        "proposal_app#0",
        "tmp%18#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "tmp%18#0",
        "updated_data%0#0"
      ]
    },
    "3040": {
      "op": "box_put",
      "stack_out": [
        "proposal_app#0"
      ]
    },
    "3041": {
      "op": "itxn_begin"
    },
    "3042": {
      "op": "dup",
      "defined_out": [
        "proposal_app#0",
        "proposal_app#0 (copy)"
      ],
      "stack_out": [
        "proposal_app#0",
        "proposal_app#0 (copy)"
      ]
    },
    "3043": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "proposal_app#0",
        "value%0#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3045": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "proposal_app#0",
        "value%0#0"
      ]
    },
    "3046": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "0"
      ]
    },
    "3047": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "3049": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "proposal_app#0",
        "value%0#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3050": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "maybe_value%4#0"
      ]
    },
    "3051": {
      "op": "pushint 963000 // 963000",
      "defined_out": [
        "963000",
        "maybe_value%4#0",
        "proposal_app#0",
        "value%0#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "maybe_value%4#0",
        "963000"
      ]
    },
    "3055": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "proposal_app#0",
        "value%0#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "value%0#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "3056": {
      "op": "itxn_field Amount",
      "stack_out": [
        "proposal_app#0",
        "value%0#0"
      ]
    },
    "3058": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "proposal_app#0"
      ]
    },
    "3060": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay",
        "proposal_app#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "pay"
      ]
    },
    "3061": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "proposal_app#0"
      ]
    },
    "3063": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_app#0",
        "0"
      ]
    },
    "3064": {
      "op": "itxn_field Fee",
      "stack_out": [
        "proposal_app#0"
      ]
    },
    "3066": {
      "op": "itxn_submit"
    },
    "3067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_app#0",
        "0"
      ]
    },
    "3068": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "proposal_app#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3070": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "proposal_app#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3071": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "proposal_app#0",
        "maybe_value%5#0"
      ]
    },
    "3072": {
      "op": "intc_1 // 1",
      "stack_out": [
        "proposal_app#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "3073": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "proposal_app#0"
      ],
      "stack_out": [
        "proposal_app#0",
        "new_state_value%0#0"
      ]
    },
    "3074": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "proposal_app#0",
        "new_state_value%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3076": {
      "op": "swap",
      "stack_out": [
        "proposal_app#0",
        "0x70656e64696e675f70726f706f73616c73",
        "new_state_value%0#0"
      ]
    },
    "3077": {
      "op": "app_global_put",
      "stack_out": [
        "proposal_app#0"
      ]
    },
    "3078": {
      "retsub": true,
      "op": "retsub"
    },
    "3079": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "params": {
        "address#0": "bytes"
      },
      "block": "valid_kyc",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3082": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "3083": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "address#0 (copy)"
      ]
    },
    "3085": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3086": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3087": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3088": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3089": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "3090": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "is_true%0#0"
      ]
    },
    "3091": {
      "op": "bytec 13 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3093": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3094": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3096": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_bool%0#0"
      ]
    },
    "3097": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3098": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3099": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3102": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3104": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3105": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "3106": {
      "op": "extract 1 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "3109": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "3110": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "3112": {
      "op": ">",
      "defined_out": [
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "3113": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3116": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "and_result%0#0"
      ]
    },
    "3117": {
      "op": "b valid_kyc_bool_merge@4"
    },
    "3120": {
      "block": "valid_kyc_bool_false@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "and_result%0#0"
      ]
    },
    "3121": {
      "block": "valid_kyc_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "and_result%0#0"
      ],
      "op": "swap",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "3122": {
      "retsub": true,
      "op": "retsub"
    },
    "3123": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "pay_grant_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3126": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3128": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3129": {
      "op": "bytec 7 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "3131": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3132": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3133": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3134": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "3135": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3137": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "op": "callsub is_proposal",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3140": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "3141": {
      "op": "frame_dig -1",
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3143": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3144": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3145": {
      "op": "pushbytes 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "0x737461747573"
      ]
    },
    "3153": {
      "op": "app_global_get_ex",
      "defined_out": [
        "status#0",
        "status_exists#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "3154": {
      "op": "pop",
      "stack_out": [
        "tmp%3#0",
        "status#0"
      ]
    },
    "3155": {
      "op": "swap",
      "stack_out": [
        "status#0",
        "tmp%3#0"
      ]
    },
    "3156": {
      "op": "dup",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3157": {
      "op": "pushbytes 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "0x70726f706f736572"
      ]
    },
    "3167": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_exists#0",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "proposer_exists#0"
      ]
    },
    "3168": {
      "op": "pop",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "3169": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "3170": {
      "op": "len",
      "defined_out": [
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%5#0"
      ]
    },
    "3171": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%5#0",
        "32"
      ]
    },
    "3172": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%6#0"
      ]
    },
    "3173": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "3174": {
      "op": "dig 1",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%3#0 (copy)"
      ]
    },
    "3176": {
      "op": "pushbytes 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%3#0 (copy)",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "3194": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "requested_amount_exists#0",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "requested_amount_exists#0"
      ]
    },
    "3195": {
      "op": "pop",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "requested_amount#0"
      ]
    },
    "3196": {
      "op": "cover 2",
      "stack_out": [
        "status#0",
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "3198": {
      "op": "uncover 3",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "status#0"
      ]
    },
    "3200": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "proposer_bytes#0",
        "requested_amount#0",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "status#0",
        "30"
      ]
    },
    "3202": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%8#0"
      ]
    },
    "3203": {
      "error": "Proposal is not approved",
      "op": "assert // Proposal is not approved",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "3204": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "0x70"
      ]
    },
    "3205": {
      "op": "dig 1",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "0x70",
        "proposer_bytes#0 (copy)"
      ]
    },
    "3207": {
      "op": "concat",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "3208": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "3209": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3210": {
      "op": "bury 1",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_exists%1#0"
      ]
    },
    "3212": {
      "error": "Wrong proposer",
      "op": "assert // Wrong proposer",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "3213": {
      "op": "dig 1",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "3215": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "3218": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "3219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "0"
      ]
    },
    "3220": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3221": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3222": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%2#0"
      ]
    },
    "3223": {
      "op": "dig 4",
      "defined_out": [
        "maybe_value%2#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "requested_amount#0 (copy)",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "requested_amount#0 (copy)"
      ]
    },
    "3225": {
      "op": ">=",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "3226": {
      "error": "Insufficient treasury funds",
      "op": "assert // Insufficient treasury funds",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "3227": {
      "op": "swap",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "proposer_bytes#0"
      ]
    },
    "3228": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "proposer_bytes#0",
        "requested_amount#0"
      ]
    },
    "3230": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.disburse_funds",
      "op": "callsub disburse_funds",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "3233": {
      "op": "itxn_begin"
    },
    "3234": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "tmp%3#0"
      ]
    },
    "3235": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3237": {
      "op": "pushbytes 0xe94a444d // method \"release_funds()void\"",
      "defined_out": [
        "Method(release_funds()void)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "Method(release_funds()void)"
      ]
    },
    "3243": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3245": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "appl"
      ]
    },
    "3246": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3248": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "3249": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3251": {
      "op": "itxn_submit"
    },
    "3252": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "3253": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3255": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3256": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%3#0"
      ]
    },
    "3257": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "3258": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "new_state_value%0#0"
      ]
    },
    "3259": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "tmp%9#0",
        "new_state_value%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3261": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "0x70656e64696e675f70726f706f73616c73",
        "new_state_value%0#0"
      ]
    },
    "3262": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3263": {
      "op": "dup",
      "stack_out": [
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "3264": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3265": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0"
      ]
    },
    "3266": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "3267": {
      "op": "dup",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0",
        "0",
        "0"
      ]
    },
    "3268": {
      "op": "setbit",
      "defined_out": [
        "tmp%9#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "updated_data%0#0"
      ]
    },
    "3269": {
      "op": "box_put",
      "stack_out": []
    },
    "3270": {
      "retsub": true,
      "op": "retsub"
    },
    "3271": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "is_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3274": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3276": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3277": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3279": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3280": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%1#0"
      ]
    },
    "3282": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3283": {
      "retsub": true,
      "op": "retsub"
    },
    "3284": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.disburse_funds",
      "params": {
        "recipient#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "disburse_funds",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3287": {
      "op": "itxn_begin"
    },
    "3288": {
      "op": "frame_dig -2",
      "defined_out": [
        "recipient#0 (copy)"
      ],
      "stack_out": [
        "recipient#0 (copy)"
      ]
    },
    "3290": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3291": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "32"
      ]
    },
    "3292": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3293": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": []
    },
    "3294": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "3296": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "3298": {
      "op": "frame_dig -2",
      "stack_out": [
        "recipient#0 (copy)"
      ]
    },
    "3300": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "3302": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3303": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3305": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3306": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3308": {
      "op": "itxn_submit"
    },
    "3309": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3310": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3311": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3312": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3313": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "3315": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "3316": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "new_state_value%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3317": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "new_state_value%0#0"
      ]
    },
    "3318": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3319": {
      "retsub": true,
      "op": "retsub"
    },
    "3320": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "params": {
        "payment#0": "uint64"
      },
      "block": "deposit_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3323": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "3325": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3327": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3329": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3330": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "3331": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3332": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3333": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3334": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3335": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "payment#0 (copy)"
      ]
    },
    "3337": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "3339": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "3340": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "new_state_value%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3341": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "new_state_value%0#0"
      ]
    },
    "3342": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3343": {
      "retsub": true,
      "op": "retsub"
    },
    "3344": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "params": {
        "amount#0": "uint64"
      },
      "block": "withdraw_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3347": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3350": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "3351": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3352": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3353": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3354": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3355": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "3357": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3358": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": []
    },
    "3359": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3361": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3363": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "3365": {
      "op": "*",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "3366": {
      "op": ">=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3367": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "3368": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3369": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3370": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3371": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3372": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%1#0",
        "amount#0 (copy)"
      ]
    },
    "3374": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "3375": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "new_state_value%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3376": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "new_state_value%0#0"
      ]
    },
    "3377": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3378": {
      "op": "itxn_begin"
    },
    "3379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3380": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3382": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3383": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "3384": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%2#0",
        "amount#0 (copy)"
      ]
    },
    "3386": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "3388": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "3390": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3391": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3394": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3396": {
      "op": "itxn_submit"
    },
    "3397": {
      "retsub": true,
      "op": "retsub"
    },
    "3398": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "3401": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3402": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3404": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3405": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3406": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3407": {
      "op": "bytec 7 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "3409": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3410": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "3411": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "3412": {
      "op": "bytec 8 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "3414": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3415": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "3416": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3417": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "3419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3420": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "3421": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3422": {
      "op": "bytec 15 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f7075626c6973686572",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "3424": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3425": {
      "error": "check self.committee_publisher exists",
      "op": "assert // check self.committee_publisher exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "3426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "3427": {
      "op": "bytec 10 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "3429": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3430": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "3431": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "3432": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3433": {
      "op": "bytec 11 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "3435": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3436": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0"
      ]
    },
    "3437": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "3439": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f666565",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "3441": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3442": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%7#0"
      ]
    },
    "3443": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3444": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "3445": {
      "op": "bytec 16 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "3447": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3448": {
      "error": "check self.proposal_publishing_bps exists",
      "op": "assert // check self.proposal_publishing_bps exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%8#0"
      ]
    },
    "3449": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "3450": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "3451": {
      "op": "bytec 17 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "3453": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3454": {
      "error": "check self.proposal_commitment_bps exists",
      "op": "assert // check self.proposal_commitment_bps exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%9#0"
      ]
    },
    "3455": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "3456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "3457": {
      "op": "bytec 39 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "3459": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%10#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3460": {
      "error": "check self.min_requested_amount exists",
      "op": "assert // check self.min_requested_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%10#0"
      ]
    },
    "3461": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "3462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "3463": {
      "op": "bytec 18 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "3465": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%11#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3466": {
      "error": "check self.max_requested_amount_small exists",
      "op": "assert // check self.max_requested_amount_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%11#0"
      ]
    },
    "3467": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "3468": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0"
      ]
    },
    "3469": {
      "op": "bytec 19 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "3471": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%12#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3472": {
      "error": "check self.max_requested_amount_medium exists",
      "op": "assert // check self.max_requested_amount_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%12#0"
      ]
    },
    "3473": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "3474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "3475": {
      "op": "bytec 20 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "3477": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%13#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3478": {
      "error": "check self.max_requested_amount_large exists",
      "op": "assert // check self.max_requested_amount_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%13#0"
      ]
    },
    "3479": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "3480": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "3482": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "result%1#0"
      ]
    },
    "3483": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%1#0",
        "val_as_bytes%8#0"
      ]
    },
    "3484": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0"
      ]
    },
    "3485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0"
      ]
    },
    "3486": {
      "op": "bytec 21 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "3488": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%14#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3489": {
      "error": "check self.discussion_duration_small exists",
      "op": "assert // check self.discussion_duration_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%14#0"
      ]
    },
    "3490": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0"
      ]
    },
    "3491": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "3492": {
      "op": "bytec 22 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "3494": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%15#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3495": {
      "error": "check self.discussion_duration_medium exists",
      "op": "assert // check self.discussion_duration_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%15#0"
      ]
    },
    "3496": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "3497": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "3498": {
      "op": "bytec 23 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "3500": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%16#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3501": {
      "error": "check self.discussion_duration_large exists",
      "op": "assert // check self.discussion_duration_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%16#0"
      ]
    },
    "3502": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "3503": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "3504": {
      "op": "bytec 24 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "3506": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%17#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3507": {
      "error": "check self.discussion_duration_xlarge exists",
      "op": "assert // check self.discussion_duration_xlarge exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%17#0"
      ]
    },
    "3508": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "3509": {
      "op": "uncover 3"
    },
    "3511": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "3513": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "result%4#0"
      ]
    },
    "3514": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%4#0",
        "val_as_bytes%11#0"
      ]
    },
    "3516": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%5#0"
      ]
    },
    "3517": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%12#0"
      ]
    },
    "3518": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0"
      ]
    },
    "3519": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0"
      ]
    },
    "3520": {
      "op": "bytec 25 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "3522": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%18#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3523": {
      "error": "check self.voting_duration_small exists",
      "op": "assert // check self.voting_duration_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%18#0"
      ]
    },
    "3524": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0"
      ]
    },
    "3525": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "3526": {
      "op": "bytec 26 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "3528": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%19#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3529": {
      "error": "check self.voting_duration_medium exists",
      "op": "assert // check self.voting_duration_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%19#0"
      ]
    },
    "3530": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3531": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "3532": {
      "op": "bytec 27 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "3534": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%20#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3535": {
      "error": "check self.voting_duration_large exists",
      "op": "assert // check self.voting_duration_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%20#0"
      ]
    },
    "3536": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "3537": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0"
      ]
    },
    "3538": {
      "op": "bytec 28 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "3540": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%21#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%21#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "3541": {
      "error": "check self.voting_duration_xlarge exists",
      "op": "assert // check self.voting_duration_xlarge exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%21#0"
      ]
    },
    "3542": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ]
    },
    "3543": {
      "op": "uncover 3"
    },
    "3545": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3547": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "result%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "result%8#0"
      ]
    },
    "3548": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%8#0",
        "val_as_bytes%15#0"
      ]
    },
    "3550": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%9#0"
      ]
    },
    "3551": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%16#0"
      ]
    },
    "3552": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0"
      ]
    },
    "3553": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0"
      ]
    },
    "3554": {
      "op": "bytec 29 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0",
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0",
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "3556": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%22#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%22#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "3557": {
      "error": "check self.cool_down_duration exists",
      "op": "assert // check self.cool_down_duration exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%22#0"
      ]
    },
    "3558": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0"
      ]
    },
    "3559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0"
      ]
    },
    "3560": {
      "op": "bytec 40 // 0x7374616c655f70726f706f73616c5f6475726174696f6e",
      "defined_out": [
        "0",
        "0x7374616c655f70726f706f73616c5f6475726174696f6e",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0",
        "0x7374616c655f70726f706f73616c5f6475726174696f6e"
      ]
    },
    "3562": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%23#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%23#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "3563": {
      "error": "check self.stale_proposal_duration exists",
      "op": "assert // check self.stale_proposal_duration exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%23#0"
      ]
    },
    "3564": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "3565": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0"
      ]
    },
    "3566": {
      "op": "bytec 30 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x71756f72756d5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "3568": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%24#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%24#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "3569": {
      "error": "check self.quorum_small exists",
      "op": "assert // check self.quorum_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%24#0"
      ]
    },
    "3570": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0"
      ]
    },
    "3571": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "0"
      ]
    },
    "3572": {
      "op": "bytec 31 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x71756f72756d5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "3574": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%25#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%25#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "maybe_value%25#0",
        "maybe_exists%25#0"
      ]
    },
    "3575": {
      "error": "check self.quorum_medium exists",
      "op": "assert // check self.quorum_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "maybe_value%25#0"
      ]
    },
    "3576": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0"
      ]
    },
    "3577": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "0"
      ]
    },
    "3578": {
      "op": "bytec 32 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x71756f72756d5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "3580": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%26#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%26#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "maybe_value%26#0",
        "maybe_exists%26#0"
      ]
    },
    "3581": {
      "error": "check self.quorum_large exists",
      "op": "assert // check self.quorum_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "maybe_value%26#0"
      ]
    },
    "3582": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0"
      ]
    },
    "3583": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%21#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0"
      ]
    },
    "3585": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%12#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%21#0",
        "result%12#0"
      ]
    },
    "3586": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%12#0",
        "val_as_bytes%21#0"
      ]
    },
    "3587": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0"
      ]
    },
    "3588": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "0"
      ]
    },
    "3589": {
      "op": "bytec 33 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "3591": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%27#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%27#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "maybe_value%27#0",
        "maybe_exists%27#0"
      ]
    },
    "3592": {
      "error": "check self.weighted_quorum_small exists",
      "op": "assert // check self.weighted_quorum_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "maybe_value%27#0"
      ]
    },
    "3593": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0"
      ]
    },
    "3594": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "0"
      ]
    },
    "3595": {
      "op": "bytec 34 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "3597": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%28#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%28#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "maybe_value%28#0",
        "maybe_exists%28#0"
      ]
    },
    "3598": {
      "error": "check self.weighted_quorum_medium exists",
      "op": "assert // check self.weighted_quorum_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "maybe_value%28#0"
      ]
    },
    "3599": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0"
      ]
    },
    "3600": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "0"
      ]
    },
    "3601": {
      "op": "bytec 35 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "3603": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%29#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%29#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "maybe_value%29#0",
        "maybe_exists%29#0"
      ]
    },
    "3604": {
      "error": "check self.weighted_quorum_large exists",
      "op": "assert // check self.weighted_quorum_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "maybe_value%29#0"
      ]
    },
    "3605": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0"
      ]
    },
    "3606": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%24#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0"
      ]
    },
    "3608": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%15#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%24#0",
        "result%15#0"
      ]
    },
    "3609": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%15#0",
        "val_as_bytes%24#0"
      ]
    },
    "3610": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0"
      ]
    },
    "3611": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "0"
      ]
    },
    "3612": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3613": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%30#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%30#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%30#0",
        "maybe_exists%30#0"
      ]
    },
    "3614": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%30#0"
      ]
    },
    "3615": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0"
      ]
    },
    "3616": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "0"
      ]
    },
    "3617": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3619": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%31#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%31#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "maybe_value%31#0",
        "maybe_exists%31#0"
      ]
    },
    "3620": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "maybe_value%31#0"
      ]
    },
    "3621": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ]
    },
    "3622": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "0"
      ]
    },
    "3623": {
      "op": "bytec 42 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3625": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%32#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "maybe_exists%32#0"
      ]
    },
    "3626": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0"
      ]
    },
    "3627": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "0"
      ]
    },
    "3628": {
      "op": "bytec 36 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3630": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%33#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%33#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "maybe_value%33#0",
        "maybe_exists%33#0"
      ]
    },
    "3631": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "maybe_value%33#0"
      ]
    },
    "3632": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0"
      ]
    },
    "3633": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "0"
      ]
    },
    "3634": {
      "op": "bytec 37 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3636": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%34#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "maybe_value%34#0",
        "maybe_exists%34#0"
      ]
    },
    "3637": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "maybe_value%34#0"
      ]
    },
    "3638": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ]
    },
    "3639": {
      "op": "uncover 22"
    },
    "3641": {
      "op": "uncover 22",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "3643": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3644": {
      "op": "uncover 21",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0"
      ]
    },
    "3646": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3647": {
      "op": "uncover 20",
      "stack_out": [
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0"
      ]
    },
    "3649": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3650": {
      "op": "uncover 19",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%4#0",
        "maybe_value%4#0"
      ]
    },
    "3652": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3653": {
      "op": "uncover 18",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%0#0"
      ]
    },
    "3655": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3656": {
      "op": "uncover 17",
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0"
      ]
    },
    "3658": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3659": {
      "op": "uncover 16",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%2#0"
      ]
    },
    "3661": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3662": {
      "op": "uncover 15",
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0"
      ]
    },
    "3664": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3665": {
      "op": "uncover 14",
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%4#0"
      ]
    },
    "3667": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3668": {
      "op": "uncover 13",
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%5#0"
      ]
    },
    "3670": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3671": {
      "op": "uncover 12",
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%11#0",
        "result%2#0"
      ]
    },
    "3673": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3674": {
      "op": "uncover 11",
      "stack_out": [
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%12#0",
        "result%6#0"
      ]
    },
    "3676": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_value%32#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3677": {
      "op": "uncover 10",
      "stack_out": [
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%13#0",
        "result%10#0"
      ]
    },
    "3679": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "maybe_value%32#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3680": {
      "op": "uncover 9",
      "stack_out": [
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%17#0"
      ]
    },
    "3682": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "maybe_value%32#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3683": {
      "op": "uncover 8",
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%15#0",
        "val_as_bytes%18#0"
      ]
    },
    "3685": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "maybe_value%32#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3686": {
      "op": "uncover 7",
      "stack_out": [
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%16#0",
        "result%13#0"
      ]
    },
    "3688": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "maybe_value%32#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3689": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%17#0",
        "result%16#0"
      ]
    },
    "3691": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "maybe_value%32#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3692": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%18#0",
        "val_as_bytes%25#0"
      ]
    },
    "3694": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "maybe_value%32#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%26#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "3695": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%19#0",
        "val_as_bytes%26#0"
      ]
    },
    "3697": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "maybe_value%32#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "3698": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%20#0",
        "maybe_value%32#0"
      ]
    },
    "3700": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "3701": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%21#0",
        "val_as_bytes%27#0"
      ]
    },
    "3703": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "3704": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%22#0",
        "val_as_bytes%28#0"
      ]
    },
    "3705": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%23#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%23#0"
      ]
    },
    "3706": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
{
  "version": 3,
  "sources": [
    "../../xgov_registry/contract.py"
  ],
  "mappings": ";;;;;AAuDe;;AAA6B;;AAA7B;AAAP;AACO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAGiD;AAAd;AAAnC;AACkD;;AAAd;AAApC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGkD;;AAApB;;AAA9B;AACoD;;AAApB;;AAAhC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGmD;;AAApB;;AAA/B;AAE0C;;AAAd;AAA5B;AACuC;;AAAd;AAAzB;AAC8C;;AAAd;AAAhC;AACmD;;AAAd;AAArC;AAEkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAI8C;;AAAd;AAAhC;AAC+C;;AAAd;AAAjC;AAC8C;;AAAd;AAAhC;AAGkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAImD;AAAd;AAArC;AAGmD;;AAAd;AAArC;AACiD;;AAAd;AAAnC;AAEmD;;AAAd;AAArC;AAE4C;;AAAd;AAA9B;AAGkB;;AAAd;AADJ;AA5GR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAuzCK;;AAAA;AAAA;AAAA;;AAAA;AAvzCL;;;AAuzCK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAxyCL;;;AAwyCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AA3xCL;;;AA2xCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AA9wCL;;;AA8wCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAhqCL;;;AAAA;AAgqCK;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AA/oCL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+oCK;;;AAAA;;AAvCA;;AAAA;AAAA;AAAA;;AAAA;AAxmCL;;;AAwmCK;;;AAAA;;AA7CA;;AAAA;AAAA;AAAA;;AAAA;AA3jCL;;;AA2jCK;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AAtgCL;;;AAsgCK;;;AAAA;;AA/EA;;AAAA;AAAA;AAAA;;AAAA;AAv7BL;;;AAAA;;;AAAA;;;AAAA;;;AAu7BK;;;AAAA;;AA/FA;;AAAA;AAAA;AAAA;;AAAA;AAx1BL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAw1BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA5zBL;;;AAAA;;;AAAA;;;AA4zBK;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAjyBL;;;AAAA;;;AAAA;;;AAiyBK;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAtwBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAswBK;;;AAAA;;AAhCA;;AAAA;AAAA;AAAA;;AAAA;AAtuBL;;;AAAA;;;AAsuBK;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AArtBL;;;AAqtBK;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AA/rBL;;;AA+rBK;;;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AAtpBL;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAspBK;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AA3nBL;;;AA2nBK;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAjmBL;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAimBK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAjFA;;AAAA;AAAA;AAAA;;AAAA;AArgBL;;;AAqgBK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAtfL;;;AAsfK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAveL;;;AAueK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAxdL;;;AAwdK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAzcL;;;AAycK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA1bL;;;AA0bK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA3aL;;;AA2aK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA5ZL;;;AA4ZK;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAxVL;;;AAAA;;;AAAA;;;AAwVK;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAnUL;;;AAmUK;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AA1KU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAIO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAUR;;;AAEe;;AAAA;;AAAA;AAAoC;;AAApC;AAAP;AAUR;;;AAE0C;;AACjB;;;;;;;;;;AADiB;AAGlC;AACO;AAAA;AAAA;;AAAA;AAAA;AAAP;AAkBR;;;AAGY;;AAAA;;AAAoB;;AAApB;AAAA;;;AACI;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AADJ;;;;AADJ;;AAAA;AAKR;;;AAGY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AACI;;AAAA;AAAA;AAAA;AAAA;AAAiD;;AAAjD;AADJ;;;;AADJ;AAAA;;;;;AA4DR;;;AAGQ;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AAGA;;AAAW;;;AACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAER;;;AAe2C;;AAAZ;AAJhB;;AAEa;;AAFb;AAGiB;;AAHjB;AAAA;AAAA;AAAP;AAqCA;;AAAuC;;AAAvC;AApLO;;AAqLkB;AAAlB;AAAP;;AAER;;;AAYe;;;AAAP;AAEa;;AAAA;AAAA;;AACrB;;;AACkD;;AAAA;AAAtC;;AAAA;AAAA;;AAG2C;;AAAA;AAA3C;;AAAA;AAAA;;;AAEZ;;;AAae;;;AAAP;AAGmD;;AAAA;AAAnD;;AAAA;AAAA;;AAAA;;AAWO;;;AAAP;AAGA;;AAAA;;;AAQO;;;AAAP;AACA;AAA6B;AAA7B;;AAQO;;;AAAP;AACA;;AAA8B;AAA9B;;AAQO;;;AAAP;AACA;AAA6B;AAA7B;;AAQO;;;AAAP;AACA;;AAA8B;AAA9B;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;AAYe;;;AAAP;AACA;;AAAA;;AAAA;;AAER;;;;;;;;AAae;;;AAAP;AAtXO;AAAA;;AAAA;AAAA;AAAA;AAuXP;AAqBI;;AAAA;AAAA;AAAA;AAnUG;;;;AAmUH;AAAA;;;AACI;;AApUD;;;;AAoUC;AADJ;;;;AADJ;AAKO;;AAAA;AAAA;AAAA;AAAA;;AAvUA;;AAuUA;AAAP;AAGI;;AAAA;;AAAA;AAAA;AAAA;;AACE;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AADF;AAAA;;;AAEE;;AAAA;AAAA;AAAA;AAAA;;AADA;;AAAA;AADF;;;AAGE;;AAAA;;AAAA;AADA;;AAAA;AADA;;;;AAFN;AAQI;;AAAA;;AAAA;AAAiC;;AAAA;;AAAA;AAlW9B;AAAA;AAA4B;;;AAA5B;AAsCH;;;;;AAAA;AAGG;;AAAA;;AAAA;AAAP;AAEA;;AAAA;AAA8B;AA1BvB;;AAgCyB;AAAhC;;AAAA;AAAA;AAoTA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AACqC;;AAAA;;AAAA;AAArC;;AAAA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACyC;;AAAA;AAAA;AAAA;AAAzC;;AAAA;AAAA;AACwC;;AAAA;AAAxC;;AAAA;AAAA;AAEuC;;AAAA;;;AAAA;AAAA;AAAA;AAAvC;;AAAA;AAAA;AACwC;AAAA;AAAA;AAAxC;;AAAA;AAAA;AACuC;AAAA;;AAAA;AAAvC;;AAAA;AAAA;AACwC;;AAAA;AAAxC;;AAAA;AAAA;AAEmC;;AAAA;;;AAAA;AAAA;AAAA;AAAnC;;AAAA;AAAA;AACoC;AAAA;AAAA;AAApC;;AAAA;AAAA;AACmC;AAAA;;AAAA;AAAnC;;AAAA;AAAA;AACoC;;AAAA;AAApC;;AAAA;AAAA;AAE0B;;AAAA;;;AAAA;AAAA;AAAA;AAA1B;;AAAA;AAAA;AAC2B;AAAA;AAAA;AAA3B;;AAAA;AAAA;AAC0B;;AAAA;AAA1B;;AAAA;AAAA;AAEmC;;AAAA;;;AAAA;AAAA;AAAA;AAAnC;;AAAA;AAAA;AACoC;AAAA;AAAA;AAApC;;AAAA;AAAA;AACmC;;AAAA;AAAnC;;AAAA;AAAA;;;;;;;;;;AAWO;;;AAAP;;AAER;;;AAgBmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEyB;;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;AAAA;;;AAAP;AAG4B;;AAAA;;;AAA5B;;AAAc;;AAAd;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;;AAER;;;AAYmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAG8B;;AAAvB;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAEiB;AAAA;AAAA;;;AAGb;;AAAuB;;AAAvB;AAAA;;;AAAqC;;AAAkB;;AAAlB;AAArC;;;;AADJ;AAKA;;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;;;;;;AAER;;;AAsBmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGkC;;AAA3B;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGO;;AAAA;;;AAAP;AAGM;AAAA;;AAAA;AAAA;AACkB;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAOyB;AAAzB;AAAA;;AAAA;AAAA;;AAER;;;AAYe;;;AAAP;AAG2B;;AAAA;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmD;AAAA;;;AAAnB;;;AAA5B;AAAA;;;AAAd;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAEA;;;AAER;;;AAYe;;;AAAP;AAGqB;;AAAA;AAAA;AAAjB;;AAAA;AAAA;AAAJ;;;AAER;;;AAgBmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGgC;;AAAvB;;AAAA;AAAA;;AAAA;AAAA;;AACT;AACW;AAAA;AAIP;;AAAc;AAAA;;;AAAd;AAAA;;;AACG;;AAAA;;AAAA;AADH;;;;AADJ;AAMA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;;AAER;;;AAcmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEyB;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEA;AAAkB;;AAAlB;AAzeO;;;;;;;;;;;AAyeP;;AAIR;;;AAkBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAC0B;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAlgBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAogBP;;AAIR;;;AApqBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAsrBP;AAGI;;AAAA;AAAe;AAAA;;AAAA;AAAA;AAAf;;AAAA;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAC6B;;AAAA;AAA7B;;AAAA;AAAA;;AAER;;;AAiBmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AACW;AAAA;;AAAA;AAAA;AAAJ;AAAP;AAGqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGW;AACP;;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AAAA;AAAP;AAGsB;;AAAf;;;AAAP;AAEO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEa;;AAAA;;AAAA;AAEc;;AAAA;AAC3B;AASa;AAAA;AAA2B;AAA3B;AADI;;;AAEH;AAEF;AAER;;;;;AAIiB;;;;AADD;;;;AAb6B;;;;;;;;;;;AAQrC;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;;;AAUT;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAzC;;AAAA;AAAA;;AAAyC;AAEhC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;AAAA;;;;;;;;;;AAUQ;AAFA;AAFA;AAFA;AAFA;AAUD;;AAAgB;;AAAhB;AAAP;AAEQ;;AAAA;;AAAA;AAGZ;AAAkB;;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACa;;AAAA;AAAA;;AAAA;;AAAA;AACF;AAAA;;AAAA;AAAA;AAAgC;;AAAA;;AAAA;AAAhC;;;;;AAFX;;;AAGQ;;;AAHR;AAOA;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AAEA;;AAAA;AA/BG;;AAAA;;;AAAwB;;AAAxB;;;;AAiCX;;;AA+BmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGyB;;AAAA;AAAlB;AAAA;;;AAAP;AAGgC;;AAAvB;;AAAA;AAAA;AAAA;AAAA;;AACT;AACW;AAAA;AAAA;AAEP;AAAA;;AAAA;AAAkC;AAAlC;AADiD;AAArD;;AAAA;AAAA;;AAII;;AADqD;AAAzD;;AAAA;;AAAA;AAAA;AAKO;;AAAc;AAAA;;;AAAd;AAAP;AAGY;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAQT;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAzC;;AAAA;AAAA;;AAAyC;AAEhC;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;AAAA;;;;;;;;;;;;;;AAcQ;AAFA;AAFA;AAFA;AAFA;AAFA;AAFA;AAcD;;AAAgB;;AAAhB;AAAP;;AAlBD;;AAAA;;;AAAwB;;AAAxB;;;;AAoBX;;;AAmB4B;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGyB;;AAAA;AAAlB;AAAA;;;AAAP;AAGA;AAAW;;;AA32BiC;;AAC3B;;;;;;;;;;;;;;;;;;AAD2B;AAG5C;AA22BmB;AAAZ;;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;;AAAP;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AA12BA;;;;;;;;;AAAA;;;AAAoD;;;AAApD;AAGA;AAAA;AAAA;AAAA;AAAA;AA62BY;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAIT;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAzC;;AAAA;AAAA;;AAAyC;AAEhC;;AADT;AAAA;;;;AAIQ;AAFA;AAID;;AAAgB;;AAAhB;AAAP;;AARD;;AAAA;;;AAAwB;;AAAxB;;;;AAUX;;;;;;;AAgBmD;;AAAA;AAAA;AAt6B1B;;;;;;;;AADO;AAAA;AAAA;AAAA;;AAGxB;AAq6BG;;;AAAgD;;AAAmB;;AAAnB;AAAhD;;;AAGqB;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGG;;AAAA;AAAA;;;AAAP;AAEY;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIT;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAzC;;AAAA;AAAA;;AAAyC;AAEhC;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;AAAA;;;;;;;;AAQQ;AAFA;AAFA;AAFA;AAQD;;AAAgB;;AAAhB;AAAP;AAEJ;;AAAA;;;;AAdG;;AAAA;;;AAAwB;;AAAxB;;;;AAgBX;;;AAemB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGyB;;AAAA;AAAA;;AAAlB;;;AAAP;AAEA;AAAW;;;AACJ;;AAAA;AAAP;AAEY;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAIT;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAzC;;AAAA;AAAA;;AAAyC;AAEhC;;AADT;AAAA;;;;AAIQ;AAFA;AAID;;AAAgB;;AAAhB;AAAP;AAEJ;;AAAA;;;;AAVG;;AAAA;;;AAAwB;;AAAxB;;;;AAYX;;;AAaY;;AAAA;;AAAoB;;AAApB;AADJ;AAGA;AAAA;AAAA;AAAA;AAAgC;;AAAA;;AAAhC;AAAA;AAAA;AAAA;;AAER;;;AAce;;;AAAP;AACiB;AAAA;AAAA;AAAA;AAAV;;AAAA;;AAAA;AAAP;AACO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AACA;;AAAA;AAAA;AAAA;AAAA;AAEA;AACa;AAAA;;AAAA;AAAA;;;;;;;AADb;;;AAGQ;;;AAHR;;AAkBO;;;AAAP;AACO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;;AAAA;;AAAA;AACE;;AAAA;;AAAA;AADF;AAEE;AAAA;AAAA;AAAA;AAFF;AAKJ;AAAA;AACA;AACa;AAAA;;AAAA;AAAA;;;;;AADb;;;AAGQ;;;AAHR;;AAamC;AAAA;AAAA;AAAA;AAAf;;AAAA;AAAA;;AAAA;AACgB;AAAA;;AAAA;AAAA;AAAf;;AAAA;AAAA;;AAAA;AACJ;AAAA;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;AACE;AAAA;;AAAA;AAAA;AACG;AAAA;;AAAA;AAAA;AACH;AAAA;;AAAA;AAAA;AACK;AAAA;;AAAA;AAAA;AACN;AAAA;;AAAA;AAAA;AACS;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACa;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AAEL;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHiB;;AAAA;AAAA;AAAA;AAML;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOJ;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOA;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHG;;AAAA;AAAA;AAAA;AAMS;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHY;;AAAA;AAAA;AAAA;AAKc;AAAA;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACL;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AA/Cb;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAkDR;;;AAWe;;AAAA;;AAAA;AAAA;AAAA;AAAP;AAER;;;AAWe;AAAA;;AAAA;AAAA;AAAA;AAAP;AAER;;;AAagC;;AAAA;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;AAEiC;;AAAA;AAAlB;;;AAAP;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "5": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "7": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "28"
      ]
    },
    "9": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "10": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "11": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "13": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "36"
      ]
    },
    "15": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "16": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "17": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "19": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "20": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "21": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "23": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "24": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "25": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "27": {
      "op": "app_global_put",
      "stack_out": []
    },
    "28": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "30": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "31": {
      "op": "app_global_put",
      "stack_out": []
    },
    "32": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "34": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ]
    },
    "36": {
      "op": "app_global_put",
      "stack_out": []
    },
    "37": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "39": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "materialized_values%1#0"
      ]
    },
    "41": {
      "op": "app_global_put",
      "stack_out": []
    },
    "42": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "44": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f7061796f72",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "materialized_values%2#0"
      ]
    },
    "46": {
      "op": "app_global_put",
      "stack_out": []
    },
    "47": {
      "op": "bytec 22 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c"
      ]
    },
    "49": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "materialized_values%3#0"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "materialized_values%3#0"
      ]
    },
    "51": {
      "op": "app_global_put",
      "stack_out": []
    },
    "52": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "54": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "materialized_values%4#0"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "materialized_values%4#0"
      ]
    },
    "56": {
      "op": "app_global_put",
      "stack_out": []
    },
    "57": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "59": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "materialized_values%5#0"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "materialized_values%5#0"
      ]
    },
    "61": {
      "op": "app_global_put",
      "stack_out": []
    },
    "62": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e"
      ]
    },
    "64": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "materialized_values%6#0"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "materialized_values%6#0"
      ]
    },
    "66": {
      "op": "app_global_put",
      "stack_out": []
    },
    "67": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565"
      ],
      "stack_out": [
        "0x78676f765f666565"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f765f666565",
        "0"
      ]
    },
    "70": {
      "op": "app_global_put",
      "stack_out": []
    },
    "71": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0x78676f7673"
      ],
      "stack_out": [
        "0x78676f7673"
      ]
    },
    "73": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f7673",
        "0"
      ]
    },
    "74": {
      "op": "app_global_put",
      "stack_out": []
    },
    "75": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565"
      ],
      "stack_out": [
        "0x70726f706f7365725f666565"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "0"
      ]
    },
    "78": {
      "op": "app_global_put",
      "stack_out": []
    },
    "79": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "81": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "0"
      ]
    },
    "82": {
      "op": "app_global_put",
      "stack_out": []
    },
    "83": {
      "op": "bytec 23 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ],
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "85": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "0"
      ]
    },
    "86": {
      "op": "app_global_put",
      "stack_out": []
    },
    "87": {
      "op": "bytec 24 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "0"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "bytec 25 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "94": {
      "op": "app_global_put",
      "stack_out": []
    },
    "95": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "97": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "0"
      ]
    },
    "98": {
      "op": "app_global_put",
      "stack_out": []
    },
    "99": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "0"
      ]
    },
    "102": {
      "op": "app_global_put",
      "stack_out": []
    },
    "103": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "0"
      ]
    },
    "106": {
      "op": "app_global_put",
      "stack_out": []
    },
    "107": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "110": {
      "op": "app_global_put",
      "stack_out": []
    },
    "111": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": []
    },
    "115": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "118": {
      "op": "app_global_put",
      "stack_out": []
    },
    "119": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "130": {
      "op": "app_global_put",
      "stack_out": []
    },
    "131": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "135": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "138": {
      "op": "app_global_put",
      "stack_out": []
    },
    "139": {
      "op": "bytec 37 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "142": {
      "op": "app_global_put",
      "stack_out": []
    },
    "143": {
      "op": "bytec 38 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "146": {
      "op": "app_global_put",
      "stack_out": []
    },
    "147": {
      "op": "bytec 39 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "0"
      ]
    },
    "150": {
      "op": "app_global_put",
      "stack_out": []
    },
    "151": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "154": {
      "op": "app_global_put",
      "stack_out": []
    },
    "155": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "158": {
      "op": "app_global_put",
      "stack_out": []
    },
    "159": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "0"
      ]
    },
    "162": {
      "op": "app_global_put",
      "stack_out": []
    },
    "163": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "0"
      ]
    },
    "165": {
      "op": "app_global_put",
      "stack_out": []
    },
    "166": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "168": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "169": {
      "op": "app_global_put",
      "stack_out": []
    },
    "170": {
      "op": "bytec 44 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "172": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "173": {
      "op": "app_global_put",
      "stack_out": []
    },
    "174": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "0"
      ]
    },
    "177": {
      "op": "app_global_put",
      "stack_out": []
    },
    "178": {
      "op": "bytec 45 // 0x726571756573745f6964",
      "defined_out": [
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0x726571756573745f6964"
      ]
    },
    "180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x726571756573745f6964",
        "0"
      ]
    },
    "181": {
      "op": "app_global_put",
      "stack_out": []
    },
    "182": {
      "op": "bytec 46 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ],
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "184": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "0"
      ]
    },
    "185": {
      "op": "app_global_put",
      "stack_out": []
    },
    "186": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "188": {
      "op": "bz main_after_if_else@44",
      "stack_out": []
    },
    "191": {
      "op": "pushbytess 0x4c5c61ba 0x959c4762 0x6c1f564d 0xe10a512e 0x86f7e0e6 0x39e26d8a 0x98352e86 0xfa4ed6e2 0xd6c9cc1a 0x5c484055 0x37d6adf1 0xd4216b6e 0xba8520f2 0x1677b30e 0x84b7d268 0x653a0bdb 0x4956c1ab 0xa082cef8 0x76725559 0x45077390 0x3c31bc02 0x0d2c7891 0x0da27885 0x7a4fee43 0x52dd10d7 0xd4d37a64 0x34349dcc 0x158f8dd6 0xdb27b9af 0xf5910756 0x65610a9f 0xfdc695c2 0xba90ab54 0xb3b58482 0x00b3cef5 0x6f752007 0x3a8d568f 0x230cc121 0x26983200 // method \"create()void\", method \"init_proposal_contract(uint64)void\", method \"load_proposal_contract(uint64,byte[])void\", method \"delete_proposal_contract_box()void\", method \"pause_registry()void\", method \"pause_proposals()void\", method \"resume_registry()void\", method \"resume_proposals()void\", method \"set_xgov_manager(address)void\", method \"set_payor(address)void\", method \"set_xgov_council(address)void\", method \"set_xgov_subscriber(address)void\", method \"set_kyc_provider(address)void\", method \"set_committee_manager(address)void\", method \"set_xgov_daemon(address)void\", method \"config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void\", method \"update_xgov_registry()void\", method \"subscribe_xgov(address,pay)void\", method \"unsubscribe_xgov(address)void\", method \"request_subscribe_xgov(address,address,uint64,pay)void\", method \"approve_subscribe_xgov(uint64)void\", method \"reject_subscribe_xgov(uint64)void\", method \"set_voting_account(address,address)void\", method \"subscribe_proposer(pay)void\", method \"set_proposer_kyc(address,bool,uint64)void\", method \"declare_committee(byte[32],uint64,uint64)void\", method \"open_proposal(pay)uint64\", method \"vote_proposal(uint64,address,uint64,uint64)void\", method \"pay_grant_proposal(uint64)void\", method \"finalize_proposal(uint64)void\", method \"drop_proposal(uint64)void\", method \"deposit_funds(pay)void\", method \"withdraw_funds(uint64)void\", method \"withdraw_balance()void\", method \"get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64)\", method \"get_xgov_box(address)(address,uint64,uint64,uint64)\", method \"get_proposer_box(address)(bool,bool,uint64)\", method \"get_request_box(uint64)(address,address,uint64)\", method \"is_proposal(uint64)void\"",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(create()void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(init_proposal_contract(uint64)void)",
        "Method(is_proposal(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(update_xgov_registry()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)"
      ],
      "stack_out": [
        "Method(create()void)",
        "Method(init_proposal_contract(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(update_xgov_registry()void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(is_proposal(uint64)void)"
      ]
    },
    "388": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(create()void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(init_proposal_contract(uint64)void)",
        "Method(is_proposal(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(update_xgov_registry()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)",
        "tmp%2#1"
      ],
      "stack_out": [
        "Method(create()void)",
        "Method(init_proposal_contract(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(update_xgov_registry()void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov(address)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(is_proposal(uint64)void)",
        "tmp%2#1"
      ]
    },
    "391": {
      "op": "match main_create_route@5 main_init_proposal_contract_route@6 main_load_proposal_contract_route@7 main_delete_proposal_contract_box_route@8 main_pause_registry_route@9 main_pause_proposals_route@10 main_resume_registry_route@11 main_resume_proposals_route@12 main_set_xgov_manager_route@13 main_set_payor_route@14 main_set_xgov_council_route@15 main_set_xgov_subscriber_route@16 main_set_kyc_provider_route@17 main_set_committee_manager_route@18 main_set_xgov_daemon_route@19 main_config_xgov_registry_route@20 main_update_xgov_registry_route@21 main_subscribe_xgov_route@22 main_unsubscribe_xgov_route@23 main_request_subscribe_xgov_route@24 main_approve_subscribe_xgov_route@25 main_reject_subscribe_xgov_route@26 main_set_voting_account_route@27 main_subscribe_proposer_route@28 main_set_proposer_kyc_route@29 main_declare_committee_route@30 main_open_proposal_route@31 main_vote_proposal_route@32 main_pay_grant_proposal_route@33 main_finalize_proposal_route@34 main_drop_proposal_route@35 main_deposit_funds_route@36 main_withdraw_funds_route@37 main_withdraw_balance_route@38 main_get_state_route@39 main_get_xgov_box_route@40 main_get_proposer_box_route@41 main_get_request_box_route@42 main_is_proposal_route@43",
      "stack_out": []
    },
    "471": {
      "block": "main_after_if_else@44",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "472": {
      "op": "return",
      "stack_out": []
    },
    "473": {
      "block": "main_is_proposal_route@43",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%172#0"
      ]
    },
    "475": {
      "op": "!",
      "defined_out": [
        "tmp%173#0"
      ],
      "stack_out": [
        "tmp%173#0"
      ]
    },
    "476": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "477": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%174#0"
      ],
      "stack_out": [
        "tmp%174#0"
      ]
    },
    "479": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "480": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "483": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "op": "callsub is_proposal",
      "stack_out": []
    },
    "486": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "487": {
      "op": "return",
      "stack_out": []
    },
    "488": {
      "block": "main_get_request_box_route@42",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%166#0"
      ]
    },
    "490": {
      "op": "!",
      "defined_out": [
        "tmp%167#0"
      ],
      "stack_out": [
        "tmp%167#0"
      ]
    },
    "491": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "492": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%168#0"
      ],
      "stack_out": [
        "tmp%168#0"
      ]
    },
    "494": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "495": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%15#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "498": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_request_box",
      "op": "callsub get_request_box",
      "defined_out": [
        "tmp%170#0"
      ],
      "stack_out": [
        "tmp%170#0"
      ]
    },
    "501": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%170#0"
      ],
      "stack_out": [
        "tmp%170#0",
        "0x151f7c75"
      ]
    },
    "502": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%170#0"
      ]
    },
    "503": {
      "op": "concat",
      "defined_out": [
        "tmp%171#0"
      ],
      "stack_out": [
        "tmp%171#0"
      ]
    },
    "504": {
      "op": "log",
      "stack_out": []
    },
    "505": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "506": {
      "op": "return",
      "stack_out": []
    },
    "507": {
      "block": "main_get_proposer_box_route@41",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%160#0"
      ]
    },
    "509": {
      "op": "!",
      "defined_out": [
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%161#0"
      ]
    },
    "510": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "511": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%162#0"
      ],
      "stack_out": [
        "tmp%162#0"
      ]
    },
    "513": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "514": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%17#0"
      ]
    },
    "517": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposer_box",
      "op": "callsub get_proposer_box",
      "defined_out": [
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0"
      ]
    },
    "520": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%164#0",
        "0x151f7c75"
      ]
    },
    "521": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%164#0"
      ]
    },
    "522": {
      "op": "concat",
      "defined_out": [
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%165#0"
      ]
    },
    "523": {
      "op": "log",
      "stack_out": []
    },
    "524": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "525": {
      "op": "return",
      "stack_out": []
    },
    "526": {
      "block": "main_get_xgov_box_route@40",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "528": {
      "op": "!",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "529": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "530": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%156#0"
      ]
    },
    "532": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "533": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%16#0"
      ]
    },
    "536": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_xgov_box",
      "op": "callsub get_xgov_box",
      "defined_out": [
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%158#0"
      ]
    },
    "539": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%158#0",
        "0x151f7c75"
      ]
    },
    "540": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%158#0"
      ]
    },
    "541": {
      "op": "concat",
      "defined_out": [
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%159#0"
      ]
    },
    "542": {
      "op": "log",
      "stack_out": []
    },
    "543": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "544": {
      "op": "return",
      "stack_out": []
    },
    "545": {
      "block": "main_get_state_route@39",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "547": {
      "op": "!",
      "defined_out": [
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%149#0"
      ]
    },
    "548": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "549": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "551": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "552": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "555": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0",
        "0x151f7c75"
      ]
    },
    "556": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%152#0"
      ]
    },
    "557": {
      "op": "concat",
      "defined_out": [
        "tmp%153#0"
      ],
      "stack_out": [
        "tmp%153#0"
      ]
    },
    "558": {
      "op": "log",
      "stack_out": []
    },
    "559": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "560": {
      "op": "return",
      "stack_out": []
    },
    "561": {
      "block": "main_withdraw_balance_route@38",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "563": {
      "op": "!",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "564": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "565": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "567": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "568": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_balance",
      "op": "callsub withdraw_balance"
    },
    "571": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "572": {
      "op": "return",
      "stack_out": []
    },
    "573": {
      "block": "main_withdraw_funds_route@37",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "575": {
      "op": "!",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "576": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "577": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "579": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "580": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "583": {
      "op": "btoi",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "584": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "op": "callsub withdraw_funds",
      "stack_out": []
    },
    "587": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "588": {
      "op": "return",
      "stack_out": []
    },
    "589": {
      "block": "main_deposit_funds_route@36",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "591": {
      "op": "!",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "592": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "593": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "595": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "596": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "598": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0",
        "1"
      ]
    },
    "599": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "600": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "601": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "603": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "604": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "605": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "606": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "op": "callsub deposit_funds",
      "stack_out": []
    },
    "609": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "610": {
      "op": "return",
      "stack_out": []
    },
    "611": {
      "block": "main_drop_proposal_route@35",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "613": {
      "op": "!",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "614": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "615": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "617": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "618": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "621": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.drop_proposal",
      "op": "callsub drop_proposal",
      "stack_out": []
    },
    "624": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "625": {
      "op": "return",
      "stack_out": []
    },
    "626": {
      "block": "main_finalize_proposal_route@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "628": {
      "op": "!",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "629": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "630": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "632": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "633": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "636": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.finalize_proposal",
      "op": "callsub finalize_proposal",
      "stack_out": []
    },
    "639": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "640": {
      "op": "return",
      "stack_out": []
    },
    "641": {
      "block": "main_pay_grant_proposal_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "643": {
      "op": "!",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "644": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "645": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "647": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "648": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "651": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "op": "callsub pay_grant_proposal",
      "stack_out": []
    },
    "654": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "655": {
      "op": "return",
      "stack_out": []
    },
    "656": {
      "block": "main_vote_proposal_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "658": {
      "op": "!",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "659": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "660": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "662": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "663": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "666": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%15#0"
      ]
    },
    "669": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "672": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%10#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[32]%15#0",
        "reinterpret_bytes[8]%9#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "675": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal",
      "op": "callsub vote_proposal",
      "stack_out": []
    },
    "678": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "679": {
      "op": "return",
      "stack_out": []
    },
    "680": {
      "block": "main_open_proposal_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "682": {
      "op": "!",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "683": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "684": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "686": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "687": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "689": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0",
        "1"
      ]
    },
    "690": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "691": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "692": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "694": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "695": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "696": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "697": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "op": "callsub open_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "700": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "701": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "702": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "703": {
      "op": "concat",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "704": {
      "op": "log",
      "stack_out": []
    },
    "705": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "706": {
      "op": "return",
      "stack_out": []
    },
    "707": {
      "block": "main_declare_committee_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "709": {
      "op": "!",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "710": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "711": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "713": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "714": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%14#0"
      ]
    },
    "717": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "720": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%14#0",
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "723": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "op": "callsub declare_committee",
      "stack_out": []
    },
    "726": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "727": {
      "op": "return",
      "stack_out": []
    },
    "728": {
      "block": "main_set_proposer_kyc_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "730": {
      "op": "!",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "731": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "732": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "734": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "735": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%13#0"
      ]
    },
    "738": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%13#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "741": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%13#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%13#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "744": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "op": "callsub set_proposer_kyc",
      "stack_out": []
    },
    "747": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "748": {
      "op": "return",
      "stack_out": []
    },
    "749": {
      "block": "main_subscribe_proposer_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "751": {
      "op": "!",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "752": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "753": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "755": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "756": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "758": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "1"
      ]
    },
    "759": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "760": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "761": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "763": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "764": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "765": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "766": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "op": "callsub subscribe_proposer",
      "stack_out": []
    },
    "769": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "770": {
      "op": "return",
      "stack_out": []
    },
    "771": {
      "block": "main_set_voting_account_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "773": {
      "op": "!",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "774": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "775": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "777": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "778": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%11#0"
      ]
    },
    "781": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%11#0",
        "reinterpret_bytes[32]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%11#0",
        "reinterpret_bytes[32]%12#0"
      ]
    },
    "784": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "op": "callsub set_voting_account",
      "stack_out": []
    },
    "787": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "788": {
      "op": "return",
      "stack_out": []
    },
    "789": {
      "block": "main_reject_subscribe_xgov_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "791": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "792": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "793": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "795": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "796": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "799": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov",
      "op": "callsub reject_subscribe_xgov",
      "stack_out": []
    },
    "802": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "803": {
      "op": "return",
      "stack_out": []
    },
    "804": {
      "block": "main_approve_subscribe_xgov_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "806": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "807": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "808": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "810": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "811": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "814": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "op": "callsub approve_subscribe_xgov",
      "stack_out": []
    },
    "817": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "818": {
      "op": "return",
      "stack_out": []
    },
    "819": {
      "block": "main_request_subscribe_xgov_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "821": {
      "op": "!",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "822": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "823": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "825": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "826": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0"
      ]
    },
    "829": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0"
      ]
    },
    "832": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "835": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%86#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%86#0"
      ]
    },
    "837": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%86#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%86#0",
        "1"
      ]
    },
    "838": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "gtxn_idx%1#0"
      ]
    },
    "839": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "840": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "842": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "843": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "844": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%2#0",
        "gtxn_idx%1#0"
      ]
    },
    "845": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "op": "callsub request_subscribe_xgov",
      "stack_out": []
    },
    "848": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "849": {
      "op": "return",
      "stack_out": []
    },
    "850": {
      "block": "main_unsubscribe_xgov_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "852": {
      "op": "!",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "853": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "854": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "856": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "857": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%8#0"
      ]
    },
    "860": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "op": "callsub unsubscribe_xgov",
      "stack_out": []
    },
    "863": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "864": {
      "op": "return",
      "stack_out": []
    },
    "865": {
      "block": "main_subscribe_xgov_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "867": {
      "op": "!",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "868": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "869": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "871": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "872": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0"
      ]
    },
    "875": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%77#0"
      ]
    },
    "877": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[32]%7#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%77#0",
        "1"
      ]
    },
    "878": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0"
      ]
    },
    "879": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "880": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "882": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "883": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "reinterpret_bytes[32]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "884": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "gtxn_idx%0#0"
      ]
    },
    "885": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "op": "callsub subscribe_xgov",
      "stack_out": []
    },
    "888": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "889": {
      "op": "return",
      "stack_out": []
    },
    "890": {
      "block": "main_update_xgov_registry_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "892": {
      "op": "intc_2 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0",
        "UpdateApplication"
      ]
    },
    "893": {
      "op": "==",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "894": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "895": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "897": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "898": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "op": "callsub update_xgov_registry"
    },
    "901": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "902": {
      "op": "return",
      "stack_out": []
    },
    "903": {
      "block": "main_config_xgov_registry_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "905": {
      "op": "!",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "906": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "907": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "909": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "910": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[184]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[184]%0#0"
      ]
    },
    "913": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "op": "callsub config_xgov_registry",
      "stack_out": []
    },
    "916": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "917": {
      "op": "return",
      "stack_out": []
    },
    "918": {
      "block": "main_set_xgov_daemon_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "920": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "921": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "922": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "924": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "925": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%6#0"
      ]
    },
    "928": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_daemon",
      "op": "callsub set_xgov_daemon",
      "stack_out": []
    },
    "931": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "932": {
      "op": "return",
      "stack_out": []
    },
    "933": {
      "block": "main_set_committee_manager_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "935": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "936": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "937": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "939": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "940": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "943": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "op": "callsub set_committee_manager",
      "stack_out": []
    },
    "946": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "947": {
      "op": "return",
      "stack_out": []
    },
    "948": {
      "block": "main_set_kyc_provider_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "950": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "951": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "952": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "954": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "955": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "958": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "op": "callsub set_kyc_provider",
      "stack_out": []
    },
    "961": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "962": {
      "op": "return",
      "stack_out": []
    },
    "963": {
      "block": "main_set_xgov_subscriber_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "965": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "966": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "967": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "969": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "970": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "973": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "op": "callsub set_xgov_subscriber",
      "stack_out": []
    },
    "976": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "977": {
      "op": "return",
      "stack_out": []
    },
    "978": {
      "block": "main_set_xgov_council_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "980": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "981": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "982": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "984": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "985": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "988": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_council",
      "op": "callsub set_xgov_council",
      "stack_out": []
    },
    "991": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "992": {
      "op": "return",
      "stack_out": []
    },
    "993": {
      "block": "main_set_payor_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "995": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "996": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "997": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "999": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1000": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "1003": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "op": "callsub set_payor",
      "stack_out": []
    },
    "1006": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1007": {
      "op": "return",
      "stack_out": []
    },
    "1008": {
      "block": "main_set_xgov_manager_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1010": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1011": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1012": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1014": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1015": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1018": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "op": "callsub set_xgov_manager",
      "stack_out": []
    },
    "1021": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1022": {
      "op": "return",
      "stack_out": []
    },
    "1023": {
      "block": "main_resume_proposals_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1025": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1026": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1027": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1029": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1030": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_proposals",
      "op": "callsub resume_proposals"
    },
    "1033": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1034": {
      "op": "return",
      "stack_out": []
    },
    "1035": {
      "block": "main_resume_registry_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1037": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1038": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1039": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1041": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1042": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_registry",
      "op": "callsub resume_registry"
    },
    "1045": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1046": {
      "op": "return",
      "stack_out": []
    },
    "1047": {
      "block": "main_pause_proposals_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1049": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1050": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1051": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1053": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1054": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_proposals",
      "op": "callsub pause_proposals"
    },
    "1057": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1058": {
      "op": "return",
      "stack_out": []
    },
    "1059": {
      "block": "main_pause_registry_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1061": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1062": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1063": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1065": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1066": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_registry",
      "op": "callsub pause_registry"
    },
    "1069": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1070": {
      "op": "return",
      "stack_out": []
    },
    "1071": {
      "block": "main_delete_proposal_contract_box_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1073": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1074": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1075": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1077": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1078": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.delete_proposal_contract_box",
      "op": "callsub delete_proposal_contract_box"
    },
    "1081": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1082": {
      "op": "return",
      "stack_out": []
    },
    "1083": {
      "block": "main_load_proposal_contract_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1085": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1086": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1087": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1089": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1090": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "1093": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%15#0"
      ]
    },
    "1096": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%16#0"
      ]
    },
    "1099": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.load_proposal_contract",
      "op": "callsub load_proposal_contract",
      "stack_out": []
    },
    "1102": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1103": {
      "op": "return",
      "stack_out": []
    },
    "1104": {
      "block": "main_init_proposal_contract_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "1106": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1107": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1108": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1110": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1111": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1114": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.init_proposal_contract",
      "op": "callsub init_proposal_contract",
      "stack_out": []
    },
    "1117": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1118": {
      "op": "return",
      "stack_out": []
    },
    "1119": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "1121": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "1122": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1123": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "1125": {
      "op": "!",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "1126": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1127": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "op": "callsub create"
    },
    "1130": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1131": {
      "op": "return",
      "stack_out": []
    },
    "1132": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "params": {},
      "block": "is_xgov_manager",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1134": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1135": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "1137": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1138": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1139": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1140": {
      "retsub": true,
      "op": "retsub"
    },
    "1141": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "params": {},
      "block": "is_xgov_subscriber",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1143": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1144": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "1146": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1147": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1148": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1149": {
      "retsub": true,
      "op": "retsub"
    },
    "1150": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "_is_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1153": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1155": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "1157": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "1158": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "1160": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1161": {
      "retsub": true,
      "op": "retsub"
    },
    "1162": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "get_proposal_proposer",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1165": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1167": {
      "op": "pushbytes 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)",
        "0x70726f706f736572"
      ]
    },
    "1177": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ]
    },
    "1178": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "1179": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "1180": {
      "op": "len",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%0#0"
      ]
    },
    "1181": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "proposer_bytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%0#0",
        "32"
      ]
    },
    "1183": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%1#0"
      ]
    },
    "1184": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "1185": {
      "retsub": true,
      "op": "retsub"
    },
    "1186": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "params": {
        "payment#0": "uint64"
      },
      "block": "valid_xgov_payment",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1189": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1191": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1193": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1195": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1196": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "1199": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1201": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "1204": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "1206": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1207": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "1208": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1209": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "1212": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1213": {
      "retsub": true,
      "op": "retsub"
    },
    "1214": {
      "block": "valid_xgov_payment_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1215": {
      "retsub": true,
      "op": "retsub"
    },
    "1216": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "params": {
        "address#0": "bytes"
      },
      "block": "valid_kyc",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1219": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "1220": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "address#0 (copy)"
      ]
    },
    "1222": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1223": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1224": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1225": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1226": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1227": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ]
    },
    "1228": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1230": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1231": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1233": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1234": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1235": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "1236": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1239": {
      "op": "frame_dig 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1241": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1242": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1243": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "1244": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1245": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1247": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "1248": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1251": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "1252": {
      "block": "valid_kyc_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ],
      "op": "swap",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "1253": {
      "retsub": true,
      "op": "retsub"
    },
    "1254": {
      "block": "valid_kyc_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "1255": {
      "op": "b valid_kyc_bool_merge@4"
    },
    "1258": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "decrement_pending_proposals",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1261": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1262": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1264": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1265": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1266": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1267": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1268": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "materialized_values%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1270": {
      "op": "swap",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "materialized_values%0#0"
      ]
    },
    "1271": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1272": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1274": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "1277": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "0x70"
      ]
    },
    "1278": {
      "op": "swap",
      "stack_out": [
        "0x70",
        "proposer#0"
      ]
    },
    "1279": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1280": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1281": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1282": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1283": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1284": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0",
        "0"
      ]
    },
    "1285": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "1286": {
      "op": "box_put",
      "stack_out": []
    },
    "1287": {
      "retsub": true,
      "op": "retsub"
    },
    "1288": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "params": {
        "voting_address#0": "bytes"
      },
      "block": "make_xgov_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1291": {
      "op": "global Round",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1293": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1294": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ]
    },
    "1296": {
      "op": "bytec 48 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "voting_address#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "1298": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1299": {
      "op": "bytec 48 // 0x0000000000000000",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "1301": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1302": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1303": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1304": {
      "retsub": true,
      "op": "retsub"
    },
    "1305": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "1307": {
      "op": "txn Sender",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "materialized_values%0#0"
      ]
    },
    "1309": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1310": {
      "op": "bytec 50 // TMPL_entropy",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1312": {
      "op": "dup",
      "defined_out": [
        "TMPL_entropy",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "TMPL_entropy"
      ]
    },
    "1313": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1314": {
      "op": "assert",
      "stack_out": []
    },
    "1315": {
      "retsub": true,
      "op": "retsub"
    },
    "1316": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.init_proposal_contract",
      "params": {
        "size#0": "bytes"
      },
      "block": "init_proposal_contract",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1319": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1322": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1323": {
      "op": "bytec 9 // 0x7061",
      "defined_out": [
        "0x7061"
      ],
      "stack_out": [
        "0x7061"
      ]
    },
    "1325": {
      "op": "box_get",
      "defined_out": [
        "box#0",
        "exist#0"
      ],
      "stack_out": [
        "box#0",
        "exist#0"
      ]
    },
    "1326": {
      "op": "bury 1",
      "stack_out": [
        "exist#0"
      ]
    },
    "1328": {
      "op": "bz init_proposal_contract_else_body@2",
      "stack_out": []
    },
    "1331": {
      "op": "frame_dig -1",
      "defined_out": [
        "size#0 (copy)"
      ],
      "stack_out": [
        "size#0 (copy)"
      ]
    },
    "1333": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1334": {
      "op": "bytec 9 // 0x7061",
      "stack_out": [
        "tmp%1#0",
        "0x7061"
      ]
    },
    "1336": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%1#0"
      ]
    },
    "1337": {
      "op": "box_resize",
      "stack_out": []
    },
    "1338": {
      "retsub": true,
      "op": "retsub"
    },
    "1339": {
      "block": "init_proposal_contract_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "size#0 (copy)"
      ],
      "stack_out": [
        "size#0 (copy)"
      ]
    },
    "1341": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1342": {
      "op": "bytec 9 // 0x7061",
      "defined_out": [
        "0x7061",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x7061"
      ]
    },
    "1344": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%2#0"
      ]
    },
    "1345": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "1346": {
      "op": "pop",
      "stack_out": []
    },
    "1347": {
      "retsub": true,
      "op": "retsub"
    },
    "1348": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.load_proposal_contract",
      "params": {
        "offset#0": "bytes",
        "data#0": "bytes"
      },
      "block": "load_proposal_contract",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1351": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1354": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1355": {
      "op": "frame_dig -2",
      "defined_out": [
        "offset#0 (copy)"
      ],
      "stack_out": [
        "offset#0 (copy)"
      ]
    },
    "1357": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1358": {
      "op": "bytec 9 // 0x7061",
      "defined_out": [
        "0x7061",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x7061"
      ]
    },
    "1360": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%1#0"
      ]
    },
    "1361": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x7061",
        "data#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "0x7061",
        "tmp%1#0",
        "data#0 (copy)"
      ]
    },
    "1363": {
      "op": "box_replace",
      "stack_out": []
    },
    "1364": {
      "retsub": true,
      "op": "retsub"
    },
    "1365": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.delete_proposal_contract_box",
      "params": {},
      "block": "delete_proposal_contract_box",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1368": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1369": {
      "op": "bytec 9 // 0x7061",
      "defined_out": [
        "0x7061"
      ],
      "stack_out": [
        "0x7061"
      ]
    },
    "1371": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1372": {
      "op": "pop",
      "stack_out": []
    },
    "1373": {
      "retsub": true,
      "op": "retsub"
    },
    "1374": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_registry",
      "params": {},
      "block": "pause_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1377": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1378": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1379": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ]
    },
    "1380": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1381": {
      "retsub": true,
      "op": "retsub"
    },
    "1382": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_proposals",
      "params": {},
      "block": "pause_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1385": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1386": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "1388": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ]
    },
    "1389": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1390": {
      "retsub": true,
      "op": "retsub"
    },
    "1391": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_registry",
      "params": {},
      "block": "resume_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1394": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1395": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1396": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "1397": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1398": {
      "retsub": true,
      "op": "retsub"
    },
    "1399": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_proposals",
      "params": {},
      "block": "resume_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1402": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1403": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "1405": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "1406": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1407": {
      "retsub": true,
      "op": "retsub"
    },
    "1408": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_xgov_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1411": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1414": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1415": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "1417": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1419": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1420": {
      "retsub": true,
      "op": "retsub"
    },
    "1421": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "params": {
        "payor#0": "bytes"
      },
      "block": "set_payor",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1424": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1427": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1428": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "1430": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ]
    },
    "1432": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1433": {
      "retsub": true,
      "op": "retsub"
    },
    "1434": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_council",
      "params": {
        "council#0": "bytes"
      },
      "block": "set_xgov_council",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1437": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1440": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1441": {
      "op": "bytec 22 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c"
      ]
    },
    "1443": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "council#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "council#0 (copy)"
      ]
    },
    "1445": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1446": {
      "retsub": true,
      "op": "retsub"
    },
    "1447": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "params": {
        "subscriber#0": "bytes"
      },
      "block": "set_xgov_subscriber",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1450": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1453": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1454": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "1456": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ]
    },
    "1458": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1459": {
      "retsub": true,
      "op": "retsub"
    },
    "1460": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "params": {
        "provider#0": "bytes"
      },
      "block": "set_kyc_provider",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1463": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1466": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1467": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "1469": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ]
    },
    "1471": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1472": {
      "retsub": true,
      "op": "retsub"
    },
    "1473": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_committee_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1476": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1479": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1480": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "1482": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1484": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1485": {
      "retsub": true,
      "op": "retsub"
    },
    "1486": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_daemon",
      "params": {
        "xgov_daemon#0": "bytes"
      },
      "block": "set_xgov_daemon",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1489": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1492": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1493": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e"
      ]
    },
    "1495": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0 (copy)"
      ]
    },
    "1497": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1498": {
      "retsub": true,
      "op": "retsub"
    },
    "1499": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "params": {
        "config#0": "bytes"
      },
      "block": "config_xgov_registry",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1502": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1503": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0"
      ]
    },
    "1505": {
      "op": "dupn 3",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0"
      ]
    },
    "1507": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%0#0"
      ]
    },
    "1510": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0"
      ]
    },
    "1511": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "0"
      ]
    },
    "1512": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1514": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1515": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "maybe_value%0#0"
      ]
    },
    "1516": {
      "op": "!",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%0#0"
      ]
    },
    "1517": {
      "error": "Cannot perform operation with pending proposals",
      "op": "assert // Cannot perform operation with pending proposals",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0"
      ]
    },
    "1518": {
      "op": "frame_dig -1",
      "defined_out": [
        "config#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "config#0 (copy)"
      ]
    },
    "1520": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "config#0 (copy)",
        "0"
      ]
    },
    "1521": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1522": {
      "op": "dup",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1523": {
      "op": "pushint 38100 // 38100",
      "defined_out": [
        "38100",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%6#0",
        "38100"
      ]
    },
    "1527": {
      "op": ">=",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1528": {
      "op": "bz config_xgov_registry_bool_false@3",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1531": {
      "op": "frame_dig 5",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1533": {
      "op": "pushint 34900 // 34900",
      "defined_out": [
        "34900",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%6#0",
        "34900"
      ]
    },
    "1537": {
      "op": ">=",
      "defined_out": [
        "tmp%10#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%10#0"
      ]
    },
    "1538": {
      "op": "bz config_xgov_registry_bool_false@3",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1541": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "and_result%0#0"
      ]
    },
    "1542": {
      "block": "config_xgov_registry_bool_merge@4",
      "stack_in": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "and_result%0#0"
      ],
      "error": "Invalid xGov fee",
      "op": "assert // Invalid xGov fee",
      "defined_out": [],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1543": {
      "op": "frame_dig -1",
      "defined_out": [
        "config#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1545": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "config#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)",
        "8"
      ]
    },
    "1546": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%12#0"
      ]
    },
    "1547": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "1548": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%12#0"
      ]
    },
    "1550": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%12#0",
        "19300"
      ]
    },
    "1552": {
      "op": ">=",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%13#0"
      ]
    },
    "1553": {
      "error": "Invalid proposer fee",
      "op": "assert // Invalid proposer fee",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1554": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1556": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "config#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)",
        "40"
      ]
    },
    "1558": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%12#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0"
      ]
    },
    "1559": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "tmp%15#0"
      ]
    },
    "1560": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%12#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0"
      ]
    },
    "1562": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "config#0 (copy)"
      ]
    },
    "1564": {
      "error": "Index access is out of bounds",
      "op": "extract 48 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1567": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%16#0"
      ]
    },
    "1568": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1570": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "tmp%16#0",
        "0"
      ]
    },
    "1571": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "awst_tmp%0#0"
      ]
    },
    "1572": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1573": {
      "op": "frame_bury 1",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%15#0",
        "awst_tmp%0#0"
      ]
    },
    "1575": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%18#0"
      ]
    },
    "1576": {
      "op": "bz config_xgov_registry_bool_false@8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1579": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0"
      ]
    },
    "1581": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "8"
      ]
    },
    "1582": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "1583": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "1584": {
      "op": "frame_bury 2",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "1586": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "1588": {
      "op": ">",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%21#0"
      ]
    },
    "1589": {
      "op": "bz config_xgov_registry_bool_false@8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1592": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0"
      ]
    },
    "1594": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "16"
      ]
    },
    "1596": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%24#0"
      ]
    },
    "1597": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%24#0",
        "awst_tmp%1#0"
      ]
    },
    "1599": {
      "op": ">",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%25#0"
      ]
    },
    "1600": {
      "op": "bz config_xgov_registry_bool_false@8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1603": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "and_result%1#0"
      ]
    },
    "1604": {
      "block": "config_xgov_registry_bool_merge@9",
      "stack_in": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "and_result%1#0"
      ],
      "error": "Inconsistent requested amount config",
      "op": "assert // Inconsistent requested amount config",
      "defined_out": [],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1605": {
      "op": "frame_dig -1",
      "defined_out": [
        "config#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1607": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "config#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)",
        "16"
      ]
    },
    "1609": {
      "op": "extract_uint64",
      "defined_out": [
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0"
      ]
    },
    "1610": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "config#0 (copy)"
      ]
    },
    "1612": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "config#0 (copy)",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "config#0 (copy)",
        "24"
      ]
    },
    "1614": {
      "op": "extract_uint64",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1615": {
      "op": "dup2",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding_bps#0 (copy)",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "daemon_ops_funding_bps#0 (copy)"
      ]
    },
    "1616": {
      "op": "*",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#2"
      ]
    },
    "1617": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#2",
        "10000"
      ]
    },
    "1620": {
      "op": "/",
      "defined_out": [
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0"
      ]
    },
    "1621": {
      "op": "pushint 16835300 // 16835300",
      "defined_out": [
        "16835300",
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0",
        "16835300"
      ]
    },
    "1626": {
      "op": "+",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "to_substract#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "1627": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "1629": {
      "op": "dig 1",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0",
        "to_substract#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0 (copy)"
      ]
    },
    "1631": {
      "op": ">",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#0",
        "to_substract#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "tmp%0#0"
      ]
    },
    "1632": {
      "error": "Invalid open proposal fee",
      "op": "assert // Invalid open proposal fee",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "1633": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "1635": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0"
      ]
    },
    "1636": {
      "op": "-",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0"
      ]
    },
    "1637": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "19300"
      ]
    },
    "1639": {
      "op": "/",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "materialized_values%0#1",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#1"
      ]
    },
    "1640": {
      "op": "bytec 46 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#1",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "materialized_values%0#1",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "1642": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "materialized_values%0#1"
      ]
    },
    "1643": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1644": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565"
      ]
    },
    "1646": {
      "op": "frame_dig 5",
      "defined_out": [
        "0x78676f765f666565",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565",
        "tmp%6#0"
      ]
    },
    "1648": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1649": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1651": {
      "op": "frame_dig 3",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565",
        "tmp%12#0"
      ]
    },
    "1653": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1654": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "1656": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "open_proposal_fee#0"
      ]
    },
    "1658": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1659": {
      "op": "bytec 23 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "daemon_ops_funding_bps#0",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "daemon_ops_funding_bps#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "1661": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1662": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1663": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1665": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "config#0 (copy)",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)",
        "32"
      ]
    },
    "1667": {
      "op": "extract_uint64",
      "defined_out": [
        "materialized_values%4#0",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%4#0"
      ]
    },
    "1668": {
      "op": "bytec 24 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "materialized_values%4#0",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%4#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1670": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "materialized_values%4#0"
      ]
    },
    "1671": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1672": {
      "op": "bytec 25 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "1674": {
      "op": "frame_dig 4",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%15#0"
      ]
    },
    "1676": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1677": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1679": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0"
      ]
    },
    "1681": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1682": {
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0"
      ]
    },
    "1684": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "1685": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "8"
      ]
    },
    "1686": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%7#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "materialized_values%7#0"
      ]
    },
    "1687": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%7#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "materialized_values%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1689": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "materialized_values%7#0"
      ]
    },
    "1690": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0"
      ]
    },
    "1691": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%16#0",
        "16"
      ]
    },
    "1693": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%8#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%8#0"
      ]
    },
    "1694": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%8#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%8#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1696": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "materialized_values%8#0"
      ]
    },
    "1697": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1698": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1700": {
      "error": "Index access is out of bounds",
      "op": "extract 72 32 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0"
      ]
    },
    "1703": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%42#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ]
    },
    "1704": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%42#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "tmp%42#0 (copy)",
        "0"
      ]
    },
    "1705": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%9#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "materialized_values%9#0"
      ]
    },
    "1706": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%9#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "materialized_values%9#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1708": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "materialized_values%9#0"
      ]
    },
    "1709": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0"
      ]
    },
    "1710": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ]
    },
    "1711": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "tmp%42#0 (copy)",
        "8"
      ]
    },
    "1712": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%10#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "materialized_values%10#0"
      ]
    },
    "1713": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%10#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "materialized_values%10#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1715": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "materialized_values%10#0"
      ]
    },
    "1716": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0"
      ]
    },
    "1717": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "tmp%42#0 (copy)"
      ]
    },
    "1718": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "tmp%42#0 (copy)",
        "16"
      ]
    },
    "1720": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%11#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "materialized_values%11#0"
      ]
    },
    "1721": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%11#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%42#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "materialized_values%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1723": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "materialized_values%11#0"
      ]
    },
    "1724": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0"
      ]
    },
    "1725": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%42#0",
        "24"
      ]
    },
    "1727": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%12#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%12#0"
      ]
    },
    "1728": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "awst_tmp%0#0",
        "materialized_values%12#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%12#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "1730": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "materialized_values%12#0"
      ]
    },
    "1731": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1732": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1734": {
      "error": "Index access is out of bounds",
      "op": "extract 104 32 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0"
      ]
    },
    "1737": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%50#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "tmp%50#0 (copy)"
      ]
    },
    "1738": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "tmp%50#0 (copy)",
        "0"
      ]
    },
    "1739": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%13#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "materialized_values%13#0"
      ]
    },
    "1740": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%13#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "materialized_values%13#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "1742": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "materialized_values%13#0"
      ]
    },
    "1743": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0"
      ]
    },
    "1744": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "tmp%50#0 (copy)"
      ]
    },
    "1745": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "tmp%50#0 (copy)",
        "8"
      ]
    },
    "1746": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%14#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "materialized_values%14#0"
      ]
    },
    "1747": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%14#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "materialized_values%14#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "1749": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "materialized_values%14#0"
      ]
    },
    "1750": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0"
      ]
    },
    "1751": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "tmp%50#0 (copy)"
      ]
    },
    "1752": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "tmp%50#0 (copy)",
        "16"
      ]
    },
    "1754": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%15#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "materialized_values%15#0"
      ]
    },
    "1755": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%15#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%50#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "materialized_values%15#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "1757": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "materialized_values%15#0"
      ]
    },
    "1758": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0"
      ]
    },
    "1759": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%50#0",
        "24"
      ]
    },
    "1761": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%16#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%16#0"
      ]
    },
    "1762": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "awst_tmp%0#0",
        "materialized_values%16#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%16#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "1764": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "materialized_values%16#0"
      ]
    },
    "1765": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1766": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1768": {
      "error": "Index access is out of bounds",
      "op": "extract 136 24 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%58#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0"
      ]
    },
    "1771": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%58#0",
        "tmp%58#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "tmp%58#0 (copy)"
      ]
    },
    "1772": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "tmp%58#0 (copy)",
        "0"
      ]
    },
    "1773": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%17#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%58#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "materialized_values%17#0"
      ]
    },
    "1774": {
      "op": "bytec 37 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%17#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%58#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "materialized_values%17#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "1776": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "0x71756f72756d5f736d616c6c",
        "materialized_values%17#0"
      ]
    },
    "1777": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0"
      ]
    },
    "1778": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "tmp%58#0 (copy)"
      ]
    },
    "1779": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "tmp%58#0 (copy)",
        "8"
      ]
    },
    "1780": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%18#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%58#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "materialized_values%18#0"
      ]
    },
    "1781": {
      "op": "bytec 38 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%18#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%58#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "materialized_values%18#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "1783": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "0x71756f72756d5f6d656469756d",
        "materialized_values%18#0"
      ]
    },
    "1784": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0"
      ]
    },
    "1785": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%58#0",
        "16"
      ]
    },
    "1787": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%19#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%19#0"
      ]
    },
    "1788": {
      "op": "bytec 39 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%19#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%19#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "1790": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x71756f72756d5f6c61726765",
        "materialized_values%19#0"
      ]
    },
    "1791": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1792": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "config#0 (copy)"
      ]
    },
    "1794": {
      "error": "Index access is out of bounds",
      "op": "extract 160 24 // on error: Index access is out of bounds",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0"
      ]
    },
    "1797": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0",
        "tmp%64#0",
        "tmp%64#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "tmp%64#0 (copy)"
      ]
    },
    "1798": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "tmp%64#0 (copy)",
        "0"
      ]
    },
    "1799": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%20#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "materialized_values%20#0"
      ]
    },
    "1800": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "awst_tmp%0#0",
        "materialized_values%20#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "materialized_values%20#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "1802": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "materialized_values%20#0"
      ]
    },
    "1803": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0"
      ]
    },
    "1804": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "tmp%64#0 (copy)"
      ]
    },
    "1805": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "tmp%64#0 (copy)",
        "8"
      ]
    },
    "1806": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%21#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "materialized_values%21#0"
      ]
    },
    "1807": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "awst_tmp%0#0",
        "materialized_values%21#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "materialized_values%21#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "1809": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "materialized_values%21#0"
      ]
    },
    "1810": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0"
      ]
    },
    "1811": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "tmp%64#0",
        "16"
      ]
    },
    "1813": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "materialized_values%22#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%22#0"
      ]
    },
    "1814": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "awst_tmp%0#0",
        "materialized_values%22#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "materialized_values%22#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "1816": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "materialized_values%22#0"
      ]
    },
    "1817": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ]
    },
    "1818": {
      "retsub": true,
      "op": "retsub"
    },
    "1819": {
      "block": "config_xgov_registry_bool_false@8",
      "stack_in": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "and_result%1#0"
      ]
    },
    "1820": {
      "op": "b config_xgov_registry_bool_merge@9"
    },
    "1823": {
      "block": "config_xgov_registry_bool_false@3",
      "stack_in": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%15#0",
        "tmp%6#0",
        "and_result%0#0"
      ]
    },
    "1824": {
      "op": "b config_xgov_registry_bool_merge@4"
    },
    "1827": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "params": {},
      "block": "update_xgov_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1830": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1831": {
      "retsub": true,
      "op": "retsub"
    },
    "1832": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "params": {
        "voting_address#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1835": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1836": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1837": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1838": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1839": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1840": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1841": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1843": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78",
        "materialized_values%0#0"
      ]
    },
    "1845": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1846": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1847": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1849": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1850": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": []
    },
    "1851": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1853": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1856": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "1857": {
      "op": "frame_dig -2",
      "defined_out": [
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "voting_address#0 (copy)"
      ]
    },
    "1859": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0"
      ]
    },
    "1862": {
      "op": "bytec 4 // 0x78",
      "stack_out": [
        "materialized_values%1#0",
        "0x78"
      ]
    },
    "1864": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%1#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "materialized_values%1#0",
        "0x78",
        "materialized_values%2#0"
      ]
    },
    "1866": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1867": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ]
    },
    "1868": {
      "op": "box_put",
      "stack_out": []
    },
    "1869": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1870": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1872": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1873": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1874": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1875": {
      "op": "+",
      "defined_out": [
        "materialized_values%3#0"
      ],
      "stack_out": [
        "materialized_values%3#0"
      ]
    },
    "1876": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "materialized_values%3#0",
        "0x78676f7673"
      ]
    },
    "1878": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "materialized_values%3#0"
      ]
    },
    "1879": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1880": {
      "retsub": true,
      "op": "retsub"
    },
    "1881": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "params": {
        "xgov_address#0": "bytes"
      },
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1884": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1885": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1886": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1887": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1888": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1889": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1890": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1892": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1894": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1895": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1897": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1898": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1900": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1901": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1902": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "1903": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1906": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1908": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "voting_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1910": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "tmp%2#0"
      ]
    },
    "1911": {
      "op": "bnz unsubscribe_xgov_bool_true@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1914": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "voting_address#0"
      ]
    },
    "1916": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "voting_address#0",
        "tmp%3#0"
      ]
    },
    "1918": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "voting_address#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "tmp%4#0"
      ]
    },
    "1919": {
      "op": "bz unsubscribe_xgov_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1922": {
      "block": "unsubscribe_xgov_bool_true@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "1923": {
      "block": "unsubscribe_xgov_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1924": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1926": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "{box_del}"
      ]
    },
    "1927": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1928": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "0"
      ]
    },
    "1929": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "0",
        "0x78676f7673"
      ]
    },
    "1931": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1932": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "maybe_value%2#0"
      ]
    },
    "1933": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "1934": {
      "op": "-",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "materialized_values%0#0"
      ]
    },
    "1935": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "materialized_values%0#0",
        "0x78676f7673"
      ]
    },
    "1937": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "0x78676f7673",
        "materialized_values%0#0"
      ]
    },
    "1938": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ]
    },
    "1939": {
      "retsub": true,
      "op": "retsub"
    },
    "1940": {
      "block": "unsubscribe_xgov_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "1941": {
      "op": "b unsubscribe_xgov_bool_merge@4"
    },
    "1944": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "params": {
        "xgov_address#0": "bytes",
        "owner_address#0": "bytes",
        "relation_type#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "request_subscribe_xgov",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "1947": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1948": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1949": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1950": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1951": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1952": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1953": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1955": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1957": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1958": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1959": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1961": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1962": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": []
    },
    "1963": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1965": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1968": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "1969": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1970": {
      "op": "bytec 45 // 0x726571756573745f6964",
      "defined_out": [
        "0",
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0",
        "0x726571756573745f6964"
      ]
    },
    "1972": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "maybe_exists%2#0"
      ]
    },
    "1973": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "rid#0"
      ]
    },
    "1974": {
      "op": "frame_dig -4",
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1976": {
      "op": "frame_dig -3",
      "defined_out": [
        "owner_address#0 (copy)",
        "rid#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)",
        "owner_address#0 (copy)"
      ]
    },
    "1978": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1979": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)"
      ]
    },
    "1981": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1982": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0",
        "rid#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "rid#0 (copy)"
      ]
    },
    "1984": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0"
      ]
    },
    "1985": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1987": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1988": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1989": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1990": {
      "op": "box_put",
      "stack_out": [
        "rid#0"
      ]
    },
    "1991": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "1"
      ]
    },
    "1992": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1993": {
      "op": "bytec 45 // 0x726571756573745f6964",
      "stack_out": [
        "materialized_values%0#0",
        "0x726571756573745f6964"
      ]
    },
    "1995": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f6964",
        "materialized_values%0#0"
      ]
    },
    "1996": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1997": {
      "retsub": true,
      "op": "retsub"
    },
    "1998": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "approve_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2001": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2004": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2005": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "2007": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "2008": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2009": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "2011": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "2012": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2013": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2014": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "maybe_exists%0#0"
      ]
    },
    "2015": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0"
      ]
    },
    "2016": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "2017": {
      "error": "Index access is out of bounds",
      "op": "extract 32 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ]
    },
    "2020": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "materialized_values%1#0"
      ]
    },
    "2023": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "request#0"
      ]
    },
    "2024": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "2027": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "reinterpret_bytes[32]%0#0",
        "0x78"
      ]
    },
    "2029": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "0x78",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "2030": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "2031": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "materialized_values%1#0"
      ]
    },
    "2032": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2033": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "2034": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "0x78676f7673"
      ]
    },
    "2036": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2037": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "2038": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2039": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%2#0"
      ]
    },
    "2040": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "materialized_values%2#0",
        "0x78676f7673"
      ]
    },
    "2042": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x78676f7673",
        "materialized_values%2#0"
      ]
    },
    "2043": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2044": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2045": {
      "op": "pop",
      "stack_out": []
    },
    "2046": {
      "retsub": true,
      "op": "retsub"
    },
    "2047": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "reject_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2050": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2053": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2054": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "2056": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "2057": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2058": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "2060": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "2061": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2062": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2063": {
      "op": "pop",
      "stack_out": []
    },
    "2064": {
      "retsub": true,
      "op": "retsub"
    },
    "2065": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "params": {
        "xgov_address#0": "bytes",
        "voting_address#0": "bytes"
      },
      "block": "set_voting_account",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2068": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2069": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2070": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2071": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2072": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2073": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "2074": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2076": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2078": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2079": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2081": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "2082": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "2084": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2085": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "maybe_exists%2#0"
      ]
    },
    "2086": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "2087": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%1#0"
      ]
    },
    "2089": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "xgov_box#0"
      ]
    },
    "2090": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "2093": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "2094": {
      "op": "bnz set_voting_account_bool_true@2",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2097": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "2099": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "xgov_address#0 (copy)"
      ]
    },
    "2101": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "2102": {
      "op": "bz set_voting_account_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2105": {
      "block": "set_voting_account_bool_true@2",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "2106": {
      "block": "set_voting_account_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2107": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2109": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2110": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "2111": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_value%2#0"
      ]
    },
    "2112": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_value%2#0",
        "voting_address#0 (copy)"
      ]
    },
    "2114": {
      "op": "replace2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "updated_data%0#0"
      ]
    },
    "2116": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2117": {
      "retsub": true,
      "op": "retsub"
    },
    "2118": {
      "block": "set_voting_account_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "2119": {
      "op": "b set_voting_account_bool_merge@4"
    },
    "2122": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "params": {
        "payment#0": "uint64"
      },
      "block": "subscribe_proposer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2125": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2126": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2127": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2128": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2129": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2130": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "2131": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "2132": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "2134": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2135": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2136": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "2138": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2139": {
      "error": "Already a proposer",
      "op": "assert // Already a proposer",
      "stack_out": []
    },
    "2140": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2142": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2144": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2146": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2147": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2148": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2150": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2152": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "2153": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "2155": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2156": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "2157": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2158": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "2159": {
      "op": "bytec_2 // 0x70",
      "stack_out": [
        "0x70"
      ]
    },
    "2160": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%2#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%2#0"
      ]
    },
    "2162": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "2163": {
      "op": "pushbytes 0x000000000000000000",
      "defined_out": [
        "0x000000000000000000",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "0x000000000000000000"
      ]
    },
    "2174": {
      "op": "box_put",
      "stack_out": []
    },
    "2175": {
      "retsub": true,
      "op": "retsub"
    },
    "2176": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "params": {
        "proposer#0": "bytes",
        "kyc_status#0": "bytes",
        "kyc_expiring#0": "bytes"
      },
      "block": "set_proposer_kyc",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2179": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2182": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "2184": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2185": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2186": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2187": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2188": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "2189": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x70",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2191": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2192": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2193": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2194": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2196": {
      "error": "Proposer does not exist",
      "op": "assert // Proposer does not exist",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2197": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2198": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2199": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "2200": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2201": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ]
    },
    "2202": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2204": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2205": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2207": {
      "op": "setbit",
      "defined_out": [
        "active_proposal#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0"
      ]
    },
    "2208": {
      "op": "frame_dig -2",
      "defined_out": [
        "active_proposal#0",
        "box_prefixed_key%0#0",
        "kyc_status#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0 (copy)"
      ]
    },
    "2210": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0 (copy)",
        "0"
      ]
    },
    "2211": {
      "op": "getbit",
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "is_true%0#0"
      ]
    },
    "2212": {
      "op": "intc_1 // 1"
    },
    "2213": {
      "op": "swap",
      "defined_out": [
        "1",
        "active_proposal#0",
        "box_prefixed_key%0#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "1",
        "is_true%0#0"
      ]
    },
    "2214": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2215": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)"
      ]
    },
    "2217": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2218": {
      "op": "box_put",
      "stack_out": []
    },
    "2219": {
      "retsub": true,
      "op": "retsub"
    },
    "2220": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "params": {
        "committee_id#0": "bytes",
        "size#0": "bytes",
        "votes#0": "bytes"
      },
      "block": "declare_committee",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2223": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2225": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "2226": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "2228": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2229": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "tmp%0#1",
        "maybe_value%0#1"
      ]
    },
    "2230": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "2231": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2232": {
      "op": "frame_dig -2",
      "defined_out": [
        "size#0 (copy)"
      ],
      "stack_out": [
        "size#0 (copy)"
      ]
    },
    "2234": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "2236": {
      "op": "bytec 46 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "2238": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2239": {
      "error": "check self.max_committee_size exists",
      "op": "assert // check self.max_committee_size exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2240": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2242": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2243": {
      "error": "Committee size is too large",
      "op": "assert // Committee size is too large",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2244": {
      "op": "bytec 49 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "2246": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0 (copy)"
      ]
    },
    "2248": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2249": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2251": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#0"
      ]
    },
    "2252": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2253": {
      "op": "frame_dig -1",
      "defined_out": [
        "votes#0 (copy)"
      ],
      "stack_out": [
        "votes#0 (copy)"
      ]
    },
    "2255": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0"
      ]
    },
    "2256": {
      "op": "bytec 44 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "materialized_values%1#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2258": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "materialized_values%1#0"
      ]
    },
    "2259": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2260": {
      "retsub": true,
      "op": "retsub"
    },
    "2261": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "params": {
        "payment#0": "uint64"
      },
      "block": "open_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2264": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2265": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2266": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2267": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2268": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2269": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "2270": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2271": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "2273": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2274": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2275": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2276": {
      "error": "Creation of proposals is paused",
      "op": "assert // Creation of proposals is paused",
      "stack_out": []
    },
    "2277": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "2278": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "2280": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2281": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%2#0"
      ]
    },
    "2282": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%2#0"
      ]
    },
    "2284": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2285": {
      "op": "bytec_2 // 0x70",
      "stack_out": [
        "0x70"
      ]
    },
    "2286": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%1#0"
      ]
    },
    "2288": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "2289": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "2290": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "2291": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "0"
      ]
    },
    "2292": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0"
      ]
    },
    "2293": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0",
        "0x00"
      ]
    },
    "2295": {
      "op": "intc_0 // 0",
      "stack_out": [
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2296": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2298": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "2299": {
      "op": "bytec 8 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "2301": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2302": {
      "error": "Proposer already has an active proposal",
      "op": "assert // Proposer already has an active proposal",
      "stack_out": []
    },
    "2303": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2305": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2308": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": []
    },
    "2309": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2311": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2313": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "3"
      ]
    },
    "2315": {
      "op": "*",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "2316": {
      "op": ">=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "2317": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "2318": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2320": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2322": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "2324": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2325": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2326": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2328": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "2330": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "2331": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "2333": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%4#0"
      ]
    },
    "2334": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "2335": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "2336": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "2337": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2339": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "check%0#0"
      ]
    },
    "2341": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "2342": {
      "op": "bytec 9 // 0x7061",
      "defined_out": [
        "0x7061",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "0x7061"
      ]
    },
    "2344": {
      "op": "box_get",
      "defined_out": [
        "exist#0",
        "mbr_before#0",
        "proposal_approval#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "exist#0"
      ]
    },
    "2345": {
      "error": "Missing proposal approval program",
      "op": "assert // Missing proposal approval program",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0"
      ]
    },
    "2346": {
      "op": "dup",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "proposal_approval#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "proposal_approval#0 (copy)"
      ]
    },
    "2347": {
      "op": "len",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%15#0"
      ]
    },
    "2348": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%15#0",
        "4"
      ]
    },
    "2349": {
      "op": "+",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ]
    },
    "2350": {
      "op": "pushint 2048 // 2048",
      "defined_out": [
        "2048",
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0",
        "2048"
      ]
    },
    "2353": {
      "op": "/",
      "defined_out": [
        "extra_pages#0",
        "mbr_before#0",
        "proposal_approval#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "extra_pages#0"
      ]
    },
    "2354": {
      "op": "itxn_begin"
    },
    "2355": {
      "op": "txn Sender",
      "defined_out": [
        "extra_pages#0",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "extra_pages#0",
        "tmp%17#0"
      ]
    },
    "2357": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0",
        "extra_pages#0"
      ]
    },
    "2358": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ]
    },
    "2360": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0",
        "3"
      ]
    },
    "2362": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ]
    },
    "2364": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0",
        "20"
      ]
    },
    "2366": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ]
    },
    "2368": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0",
        "CoEBQw=="
      ]
    },
    "2374": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%17#0"
      ]
    },
    "2376": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "tmp%17#0",
        "proposal_approval#0"
      ]
    },
    "2377": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "mbr_before#0",
        "tmp%17#0"
      ]
    },
    "2379": {
      "op": "pushbytes 0x216b1e07 // method \"create(address)string\"",
      "defined_out": [
        "Method(create(address)string)",
        "mbr_before#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "tmp%17#0",
        "Method(create(address)string)"
      ]
    },
    "2385": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "mbr_before#0",
        "tmp%17#0"
      ]
    },
    "2387": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "2389": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "appl"
      ]
    },
    "2391": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "2393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "0"
      ]
    },
    "2394": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "2396": {
      "op": "itxn_submit"
    },
    "2397": {
      "op": "itxn LastLog"
    },
    "2399": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2401": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%19#0"
      ]
    },
    "2404": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%19#0",
        "0x151f7c75"
      ]
    },
    "2405": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%20#0"
      ]
    },
    "2406": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2407": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2409": {
      "op": "swap",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%0#0"
      ]
    },
    "2410": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0"
      ]
    },
    "2413": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2414": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ]
    },
    "2415": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0"
      ]
    },
    "2416": {
      "op": "intc_2 // 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "4"
      ]
    },
    "2417": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%22#0",
        "tmp%23#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "2418": {
      "op": "bz open_proposal_ternary_false@3",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ]
    },
    "2421": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "ternary_result%0#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "ternary_result%0#0"
      ]
    },
    "2422": {
      "block": "open_proposal_ternary_merge@4",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "ternary_result%0#0"
      ],
      "op": "bz open_proposal_else_body@11",
      "defined_out": [],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ]
    },
    "2425": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "4"
      ]
    },
    "2426": {
      "op": "frame_dig 4",
      "defined_out": [
        "4",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "4",
        "tmp%22#0"
      ]
    },
    "2428": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%22#0",
        "tmp%22#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "4",
        "tmp%22#0 (copy)",
        "tmp%22#0 (copy)"
      ]
    },
    "2429": {
      "op": "cover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "4",
        "tmp%22#0 (copy)"
      ]
    },
    "2431": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2432": {
      "op": "intc_2 // 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2433": {
      "op": "dig 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%22#0 (copy)"
      ]
    },
    "2435": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "4",
        "tmp%22#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2437": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "bounded_index%0#0"
      ]
    },
    "2438": {
      "op": "frame_dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2440": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%22#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2441": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%22#0"
      ]
    },
    "2443": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "error_without_prefix#0"
      ]
    },
    "2444": {
      "op": "bytec 47 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "error_without_prefix#0",
        "\"Missing Config\""
      ]
    },
    "2446": {
      "op": "pushbytess \"Empty Committee ID\" \"Wrong Committee Members\" \"Wrong Committee Votes\" // \"Empty Committee ID\", \"Wrong Committee Members\", \"Wrong Committee Votes\"",
      "defined_out": [
        "\"Empty Committee ID\"",
        "\"Missing Config\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "error_without_prefix#0",
        "\"Missing Config\"",
        "\"Empty Committee ID\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\""
      ]
    },
    "2513": {
      "op": "uncover 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "\"Missing Config\"",
        "\"Empty Committee ID\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\"",
        "error_without_prefix#0"
      ]
    },
    "2515": {
      "op": "match open_proposal_switch_case_0@6 open_proposal_switch_case_1@7 open_proposal_switch_case_2@8 open_proposal_switch_case_3@9",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ]
    },
    "2525": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2526": {
      "block": "open_proposal_switch_case_3@9",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ],
      "error": "Wrong Committee Votes",
      "op": "err // Wrong Committee Votes"
    },
    "2527": {
      "block": "open_proposal_switch_case_2@8",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ],
      "error": "Wrong Committee Members",
      "op": "err // Wrong Committee Members"
    },
    "2528": {
      "block": "open_proposal_switch_case_1@7",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ],
      "error": "Empty Committee ID",
      "op": "err // Empty Committee ID"
    },
    "2529": {
      "block": "open_proposal_switch_case_0@6",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "2530": {
      "block": "open_proposal_else_body@11",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "awst_tmp%1#0"
      ]
    },
    "2532": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2534": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%27#0"
      ]
    },
    "2535": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ]
    },
    "2536": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%28#0"
      ]
    },
    "2538": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "awst_tmp%1#0",
        "check%1#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "check%1#0"
      ]
    },
    "2540": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0"
      ]
    },
    "2541": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70",
        "awst_tmp%1#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "0x70"
      ]
    },
    "2542": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "awst_tmp%1#0",
        "materialized_values%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "0x70",
        "materialized_values%2#0"
      ]
    },
    "2544": {
      "op": "concat",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0"
      ]
    },
    "2545": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "2546": {
      "op": "box_get",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "maybe_exists%6#0",
        "maybe_value%5#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%5#0",
        "maybe_exists%6#0"
      ]
    },
    "2547": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%5#0"
      ]
    },
    "2548": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "maybe_value%5#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "2549": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "maybe_value%5#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "maybe_value%5#0",
        "0",
        "1"
      ]
    },
    "2550": {
      "op": "setbit",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "mbr_after#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "updated_data%0#0"
      ]
    },
    "2551": {
      "op": "box_put",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0"
      ]
    },
    "2552": {
      "op": "itxn_begin"
    },
    "2553": {
      "op": "frame_dig 2",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2555": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "tx.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "2556": {
      "op": "cover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "2558": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "check%2#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "2560": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0"
      ]
    },
    "2561": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "0"
      ]
    },
    "2562": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "2564": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_exists%7#0",
        "maybe_value%6#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "maybe_value%6#0",
        "maybe_exists%7#0"
      ]
    },
    "2565": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "maybe_value%6#0"
      ]
    },
    "2566": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%6#0",
        "mbr_after#0"
      ]
    },
    "2568": {
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_value%6#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%6#0",
        "mbr_after#0",
        "mbr_before#0"
      ]
    },
    "2570": {
      "op": "-",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_value%6#0",
        "mbr_before#0",
        "tmp%29#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%6#0",
        "tmp%29#0"
      ]
    },
    "2571": {
      "op": "-",
      "defined_out": [
        "awst_tmp%1#0",
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "2572": {
      "op": "itxn_field Amount",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ]
    },
    "2574": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2576": {
      "op": "intc_1 // pay",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "pay",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "pay"
      ]
    },
    "2577": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2579": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "2580": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2582": {
      "op": "itxn_submit"
    },
    "2583": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "2584": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "2586": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_exists%8#0",
        "maybe_value%7#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%7#0",
        "maybe_exists%8#0"
      ]
    },
    "2587": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%7#0"
      ]
    },
    "2588": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%7#0",
        "1"
      ]
    },
    "2589": {
      "op": "+",
      "defined_out": [
        "awst_tmp%1#0",
        "materialized_values%3#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "materialized_values%3#0"
      ]
    },
    "2590": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "materialized_values%3#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "2592": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0",
        "0x70656e64696e675f70726f706f73616c73",
        "materialized_values%3#0"
      ]
    },
    "2593": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2594": {
      "op": "frame_bury 0"
    },
    "2596": {
      "retsub": true,
      "op": "retsub"
    },
    "2597": {
      "block": "open_proposal_ternary_false@3",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "awst_tmp%0#0"
      ]
    },
    "2599": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "2602": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "tmp%24#0",
        "\"ERR:\""
      ]
    },
    "2604": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%22#0",
        "ternary_result%0#0"
      ]
    },
    "2605": {
      "op": "b open_proposal_ternary_merge@4"
    },
    "2608": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal",
      "params": {
        "proposal_id#0": "bytes",
        "xgov_address#0": "bytes",
        "approval_votes#0": "bytes",
        "rejection_votes#0": "bytes"
      },
      "block": "vote_proposal",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2611": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2612": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2613": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2614": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2615": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2616": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "2617": {
      "op": "frame_dig -4",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "2619": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2620": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2621": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2624": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2625": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x78"
      ]
    },
    "2627": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x78",
        "tmp%1#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2629": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2630": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2631": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "exists#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "2632": {
      "op": "bury 1",
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "2634": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2635": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2636": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%2#0",
        "tmp%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "maybe_exists%2#0"
      ]
    },
    "2637": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "2638": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ]
    },
    "2639": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)",
        "32"
      ]
    },
    "2641": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%4#0"
      ]
    },
    "2642": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "tmp%4#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%4#0",
        "1"
      ]
    },
    "2643": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "to_encode%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "to_encode%0#0"
      ]
    },
    "2644": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "val_as_bytes%0#0"
      ]
    },
    "2645": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "val_as_bytes%0#0",
        "xgov_box#0 (copy)"
      ]
    },
    "2647": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "2648": {
      "op": "replace2 32",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "updated_data%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%0#0"
      ]
    },
    "2650": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "to_encode%1#0",
        "updated_data%0#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%0#0",
        "to_encode%1#0"
      ]
    },
    "2652": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "updated_data%0#0",
        "val_as_bytes%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2653": {
      "op": "replace2 40",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "updated_data%1#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "updated_data%1#0"
      ]
    },
    "2655": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "xgov_box#0",
        "updated_data%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2657": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "xgov_box#0",
        "box_prefixed_key%0#0",
        "updated_data%1#0"
      ]
    },
    "2658": {
      "op": "box_put",
      "stack_out": [
        "tmp%1#0",
        "xgov_box#0"
      ]
    },
    "2659": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "xgov_box#0",
        "tmp%5#0"
      ]
    },
    "2661": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "xgov_box#0"
      ]
    },
    "2662": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "2665": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%6#0"
      ]
    },
    "2666": {
      "error": "Must be voting address",
      "op": "assert // Must be voting address",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2667": {
      "op": "itxn_begin"
    },
    "2668": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2670": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "2676": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2678": {
      "op": "frame_dig -3",
      "stack_out": [
        "xgov_address#0 (copy)"
      ]
    },
    "2680": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2682": {
      "op": "frame_dig -2",
      "defined_out": [
        "approval_votes#0 (copy)"
      ],
      "stack_out": [
        "approval_votes#0 (copy)"
      ]
    },
    "2684": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2686": {
      "op": "frame_dig -1",
      "defined_out": [
        "rejection_votes#0 (copy)"
      ],
      "stack_out": [
        "rejection_votes#0 (copy)"
      ]
    },
    "2688": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2690": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2692": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2694": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2695": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2697": {
      "op": "itxn_submit"
    },
    "2698": {
      "op": "itxn LastLog"
    },
    "2700": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2702": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "2705": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2706": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2707": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2708": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2711": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2712": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2713": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2714": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2715": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2716": {
      "op": "bz vote_proposal_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2719": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ]
    },
    "2720": {
      "block": "vote_proposal_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ],
      "op": "bz vote_proposal_else_body@13",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2723": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2724": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4",
        "tmp%11#0"
      ]
    },
    "2726": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "2727": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2729": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2730": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2731": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2733": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2735": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "2736": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2738": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2739": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "2741": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0"
      ]
    },
    "2742": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2744": {
      "op": "bytec 47 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "2746": {
      "op": "pushbytess \"Voter not found\" \"Voter already voted\" \"Votes exceeded\" \"Voting Period Expired\" // \"Voter not found\", \"Voter already voted\", \"Votes exceeded\", \"Voting Period Expired\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\""
      ]
    },
    "2821": {
      "op": "uncover 6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "error_without_prefix#0"
      ]
    },
    "2823": {
      "op": "match vote_proposal_switch_case_0@6 vote_proposal_switch_case_1@7 vote_proposal_switch_case_2@8 vote_proposal_switch_case_3@9 vote_proposal_switch_case_4@10 vote_proposal_switch_case_5@11",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2837": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2838": {
      "block": "vote_proposal_switch_case_5@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "error": "Voting Period Expired",
      "op": "err // Voting Period Expired"
    },
    "2839": {
      "block": "vote_proposal_switch_case_4@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "error": "Votes exceeded",
      "op": "err // Votes exceeded"
    },
    "2840": {
      "block": "vote_proposal_switch_case_3@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "error": "Voter already voted",
      "op": "err // Voter already voted"
    },
    "2841": {
      "block": "vote_proposal_switch_case_2@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "error": "Voter not found",
      "op": "err // Voter not found"
    },
    "2842": {
      "block": "vote_proposal_switch_case_1@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "2843": {
      "block": "vote_proposal_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2844": {
      "block": "vote_proposal_else_body@13",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0"
      ]
    },
    "2846": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2848": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%16#0"
      ]
    },
    "2849": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2850": {
      "retsub": true,
      "op": "retsub"
    },
    "2851": {
      "block": "vote_proposal_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%0#0"
      ]
    },
    "2853": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2856": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "2858": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ]
    },
    "2859": {
      "op": "b vote_proposal_ternary_merge@4"
    },
    "2862": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "pay_grant_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2865": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2867": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2868": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "2870": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2871": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2872": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2873": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2874": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "2876": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2877": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2878": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%3#0"
      ]
    },
    "2881": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2882": {
      "op": "dup",
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2883": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposal_id#1",
        "proposer#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0"
      ]
    },
    "2886": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "proposal_id#1 (copy)"
      ]
    },
    "2888": {
      "op": "pushbytes 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "proposal_id#1",
        "proposal_id#1 (copy)",
        "proposer#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "proposal_id#1 (copy)",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "2906": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ]
    },
    "2907": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2908": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70"
      ]
    },
    "2909": {
      "op": "dig 2",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "proposer#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2911": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2912": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2913": {
      "op": "bury 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_exists%1#0"
      ]
    },
    "2915": {
      "error": "Wrong proposer",
      "op": "assert // Wrong proposer",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2916": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "proposer#0 (copy)"
      ]
    },
    "2918": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%6#0"
      ]
    },
    "2921": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2922": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0"
      ]
    },
    "2923": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2924": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2925": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2926": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "2927": {
      "op": "dig 2",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "2929": {
      "op": ">=",
      "defined_out": [
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "tmp%7#0"
      ]
    },
    "2930": {
      "error": "Insufficient treasury funds",
      "op": "assert // Insufficient treasury funds",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2931": {
      "op": "itxn_begin"
    },
    "2932": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "requested_amount#1 (copy)"
      ]
    },
    "2934": {
      "op": "itxn_field Amount",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2936": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "proposer#0"
      ]
    },
    "2938": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2940": {
      "op": "intc_1 // pay",
      "defined_out": [
        "maybe_value%1#0",
        "pay",
        "proposal_id#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "pay"
      ]
    },
    "2941": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2943": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2944": {
      "op": "itxn_field Fee",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2946": {
      "op": "itxn_submit"
    },
    "2947": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "maybe_value%1#0",
        "requested_amount#1"
      ]
    },
    "2948": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "materialized_values%0#0"
      ]
    },
    "2949": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "proposal_id#1",
        "materialized_values%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2950": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "0x6f75747374616e64696e675f66756e6473",
        "materialized_values%0#0"
      ]
    },
    "2951": {
      "op": "app_global_put",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2952": {
      "op": "itxn_begin"
    },
    "2953": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2955": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)"
      ],
      "stack_out": [
        "Method(fund()string)"
      ]
    },
    "2961": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2963": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2965": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2967": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2968": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2970": {
      "op": "itxn_submit"
    },
    "2971": {
      "op": "itxn LastLog"
    },
    "2973": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2975": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2978": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "2979": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "2980": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2981": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2984": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2985": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "2986": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "2987": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "4"
      ]
    },
    "2988": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2989": {
      "op": "bz pay_grant_proposal_ternary_false@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "2992": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "ternary_result%0#0"
      ]
    },
    "2993": {
      "block": "pay_grant_proposal_ternary_merge@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "ternary_result%0#0"
      ],
      "op": "bz pay_grant_proposal_else_body@8",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "2996": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "4"
      ]
    },
    "2997": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "4",
        "tmp%12#0"
      ]
    },
    "2999": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "4",
        "tmp%12#0 (copy)",
        "tmp%12#0 (copy)"
      ]
    },
    "3000": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "4",
        "tmp%12#0 (copy)"
      ]
    },
    "3002": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "3003": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "3004": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%12#0 (copy)"
      ]
    },
    "3006": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "4",
        "tmp%12#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "3008": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "bounded_index%0#0"
      ]
    },
    "3009": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "3011": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%12#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "3012": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%12#0"
      ]
    },
    "3014": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "error_without_prefix#0"
      ]
    },
    "3015": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "3017": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "3018": {
      "op": "match pay_grant_proposal_switch_case_0@6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "3022": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "3023": {
      "block": "pay_grant_proposal_switch_case_0@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "3024": {
      "block": "pay_grant_proposal_else_body@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "awst_tmp%1#0"
      ]
    },
    "3026": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "3028": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "3029": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ]
    },
    "3030": {
      "retsub": true,
      "op": "retsub"
    },
    "3031": {
      "block": "pay_grant_proposal_ternary_false@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "awst_tmp%0#0"
      ]
    },
    "3033": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3036": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "\"ERR:\""
      ]
    },
    "3038": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "ternary_result%0#0"
      ]
    },
    "3039": {
      "op": "b pay_grant_proposal_ternary_merge@4"
    },
    "3042": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.finalize_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "finalize_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3045": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3046": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "3047": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "3049": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0 (copy)"
      ]
    },
    "3051": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1"
      ]
    },
    "3052": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1"
      ]
    },
    "3053": {
      "op": "pushbytes 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1",
        "0x737461747573"
      ]
    },
    "3061": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ]
    },
    "3062": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0"
      ]
    },
    "3063": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0",
        "status#0 (copy)"
      ]
    },
    "3064": {
      "op": "uncover 2",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "3066": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "3067": {
      "op": "bz finalize_proposal_if_body@2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3070": {
      "op": "frame_dig 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "3072": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "proposal_id#1",
        "status#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "10"
      ]
    },
    "3074": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%2#0"
      ]
    },
    "3075": {
      "op": "bz finalize_proposal_after_if_else@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3078": {
      "block": "finalize_proposal_if_body@2",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0"
      ]
    },
    "3080": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "0"
      ]
    },
    "3081": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "3083": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3084": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "3085": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%4#0"
      ]
    },
    "3086": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3087": {
      "block": "finalize_proposal_after_if_else@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "3089": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "3090": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "tmp%6#0"
      ]
    },
    "3093": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "3094": {
      "op": "itxn_begin"
    },
    "3095": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3097": {
      "op": "pushbytes 0x802069b4 // method \"finalize()string\"",
      "defined_out": [
        "Method(finalize()string)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "Method(finalize()string)"
      ]
    },
    "3103": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3105": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "appl"
      ]
    },
    "3107": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3109": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "0"
      ]
    },
    "3110": {
      "op": "itxn_field Fee",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3112": {
      "op": "itxn_submit"
    },
    "3113": {
      "op": "itxn LastLog"
    },
    "3115": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "3116": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "3118": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3119": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "3122": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "3123": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "3124": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "3125": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "3128": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "3129": {
      "op": "frame_bury 1",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "3131": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "3132": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "3133": {
      "op": "frame_bury 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "3135": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4"
      ]
    },
    "3136": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%12#0"
      ]
    },
    "3137": {
      "op": "bz finalize_proposal_ternary_false@6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3140": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "ternary_result%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "3141": {
      "block": "finalize_proposal_ternary_merge@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ],
      "op": "bz finalize_proposal_else_body@13",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3144": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4"
      ]
    },
    "3145": {
      "op": "frame_dig 2",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0"
      ]
    },
    "3147": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "3148": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "3150": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "3151": {
      "op": "intc_2 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "3152": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "3154": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "3156": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "3157": {
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "3159": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "3160": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "3162": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0"
      ]
    },
    "3163": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "3165": {
      "op": "bytec 47 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "3167": {
      "op": "pushbytes \"There are voters assigned to this proposal\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\""
      ]
    },
    "3211": {
      "op": "uncover 3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "error_without_prefix#0"
      ]
    },
    "3213": {
      "op": "match finalize_proposal_switch_case_0@9 finalize_proposal_switch_case_1@10 finalize_proposal_switch_case_2@11",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3221": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "3222": {
      "block": "finalize_proposal_switch_case_2@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "error": "There are voters assigned to this proposal",
      "op": "err // There are voters assigned to this proposal"
    },
    "3223": {
      "block": "finalize_proposal_switch_case_1@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "error": "Missing Config",
      "op": "err // Missing Config"
    },
    "3224": {
      "block": "finalize_proposal_switch_case_0@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "3225": {
      "block": "finalize_proposal_else_body@13",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "3227": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "3229": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%16#0"
      ]
    },
    "3230": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3231": {
      "op": "frame_dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "3233": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "3236": {
      "retsub": true,
      "op": "retsub"
    },
    "3237": {
      "block": "finalize_proposal_ternary_false@6",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "3239": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0"
      ]
    },
    "3242": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "3244": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "3245": {
      "op": "b finalize_proposal_ternary_merge@7"
    },
    "3248": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.drop_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "drop_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3251": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3252": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "3253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3254": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3255": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3256": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "3257": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3259": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3260": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3262": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3265": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "3266": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3267": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0"
      ]
    },
    "3270": {
      "op": "txn Sender",
      "defined_out": [
        "proposer#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0",
        "tmp%4#0"
      ]
    },
    "3272": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%5#0"
      ]
    },
    "3273": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "3274": {
      "op": "itxn_begin"
    },
    "3275": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3277": {
      "op": "pushbytes 0x7371321a // method \"drop()string\"",
      "defined_out": [
        "Method(drop()string)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "Method(drop()string)"
      ]
    },
    "3283": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3285": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "appl"
      ]
    },
    "3287": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3289": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "3290": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3292": {
      "op": "itxn_submit"
    },
    "3293": {
      "op": "itxn LastLog"
    },
    "3295": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3297": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%7#0"
      ]
    },
    "3300": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "3301": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "3302": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "3303": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "3306": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "3307": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "3308": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0"
      ]
    },
    "3309": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3310": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "3311": {
      "op": "bz drop_proposal_ternary_false@3",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "3314": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "ternary_result%0#0"
      ]
    },
    "3315": {
      "block": "drop_proposal_ternary_merge@4",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "ternary_result%0#0"
      ],
      "op": "bz drop_proposal_else_body@8",
      "defined_out": [],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "3318": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3319": {
      "op": "frame_dig 3",
      "defined_out": [
        "4",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "4",
        "tmp%10#0"
      ]
    },
    "3321": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "4",
        "tmp%10#0 (copy)",
        "tmp%10#0 (copy)"
      ]
    },
    "3322": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "4",
        "tmp%10#0 (copy)"
      ]
    },
    "3324": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "3325": {
      "op": "intc_2 // 4",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "3326": {
      "op": "dig 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%10#0 (copy)"
      ]
    },
    "3328": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "4",
        "tmp%10#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "3330": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "bounded_index%0#0"
      ]
    },
    "3331": {
      "op": "frame_dig 2",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "3333": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%10#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "3334": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%10#0"
      ]
    },
    "3336": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "error_without_prefix#0"
      ]
    },
    "3337": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "3339": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "3340": {
      "op": "match drop_proposal_switch_case_0@6",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "3344": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "3345": {
      "block": "drop_proposal_switch_case_0@6",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "err // Wrong Proposal Status or finalized"
    },
    "3346": {
      "block": "drop_proposal_else_body@8",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "awst_tmp%1#0"
      ]
    },
    "3348": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "3350": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%15#0"
      ]
    },
    "3351": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "3352": {
      "op": "frame_dig 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%1#0"
      ]
    },
    "3354": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "3357": {
      "retsub": true,
      "op": "retsub"
    },
    "3358": {
      "block": "drop_proposal_ternary_false@3",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "awst_tmp%0#0"
      ]
    },
    "3360": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "3363": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "tmp%12#0",
        "\"ERR:\""
      ]
    },
    "3365": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%10#0",
        "ternary_result%0#0"
      ]
    },
    "3366": {
      "op": "b drop_proposal_ternary_merge@4"
    },
    "3369": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "params": {
        "payment#0": "uint64"
      },
      "block": "deposit_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3372": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "3374": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3376": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3378": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3379": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "3380": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3381": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3382": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3383": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3384": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "payment#0 (copy)"
      ]
    },
    "3386": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "3388": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "3389": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "materialized_values%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3390": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "materialized_values%0#0"
      ]
    },
    "3391": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3392": {
      "retsub": true,
      "op": "retsub"
    },
    "3393": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "params": {
        "amount#0": "uint64"
      },
      "block": "withdraw_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3396": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3399": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "3400": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3401": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3402": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3403": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3404": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "3406": {
      "op": "dig 1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)",
        "maybe_value%0#0 (copy)"
      ]
    },
    "3408": {
      "op": "<=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "3409": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3410": {
      "op": "txn Fee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "3412": {
      "op": "global MinTxnFee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3414": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "3416": {
      "op": "*",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "3417": {
      "op": ">=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "3418": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3419": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "3421": {
      "op": "-",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "3422": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "materialized_values%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3423": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "materialized_values%0#0"
      ]
    },
    "3424": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3425": {
      "op": "itxn_begin"
    },
    "3426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3427": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3429": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3430": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "3431": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%2#0",
        "amount#0 (copy)"
      ]
    },
    "3433": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "3435": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "3437": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3438": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3440": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3441": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3443": {
      "op": "itxn_submit"
    },
    "3444": {
      "retsub": true,
      "op": "retsub"
    },
    "3445": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_balance",
      "params": {},
      "block": "withdraw_balance",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3448": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "3449": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3451": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3453": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "3455": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "3456": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3457": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "3458": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3460": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3462": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3463": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "3465": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3467": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0",
        "value%1#0"
      ]
    },
    "3468": {
      "op": "-",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3469": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "3470": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3471": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3472": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0"
      ]
    },
    "3473": {
      "op": "-",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0"
      ]
    },
    "3474": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "amount#0 (copy)"
      ]
    },
    "3475": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "amount#0"
      ]
    },
    "3476": {
      "op": "itxn_begin"
    },
    "3477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "0"
      ]
    },
    "3478": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3480": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "amount#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3481": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "amount#0",
        "maybe_value%1#0"
      ]
    },
    "3482": {
      "op": "itxn_field Receiver"
    },
    "3484": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "3486": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3487": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3489": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3490": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3492": {
      "op": "itxn_submit"
    },
    "3493": {
      "retsub": true,
      "op": "retsub"
    },
    "3494": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3495": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "3496": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3497": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3498": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x00"
      ]
    },
    "3500": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0x00",
        "0"
      ]
    },
    "3501": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "maybe_value%0#0"
      ]
    },
    "3503": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "3504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3505": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "3507": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3508": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0"
      ]
    },
    "3509": {
      "op": "bytec 8 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0",
        "0x00"
      ]
    },
    "3511": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%1#0",
        "0x00",
        "0"
      ]
    },
    "3512": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00",
        "0",
        "maybe_value%1#0"
      ]
    },
    "3514": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "3515": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "3516": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3518": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3519": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0"
      ]
    },
    "3520": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3521": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "3523": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3524": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "3525": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3526": {
      "op": "bytec 22 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0",
        "0x78676f765f636f756e63696c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "0x78676f765f636f756e63696c"
      ]
    },
    "3528": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3529": {
      "error": "check self.xgov_council exists",
      "op": "assert // check self.xgov_council exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "3530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "3531": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "3533": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3534": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "3535": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "3536": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "3538": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3539": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "3540": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0"
      ]
    },
    "3541": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "3543": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3544": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ]
    },
    "3545": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "3546": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "3548": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3549": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ]
    },
    "3550": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "3551": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "3553": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3554": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "3555": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "3556": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3557": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "3559": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3560": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "maybe_value%10#0"
      ]
    },
    "3561": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3562": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "3563": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "3565": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3566": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%11#0"
      ]
    },
    "3567": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3568": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "3569": {
      "op": "bytec 23 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "3571": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3572": {
      "error": "check self.daemon_ops_funding_bps exists",
      "op": "assert // check self.daemon_ops_funding_bps exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%12#0"
      ]
    },
    "3573": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "3574": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "3575": {
      "op": "bytec 24 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "3577": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3578": {
      "error": "check self.proposal_commitment_bps exists",
      "op": "assert // check self.proposal_commitment_bps exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%13#0"
      ]
    },
    "3579": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "3580": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "3581": {
      "op": "bytec 25 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "3583": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%14#0",
        "maybe_value%14#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3584": {
      "error": "check self.min_requested_amount exists",
      "op": "assert // check self.min_requested_amount exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%14#0"
      ]
    },
    "3585": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "3586": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "3587": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "3589": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3590": {
      "error": "check self.max_requested_amount_small exists",
      "op": "assert // check self.max_requested_amount_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%15#0"
      ]
    },
    "3591": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "3592": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0"
      ]
    },
    "3593": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "3595": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%16#0",
        "maybe_value%16#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3596": {
      "error": "check self.max_requested_amount_medium exists",
      "op": "assert // check self.max_requested_amount_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%16#0"
      ]
    },
    "3597": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "3598": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "3599": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "3601": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%17#0",
        "maybe_value%17#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3602": {
      "error": "check self.max_requested_amount_large exists",
      "op": "assert // check self.max_requested_amount_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%17#0"
      ]
    },
    "3603": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "3604": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "3606": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "result%1#0"
      ]
    },
    "3607": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%1#0",
        "val_as_bytes%8#0"
      ]
    },
    "3608": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0"
      ]
    },
    "3609": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0"
      ]
    },
    "3610": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "3612": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%18#0",
        "maybe_value%18#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3613": {
      "error": "check self.discussion_duration_small exists",
      "op": "assert // check self.discussion_duration_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%18#0"
      ]
    },
    "3614": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0"
      ]
    },
    "3615": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "3616": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "3618": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%19#0",
        "maybe_value%19#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3619": {
      "error": "check self.discussion_duration_medium exists",
      "op": "assert // check self.discussion_duration_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%19#0"
      ]
    },
    "3620": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "3621": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "3622": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "3624": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%20#0",
        "maybe_value%2#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3625": {
      "error": "check self.discussion_duration_large exists",
      "op": "assert // check self.discussion_duration_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%20#0"
      ]
    },
    "3626": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "3627": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "3628": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "3630": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%21#0",
        "maybe_value%2#0",
        "maybe_value%21#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "3631": {
      "error": "check self.discussion_duration_xlarge exists",
      "op": "assert // check self.discussion_duration_xlarge exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%21#0"
      ]
    },
    "3632": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "3633": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0"
      ]
    },
    "3635": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "3637": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "result%4#0"
      ]
    },
    "3638": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%4#0",
        "val_as_bytes%11#0"
      ]
    },
    "3640": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%5#0"
      ]
    },
    "3641": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%12#0"
      ]
    },
    "3642": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0"
      ]
    },
    "3643": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0"
      ]
    },
    "3644": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "3646": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%22#0",
        "maybe_value%2#0",
        "maybe_value%22#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "3647": {
      "error": "check self.voting_duration_small exists",
      "op": "assert // check self.voting_duration_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%22#0"
      ]
    },
    "3648": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0"
      ]
    },
    "3649": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "3650": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "3652": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%23#0",
        "maybe_value%2#0",
        "maybe_value%23#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "3653": {
      "error": "check self.voting_duration_medium exists",
      "op": "assert // check self.voting_duration_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%23#0"
      ]
    },
    "3654": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3655": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "3656": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "3658": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%24#0",
        "maybe_value%2#0",
        "maybe_value%24#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "3659": {
      "error": "check self.voting_duration_large exists",
      "op": "assert // check self.voting_duration_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%24#0"
      ]
    },
    "3660": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "3661": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0"
      ]
    },
    "3662": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "3664": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%25#0",
        "maybe_value%2#0",
        "maybe_value%25#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%25#0",
        "maybe_exists%25#0"
      ]
    },
    "3665": {
      "error": "check self.voting_duration_xlarge exists",
      "op": "assert // check self.voting_duration_xlarge exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%25#0"
      ]
    },
    "3666": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ]
    },
    "3667": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%13#0"
      ]
    },
    "3669": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3671": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "result%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "result%8#0"
      ]
    },
    "3672": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%8#0",
        "val_as_bytes%15#0"
      ]
    },
    "3674": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%9#0"
      ]
    },
    "3675": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%16#0"
      ]
    },
    "3676": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0"
      ]
    },
    "3677": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0"
      ]
    },
    "3678": {
      "op": "bytec 37 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x71756f72756d5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "3680": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%26#0",
        "maybe_value%2#0",
        "maybe_value%26#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%26#0",
        "maybe_exists%26#0"
      ]
    },
    "3681": {
      "error": "check self.quorum_small exists",
      "op": "assert // check self.quorum_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%26#0"
      ]
    },
    "3682": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0"
      ]
    },
    "3683": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0"
      ]
    },
    "3684": {
      "op": "bytec 38 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x71756f72756d5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "3686": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%27#0",
        "maybe_value%2#0",
        "maybe_value%27#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%27#0",
        "maybe_exists%27#0"
      ]
    },
    "3687": {
      "error": "check self.quorum_medium exists",
      "op": "assert // check self.quorum_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%27#0"
      ]
    },
    "3688": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "3689": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0"
      ]
    },
    "3690": {
      "op": "bytec 39 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x71756f72756d5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "3692": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%28#0",
        "maybe_value%2#0",
        "maybe_value%28#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%28#0",
        "maybe_exists%28#0"
      ]
    },
    "3693": {
      "error": "check self.quorum_large exists",
      "op": "assert // check self.quorum_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%28#0"
      ]
    },
    "3694": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0"
      ]
    },
    "3695": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%19#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "3697": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%12#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%19#0",
        "result%12#0"
      ]
    },
    "3698": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%12#0",
        "val_as_bytes%19#0"
      ]
    },
    "3699": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0"
      ]
    },
    "3700": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "0"
      ]
    },
    "3701": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "3703": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%29#0",
        "maybe_value%2#0",
        "maybe_value%29#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "maybe_value%29#0",
        "maybe_exists%29#0"
      ]
    },
    "3704": {
      "error": "check self.weighted_quorum_small exists",
      "op": "assert // check self.weighted_quorum_small exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "maybe_value%29#0"
      ]
    },
    "3705": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0"
      ]
    },
    "3706": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "0"
      ]
    },
    "3707": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "3709": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%30#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%30#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "maybe_value%30#0",
        "maybe_exists%30#0"
      ]
    },
    "3710": {
      "error": "check self.weighted_quorum_medium exists",
      "op": "assert // check self.weighted_quorum_medium exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "maybe_value%30#0"
      ]
    },
    "3711": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0"
      ]
    },
    "3712": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "0"
      ]
    },
    "3713": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "3715": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%31#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%31#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "maybe_value%31#0",
        "maybe_exists%31#0"
      ]
    },
    "3716": {
      "error": "check self.weighted_quorum_large exists",
      "op": "assert // check self.weighted_quorum_large exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "maybe_value%31#0"
      ]
    },
    "3717": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%22#0"
      ]
    },
    "3718": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0"
      ]
    },
    "3720": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%15#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "result%15#0"
      ]
    },
    "3721": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%15#0",
        "val_as_bytes%22#0"
      ]
    },
    "3722": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0"
      ]
    },
    "3723": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "0"
      ]
    },
    "3724": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3725": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%32#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%32#0",
        "maybe_exists%32#0"
      ]
    },
    "3726": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%32#0"
      ]
    },
    "3727": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0"
      ]
    },
    "3728": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "0"
      ]
    },
    "3729": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3731": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%33#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%33#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "maybe_value%33#0",
        "maybe_exists%33#0"
      ]
    },
    "3732": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "maybe_value%33#0"
      ]
    },
    "3733": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0"
      ]
    },
    "3734": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "0"
      ]
    },
    "3735": {
      "op": "bytec 49 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3737": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%34#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_exists%34#0"
      ]
    },
    "3738": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0"
      ]
    },
    "3739": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "0"
      ]
    },
    "3740": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3742": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%35#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_exists%35#0"
      ]
    },
    "3743": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0"
      ]
    },
    "3744": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0"
      ]
    },
    "3745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "0"
      ]
    },
    "3746": {
      "op": "bytec 44 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3748": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_exists%36#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%36#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "maybe_value%36#0",
        "maybe_exists%36#0"
      ]
    },
    "3749": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "maybe_value%36#0"
      ]
    },
    "3750": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ]
    },
    "3751": {
      "op": "uncover 23",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_bool%1#0"
      ]
    },
    "3753": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_bool%1#0",
        "0"
      ]
    },
    "3754": {
      "op": "getbit",
      "defined_out": [
        "encoded_bool%0#0",
        "is_true%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "is_true%0#0"
      ]
    },
    "3755": {
      "op": "uncover 24",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "is_true%0#0",
        "encoded_bool%0#0"
      ]
    },
    "3757": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "encoded_bool%0#0",
        "is_true%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "is_true%0#0",
        "encoded_bool%0#0",
        "1"
      ]
    },
    "3758": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_bool%0#0",
        "1",
        "is_true%0#0"
      ]
    },
    "3760": {
      "op": "setbit",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3761": {
      "op": "uncover 23",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0"
      ]
    },
    "3763": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3764": {
      "op": "uncover 22",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0"
      ]
    },
    "3766": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3767": {
      "op": "uncover 21",
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%4#0",
        "maybe_value%4#0"
      ]
    },
    "3769": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%34#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3770": {
      "op": "uncover 20",
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%5#0"
      ]
    },
    "3772": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "maybe_value%34#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3773": {
      "op": "uncover 19",
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%6#0",
        "maybe_value%6#0"
      ]
    },
    "3775": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "maybe_value%34#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3776": {
      "op": "uncover 18",
      "stack_out": [
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%7#0",
        "maybe_value%7#0"
      ]
    },
    "3778": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "maybe_value%34#0",
        "maybe_value%8#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3779": {
      "op": "uncover 17",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%8#0",
        "maybe_value%8#0"
      ]
    },
    "3781": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3782": {
      "op": "uncover 16",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%0#0"
      ]
    },
    "3784": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3785": {
      "op": "uncover 15",
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%1#0"
      ]
    },
    "3787": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%2#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3788": {
      "op": "uncover 14",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%2#0"
      ]
    },
    "3790": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3791": {
      "op": "uncover 13",
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%3#0"
      ]
    },
    "3793": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3794": {
      "op": "uncover 12",
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%13#0",
        "val_as_bytes%4#0"
      ]
    },
    "3796": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3797": {
      "op": "uncover 11",
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%5#0"
      ]
    },
    "3799": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3800": {
      "op": "uncover 10",
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%15#0",
        "result%2#0"
      ]
    },
    "3802": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%6#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3803": {
      "op": "uncover 9",
      "stack_out": [
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%16#0",
        "result%6#0"
      ]
    },
    "3805": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3806": {
      "op": "uncover 8",
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%17#0",
        "result%10#0"
      ]
    },
    "3808": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "maybe_value%34#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3809": {
      "op": "uncover 7",
      "stack_out": [
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%18#0",
        "result%13#0"
      ]
    },
    "3811": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "maybe_value%34#0",
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "result%16#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "3812": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%19#0",
        "result%16#0"
      ]
    },
    "3814": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "maybe_value%34#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "3815": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%23#0"
      ]
    },
    "3817": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "maybe_value%34#0",
        "val_as_bytes%24#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%24#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "3818": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%21#0",
        "val_as_bytes%24#0"
      ]
    },
    "3820": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "3821": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%22#0",
        "maybe_value%34#0"
      ]
    },
    "3823": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%23#0"
      ]
    },
    "3824": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%25#0"
      ]
    },
    "3826": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%24#0",
        "val_as_bytes%26#0"
      ],
      "stack_out": [
        "val_as_bytes%26#0",
        "encoded_tuple_buffer%24#0"
      ]
    },
    "3827": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%24#0",
        "val_as_bytes%26#0"
      ]
    },
    "3828": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%25#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%25#0"
      ]
    },
    "3829": {
      "retsub": true,
      "op": "retsub"
    },
    "3830": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_xgov_box",
      "params": {
        "xgov_address#0": "bytes"
      },
      "block": "get_xgov_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3833": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "3835": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "3837": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3838": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3839": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3840": {
      "retsub": true,
      "op": "retsub"
    },
    "3841": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposer_box",
      "params": {
        "proposer_address#0": "bytes"
      },
      "block": "get_proposer_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3844": {
      "op": "bytec_2 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "3845": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "proposer_address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "proposer_address#0 (copy)"
      ]
    },
    "3847": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3848": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3849": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3850": {
      "retsub": true,
      "op": "retsub"
    },
    "3851": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_request_box",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "get_request_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3854": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "3856": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "3857": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3858": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "3860": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "3861": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3862": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3863": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3864": {
      "retsub": true,
      "op": "retsub"
    },
    "3865": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "is_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3868": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3870": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3871": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3874": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "3875": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
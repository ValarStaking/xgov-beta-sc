{
  "version": 3,
  "sources": [
    "../../xgov_registry/contract.py"
  ],
  "mappings": ";;;;;AAuDe;;AAA6B;;AAA7B;AAAP;AACO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAGiD;AAAd;AAAnC;AACkD;;AAAd;AAApC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGkD;;AAApB;;AAA9B;AACoD;;AAApB;;AAAhC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGmD;;AAApB;;AAA/B;AAE0C;;AAAd;AAA5B;AACuC;;AAAd;AAAzB;AAC8C;;AAAd;AAAhC;AACmD;;AAAd;AAArC;AAEkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAI8C;;AAAd;AAAhC;AAC+C;;AAAd;AAAjC;AAC8C;;AAAd;AAAhC;AAGkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAImD;AAAd;AAArC;AAGmD;;AAAd;AAArC;AACiD;;AAAd;AAAnC;AAEmD;;AAAd;AAArC;AAE4C;;AAAd;AAA9B;AAGkB;;AAAd;AADJ;AA5GR;;;;;;AAAA;;;AAAA;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAsmBK;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AArSG;;AAAuC;;AAAvC;AArLO;;AAsLkB;AAAlB;AAPV;AASA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAEc;;AAAA;AAAA;;AACtB;;;AACkD;AAAtC;;AAAA;AAAA;AAhBP;AAAA;AAmBkD;AAA3C;;AAAA;AAAA;;;;;AAEP;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAaU;;;AAAP;AAIgB;AAAA;AADhB;;AAAA;AAAA;;AAAA;AAhBH;AAAA;AA6BU;;;AAAP;AAGA;;AAAA;;AAZH;AAAA;AAoBU;;;AAAP;AACA;AAA6B;AAA7B;AAPH;AAAA;AAeU;;;AAAP;AACA;;AAA8B;AAA9B;AAPH;AAAA;AAeU;;;AAAP;AACA;AAA6B;AAA7B;AAPH;AAAA;AAeU;;;AAAP;AACA;;AAA8B;AAA9B;AAPH;AAAA;AASA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;;;;;;AAeA;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAaU;;;AAAP;AAzXO;AAAA;;AAAA;AAAA;AAAA;AA0XP;AAqBI;AAAA;AAAA;AArUG;;;;AAqUH;AAAA;;;AACI;AAtUD;;;;AAsUC;AADJ;;;;AADJ;AAMI;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1UG;;AA0UH;AADJ;AAKI;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AACE;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AADF;AAAA;;;AAEE;;AADA;AACA;AAAA;AAAA;;AADA;;AAAA;AADF;;;AAGE;;AAAA;;AAAA;AADA;;AAAA;AADA;;;;AAFN;AAQI;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAvWG;AAAA;AAA4B;;;AAA5B;AAsCH;;;;;AAAA;AAGG;;AAAA;;AAAA;AAAP;AAE8B;;AAAA;AAAA;AA1BvB;;AAgCyB;AAAhC;;AAAA;AAAA;AAyTA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AACqC;AAAA;AAAA;AAArC;;AAAA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAGyC;;AAAA;AAAA;AAAA;AAAzC;;AAAA;AAAA;AAGwC;;AAAA;AAAxC;;AAAA;AAAA;AAIuC;AAAA;;;AAAA;AAAA;AAAA;AAAvC;;AAAA;AAAA;AACwC;AADD;AACC;AAAxC;;AAAA;AAAA;AAGuC;AAAA;;AAAA;AAAvC;;AAAA;AAAA;AACwC;;AAAA;AAAxC;;AAAA;AAAA;AAImC;AAAA;;;AAAA;AAAA;AAAA;AAAnC;;AAAA;AAAA;AACoC;AADD;AACC;AAApC;;AAAA;AAAA;AACmC;AAAA;;AAAA;AAAnC;;AAAA;AAAA;AACoC;;AAAA;AAApC;;AAAA;AAAA;AAE0B;AAAA;;;AAAA;AAAA;AAAA;AAA1B;;AAAA;AAAA;AAC2B;AADD;AACC;AAA3B;;AAAA;AAAA;AAC0B;;AAAA;AAA1B;;AAAA;AAAA;AAEmC;;;AAAA;AAAA;AAAA;AAAnC;;AAAA;AAAA;AACoC;AADD;AACC;AAApC;;AAAA;AAAA;AACmC;;AAAA;AAAnC;;AAAA;AAAA;AA5FH;AAAA;;;;;;;;;AAuGU;;;AAAP;AATH;AAAA;AAWA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEyB;;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;;AAAP;AAG4B;;;AAA5B;;AAAc;;AAAd;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAxBH;AAAA;AAmCc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGqB;;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGI;;AAAc;;AAAd;AAAJ;;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAhBH;AAAA;AAkBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuBU;;AAAA;;AAAA;AAAP;AACW;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGkC;;AAA3B;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGO;;;AAAP;AAGM;AAAA;;AAAA;AAAA;AACkB;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAOyB;AAAzB;AAAA;;AAAA;AAAA;AAzCH;AAAA;AA2CA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAG2B;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmD;AAAA;;;AAAnB;;;AAA5B;AAAA;;;AAAd;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAEA;;AApBH;AAAA;AAsBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAGqB;AAAA;AAAjB;;AAAA;AAAA;AAAJ;;AAfH;AAAA;AAiBA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGgC;;AAAvB;AAAA;AAAA;;AAAA;AAAA;;AACT;AACW;AAAA;AAIP;;AAAc;AAAA;;;AAAd;AAAA;;;AACG;;AAAA;;AAAA;AADH;;;;AADJ;AAMA;AAAA;AAAA;;AAAA;AA9BH;AAAA;;;;;AAgCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEyB;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGI;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEA;AAAkB;;AAAlB;AAjfO;;;;;;;;;;;AAifP;AAvBH;AAAA;AA2BA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAC0B;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA1gBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AA4gBP;AAvBH;AAAA;AA2BA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA7qBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AA+rBP;AAGI;AAAA;AAAoB;AAAA;;AAAA;AAAA;AAApB;;AAAA;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAC6B;AAA7B;;AAAA;AAAA;AA1BH;AAAA;AA4BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBc;AAAA;AAAA;AAAA;AAAJ;AAAP;AACW;AAAA;;AAAA;AAAA;AAAJ;AAAP;AAGqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGW;AACP;;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AAAA;AAAP;AAGsB;;AAAf;;;AAAP;AAEO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEa;;AAAA;;AAAA;AAEc;;AAAA;AAC3B;AASa;AAAA;AAA2B;;AAA3B;AADI;;;AAEH;AAEF;AAER;;;;;AAIiB;;;;AADD;;;;AAb8B;;;;;;;;;;;AAQtC;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAUT;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;AAAA;;;;;;;;;;AAUQ;AAFA;AAFA;AAFA;AAFA;AAUD;;AAAgB;;AAAhB;AAAP;AAEQ;;AAAA;;AAAA;AAGZ;AAAkB;;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACa;;AAAA;AAAA;;AAAA;;AAAA;AACF;AAAA;;AAAA;AAAA;AAAgC;;AAAA;;AAAA;AAAhC;;;;;AAFX;;;AAGQ;;;AAHR;AAOA;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AA3FH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DM;;AAAA;;;AAAwB;;AAAxB;;;;AAiCN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA+Bc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGyB;;AAAA;AAAlB;AAAA;;;AAAP;AAGgC;;AAAvB;;AAAA;AAAA;AAAA;AAAA;;AACT;AACW;AAAA;AAAA;AAEP;AAAA;AAAA;AAAuC;AAAvC;AADiD;AAArD;;AAAA;AAAA;;AAAA;AAII;;AADqD;AAAzD;;AAAA;;AAAA;;AAAA;AAKO;;AAAc;AAAA;;;AAAd;AAAP;AAGa;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQV;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;AAAA;;;;;;;;;;;;;;AAcQ;AAFA;AAFA;AAFA;AAFA;AAFA;AAFA;AAcD;;AAAgB;;AAAhB;AAAP;AA7EP;AAAA;AA2DM;;AAAA;;;AAAwB;;AAAxB;;;;AAoBN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBuB;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGyB;AAAlB;AAAA;;;AAAP;AAGW;AAAA;;;AAp3BiC;;AAC3B;;;;;;;;;;;;;;;;;;AAD2B;AAG5C;AAo3BmB;AAAZ;;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;;AAAP;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AAn3BA;;;;;;;;;AAAA;;;AAAoD;;;AAApD;AAGA;AAAA;AAAA;AAAA;AAAA;AAs3Ba;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIV;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AADT;AAAA;;;;AAIQ;AAFA;AAID;;AAAgB;;AAAhB;AAAP;AAnDP;AAAA;AA2CM;;AAAA;;;AAAwB;;AAAxB;;;;;;;;AAUN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB8C;AAAA;AA/6B1B;;;;;;;;AADO;AAAA;AAAA;AAAA;;AAGxB;AA86BG;;;AAAgD;AAAmB;;AAAnB;AAAhD;;;AAGqB;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGG;;AAAA;AAAA;;;AAAP;AAEa;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIV;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;AAAA;;;;;;;;AAQQ;AAFA;AAFA;AAFA;AAQD;;AAAgB;;AAAhB;AAAP;AAEJ;;AAAA;;;AA3CH;AAAA;AA6BM;;AAAA;;;AAAwB;;AAAxB;;;;AAgBN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAec;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGyB;AAAA;;AAAlB;;;AAAP;AAEW;AAAA;;;AACJ;;AAAA;AAAP;AAEa;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIV;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AADT;AAAA;;;;AAIQ;AAFA;AAID;;AAAgB;;AAAhB;AAAP;AAEJ;;AAAA;;;AArCH;AAAA;AA2BM;;AAAA;;;AAAwB;;AAAxB;;;;AAYN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaO;AAAA;;AAAoB;;AAApB;AADJ;AAGA;AAAA;AAAA;AAAA;AAAgC;AAAA;;AAAhC;AAAA;AAAA;AAAA;AAfH;AAAA;AAiBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcU;;;AAAP;AAEI;AAAsB;AAAA;AAAA;AAAA;AAAtB;AAAA;AADJ;AAGO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AACA;;AAAA;AAAA;AAAA;AAAA;AAEA;AACa;AAAA;;AAAA;AAAA;;;;;AADb;;;AAGQ;;;AAHR;AArBH;AAAA;AAuCU;;;AAAP;AACO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;;AAAA;;AAAA;AACE;;AAAA;;AAAA;AADF;AAEE;AAAA;AAAA;AAAA;AAFF;AAKJ;AAAA;AACA;AACa;AAAA;;AAAA;AAAA;;;;;AADb;;;AAGQ;;;AAHR;AAvBH;AAAA;AAoCsC;AAAA;AAAA;AAAA;AAAL;AAAA;AAAV;;AAAA;AAAA;;AAAA;AACgB;AAAA;;AAAA;AAAA;AAAL;AAAA;AAAV;;AAAA;AAAA;;AAAA;AACJ;AAAA;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;AACE;AAAA;;AAAA;AAAA;AACG;AAAA;;AAAA;AAAA;AACH;AAAA;;AAAA;AAAA;AACK;AAAA;;AAAA;AAAA;AACN;AAAA;;AAAA;AAAA;AACS;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACa;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AAEL;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHiB;;AAAA;AAAA;AAAA;AAML;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOJ;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOA;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHG;;AAAA;AAAA;AAAA;AAMS;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHY;;AAAA;AAAA;AAAA;AAKc;AAAA;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACL;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AA/Cb;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWU;;AAAA;AAAA;AAAA;AAAA;AAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWU;AAAA;AAAA;AAAA;AAAA;AAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAa2B;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE4B;AAAlB;;;AAAP;AAFH;AAAA;AAlrCU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAIO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAUH;;;AAEU;;AAAA;;AAAA;AAAoC;;AAApC;AAAP;AAUH;;;AAEqC;;AACjB;;;;;;;;;;AADiB;AAGlC;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;AAkBH;;;AAGO;;AAAA;;AAAoB;;AAApB;AAAA;;;AACI;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AADJ;;;;AADJ;;AAAA;AAKH;;;AAGO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AACI;;AAAA;AAAA;AAAA;AAAA;AACF;;AADE;AADJ;;;;AADJ;AAAA;;;;;AA6DH;;;AAGG;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AAGW;;AAAA;;;AACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEH;;;AAesC;;AAAZ;AAJhB;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "5": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "7": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "28"
      ]
    },
    "9": {
      "op": "==",
      "defined_out": [
        "tmp%1#2"
      ],
      "stack_out": [
        "tmp%1#2"
      ]
    },
    "10": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "11": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "13": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "36"
      ]
    },
    "15": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "16": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "17": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "19": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "20": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "21": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "23": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "24": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "25": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "27": {
      "op": "app_global_put",
      "stack_out": []
    },
    "28": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "30": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "31": {
      "op": "app_global_put",
      "stack_out": []
    },
    "32": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "34": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "tmp%8#1"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "tmp%8#1"
      ]
    },
    "36": {
      "op": "app_global_put",
      "stack_out": []
    },
    "37": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "39": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "tmp%9#1"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "tmp%9#1"
      ]
    },
    "41": {
      "op": "app_global_put",
      "stack_out": []
    },
    "42": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "44": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f7061796f72",
        "tmp%10#0"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "tmp%10#0"
      ]
    },
    "46": {
      "op": "app_global_put",
      "stack_out": []
    },
    "47": {
      "op": "bytec 22 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c"
      ]
    },
    "49": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "tmp%11#0"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "tmp%11#0"
      ]
    },
    "51": {
      "op": "app_global_put",
      "stack_out": []
    },
    "52": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "54": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "tmp%12#0"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "tmp%12#0"
      ]
    },
    "56": {
      "op": "app_global_put",
      "stack_out": []
    },
    "57": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "59": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%13#0"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%13#0"
      ]
    },
    "61": {
      "op": "app_global_put",
      "stack_out": []
    },
    "62": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e"
      ]
    },
    "64": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "tmp%14#0"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "tmp%14#0"
      ]
    },
    "66": {
      "op": "app_global_put",
      "stack_out": []
    },
    "67": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565"
      ],
      "stack_out": [
        "0x78676f765f666565"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f765f666565",
        "0"
      ]
    },
    "70": {
      "op": "app_global_put",
      "stack_out": []
    },
    "71": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0x78676f7673"
      ],
      "stack_out": [
        "0x78676f7673"
      ]
    },
    "73": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f7673",
        "0"
      ]
    },
    "74": {
      "op": "app_global_put",
      "stack_out": []
    },
    "75": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565"
      ],
      "stack_out": [
        "0x70726f706f7365725f666565"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "0"
      ]
    },
    "78": {
      "op": "app_global_put",
      "stack_out": []
    },
    "79": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "81": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "0"
      ]
    },
    "82": {
      "op": "app_global_put",
      "stack_out": []
    },
    "83": {
      "op": "bytec 23 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ],
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "85": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "0"
      ]
    },
    "86": {
      "op": "app_global_put",
      "stack_out": []
    },
    "87": {
      "op": "bytec 24 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "0"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "bytec 25 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "94": {
      "op": "app_global_put",
      "stack_out": []
    },
    "95": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "97": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "0"
      ]
    },
    "98": {
      "op": "app_global_put",
      "stack_out": []
    },
    "99": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "0"
      ]
    },
    "102": {
      "op": "app_global_put",
      "stack_out": []
    },
    "103": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "0"
      ]
    },
    "106": {
      "op": "app_global_put",
      "stack_out": []
    },
    "107": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "110": {
      "op": "app_global_put",
      "stack_out": []
    },
    "111": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": []
    },
    "115": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "118": {
      "op": "app_global_put",
      "stack_out": []
    },
    "119": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "130": {
      "op": "app_global_put",
      "stack_out": []
    },
    "131": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "135": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "138": {
      "op": "app_global_put",
      "stack_out": []
    },
    "139": {
      "op": "bytec 37 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "142": {
      "op": "app_global_put",
      "stack_out": []
    },
    "143": {
      "op": "bytec 38 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "146": {
      "op": "app_global_put",
      "stack_out": []
    },
    "147": {
      "op": "bytec 39 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "0"
      ]
    },
    "150": {
      "op": "app_global_put",
      "stack_out": []
    },
    "151": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "154": {
      "op": "app_global_put",
      "stack_out": []
    },
    "155": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "158": {
      "op": "app_global_put",
      "stack_out": []
    },
    "159": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "0"
      ]
    },
    "162": {
      "op": "app_global_put",
      "stack_out": []
    },
    "163": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "0"
      ]
    },
    "165": {
      "op": "app_global_put",
      "stack_out": []
    },
    "166": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "168": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "169": {
      "op": "app_global_put",
      "stack_out": []
    },
    "170": {
      "op": "bytec 44 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "172": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "173": {
      "op": "app_global_put",
      "stack_out": []
    },
    "174": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "0"
      ]
    },
    "177": {
      "op": "app_global_put",
      "stack_out": []
    },
    "178": {
      "op": "bytec 45 // 0x726571756573745f6964",
      "defined_out": [
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0x726571756573745f6964"
      ]
    },
    "180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x726571756573745f6964",
        "0"
      ]
    },
    "181": {
      "op": "app_global_put",
      "stack_out": []
    },
    "182": {
      "op": "bytec 46 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ],
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "184": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "0"
      ]
    },
    "185": {
      "op": "app_global_put",
      "stack_out": []
    },
    "186": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "pushbytes 0x4956c1ab // method \"update_xgov_registry()void\"",
      "defined_out": [
        "Method(update_xgov_registry()void)"
      ],
      "stack_out": [
        "Method(update_xgov_registry()void)"
      ]
    },
    "192": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(update_xgov_registry()void)",
        "tmp%0#1"
      ],
      "stack_out": [
        "Method(update_xgov_registry()void)",
        "tmp%0#1"
      ]
    },
    "195": {
      "op": "match main_update_xgov_registry_route@4",
      "stack_out": []
    },
    "199": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "201": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "202": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "203": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "205": {
      "op": "bz main_create_NoOp@45",
      "stack_out": []
    },
    "208": {
      "op": "pushbytess 0x959c4762 0x6c1f564d 0xe10a512e 0x86f7e0e6 0x39e26d8a 0x98352e86 0xfa4ed6e2 0xd6c9cc1a 0x5c484055 0x37d6adf1 0xd4216b6e 0xba8520f2 0x1677b30e 0x84b7d268 0x653a0bdb 0xa082cef8 0xdf39fdb9 0x45077390 0x3c31bc02 0x0d2c7891 0x0da27885 0x7a4fee43 0x52dd10d7 0xd4d37a64 0x34349dcc 0x158f8dd6 0xdb27b9af 0xf5910756 0x65610a9f 0xfdc695c2 0xba90ab54 0xb3b58482 0x00b3cef5 0x6f752007 0x3a8d568f 0x230cc121 0x26983200 // method \"init_proposal_contract(uint64)void\", method \"load_proposal_contract(uint64,byte[])void\", method \"delete_proposal_contract_box()void\", method \"pause_registry()void\", method \"pause_proposals()void\", method \"resume_registry()void\", method \"resume_proposals()void\", method \"set_xgov_manager(address)void\", method \"set_payor(address)void\", method \"set_xgov_council(address)void\", method \"set_xgov_subscriber(address)void\", method \"set_kyc_provider(address)void\", method \"set_committee_manager(address)void\", method \"set_xgov_daemon(address)void\", method \"config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void\", method \"subscribe_xgov(address,pay)void\", method \"unsubscribe_xgov()void\", method \"request_subscribe_xgov(address,address,uint64,pay)void\", method \"approve_subscribe_xgov(uint64)void\", method \"reject_subscribe_xgov(uint64)void\", method \"set_voting_account(address,address)void\", method \"subscribe_proposer(pay)void\", method \"set_proposer_kyc(address,bool,uint64)void\", method \"declare_committee(byte[32],uint64,uint64)void\", method \"open_proposal(pay)uint64\", method \"vote_proposal(uint64,address,uint64,uint64)void\", method \"pay_grant_proposal(uint64)void\", method \"finalize_proposal(uint64)void\", method \"drop_proposal(uint64)void\", method \"deposit_funds(pay)void\", method \"withdraw_funds(uint64)void\", method \"withdraw_balance()void\", method \"get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64)\", method \"get_xgov_box(address)(address,uint64,uint64,uint64)\", method \"get_proposer_box(address)(bool,bool,uint64)\", method \"get_request_box(uint64)(address,address,uint64)\", method \"is_proposal(uint64)void\"",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(init_proposal_contract(uint64)void)",
        "Method(is_proposal(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)"
      ],
      "stack_out": [
        "Method(init_proposal_contract(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(is_proposal(uint64)void)"
      ]
    },
    "395": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(init_proposal_contract(uint64)void)",
        "Method(is_proposal(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)",
        "tmp%10#0"
      ],
      "stack_out": [
        "Method(init_proposal_contract(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(is_proposal(uint64)void)",
        "tmp%10#0"
      ]
    },
    "398": {
      "op": "match init_proposal_contract load_proposal_contract delete_proposal_contract_box pause_registry pause_proposals resume_registry resume_proposals set_xgov_manager set_payor set_xgov_council set_xgov_subscriber set_kyc_provider set_committee_manager set_xgov_daemon config_xgov_registry subscribe_xgov unsubscribe_xgov request_subscribe_xgov approve_subscribe_xgov reject_subscribe_xgov set_voting_account subscribe_proposer set_proposer_kyc declare_committee open_proposal vote_proposal pay_grant_proposal finalize_proposal drop_proposal deposit_funds withdraw_funds withdraw_balance get_state get_xgov_box get_proposer_box get_request_box is_proposal",
      "stack_out": []
    },
    "474": {
      "op": "err"
    },
    "475": {
      "block": "main_create_NoOp@45",
      "stack_in": [],
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "481": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create()void)",
        "tmp%11#0"
      ],
      "stack_out": [
        "Method(create()void)",
        "tmp%11#0"
      ]
    },
    "484": {
      "op": "match create",
      "stack_out": []
    },
    "488": {
      "op": "err"
    },
    "489": {
      "block": "main_update_xgov_registry_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "491": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "UpdateApplication"
      ]
    },
    "493": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "494": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "496": {
      "op": "&&",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "497": {
      "error": "OnCompletion must be UpdateApplication && can only call when not creating",
      "op": "assert // OnCompletion must be UpdateApplication && can only call when not creating",
      "stack_out": []
    },
    "498": {
      "op": "b update_xgov_registry"
    },
    "501": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "503": {
      "op": "txn Sender",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "505": {
      "op": "app_global_put",
      "stack_out": []
    },
    "506": {
      "op": "bytec 49 // TMPL_entropy",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "508": {
      "op": "dup",
      "defined_out": [
        "TMPL_entropy",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "TMPL_entropy"
      ]
    },
    "509": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "510": {
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "511": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.init_proposal_contract[routing]",
      "params": {},
      "block": "init_proposal_contract",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "514": {
      "op": "dup",
      "defined_out": [
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "size#0"
      ]
    },
    "515": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "len%0#0"
      ]
    },
    "516": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "len%0#0",
        "8"
      ]
    },
    "517": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "eq%0#0"
      ]
    },
    "518": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "size#0"
      ]
    },
    "519": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "size#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "size#0",
        "tmp%0#1"
      ]
    },
    "522": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "size#0"
      ]
    },
    "523": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "0x7061"
      ]
    },
    "525": {
      "op": "box_len",
      "defined_out": [
        "_box#0",
        "exist#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "_box#0",
        "exist#0"
      ]
    },
    "526": {
      "op": "bury 1",
      "stack_out": [
        "size#0",
        "exist#0"
      ]
    },
    "528": {
      "op": "bz init_proposal_contract_else_body@3",
      "stack_out": [
        "size#0"
      ]
    },
    "531": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "532": {
      "op": "bytec 8 // 0x7061",
      "stack_out": [
        "tmp%1#0",
        "0x7061"
      ]
    },
    "534": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%1#0"
      ]
    },
    "535": {
      "op": "box_resize",
      "stack_out": []
    },
    "536": {
      "block": "init_proposal_contract_after_if_else@4",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "537": {
      "op": "return",
      "stack_out": []
    },
    "538": {
      "block": "init_proposal_contract_else_body@3",
      "stack_in": [
        "size#0"
      ],
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "539": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x7061"
      ]
    },
    "541": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%2#0"
      ]
    },
    "542": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "543": {
      "op": "pop",
      "stack_out": []
    },
    "544": {
      "op": "b init_proposal_contract_after_if_else@4"
    },
    "547": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.load_proposal_contract[routing]",
      "params": {},
      "block": "load_proposal_contract",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "offset#0"
      ],
      "stack_out": [
        "offset#0"
      ]
    },
    "550": {
      "op": "dup",
      "defined_out": [
        "offset#0",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "offset#0",
        "offset#0 (copy)"
      ]
    },
    "551": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "len%0#0"
      ]
    },
    "552": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "len%0#0",
        "8"
      ]
    },
    "553": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "eq%0#0"
      ]
    },
    "554": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "offset#0"
      ]
    },
    "555": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0"
      ]
    },
    "558": {
      "op": "dup",
      "defined_out": [
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "559": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "0"
      ]
    },
    "560": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "561": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "563": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "add%0#0"
      ]
    },
    "564": {
      "op": "dig 1",
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "add%0#0",
        "tmp%1#0 (copy)"
      ]
    },
    "566": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "len%1#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "add%0#0",
        "len%1#0"
      ]
    },
    "567": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "eq%1#0"
      ]
    },
    "568": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "offset#0",
        "tmp%1#0"
      ]
    },
    "569": {
      "op": "extract 2 0",
      "defined_out": [
        "data#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "data#0"
      ]
    },
    "572": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "data#0",
        "offset#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "offset#0",
        "data#0",
        "tmp%0#1"
      ]
    },
    "575": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "offset#0",
        "data#0"
      ]
    },
    "576": {
      "op": "swap",
      "stack_out": [
        "data#0",
        "offset#0"
      ]
    },
    "577": {
      "op": "btoi",
      "defined_out": [
        "data#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "data#0",
        "tmp%1#1"
      ]
    },
    "578": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "data#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "data#0",
        "tmp%1#1",
        "0x7061"
      ]
    },
    "580": {
      "op": "swap",
      "stack_out": [
        "data#0",
        "0x7061",
        "tmp%1#1"
      ]
    },
    "581": {
      "op": "uncover 2",
      "stack_out": [
        "0x7061",
        "tmp%1#1",
        "data#0"
      ]
    },
    "583": {
      "op": "box_replace",
      "stack_out": []
    },
    "584": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "585": {
      "op": "return",
      "stack_out": []
    },
    "586": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.delete_proposal_contract_box[routing]",
      "params": {},
      "block": "delete_proposal_contract_box",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "589": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "590": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061"
      ],
      "stack_out": [
        "0x7061"
      ]
    },
    "592": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "593": {
      "op": "pop",
      "stack_out": []
    },
    "594": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "595": {
      "op": "return",
      "stack_out": []
    },
    "596": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_registry[routing]",
      "params": {},
      "block": "pause_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "599": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "600": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "601": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ]
    },
    "602": {
      "op": "app_global_put",
      "stack_out": []
    },
    "603": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "604": {
      "op": "return",
      "stack_out": []
    },
    "605": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_proposals[routing]",
      "params": {},
      "block": "pause_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "608": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "609": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "611": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ]
    },
    "612": {
      "op": "app_global_put",
      "stack_out": []
    },
    "613": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "614": {
      "op": "return",
      "stack_out": []
    },
    "615": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_registry[routing]",
      "params": {},
      "block": "resume_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "618": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "619": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "620": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "621": {
      "op": "app_global_put",
      "stack_out": []
    },
    "622": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "623": {
      "op": "return",
      "stack_out": []
    },
    "624": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_proposals[routing]",
      "params": {},
      "block": "resume_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "627": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "628": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "630": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "631": {
      "op": "app_global_put",
      "stack_out": []
    },
    "632": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "633": {
      "op": "return",
      "stack_out": []
    },
    "634": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager[routing]",
      "params": {},
      "block": "set_xgov_manager",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "manager#0"
      ],
      "stack_out": [
        "manager#0"
      ]
    },
    "637": {
      "op": "dup",
      "defined_out": [
        "manager#0",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "manager#0",
        "manager#0 (copy)"
      ]
    },
    "638": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0"
      ]
    },
    "639": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0",
        "32"
      ]
    },
    "640": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "eq%0#0"
      ]
    },
    "641": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "manager#0"
      ]
    },
    "642": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "manager#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "manager#0",
        "tmp%0#1"
      ]
    },
    "645": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "manager#0"
      ]
    },
    "646": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "648": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "manager#0"
      ]
    },
    "649": {
      "op": "app_global_put",
      "stack_out": []
    },
    "650": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "651": {
      "op": "return",
      "stack_out": []
    },
    "652": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor[routing]",
      "params": {},
      "block": "set_payor",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "payor#0"
      ],
      "stack_out": [
        "payor#0"
      ]
    },
    "655": {
      "op": "dup",
      "defined_out": [
        "payor#0",
        "payor#0 (copy)"
      ],
      "stack_out": [
        "payor#0",
        "payor#0 (copy)"
      ]
    },
    "656": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "len%0#0"
      ]
    },
    "657": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "len%0#0",
        "32"
      ]
    },
    "658": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "eq%0#0"
      ]
    },
    "659": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "payor#0"
      ]
    },
    "660": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "payor#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payor#0",
        "tmp%0#1"
      ]
    },
    "663": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "payor#0"
      ]
    },
    "664": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "0x78676f765f7061796f72"
      ]
    },
    "666": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f7061796f72",
        "payor#0"
      ]
    },
    "667": {
      "op": "app_global_put",
      "stack_out": []
    },
    "668": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "669": {
      "op": "return",
      "stack_out": []
    },
    "670": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_council[routing]",
      "params": {},
      "block": "set_xgov_council",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "council#0"
      ],
      "stack_out": [
        "council#0"
      ]
    },
    "673": {
      "op": "dup",
      "defined_out": [
        "council#0",
        "council#0 (copy)"
      ],
      "stack_out": [
        "council#0",
        "council#0 (copy)"
      ]
    },
    "674": {
      "op": "len",
      "defined_out": [
        "council#0",
        "len%0#0"
      ],
      "stack_out": [
        "council#0",
        "len%0#0"
      ]
    },
    "675": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "council#0",
        "len%0#0"
      ],
      "stack_out": [
        "council#0",
        "len%0#0",
        "32"
      ]
    },
    "676": {
      "op": "==",
      "defined_out": [
        "council#0",
        "eq%0#0"
      ],
      "stack_out": [
        "council#0",
        "eq%0#0"
      ]
    },
    "677": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "council#0"
      ]
    },
    "678": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "council#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "council#0",
        "tmp%0#1"
      ]
    },
    "681": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "council#0"
      ]
    },
    "682": {
      "op": "bytec 22 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "council#0"
      ],
      "stack_out": [
        "council#0",
        "0x78676f765f636f756e63696c"
      ]
    },
    "684": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "council#0"
      ]
    },
    "685": {
      "op": "app_global_put",
      "stack_out": []
    },
    "686": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "687": {
      "op": "return",
      "stack_out": []
    },
    "688": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber[routing]",
      "params": {},
      "block": "set_xgov_subscriber",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0"
      ]
    },
    "691": {
      "op": "dup",
      "defined_out": [
        "subscriber#0",
        "subscriber#0 (copy)"
      ],
      "stack_out": [
        "subscriber#0",
        "subscriber#0 (copy)"
      ]
    },
    "692": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "len%0#0"
      ]
    },
    "693": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "len%0#0",
        "32"
      ]
    },
    "694": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "eq%0#0"
      ]
    },
    "695": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "subscriber#0"
      ]
    },
    "696": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "subscriber#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "subscriber#0",
        "tmp%0#1"
      ]
    },
    "699": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "subscriber#0"
      ]
    },
    "700": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "702": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0"
      ]
    },
    "703": {
      "op": "app_global_put",
      "stack_out": []
    },
    "704": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "705": {
      "op": "return",
      "stack_out": []
    },
    "706": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider[routing]",
      "params": {},
      "block": "set_kyc_provider",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "provider#0"
      ],
      "stack_out": [
        "provider#0"
      ]
    },
    "709": {
      "op": "dup",
      "defined_out": [
        "provider#0",
        "provider#0 (copy)"
      ],
      "stack_out": [
        "provider#0",
        "provider#0 (copy)"
      ]
    },
    "710": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "len%0#0"
      ]
    },
    "711": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "len%0#0",
        "32"
      ]
    },
    "712": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "eq%0#0"
      ]
    },
    "713": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "provider#0"
      ]
    },
    "714": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "provider#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "provider#0",
        "tmp%0#1"
      ]
    },
    "717": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "provider#0"
      ]
    },
    "718": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "720": {
      "op": "swap",
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "provider#0"
      ]
    },
    "721": {
      "op": "app_global_put",
      "stack_out": []
    },
    "722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "723": {
      "op": "return",
      "stack_out": []
    },
    "724": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager[routing]",
      "params": {},
      "block": "set_committee_manager",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "manager#0"
      ],
      "stack_out": [
        "manager#0"
      ]
    },
    "727": {
      "op": "dup",
      "defined_out": [
        "manager#0",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "manager#0",
        "manager#0 (copy)"
      ]
    },
    "728": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0"
      ]
    },
    "729": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0",
        "32"
      ]
    },
    "730": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "eq%0#0"
      ]
    },
    "731": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "manager#0"
      ]
    },
    "732": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "manager#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "manager#0",
        "tmp%0#1"
      ]
    },
    "735": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "manager#0"
      ]
    },
    "736": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "738": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0"
      ]
    },
    "739": {
      "op": "app_global_put",
      "stack_out": []
    },
    "740": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "741": {
      "op": "return",
      "stack_out": []
    },
    "742": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_daemon[routing]",
      "params": {},
      "block": "set_xgov_daemon",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0"
      ]
    },
    "745": {
      "op": "dup",
      "defined_out": [
        "xgov_daemon#0",
        "xgov_daemon#0 (copy)"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "xgov_daemon#0 (copy)"
      ]
    },
    "746": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "len%0#0"
      ]
    },
    "747": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "len%0#0",
        "32"
      ]
    },
    "748": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "eq%0#0"
      ]
    },
    "749": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_daemon#0"
      ]
    },
    "750": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#1",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "tmp%0#1"
      ]
    },
    "753": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_daemon#0"
      ]
    },
    "754": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "756": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0"
      ]
    },
    "757": {
      "op": "app_global_put",
      "stack_out": []
    },
    "758": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "759": {
      "op": "return",
      "stack_out": []
    },
    "760": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry[routing]",
      "params": {},
      "block": "config_xgov_registry",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0"
      ]
    },
    "761": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0"
      ]
    },
    "763": {
      "op": "dupn 3",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "765": {
      "op": "txna ApplicationArgs 1"
    },
    "768": {
      "op": "dupn 2",
      "defined_out": [
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "770": {
      "op": "len",
      "defined_out": [
        "config#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "len%0#0"
      ]
    },
    "771": {
      "op": "pushint 184 // 184",
      "defined_out": [
        "184",
        "config#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "len%0#0",
        "184"
      ]
    },
    "774": {
      "op": "==",
      "defined_out": [
        "config#0",
        "eq%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "eq%0#0"
      ]
    },
    "775": {
      "error": "invalid number of bytes for smart_contracts.common.abi_types.XGovRegistryConfig",
      "op": "assert // invalid number of bytes for smart_contracts.common.abi_types.XGovRegistryConfig",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0"
      ]
    },
    "776": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "config#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "tmp%0#1"
      ]
    },
    "779": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0"
      ]
    },
    "780": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "0"
      ]
    },
    "781": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "config#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "783": {
      "op": "app_global_get_ex",
      "defined_out": [
        "config#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "784": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "maybe_value%0#0"
      ]
    },
    "785": {
      "op": "!",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "tmp%0#1"
      ]
    },
    "786": {
      "error": "Cannot perform operation with pending proposals",
      "op": "assert // Cannot perform operation with pending proposals",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0"
      ]
    },
    "787": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "0"
      ]
    },
    "788": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "789": {
      "op": "dup",
      "defined_out": [
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "790": {
      "op": "pushint 38100 // 38100",
      "defined_out": [
        "38100",
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0",
        "38100"
      ]
    },
    "794": {
      "op": ">=",
      "defined_out": [
        "config#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "795": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "798": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "799": {
      "op": "pushint 34900 // 34900",
      "defined_out": [
        "34900",
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0",
        "34900"
      ]
    },
    "803": {
      "op": ">=",
      "defined_out": [
        "config#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%11#0"
      ]
    },
    "804": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "807": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%0#0"
      ]
    },
    "808": {
      "error": "Invalid xGov fee",
      "block": "config_xgov_registry_bool_merge@5",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%0#0"
      ],
      "op": "assert // Invalid xGov fee",
      "defined_out": [],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "809": {
      "op": "dig 1",
      "defined_out": [
        "config#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "811": {
      "op": "dup",
      "defined_out": [
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "812": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "8"
      ]
    },
    "813": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0"
      ]
    },
    "814": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "815": {
      "op": "bury 6",
      "defined_out": [
        "config#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0"
      ]
    },
    "817": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "config#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0",
        "19300"
      ]
    },
    "819": {
      "op": ">=",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%13#0"
      ]
    },
    "820": {
      "error": "Invalid proposer fee",
      "op": "assert // Invalid proposer fee",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "821": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "822": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "config#0",
        "config#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "40"
      ]
    },
    "824": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%14#0"
      ]
    },
    "825": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "826": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "config#0",
        "tmp%14#0"
      ]
    },
    "828": {
      "op": "bury 5",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "config#0"
      ]
    },
    "830": {
      "op": "extract 48 24",
      "defined_out": [
        "aggregate%extract%3#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0"
      ]
    },
    "833": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0"
      ]
    },
    "834": {
      "op": "bury 9",
      "defined_out": [
        "aggregate%extract%3#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0"
      ]
    },
    "836": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0",
        "0"
      ]
    },
    "837": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "838": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "839": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "841": {
      "op": "<",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%15#0"
      ]
    },
    "842": {
      "op": "bz config_xgov_registry_bool_false@9",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "845": {
      "op": "dig 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0"
      ]
    },
    "847": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0",
        "8"
      ]
    },
    "848": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0"
      ]
    },
    "849": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "850": {
      "op": "bury 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0"
      ]
    },
    "852": {
      "op": "dig 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "854": {
      "op": ">",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%16#0"
      ]
    },
    "855": {
      "op": "bz config_xgov_registry_bool_false@9",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "858": {
      "op": "dig 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0"
      ]
    },
    "860": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0",
        "16"
      ]
    },
    "862": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%17#0"
      ]
    },
    "863": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%17#0",
        "awst_tmp%1#0"
      ]
    },
    "865": {
      "op": ">",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%18#0"
      ]
    },
    "866": {
      "op": "bz config_xgov_registry_bool_false@9",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "869": {
      "op": "intc_1 // 1",
      "defined_out": [
        "aggregate%extract%3#0",
        "and_result%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%1#0"
      ]
    },
    "870": {
      "error": "Inconsistent requested amount config",
      "block": "config_xgov_registry_bool_merge@10",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%1#0"
      ],
      "op": "assert // Inconsistent requested amount config",
      "defined_out": [],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "871": {
      "op": "dig 1",
      "defined_out": [
        "config#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "873": {
      "op": "dup",
      "defined_out": [
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "874": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "16"
      ]
    },
    "876": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0"
      ]
    },
    "877": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "config#0 (copy)"
      ]
    },
    "879": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "config#0",
        "config#0 (copy)",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "config#0 (copy)",
        "24"
      ]
    },
    "881": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "882": {
      "op": "dup2",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding_bps#0 (copy)",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "daemon_ops_funding_bps#0 (copy)"
      ]
    },
    "883": {
      "op": "*",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#3"
      ]
    },
    "884": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#3",
        "10000"
      ]
    },
    "887": {
      "op": "/",
      "defined_out": [
        "config#0",
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0"
      ]
    },
    "888": {
      "op": "pushint 16835300 // 16835300",
      "defined_out": [
        "16835300",
        "config#0",
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0",
        "16835300"
      ]
    },
    "893": {
      "op": "+",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "to_substract#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "894": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "896": {
      "op": "dig 1",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0",
        "to_substract#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0 (copy)"
      ]
    },
    "898": {
      "op": ">",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%2#1",
        "to_substract#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "tmp%2#1"
      ]
    },
    "899": {
      "error": "Invalid open proposal fee",
      "op": "assert // Invalid open proposal fee",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "900": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "902": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0"
      ]
    },
    "903": {
      "op": "-",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0"
      ]
    },
    "904": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "config#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "19300"
      ]
    },
    "906": {
      "op": "/",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%6#1"
      ]
    },
    "907": {
      "op": "bytec 46 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%6#1",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "909": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "tmp%6#1"
      ]
    },
    "910": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "911": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565"
      ]
    },
    "913": {
      "op": "dig 4",
      "defined_out": [
        "0x78676f765f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565",
        "tmp%8#0"
      ]
    },
    "915": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "916": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565"
      ]
    },
    "918": {
      "op": "dig 7",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565",
        "tmp%12#0"
      ]
    },
    "920": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "921": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "923": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "open_proposal_fee#0"
      ]
    },
    "925": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "926": {
      "op": "bytec 23 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "config#0",
        "daemon_ops_funding_bps#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "daemon_ops_funding_bps#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "928": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "daemon_ops_funding_bps#0"
      ]
    },
    "929": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "930": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "931": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "config#0",
        "config#0 (copy)",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "32"
      ]
    },
    "932": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%25#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%25#0"
      ]
    },
    "933": {
      "op": "bytec 24 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "config#0",
        "tmp%12#0",
        "tmp%25#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%25#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "935": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "tmp%25#0"
      ]
    },
    "936": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "937": {
      "op": "bytec 25 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "config#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "939": {
      "op": "dig 4",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%14#0"
      ]
    },
    "941": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "942": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "944": {
      "op": "dig 7",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0"
      ]
    },
    "946": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "947": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0"
      ]
    },
    "949": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)"
      ]
    },
    "950": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)",
        "8"
      ]
    },
    "951": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%28#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "tmp%28#0"
      ]
    },
    "952": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%28#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "tmp%28#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "954": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "tmp%28#0"
      ]
    },
    "955": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0"
      ]
    },
    "956": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "16"
      ]
    },
    "958": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%29#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%29#0"
      ]
    },
    "959": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%29#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%29#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "961": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "tmp%29#0"
      ]
    },
    "962": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "963": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "964": {
      "op": "extract 72 32",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "967": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)"
      ]
    },
    "968": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "0"
      ]
    },
    "969": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%30#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%30#0"
      ]
    },
    "970": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%30#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%30#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "972": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "tmp%30#0"
      ]
    },
    "973": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "974": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)"
      ]
    },
    "975": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "8"
      ]
    },
    "976": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%31#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%31#0"
      ]
    },
    "977": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%31#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%31#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "979": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "tmp%31#0"
      ]
    },
    "980": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "981": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)"
      ]
    },
    "982": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "16"
      ]
    },
    "984": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%32#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%32#0"
      ]
    },
    "985": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%32#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%32#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "987": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "tmp%32#0"
      ]
    },
    "988": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "989": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "24"
      ]
    },
    "991": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%33#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%33#0"
      ]
    },
    "992": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%33#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%33#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "994": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "tmp%33#0"
      ]
    },
    "995": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "996": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "997": {
      "op": "extract 104 32",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1000": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)"
      ]
    },
    "1001": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "0"
      ]
    },
    "1002": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%34#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%34#0"
      ]
    },
    "1003": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%34#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%34#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "1005": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "tmp%34#0"
      ]
    },
    "1006": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1007": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)"
      ]
    },
    "1008": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "8"
      ]
    },
    "1009": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%35#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%35#0"
      ]
    },
    "1010": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%35#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%35#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "1012": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "tmp%35#0"
      ]
    },
    "1013": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1014": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)"
      ]
    },
    "1015": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "16"
      ]
    },
    "1017": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%36#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%36#0"
      ]
    },
    "1018": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%36#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%36#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "1020": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "tmp%36#0"
      ]
    },
    "1021": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1022": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "24"
      ]
    },
    "1024": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%37#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%37#0"
      ]
    },
    "1025": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%37#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%37#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "1027": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "tmp%37#0"
      ]
    },
    "1028": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "1029": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "1030": {
      "op": "extract 136 24",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0"
      ]
    },
    "1033": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)"
      ]
    },
    "1034": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)",
        "0"
      ]
    },
    "1035": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%38#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%38#0"
      ]
    },
    "1036": {
      "op": "bytec 37 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%38#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%38#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "1038": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "0x71756f72756d5f736d616c6c",
        "tmp%38#0"
      ]
    },
    "1039": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0"
      ]
    },
    "1040": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)"
      ]
    },
    "1041": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)",
        "8"
      ]
    },
    "1042": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%39#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%39#0"
      ]
    },
    "1043": {
      "op": "bytec 38 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%39#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%39#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "1045": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "0x71756f72756d5f6d656469756d",
        "tmp%39#0"
      ]
    },
    "1046": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0"
      ]
    },
    "1047": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "16"
      ]
    },
    "1049": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%40#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%40#0"
      ]
    },
    "1050": {
      "op": "bytec 39 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%40#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%40#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "1052": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x71756f72756d5f6c61726765",
        "tmp%40#0"
      ]
    },
    "1053": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "1054": {
      "op": "extract 160 24",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0"
      ]
    },
    "1057": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)"
      ]
    },
    "1058": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)",
        "0"
      ]
    },
    "1059": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%41#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%41#0"
      ]
    },
    "1060": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%41#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%41#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "1062": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "tmp%41#0"
      ]
    },
    "1063": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0"
      ]
    },
    "1064": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)"
      ]
    },
    "1065": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)",
        "8"
      ]
    },
    "1066": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%42#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%42#0"
      ]
    },
    "1067": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%42#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%42#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "1069": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "tmp%42#0"
      ]
    },
    "1070": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0"
      ]
    },
    "1071": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "16"
      ]
    },
    "1073": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%43#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%43#0"
      ]
    },
    "1074": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%43#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%43#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "1076": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "tmp%43#0"
      ]
    },
    "1077": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "1078": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1079": {
      "op": "return",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "1080": {
      "block": "config_xgov_registry_bool_false@9",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%1#0"
      ]
    },
    "1081": {
      "op": "b config_xgov_registry_bool_merge@10"
    },
    "1084": {
      "block": "config_xgov_registry_bool_false@4",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%0#0"
      ]
    },
    "1085": {
      "op": "b config_xgov_registry_bool_merge@5"
    },
    "1088": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry[routing]",
      "params": {},
      "block": "update_xgov_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1091": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1092": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1093": {
      "op": "return",
      "stack_out": []
    },
    "1094": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov[routing]",
      "params": {},
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0"
      ]
    },
    "1097": {
      "op": "dup",
      "defined_out": [
        "voting_address#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "voting_address#0",
        "voting_address#0 (copy)"
      ]
    },
    "1098": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "len%0#0"
      ]
    },
    "1099": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1100": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "eq%0#0"
      ]
    },
    "1101": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "voting_address#0"
      ]
    },
    "1102": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "tmp%1#0"
      ]
    },
    "1104": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "tmp%1#0",
        "1"
      ]
    },
    "1105": {
      "op": "-",
      "defined_out": [
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1106": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1107": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1109": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1110": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1111": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1112": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0"
      ]
    },
    "1113": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1115": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1116": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%0#1",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1117": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1118": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0x78"
      ]
    },
    "1120": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0x78",
        "materialized_values%0#0"
      ]
    },
    "1122": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1123": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1124": {
      "op": "bury 1",
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1126": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%1#1",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1127": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1128": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "tmp%2#0"
      ]
    },
    "1131": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "voting_address#0"
      ]
    },
    "1132": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1135": {
      "op": "bytec 4 // 0x78",
      "stack_out": [
        "tmp%3#0",
        "0x78"
      ]
    },
    "1137": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x78",
        "materialized_values%1#0"
      ]
    },
    "1139": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1140": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "tmp%3#0"
      ]
    },
    "1141": {
      "op": "box_put",
      "stack_out": []
    },
    "1142": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1143": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1145": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1146": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1147": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1148": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1149": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "tmp%4#0",
        "0x78676f7673"
      ]
    },
    "1151": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "tmp%4#0"
      ]
    },
    "1152": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1153": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1154": {
      "op": "return",
      "stack_out": []
    },
    "1155": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov[routing]",
      "params": {},
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1156": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1157": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1158": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1159": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1160": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1161": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1163": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78",
        "materialized_values%0#0"
      ]
    },
    "1165": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1166": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1167": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1169": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1170": {
      "op": "bytec 4 // 0x78",
      "stack_out": [
        "0x78"
      ]
    },
    "1172": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x78",
        "materialized_values%1#0"
      ]
    },
    "1174": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1175": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1176": {
      "op": "pop",
      "stack_out": []
    },
    "1177": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1178": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1180": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1181": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1182": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1183": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1184": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "tmp%1#0",
        "0x78676f7673"
      ]
    },
    "1186": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "tmp%1#0"
      ]
    },
    "1187": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1188": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1189": {
      "op": "return",
      "stack_out": []
    },
    "1190": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov[routing]",
      "params": {},
      "block": "request_subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "1193": {
      "op": "dup",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1194": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "1195": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1196": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "1197": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "1198": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1201": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "owner_address#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "owner_address#0 (copy)"
      ]
    },
    "1202": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "len%1#0"
      ]
    },
    "1203": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "len%1#0",
        "32"
      ]
    },
    "1204": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "eq%1#0"
      ]
    },
    "1205": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1206": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1209": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "relation_type#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "relation_type#0 (copy)"
      ]
    },
    "1210": {
      "op": "len",
      "defined_out": [
        "len%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "len%2#0"
      ]
    },
    "1211": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "len%2#0",
        "8"
      ]
    },
    "1212": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "eq%2#0"
      ]
    },
    "1213": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1214": {
      "op": "txn GroupIndex",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0"
      ]
    },
    "1216": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "1"
      ]
    },
    "1217": {
      "op": "-",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1218": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "payment#0 (copy)",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1219": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1221": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "owner_address#0",
        "pay",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1222": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1223": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1224": {
      "op": "txn Sender",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%0#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1226": {
      "op": "dig 3",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%0#1",
        "owner_address#0 (copy)"
      ]
    },
    "1228": {
      "op": "==",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1229": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1230": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0"
      ]
    },
    "1231": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1232": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1233": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1234": {
      "op": "!",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%2#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%2#1"
      ]
    },
    "1235": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1236": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0x78"
      ]
    },
    "1238": {
      "op": "dig 4",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1240": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1241": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1242": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1244": {
      "op": "!",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%3#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%3#1"
      ]
    },
    "1245": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1246": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "tmp%4#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%4#0"
      ]
    },
    "1249": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1250": {
      "op": "intc_0 // 0",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "0"
      ]
    },
    "1251": {
      "op": "bytec 45 // 0x726571756573745f6964",
      "defined_out": [
        "0",
        "0x726571756573745f6964",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "0",
        "0x726571756573745f6964"
      ]
    },
    "1253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "owner_address#0",
        "relation_type#0",
        "rid#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "rid#0",
        "maybe_exists%2#0"
      ]
    },
    "1254": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "rid#0"
      ]
    },
    "1255": {
      "op": "uncover 3",
      "stack_out": [
        "owner_address#0",
        "relation_type#0",
        "rid#0",
        "xgov_address#0"
      ]
    },
    "1257": {
      "op": "uncover 3",
      "stack_out": [
        "relation_type#0",
        "rid#0",
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1259": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "relation_type#0",
        "rid#0"
      ],
      "stack_out": [
        "relation_type#0",
        "rid#0",
        "aggregate%head%1#0"
      ]
    },
    "1260": {
      "op": "uncover 2",
      "stack_out": [
        "rid#0",
        "aggregate%head%1#0",
        "relation_type#0"
      ]
    },
    "1262": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0"
      ]
    },
    "1263": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%2#0",
        "rid#0",
        "rid#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "rid#0 (copy)"
      ]
    },
    "1265": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "encoded_value%0#0"
      ]
    },
    "1266": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1268": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1269": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "box_prefixed_key%1#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1270": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "box_prefixed_key%1#0",
        "aggregate%head%2#0"
      ]
    },
    "1271": {
      "op": "box_put",
      "stack_out": [
        "rid#0"
      ]
    },
    "1272": {
      "op": "intc_1 // 1",
      "stack_out": [
        "rid#0",
        "1"
      ]
    },
    "1273": {
      "op": "+",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1274": {
      "op": "bytec 45 // 0x726571756573745f6964",
      "stack_out": [
        "tmp%6#0",
        "0x726571756573745f6964"
      ]
    },
    "1276": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f6964",
        "tmp%6#0"
      ]
    },
    "1277": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1278": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1279": {
      "op": "return",
      "stack_out": []
    },
    "1280": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov[routing]",
      "params": {},
      "block": "approve_subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0"
      ]
    },
    "1283": {
      "op": "dup",
      "defined_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ]
    },
    "1284": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0"
      ]
    },
    "1285": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1286": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "eq%0#0"
      ]
    },
    "1287": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1288": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "request_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "request_id#0",
        "tmp%0#1"
      ]
    },
    "1291": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1292": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1293": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1294": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1296": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1297": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1298": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1299": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1300": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0"
      ]
    },
    "1301": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "1302": {
      "op": "extract 32 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "aggregate%extract%0#0"
      ]
    },
    "1305": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ]
    },
    "1308": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "request#0"
      ]
    },
    "1309": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "1312": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "aggregate%extract%1#0",
        "0x78"
      ]
    },
    "1314": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "0x78",
        "aggregate%extract%1#0"
      ]
    },
    "1315": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1316": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%1#0"
      ]
    },
    "1317": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1318": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1319": {
      "op": "bytec 6 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "0x78676f7673"
      ]
    },
    "1321": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1322": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1324": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1325": {
      "op": "bytec 6 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "0x78676f7673"
      ]
    },
    "1327": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x78676f7673",
        "tmp%2#0"
      ]
    },
    "1328": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1329": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1330": {
      "op": "pop",
      "stack_out": []
    },
    "1331": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1332": {
      "op": "return",
      "stack_out": []
    },
    "1333": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov[routing]",
      "params": {},
      "block": "reject_subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0"
      ]
    },
    "1336": {
      "op": "dup",
      "defined_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ]
    },
    "1337": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0"
      ]
    },
    "1338": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1339": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "eq%0#0"
      ]
    },
    "1340": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1341": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "request_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "request_id#0",
        "tmp%0#1"
      ]
    },
    "1344": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1345": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1346": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1347": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1349": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1350": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1351": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1352": {
      "op": "pop",
      "stack_out": []
    },
    "1353": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1354": {
      "op": "return",
      "stack_out": []
    },
    "1355": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account[routing]",
      "params": {},
      "block": "set_voting_account",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "1358": {
      "op": "dupn 2",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1360": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "1361": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1362": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "1363": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0"
      ]
    },
    "1364": {
      "op": "txna ApplicationArgs 2"
    },
    "1367": {
      "op": "dup",
      "defined_out": [
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "voting_address#0",
        "voting_address#0"
      ]
    },
    "1368": {
      "op": "cover 2",
      "defined_out": [
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "voting_address#0"
      ]
    },
    "1370": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "len%1#0"
      ]
    },
    "1371": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "len%1#0",
        "32"
      ]
    },
    "1372": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "eq%1#0"
      ]
    },
    "1373": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0"
      ]
    },
    "1374": {
      "op": "intc_0 // 0",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "0"
      ]
    },
    "1375": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1376": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1377": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "maybe_value%0#0"
      ]
    },
    "1378": {
      "op": "!",
      "defined_out": [
        "tmp%0#1",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "tmp%0#1"
      ]
    },
    "1379": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0"
      ]
    },
    "1380": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "0x78"
      ]
    },
    "1382": {
      "op": "swap",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "0x78",
        "xgov_address#0"
      ]
    },
    "1383": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1384": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1386": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "exists#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "1387": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "1389": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1390": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1391": {
      "op": "pop",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "1392": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "voting_address#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%1#1"
      ]
    },
    "1394": {
      "op": "swap",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "xgov_box#0"
      ]
    },
    "1395": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "aggregate%extract%0#0"
      ]
    },
    "1398": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1399": {
      "op": "bnz set_voting_account_bool_true@3",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1402": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "1404": {
      "op": "dig 3",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "xgov_address#0"
      ]
    },
    "1406": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "1407": {
      "op": "bz set_voting_account_bool_false@4",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1410": {
      "block": "set_voting_account_bool_true@3",
      "stack_in": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "1411": {
      "error": "Unauthorized",
      "block": "set_voting_account_bool_merge@5",
      "stack_in": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ],
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1412": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1413": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1414": {
      "op": "dig 3",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "0",
        "voting_address#0"
      ]
    },
    "1416": {
      "op": "box_replace",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1417": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "1"
      ]
    },
    "1418": {
      "op": "return",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1419": {
      "block": "set_voting_account_bool_false@4",
      "stack_in": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "1420": {
      "op": "b set_voting_account_bool_merge@5"
    },
    "1423": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer[routing]",
      "params": {},
      "block": "subscribe_proposer",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1425": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1426": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "1427": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1428": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1430": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1431": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1432": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "1433": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "1434": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1435": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1436": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1437": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1438": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "payment#0"
      ]
    },
    "1439": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70"
      ]
    },
    "1440": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "1442": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1443": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1444": {
      "op": "bury 1",
      "stack_out": [
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1446": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%1#0"
      ]
    },
    "1447": {
      "error": "Already a proposer",
      "op": "assert // Already a proposer",
      "stack_out": [
        "payment#0"
      ]
    },
    "1448": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1449": {
      "op": "gtxns Receiver",
      "defined_out": [
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%2#0"
      ]
    },
    "1451": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "payment#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1453": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%4#0"
      ]
    },
    "1454": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "payment#0"
      ]
    },
    "1455": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1457": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1458": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1460": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1461": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "1462": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1463": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "1464": {
      "op": "bytec_1 // 0x70",
      "stack_out": [
        "0x70"
      ]
    },
    "1465": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%1#0"
      ]
    },
    "1467": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1468": {
      "op": "pushbytes 0x000000000000000000",
      "defined_out": [
        "0x000000000000000000",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "0x000000000000000000"
      ]
    },
    "1479": {
      "op": "box_put",
      "stack_out": []
    },
    "1480": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1481": {
      "op": "return",
      "stack_out": []
    },
    "1482": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc[routing]",
      "params": {},
      "block": "set_proposer_kyc",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "1485": {
      "op": "dup",
      "defined_out": [
        "proposer#0",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "proposer#0",
        "proposer#0 (copy)"
      ]
    },
    "1486": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "len%0#0"
      ]
    },
    "1487": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "len%0#0",
        "32"
      ]
    },
    "1488": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "eq%0#0"
      ]
    },
    "1489": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposer#0"
      ]
    },
    "1490": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0"
      ]
    },
    "1493": {
      "op": "dup",
      "defined_out": [
        "kyc_status#0",
        "kyc_status#0 (copy)",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_status#0 (copy)"
      ]
    },
    "1494": {
      "op": "len",
      "defined_out": [
        "kyc_status#0",
        "len%1#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "len%1#0"
      ]
    },
    "1495": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "kyc_status#0",
        "len%1#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "len%1#0",
        "1"
      ]
    },
    "1496": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "eq%1#0"
      ]
    },
    "1497": {
      "error": "invalid number of bytes for arc4.bool",
      "op": "assert // invalid number of bytes for arc4.bool",
      "stack_out": [
        "proposer#0",
        "kyc_status#0"
      ]
    },
    "1498": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0"
      ]
    },
    "1501": {
      "op": "dup",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_expiring#0 (copy)",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "kyc_expiring#0 (copy)"
      ]
    },
    "1502": {
      "op": "len",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "len%2#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "len%2#0"
      ]
    },
    "1503": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "kyc_expiring#0",
        "kyc_status#0",
        "len%2#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "len%2#0",
        "8"
      ]
    },
    "1504": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "eq%2#0"
      ]
    },
    "1505": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0"
      ]
    },
    "1506": {
      "op": "txn Sender",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1"
      ]
    },
    "1508": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "0"
      ]
    },
    "1509": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "1511": {
      "op": "app_global_get_ex",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1512": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "1513": {
      "op": "==",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%1#1"
      ]
    },
    "1514": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0"
      ]
    },
    "1515": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "0x70"
      ]
    },
    "1516": {
      "op": "uncover 3",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "0x70",
        "proposer#0"
      ]
    },
    "1518": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1519": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1520": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1521": {
      "op": "bury 1",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1523": {
      "error": "Proposer does not exist",
      "op": "assert // Proposer does not exist",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1524": {
      "op": "dup",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1525": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1526": {
      "op": "pop",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0"
      ]
    },
    "1527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "0"
      ]
    },
    "1528": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1529": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "1531": {
      "op": "intc_0 // 0",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "1532": {
      "op": "uncover 2",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1534": {
      "op": "setbit",
      "defined_out": [
        "active_proposal#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0"
      ]
    },
    "1535": {
      "op": "uncover 3",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0"
      ]
    },
    "1537": {
      "op": "intc_0 // 0",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0",
        "0"
      ]
    },
    "1538": {
      "op": "getbit",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1539": {
      "op": "intc_1 // 1"
    },
    "1540": {
      "op": "swap",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "1",
        "aggregate%get_bit%0#0"
      ]
    },
    "1541": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0"
      ],
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "1542": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%set_bit%0#0",
        "kyc_expiring#0"
      ]
    },
    "1544": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1545": {
      "op": "box_put",
      "stack_out": []
    },
    "1546": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1547": {
      "op": "return",
      "stack_out": []
    },
    "1548": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee[routing]",
      "params": {},
      "block": "declare_committee",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1551": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1552": {
      "op": "len",
      "defined_out": [
        "committee_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "len%0#0"
      ]
    },
    "1553": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "committee_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "len%0#0",
        "32"
      ]
    },
    "1554": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "eq%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "eq%0#0"
      ]
    },
    "1555": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1556": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "committee_id#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0"
      ]
    },
    "1559": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "size#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "size#0 (copy)"
      ]
    },
    "1560": {
      "op": "len",
      "defined_out": [
        "committee_id#0",
        "len%1#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "len%1#0"
      ]
    },
    "1561": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "committee_id#0",
        "len%1#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "len%1#0",
        "8"
      ]
    },
    "1562": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "eq%1#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "eq%1#0"
      ]
    },
    "1563": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "committee_id#0",
        "size#0"
      ]
    },
    "1564": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ]
    },
    "1567": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "votes#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "votes#0 (copy)"
      ]
    },
    "1568": {
      "op": "len",
      "defined_out": [
        "committee_id#0",
        "len%2#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "len%2#0"
      ]
    },
    "1569": {
      "op": "intc_2 // 8",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "len%2#0",
        "8"
      ]
    },
    "1570": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "eq%2#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "eq%2#0"
      ]
    },
    "1571": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ]
    },
    "1572": {
      "op": "txn Sender",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2"
      ]
    },
    "1574": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "committee_id#0",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "0"
      ]
    },
    "1575": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "committee_id#0",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "1577": {
      "op": "app_global_get_ex",
      "defined_out": [
        "committee_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1578": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "maybe_value%0#1"
      ]
    },
    "1579": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "tmp%1#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%1#2"
      ]
    },
    "1580": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ]
    },
    "1581": {
      "op": "swap",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "size#0"
      ]
    },
    "1582": {
      "op": "btoi",
      "defined_out": [
        "committee_id#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1"
      ]
    },
    "1583": {
      "op": "intc_0 // 0",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "0"
      ]
    },
    "1584": {
      "op": "bytec 46 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "committee_id#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "1586": {
      "op": "app_global_get_ex",
      "defined_out": [
        "committee_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1587": {
      "error": "check self.max_committee_size exists",
      "op": "assert // check self.max_committee_size exists",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "maybe_value%0#0"
      ]
    },
    "1588": {
      "op": "dig 1",
      "defined_out": [
        "committee_id#0",
        "maybe_value%0#0",
        "tmp%2#1",
        "tmp%2#1 (copy)",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "maybe_value%0#0",
        "tmp%2#1 (copy)"
      ]
    },
    "1590": {
      "op": ">=",
      "defined_out": [
        "committee_id#0",
        "tmp%2#1",
        "tmp%3#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "tmp%3#0"
      ]
    },
    "1591": {
      "error": "Committee size is too large",
      "op": "assert // Committee size is too large",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1"
      ]
    },
    "1592": {
      "op": "bytec 48 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1594": {
      "op": "uncover 3",
      "stack_out": [
        "votes#0",
        "tmp%2#1",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1596": {
      "op": "app_global_put",
      "stack_out": [
        "votes#0",
        "tmp%2#1"
      ]
    },
    "1597": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "votes#0",
        "tmp%2#1",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1599": {
      "op": "swap",
      "stack_out": [
        "votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#1"
      ]
    },
    "1600": {
      "op": "app_global_put",
      "stack_out": [
        "votes#0"
      ]
    },
    "1601": {
      "op": "btoi",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1602": {
      "op": "bytec 44 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1604": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "tmp%5#0"
      ]
    },
    "1605": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1606": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1607": {
      "op": "return",
      "stack_out": []
    },
    "1608": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal[routing]",
      "params": {},
      "block": "open_proposal",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1610": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1611": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "1612": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1613": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1615": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1616": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1617": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "1618": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "1619": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1620": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1621": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1622": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1623": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "payment#0"
      ]
    },
    "1624": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "1625": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "1627": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1628": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "payment#0",
        "maybe_value%1#0"
      ]
    },
    "1629": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1630": {
      "error": "Creation of proposals is paused",
      "op": "assert // Creation of proposals is paused",
      "stack_out": [
        "payment#0"
      ]
    },
    "1631": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70"
      ]
    },
    "1632": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "1634": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1635": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%2#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "_%0#0",
        "maybe_exists%2#0"
      ]
    },
    "1636": {
      "op": "bury 1",
      "stack_out": [
        "payment#0",
        "maybe_exists%2#0"
      ]
    },
    "1638": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "payment#0"
      ]
    },
    "1639": {
      "op": "bytec_1 // 0x70",
      "stack_out": [
        "payment#0",
        "0x70"
      ]
    },
    "1640": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70",
        "materialized_values%1#0"
      ]
    },
    "1642": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1643": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1644": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "payment#0",
        "aggregate%box_get%0#0"
      ]
    },
    "1645": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "aggregate%box_get%0#0",
        "0"
      ]
    },
    "1646": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1647": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "1649": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "1650": {
      "op": "uncover 2",
      "stack_out": [
        "payment#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1652": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1653": {
      "op": "bytec 9 // 0x00",
      "stack_out": [
        "payment#0",
        "aggregate%encoded_bool%0#0",
        "0x00"
      ]
    },
    "1655": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%3#1"
      ]
    },
    "1656": {
      "error": "Proposer already has an active proposal",
      "op": "assert // Proposer already has an active proposal",
      "stack_out": [
        "payment#0"
      ]
    },
    "1657": {
      "op": "txn Sender",
      "defined_out": [
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%4#0"
      ]
    },
    "1659": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "payment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%5#0"
      ]
    },
    "1662": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "payment#0"
      ]
    },
    "1663": {
      "op": "txn Fee",
      "defined_out": [
        "payment#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0"
      ]
    },
    "1665": {
      "op": "global MinTxnFee",
      "defined_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1667": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "payment#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%7#0",
        "3"
      ]
    },
    "1669": {
      "op": "*",
      "defined_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1670": {
      "op": ">=",
      "defined_out": [
        "payment#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%9#0"
      ]
    },
    "1671": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": [
        "payment#0"
      ]
    },
    "1672": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1673": {
      "op": "gtxns Receiver",
      "defined_out": [
        "payment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%10#0"
      ]
    },
    "1675": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "payment#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1677": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%12#0"
      ]
    },
    "1678": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "payment#0"
      ]
    },
    "1679": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1681": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "1682": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "1684": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1685": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "tmp%13#0",
        "maybe_value%2#0"
      ]
    },
    "1686": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1687": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "1688": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1690": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "check%0#0"
      ]
    },
    "1692": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1693": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "0x7061"
      ]
    },
    "1695": {
      "op": "box_get",
      "defined_out": [
        "exist#0",
        "mbr_before#0",
        "proposal_approval#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "exist#0"
      ]
    },
    "1696": {
      "error": "Missing proposal approval program",
      "op": "assert // Missing proposal approval program",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0"
      ]
    },
    "1697": {
      "op": "dup",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "proposal_approval#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "proposal_approval#0 (copy)"
      ]
    },
    "1698": {
      "op": "len",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0"
      ]
    },
    "1699": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0",
        "4"
      ]
    },
    "1701": {
      "op": "+",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ]
    },
    "1702": {
      "op": "pushint 2048 // 2048",
      "defined_out": [
        "2048",
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0",
        "2048"
      ]
    },
    "1705": {
      "op": "/",
      "defined_out": [
        "extra_pages#0",
        "mbr_before#0",
        "proposal_approval#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "extra_pages#0"
      ]
    },
    "1706": {
      "op": "itxn_begin"
    },
    "1707": {
      "op": "txn Sender",
      "defined_out": [
        "extra_pages#0",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "extra_pages#0",
        "tmp%20#0"
      ]
    },
    "1709": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "extra_pages#0"
      ]
    },
    "1710": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1712": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "3"
      ]
    },
    "1714": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1716": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "20"
      ]
    },
    "1718": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1720": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "CoEBQw=="
      ]
    },
    "1726": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1728": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0",
        "proposal_approval#0"
      ]
    },
    "1729": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0"
      ]
    },
    "1731": {
      "op": "pushbytes 0x216b1e07 // method \"create(address)string\"",
      "defined_out": [
        "Method(create(address)string)",
        "mbr_before#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0",
        "Method(create(address)string)"
      ]
    },
    "1737": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0"
      ]
    },
    "1739": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1741": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "appl"
      ]
    },
    "1743": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "0"
      ]
    },
    "1746": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1748": {
      "op": "itxn_submit"
    },
    "1749": {
      "op": "itxn LastLog"
    },
    "1751": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1753": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "1756": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "1757": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "1758": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1759": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "1761": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "1762": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "1763": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "len%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "1764": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "eq%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "1765": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1766": {
      "op": "dup",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1767": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%23#0"
      ]
    },
    "1770": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%23#0",
        "0x151f7c75"
      ]
    },
    "1771": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%24#0"
      ]
    },
    "1772": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1773": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1775": {
      "op": "swap",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%0#0"
      ]
    },
    "1776": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0"
      ]
    },
    "1779": {
      "op": "dup",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "1780": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1781": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "1782": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "4"
      ]
    },
    "1784": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%26#0",
        "tmp%27#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "1785": {
      "op": "bz open_proposal_ternary_false@4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1788": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "ternary_result%0#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "ternary_result%0#0"
      ]
    },
    "1789": {
      "block": "open_proposal_ternary_merge@5",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "ternary_result%0#0"
      ],
      "op": "bz open_proposal_else_body@12",
      "defined_out": [],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1792": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "4"
      ]
    },
    "1794": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "4",
        "tmp%26#0"
      ]
    },
    "1796": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "4",
        "tmp%26#0 (copy)",
        "tmp%26#0 (copy)"
      ]
    },
    "1797": {
      "op": "cover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "4",
        "tmp%26#0 (copy)"
      ]
    },
    "1799": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "1800": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "1802": {
      "op": "dig 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%26#0 (copy)"
      ]
    },
    "1804": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "4",
        "tmp%26#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "1806": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "bounded_index%0#0"
      ]
    },
    "1807": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "1809": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "1810": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%26#0"
      ]
    },
    "1812": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "error_without_prefix#0"
      ]
    },
    "1813": {
      "op": "bytec 47 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "error_without_prefix#0",
        "\"Missing Config\""
      ]
    },
    "1815": {
      "op": "pushbytess \"Empty Committee ID\" \"Wrong Committee Members\" \"Wrong Committee Votes\" // \"Empty Committee ID\", \"Wrong Committee Members\", \"Wrong Committee Votes\"",
      "defined_out": [
        "\"Empty Committee ID\"",
        "\"Missing Config\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "error_without_prefix#0",
        "\"Missing Config\"",
        "\"Empty Committee ID\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\""
      ]
    },
    "1882": {
      "op": "uncover 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "\"Missing Config\"",
        "\"Empty Committee ID\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\"",
        "error_without_prefix#0"
      ]
    },
    "1884": {
      "op": "match open_proposal_switch_case_0@7 open_proposal_switch_case_1@8 open_proposal_switch_case_2@9 open_proposal_switch_case_3@10",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1894": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "1895": {
      "error": "Wrong Committee Votes",
      "block": "open_proposal_switch_case_3@10",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Wrong Committee Votes"
    },
    "1896": {
      "error": "Wrong Committee Members",
      "block": "open_proposal_switch_case_2@9",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Wrong Committee Members"
    },
    "1897": {
      "error": "Empty Committee ID",
      "block": "open_proposal_switch_case_1@8",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Empty Committee ID"
    },
    "1898": {
      "error": "Missing Config",
      "block": "open_proposal_switch_case_0@7",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Missing Config"
    },
    "1899": {
      "block": "open_proposal_else_body@12",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%1#0"
      ]
    },
    "1901": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "1903": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%31#0"
      ]
    },
    "1904": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1905": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%32#0"
      ]
    },
    "1907": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "awst_tmp%1#0",
        "check%1#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "check%1#0"
      ]
    },
    "1909": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0"
      ]
    },
    "1910": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "awst_tmp%1#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "0x70"
      ]
    },
    "1911": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "awst_tmp%1#0",
        "materialized_values%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "0x70",
        "materialized_values%2#0"
      ]
    },
    "1913": {
      "op": "concat",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1914": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "1915": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "0"
      ]
    },
    "1916": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "0",
        "1"
      ]
    },
    "1917": {
      "op": "box_extract",
      "defined_out": [
        "awst_tmp%1#0",
        "box%box_extract%0#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box%box_extract%0#0"
      ]
    },
    "1918": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box%box_extract%0#0",
        "0"
      ]
    },
    "1919": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box%box_extract%0#0",
        "0",
        "1"
      ]
    },
    "1920": {
      "op": "setbit",
      "defined_out": [
        "aggregate%updated_target%0#0",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "aggregate%updated_target%0#0"
      ]
    },
    "1921": {
      "op": "intc_0 // 0"
    },
    "1922": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "0",
        "aggregate%updated_target%0#0"
      ]
    },
    "1923": {
      "op": "box_replace",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0"
      ]
    },
    "1924": {
      "op": "itxn_begin"
    },
    "1925": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1927": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "tx.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "1928": {
      "op": "cover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "1930": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "check%2#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "1932": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0"
      ]
    },
    "1933": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "0"
      ]
    },
    "1934": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "1936": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_exists%5#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "maybe_value%4#0",
        "maybe_exists%5#0"
      ]
    },
    "1937": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "maybe_value%4#0"
      ]
    },
    "1938": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%4#0",
        "mbr_after#0"
      ]
    },
    "1940": {
      "op": "dig 8",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "mbr_before#0"
      ]
    },
    "1942": {
      "op": "-",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_value%4#0",
        "mbr_before#0",
        "tmp%34#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%4#0",
        "tmp%34#0"
      ]
    },
    "1943": {
      "op": "-",
      "defined_out": [
        "awst_tmp%1#0",
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "1944": {
      "op": "itxn_field Amount",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ]
    },
    "1946": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1948": {
      "op": "intc_1 // pay",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "pay",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "pay"
      ]
    },
    "1949": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1951": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "1952": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1954": {
      "op": "itxn_submit"
    },
    "1955": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "1956": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1958": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_exists%6#0",
        "maybe_value%5#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%5#0",
        "maybe_exists%6#0"
      ]
    },
    "1959": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%5#0"
      ]
    },
    "1960": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "1961": {
      "op": "+",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%35#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "tmp%35#0"
      ]
    },
    "1962": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "tmp%35#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1964": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0x70656e64696e675f70726f706f73616c73",
        "tmp%35#0"
      ]
    },
    "1965": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1966": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1967": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1968": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1969": {
      "op": "concat",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%3#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%3#0"
      ]
    },
    "1970": {
      "op": "log",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1971": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "1"
      ]
    },
    "1972": {
      "op": "return",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1973": {
      "block": "open_proposal_ternary_false@4",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%0#0"
      ]
    },
    "1975": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%28#0"
      ]
    },
    "1978": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%28#0",
        "\"ERR:\""
      ]
    },
    "1980": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "ternary_result%0#0"
      ]
    },
    "1981": {
      "op": "b open_proposal_ternary_merge@5"
    },
    "1984": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal[routing]",
      "params": {},
      "block": "vote_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "1987": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "1988": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "1989": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1990": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "1991": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "1992": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0"
      ]
    },
    "1995": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1996": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "len%1#0"
      ]
    },
    "1997": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%1#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "len%1#0",
        "32"
      ]
    },
    "1998": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "eq%1#0"
      ]
    },
    "1999": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0"
      ]
    },
    "2000": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0"
      ]
    },
    "2003": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "approval_votes#0 (copy)",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "approval_votes#0 (copy)"
      ]
    },
    "2004": {
      "op": "len",
      "defined_out": [
        "approval_votes#0",
        "len%2#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "len%2#0"
      ]
    },
    "2005": {
      "op": "intc_2 // 8",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "len%2#0",
        "8"
      ]
    },
    "2006": {
      "op": "==",
      "defined_out": [
        "approval_votes#0",
        "eq%2#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "eq%2#0"
      ]
    },
    "2007": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0"
      ]
    },
    "2008": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2011": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "rejection_votes#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "rejection_votes#0 (copy)"
      ]
    },
    "2012": {
      "op": "len",
      "defined_out": [
        "approval_votes#0",
        "len%3#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "len%3#0"
      ]
    },
    "2013": {
      "op": "intc_2 // 8",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "len%3#0",
        "8"
      ]
    },
    "2014": {
      "op": "==",
      "defined_out": [
        "approval_votes#0",
        "eq%3#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "eq%3#0"
      ]
    },
    "2015": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2016": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "0"
      ]
    },
    "2017": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2018": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approval_votes#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2019": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "maybe_value%0#0"
      ]
    },
    "2020": {
      "op": "!",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "tmp%0#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%0#1"
      ]
    },
    "2021": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2022": {
      "op": "uncover 3",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "proposal_id#0"
      ]
    },
    "2024": {
      "op": "btoi",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1"
      ]
    },
    "2025": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%1#1 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ]
    },
    "2026": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%2#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%2#1"
      ]
    },
    "2029": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1"
      ]
    },
    "2030": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "0x78"
      ]
    },
    "2032": {
      "op": "dig 4",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2034": {
      "op": "concat",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2035": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2036": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "exists#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "2037": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "2039": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2040": {
      "op": "dup",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2041": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%box_get%1#0"
      ]
    },
    "2042": {
      "op": "pop",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "2043": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ]
    },
    "2044": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)",
        "32"
      ]
    },
    "2045": {
      "op": "extract_uint64",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%3#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%3#1"
      ]
    },
    "2046": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%3#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%3#1",
        "1"
      ]
    },
    "2047": {
      "op": "+",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%4#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%4#0"
      ]
    },
    "2048": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2049": {
      "op": "dig 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2051": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0 (copy)",
        "32"
      ]
    },
    "2052": {
      "op": "uncover 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "box_prefixed_key%0#0 (copy)",
        "32",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2054": {
      "op": "box_replace",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "2055": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%6#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%6#0"
      ]
    },
    "2057": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2058": {
      "op": "uncover 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2060": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "aggregate%val_as_bytes%1#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "40"
      ]
    },
    "2062": {
      "op": "uncover 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "box_prefixed_key%0#0",
        "40",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2064": {
      "op": "box_replace",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0"
      ]
    },
    "2065": {
      "op": "txn Sender",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "tmp%8#0"
      ]
    },
    "2067": {
      "op": "swap",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "xgov_box#0"
      ]
    },
    "2068": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%1#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "aggregate%extract%1#0"
      ]
    },
    "2071": {
      "op": "==",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%9#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%9#0"
      ]
    },
    "2072": {
      "error": "Must be voting address",
      "op": "assert // Must be voting address",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1"
      ]
    },
    "2073": {
      "op": "itxn_begin"
    },
    "2074": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2076": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)",
        "approval_votes#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "2082": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2084": {
      "op": "uncover 2",
      "stack_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "xgov_address#0"
      ]
    },
    "2086": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2088": {
      "op": "swap",
      "stack_out": [
        "rejection_votes#0",
        "approval_votes#0"
      ]
    },
    "2089": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "rejection_votes#0"
      ]
    },
    "2091": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2093": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2095": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2097": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2098": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2100": {
      "op": "itxn_submit"
    },
    "2101": {
      "op": "itxn LastLog"
    },
    "2103": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2105": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2108": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2110": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2111": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2113": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2114": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2115": {
      "op": "len",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2116": {
      "op": "==",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2117": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2118": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2119": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "2122": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "2123": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%12#0"
      ]
    },
    "2124": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2125": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2128": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2129": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2130": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0"
      ]
    },
    "2131": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4"
      ]
    },
    "2133": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2134": {
      "op": "bz vote_proposal_ternary_false@4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2137": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ]
    },
    "2138": {
      "block": "vote_proposal_ternary_merge@5",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ],
      "op": "bz vote_proposal_else_body@14",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2141": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4"
      ]
    },
    "2143": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4",
        "tmp%14#0"
      ]
    },
    "2145": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)",
        "tmp%14#0 (copy)"
      ]
    },
    "2146": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)"
      ]
    },
    "2148": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2149": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2151": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%14#0 (copy)"
      ]
    },
    "2153": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2155": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "bounded_index%0#0"
      ]
    },
    "2156": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2158": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2159": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%14#0"
      ]
    },
    "2161": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0"
      ]
    },
    "2162": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2164": {
      "op": "bytec 47 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "2166": {
      "op": "pushbytess \"Voter not found\" \"Voter already voted\" \"Votes exceeded\" \"Voting Period Expired\" // \"Voter not found\", \"Voter already voted\", \"Votes exceeded\", \"Voting Period Expired\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\""
      ]
    },
    "2241": {
      "op": "uncover 6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "error_without_prefix#0"
      ]
    },
    "2243": {
      "op": "match vote_proposal_switch_case_0@7 vote_proposal_switch_case_1@8 vote_proposal_switch_case_2@9 vote_proposal_switch_case_3@10 vote_proposal_switch_case_4@11 vote_proposal_switch_case_5@12",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2257": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2258": {
      "error": "Voting Period Expired",
      "block": "vote_proposal_switch_case_5@12",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Voting Period Expired"
    },
    "2259": {
      "error": "Votes exceeded",
      "block": "vote_proposal_switch_case_4@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Votes exceeded"
    },
    "2260": {
      "error": "Voter already voted",
      "block": "vote_proposal_switch_case_3@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Voter already voted"
    },
    "2261": {
      "error": "Voter not found",
      "block": "vote_proposal_switch_case_2@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Voter not found"
    },
    "2262": {
      "error": "Missing Config",
      "block": "vote_proposal_switch_case_1@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Missing Config"
    },
    "2263": {
      "error": "Wrong Proposal Status or finalized",
      "block": "vote_proposal_switch_case_0@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2264": {
      "block": "vote_proposal_else_body@14",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0"
      ]
    },
    "2266": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2268": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%19#0"
      ]
    },
    "2269": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2270": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "1"
      ]
    },
    "2271": {
      "op": "return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2272": {
      "block": "vote_proposal_ternary_false@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "2274": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "2277": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%16#0",
        "\"ERR:\""
      ]
    },
    "2279": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ]
    },
    "2280": {
      "op": "b vote_proposal_ternary_merge@5"
    },
    "2283": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal[routing]",
      "params": {},
      "block": "pay_grant_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2286": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2287": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2288": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2289": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2290": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2291": {
      "op": "txn Sender",
      "defined_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "2293": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0"
      ]
    },
    "2294": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "2296": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2297": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0"
      ]
    },
    "2298": {
      "op": "==",
      "defined_out": [
        "proposal_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposal_id#0",
        "tmp%0#1"
      ]
    },
    "2299": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2300": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2301": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2302": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%2#0"
      ]
    },
    "2305": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2306": {
      "op": "dup",
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2307": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposal_id#1",
        "proposer#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0"
      ]
    },
    "2310": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "proposal_id#1 (copy)"
      ]
    },
    "2312": {
      "op": "pushbytes 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "proposal_id#1",
        "proposal_id#1 (copy)",
        "proposer#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "proposal_id#1 (copy)",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "2330": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ]
    },
    "2331": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2332": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70"
      ]
    },
    "2333": {
      "op": "dig 2",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "proposer#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2335": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2336": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2337": {
      "op": "bury 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_exists%1#0"
      ]
    },
    "2339": {
      "error": "Wrong proposer",
      "op": "assert // Wrong proposer",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2340": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "proposer#0 (copy)"
      ]
    },
    "2342": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ]
    },
    "2345": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0"
      ]
    },
    "2347": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2348": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2349": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2350": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "2351": {
      "op": "dig 2",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "2353": {
      "op": ">=",
      "defined_out": [
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "tmp%8#0"
      ]
    },
    "2354": {
      "error": "Insufficient treasury funds",
      "op": "assert // Insufficient treasury funds",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2355": {
      "op": "itxn_begin"
    },
    "2356": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "requested_amount#1 (copy)"
      ]
    },
    "2358": {
      "op": "itxn_field Amount",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2360": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "proposer#0"
      ]
    },
    "2362": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2364": {
      "op": "intc_1 // pay",
      "defined_out": [
        "maybe_value%1#0",
        "pay",
        "proposal_id#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "pay"
      ]
    },
    "2365": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2367": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2368": {
      "op": "itxn_field Fee",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2370": {
      "op": "itxn_submit"
    },
    "2371": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "maybe_value%1#0",
        "requested_amount#1"
      ]
    },
    "2372": {
      "op": "-",
      "defined_out": [
        "proposal_id#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%0#2"
      ]
    },
    "2373": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "proposal_id#1",
        "tmp%0#2",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2374": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%0#2"
      ]
    },
    "2375": {
      "op": "app_global_put",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2376": {
      "op": "itxn_begin"
    },
    "2377": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2379": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)"
      ],
      "stack_out": [
        "Method(fund()string)"
      ]
    },
    "2385": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2387": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2389": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2391": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2392": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2394": {
      "op": "itxn_submit"
    },
    "2395": {
      "op": "itxn LastLog"
    },
    "2397": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2399": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2402": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2403": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2404": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2405": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2407": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2408": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2409": {
      "op": "len",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2410": {
      "op": "==",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2411": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2412": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2413": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "2416": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "2417": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "2418": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2419": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2422": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2423": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2424": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "2425": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4"
      ]
    },
    "2427": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2428": {
      "op": "bz pay_grant_proposal_ternary_false@4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2431": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ]
    },
    "2432": {
      "block": "pay_grant_proposal_ternary_merge@5",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ],
      "op": "bz pay_grant_proposal_else_body@9",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2435": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4"
      ]
    },
    "2437": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4",
        "tmp%13#0"
      ]
    },
    "2439": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)",
        "tmp%13#0 (copy)"
      ]
    },
    "2440": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)"
      ]
    },
    "2442": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2443": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2445": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%13#0 (copy)"
      ]
    },
    "2447": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2449": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "bounded_index%0#0"
      ]
    },
    "2450": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2452": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2453": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%13#0"
      ]
    },
    "2455": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0"
      ]
    },
    "2456": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2458": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "2459": {
      "op": "match pay_grant_proposal_switch_case_0@7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2463": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2464": {
      "error": "Wrong Proposal Status or finalized",
      "block": "pay_grant_proposal_switch_case_0@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2465": {
      "block": "pay_grant_proposal_else_body@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0"
      ]
    },
    "2467": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2469": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%18#0"
      ]
    },
    "2470": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2471": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "1"
      ]
    },
    "2472": {
      "op": "return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2473": {
      "block": "pay_grant_proposal_ternary_false@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "2475": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "2478": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "\"ERR:\""
      ]
    },
    "2480": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ]
    },
    "2481": {
      "op": "b pay_grant_proposal_ternary_merge@5"
    },
    "2484": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.finalize_proposal[routing]",
      "params": {},
      "block": "finalize_proposal",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2485": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2486": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2488": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0"
      ]
    },
    "2491": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2492": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2493": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2494": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2495": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0"
      ]
    },
    "2496": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1"
      ]
    },
    "2497": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1"
      ]
    },
    "2498": {
      "op": "pushbytes 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1",
        "0x737461747573"
      ]
    },
    "2506": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ]
    },
    "2507": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0"
      ]
    },
    "2508": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0",
        "status#0 (copy)"
      ]
    },
    "2509": {
      "op": "uncover 2",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "2511": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "2512": {
      "op": "bz finalize_proposal_if_body@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2515": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "2516": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "proposal_id#1",
        "status#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "10"
      ]
    },
    "2518": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0"
      ]
    },
    "2519": {
      "op": "bz finalize_proposal_after_if_else@4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2522": {
      "block": "finalize_proposal_if_body@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "2524": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0"
      ]
    },
    "2525": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "2527": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2528": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0"
      ]
    },
    "2529": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%4#0"
      ]
    },
    "2530": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2531": {
      "block": "finalize_proposal_after_if_else@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "2533": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2534": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "tmp%6#0"
      ]
    },
    "2537": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "2538": {
      "op": "itxn_begin"
    },
    "2539": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2541": {
      "op": "pushbytes 0x802069b4 // method \"finalize()string\"",
      "defined_out": [
        "Method(finalize()string)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "Method(finalize()string)"
      ]
    },
    "2547": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2549": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "appl"
      ]
    },
    "2551": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2553": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "0"
      ]
    },
    "2554": {
      "op": "itxn_field Fee",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2556": {
      "op": "itxn_submit"
    },
    "2557": {
      "op": "itxn LastLog"
    },
    "2559": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2560": {
      "op": "bury 6",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2562": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2563": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2566": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2567": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2568": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2569": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2571": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2572": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2573": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "len%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2574": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "eq%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2575": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2576": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2577": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "2580": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2581": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2582": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2583": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "2586": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2587": {
      "op": "bury 5",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "2589": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "2590": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2591": {
      "op": "bury 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "2593": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2595": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%12#0"
      ]
    },
    "2596": {
      "op": "bz finalize_proposal_ternary_false@7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2599": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "ternary_result%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "2600": {
      "block": "finalize_proposal_ternary_merge@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ],
      "op": "bz finalize_proposal_else_body@14",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2603": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4"
      ]
    },
    "2605": {
      "op": "dig 3",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0"
      ]
    },
    "2607": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "2608": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2610": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2611": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2613": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2615": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2617": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "2618": {
      "op": "dig 5",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2620": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2621": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "2623": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0"
      ]
    },
    "2624": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2626": {
      "op": "bytec 47 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "2628": {
      "op": "pushbytes \"There are voters assigned to this proposal\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\""
      ]
    },
    "2672": {
      "op": "uncover 3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "error_without_prefix#0"
      ]
    },
    "2674": {
      "op": "match finalize_proposal_switch_case_0@10 finalize_proposal_switch_case_1@11 finalize_proposal_switch_case_2@12",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2682": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2683": {
      "error": "There are voters assigned to this proposal",
      "block": "finalize_proposal_switch_case_2@12",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "err // There are voters assigned to this proposal"
    },
    "2684": {
      "error": "Missing Config",
      "block": "finalize_proposal_switch_case_1@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "err // Missing Config"
    },
    "2685": {
      "error": "Wrong Proposal Status or finalized",
      "block": "finalize_proposal_switch_case_0@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2686": {
      "block": "finalize_proposal_else_body@14",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "2688": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2690": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%16#0"
      ]
    },
    "2691": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2692": {
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "2694": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2697": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "1"
      ]
    },
    "2698": {
      "op": "return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2699": {
      "block": "finalize_proposal_ternary_false@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2701": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0"
      ]
    },
    "2704": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "2706": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "2707": {
      "op": "b finalize_proposal_ternary_merge@8"
    },
    "2710": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.drop_proposal[routing]",
      "params": {},
      "block": "drop_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2713": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2714": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2715": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2716": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2717": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2718": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "0"
      ]
    },
    "2719": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2720": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2721": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "proposal_id#0",
        "maybe_value%0#0"
      ]
    },
    "2722": {
      "op": "!",
      "defined_out": [
        "proposal_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposal_id#0",
        "tmp%0#1"
      ]
    },
    "2723": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2724": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2725": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2727": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2730": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2731": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2732": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0"
      ]
    },
    "2735": {
      "op": "txn Sender",
      "defined_out": [
        "proposer#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0",
        "tmp%5#0"
      ]
    },
    "2737": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%6#0"
      ]
    },
    "2738": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2739": {
      "op": "itxn_begin"
    },
    "2740": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2742": {
      "op": "pushbytes 0x7371321a // method \"drop()string\"",
      "defined_out": [
        "Method(drop()string)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "Method(drop()string)"
      ]
    },
    "2748": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2750": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "appl"
      ]
    },
    "2752": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2754": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "2755": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2757": {
      "op": "itxn_submit"
    },
    "2758": {
      "op": "itxn LastLog"
    },
    "2760": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2762": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2765": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2766": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2767": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2768": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2770": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2771": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2772": {
      "op": "len",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2773": {
      "op": "==",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2774": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2775": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2776": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "2779": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2780": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2781": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2782": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2785": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2786": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2787": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2788": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2790": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2791": {
      "op": "bz drop_proposal_ternary_false@4",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2794": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ]
    },
    "2795": {
      "block": "drop_proposal_ternary_merge@5",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ],
      "op": "bz drop_proposal_else_body@9",
      "defined_out": [],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2798": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2800": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4",
        "tmp%11#0"
      ]
    },
    "2802": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "2803": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2805": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2806": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2808": {
      "op": "dig 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2810": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2812": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "2813": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2815": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2816": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "2818": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0"
      ]
    },
    "2819": {
      "op": "bytec 21 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2821": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "2822": {
      "op": "match drop_proposal_switch_case_0@7",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2826": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2827": {
      "error": "Wrong Proposal Status or finalized",
      "block": "drop_proposal_switch_case_0@7",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2828": {
      "block": "drop_proposal_else_body@9",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0"
      ]
    },
    "2830": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2832": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%16#0"
      ]
    },
    "2833": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2834": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%1#0"
      ]
    },
    "2836": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2839": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "1"
      ]
    },
    "2840": {
      "op": "return",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2841": {
      "block": "drop_proposal_ternary_false@4",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%0#0"
      ]
    },
    "2843": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2846": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "2848": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ]
    },
    "2849": {
      "op": "b drop_proposal_ternary_merge@5"
    },
    "2852": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds[routing]",
      "params": {},
      "block": "deposit_funds",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2854": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "2855": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "2856": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "2857": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "2859": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "2860": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "2861": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "2862": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "2863": {
      "op": "gtxns Receiver",
      "defined_out": [
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1"
      ]
    },
    "2865": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "payment#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1",
        "tmp%1#0"
      ]
    },
    "2867": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%2#0"
      ]
    },
    "2868": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "payment#0"
      ]
    },
    "2869": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "2870": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2871": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2872": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "2873": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "payment#0"
      ]
    },
    "2874": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "2876": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2877": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "tmp%4#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2878": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%4#0"
      ]
    },
    "2879": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2880": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "2881": {
      "op": "return",
      "stack_out": []
    },
    "2882": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds[routing]",
      "params": {},
      "block": "withdraw_funds",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0"
      ]
    },
    "2885": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "amount#0 (copy)"
      ]
    },
    "2886": {
      "op": "len",
      "defined_out": [
        "amount#0",
        "len%0#0"
      ],
      "stack_out": [
        "amount#0",
        "len%0#0"
      ]
    },
    "2887": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "amount#0",
        "len%0#0"
      ],
      "stack_out": [
        "amount#0",
        "len%0#0",
        "8"
      ]
    },
    "2888": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "eq%0#0"
      ],
      "stack_out": [
        "amount#0",
        "eq%0#0"
      ]
    },
    "2889": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "amount#0"
      ]
    },
    "2890": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "amount#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "amount#0",
        "tmp%0#1"
      ]
    },
    "2893": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "amount#0"
      ]
    },
    "2894": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2895": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "2896": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2897": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2898": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "2899": {
      "op": "dup2",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%1#0 (copy)",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2900": {
      "op": "<=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "2901": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "2902": {
      "op": "txn Fee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "2904": {
      "op": "global MinTxnFee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2906": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "2"
      ]
    },
    "2908": {
      "op": "*",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "2909": {
      "op": ">=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "2910": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "2911": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2913": {
      "op": "-",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%8#0"
      ]
    },
    "2914": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "tmp%1#0",
        "tmp%8#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2915": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%8#0"
      ]
    },
    "2916": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2917": {
      "op": "itxn_begin"
    },
    "2918": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "2919": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "2921": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2922": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0"
      ]
    },
    "2923": {
      "op": "itxn_field Receiver"
    },
    "2925": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "2927": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "2928": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2930": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2931": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2933": {
      "op": "itxn_submit"
    },
    "2934": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2935": {
      "op": "return",
      "stack_out": []
    },
    "2936": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_balance[routing]",
      "params": {},
      "block": "withdraw_balance",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2939": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2940": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2942": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2944": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "2946": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "2947": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2948": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "2949": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2951": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2953": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2954": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "2956": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2958": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0",
        "value%1#0"
      ]
    },
    "2959": {
      "op": "-",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2960": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "2961": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2962": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2963": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0"
      ]
    },
    "2964": {
      "op": "-",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0"
      ]
    },
    "2965": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "amount#0 (copy)"
      ]
    },
    "2966": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "amount#0"
      ]
    },
    "2967": {
      "op": "itxn_begin"
    },
    "2968": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "0"
      ]
    },
    "2969": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "2971": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "amount#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2972": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "amount#0",
        "maybe_value%1#0"
      ]
    },
    "2973": {
      "op": "itxn_field Receiver"
    },
    "2975": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "2977": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "2978": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2980": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2981": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2983": {
      "op": "itxn_submit"
    },
    "2984": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2985": {
      "op": "return",
      "stack_out": []
    },
    "2986": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state[routing]",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2987": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2988": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2989": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2990": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "2991": {
      "op": "!=",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2992": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0x00"
      ]
    },
    "2994": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#1",
        "0x00",
        "0"
      ]
    },
    "2995": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%0#1"
      ]
    },
    "2997": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0"
      ]
    },
    "2998": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "2999": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73",
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "3001": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3002": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%1#0"
      ]
    },
    "3003": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "3004": {
      "op": "!=",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0"
      ]
    },
    "3005": {
      "op": "bytec 9 // 0x00",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "3007": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "3008": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "3010": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3011": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "0"
      ]
    },
    "3012": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3014": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3015": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0"
      ]
    },
    "3016": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3017": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "3019": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3020": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "3021": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3022": {
      "op": "bytec 22 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0",
        "0x78676f765f636f756e63696c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "0x78676f765f636f756e63696c"
      ]
    },
    "3024": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3025": {
      "error": "check self.xgov_council exists",
      "op": "assert // check self.xgov_council exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "3026": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "3027": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "3029": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3030": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "3031": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "3032": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "3034": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3035": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "3036": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0"
      ]
    },
    "3037": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "3039": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3040": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ]
    },
    "3041": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "3042": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "3044": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3045": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ]
    },
    "3046": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "3047": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "3049": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3050": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "3051": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3052": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "0"
      ]
    },
    "3053": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "3055": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3056": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%10#0"
      ]
    },
    "3057": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3058": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "0"
      ]
    },
    "3059": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "3061": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3062": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%11#0"
      ]
    },
    "3063": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "3064": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "0"
      ]
    },
    "3065": {
      "op": "bytec 23 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "3067": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3068": {
      "error": "check self.daemon_ops_funding_bps exists",
      "op": "assert // check self.daemon_ops_funding_bps exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%12#0"
      ]
    },
    "3069": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3070": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "0"
      ]
    },
    "3071": {
      "op": "bytec 24 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "3073": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3074": {
      "error": "check self.proposal_commitment_bps exists",
      "op": "assert // check self.proposal_commitment_bps exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%13#0"
      ]
    },
    "3075": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "3076": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "0"
      ]
    },
    "3077": {
      "op": "bytec 25 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "3079": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_exists%14#0",
        "maybe_value%14#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3080": {
      "error": "check self.min_requested_amount exists",
      "op": "assert // check self.min_requested_amount exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%14#0"
      ]
    },
    "3081": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "3082": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "0"
      ]
    },
    "3083": {
      "op": "bytec 26 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "3085": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3086": {
      "error": "check self.max_requested_amount_small exists",
      "op": "assert // check self.max_requested_amount_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%15#0"
      ]
    },
    "3087": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "3088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "0"
      ]
    },
    "3089": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "3091": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_exists%16#0",
        "maybe_value%16#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3092": {
      "error": "check self.max_requested_amount_medium exists",
      "op": "assert // check self.max_requested_amount_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%16#0"
      ]
    },
    "3093": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "3094": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "3095": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "3097": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_exists%17#0",
        "maybe_value%17#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3098": {
      "error": "check self.max_requested_amount_large exists",
      "op": "assert // check self.max_requested_amount_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%17#0"
      ]
    },
    "3099": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "3100": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%8#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "3102": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%8#0",
        "aggregate%head%1#0"
      ]
    },
    "3103": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "3104": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0"
      ]
    },
    "3105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "0"
      ]
    },
    "3106": {
      "op": "bytec 29 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "3108": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%18#0",
        "maybe_value%18#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3109": {
      "error": "check self.discussion_duration_small exists",
      "op": "assert // check self.discussion_duration_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "maybe_value%18#0"
      ]
    },
    "3110": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0"
      ]
    },
    "3111": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "0"
      ]
    },
    "3112": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "3114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_exists%19#0",
        "maybe_value%19#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3115": {
      "error": "check self.discussion_duration_medium exists",
      "op": "assert // check self.discussion_duration_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%19#0"
      ]
    },
    "3116": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0"
      ]
    },
    "3117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "0"
      ]
    },
    "3118": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "3120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_exists%20#0",
        "maybe_value%2#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3121": {
      "error": "check self.discussion_duration_large exists",
      "op": "assert // check self.discussion_duration_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "maybe_value%20#0"
      ]
    },
    "3122": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0"
      ]
    },
    "3123": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "0"
      ]
    },
    "3124": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "3126": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_exists%21#0",
        "maybe_value%2#0",
        "maybe_value%21#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "3127": {
      "error": "check self.discussion_duration_xlarge exists",
      "op": "assert // check self.discussion_duration_xlarge exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "maybe_value%21#0"
      ]
    },
    "3128": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0"
      ]
    },
    "3129": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%9#0"
      ]
    },
    "3131": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0"
      ]
    },
    "3133": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%4#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%head%4#0"
      ]
    },
    "3134": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%head%4#0",
        "aggregate%val_as_bytes%11#0"
      ]
    },
    "3136": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%head%5#0"
      ]
    },
    "3137": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%12#0"
      ]
    },
    "3138": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0"
      ]
    },
    "3139": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "0"
      ]
    },
    "3140": {
      "op": "bytec 33 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "3142": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%22#0",
        "maybe_value%2#0",
        "maybe_value%22#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "3143": {
      "error": "check self.voting_duration_small exists",
      "op": "assert // check self.voting_duration_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "maybe_value%22#0"
      ]
    },
    "3144": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0"
      ]
    },
    "3145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "0"
      ]
    },
    "3146": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "3148": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%23#0",
        "maybe_value%2#0",
        "maybe_value%23#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "3149": {
      "error": "check self.voting_duration_medium exists",
      "op": "assert // check self.voting_duration_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "maybe_value%23#0"
      ]
    },
    "3150": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0"
      ]
    },
    "3151": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "0"
      ]
    },
    "3152": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "3154": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%24#0",
        "maybe_value%2#0",
        "maybe_value%24#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "3155": {
      "error": "check self.voting_duration_large exists",
      "op": "assert // check self.voting_duration_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "maybe_value%24#0"
      ]
    },
    "3156": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0"
      ]
    },
    "3157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "0"
      ]
    },
    "3158": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "3160": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%25#0",
        "maybe_value%2#0",
        "maybe_value%25#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "maybe_value%25#0",
        "maybe_exists%25#0"
      ]
    },
    "3161": {
      "error": "check self.voting_duration_xlarge exists",
      "op": "assert // check self.voting_duration_xlarge exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "maybe_value%25#0"
      ]
    },
    "3162": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0"
      ]
    },
    "3163": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%13#0"
      ]
    },
    "3165": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0"
      ]
    },
    "3167": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%head%8#0"
      ]
    },
    "3168": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%15#0"
      ]
    },
    "3170": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%9#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%head%9#0"
      ]
    },
    "3171": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%9#0",
        "aggregate%val_as_bytes%16#0"
      ]
    },
    "3172": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0"
      ]
    },
    "3173": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "0"
      ]
    },
    "3174": {
      "op": "bytec 37 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x71756f72756d5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "3176": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%26#0",
        "maybe_value%2#0",
        "maybe_value%26#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "maybe_value%26#0",
        "maybe_exists%26#0"
      ]
    },
    "3177": {
      "error": "check self.quorum_small exists",
      "op": "assert // check self.quorum_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "maybe_value%26#0"
      ]
    },
    "3178": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0"
      ]
    },
    "3179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "0"
      ]
    },
    "3180": {
      "op": "bytec 38 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x71756f72756d5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "3182": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%27#0",
        "maybe_value%2#0",
        "maybe_value%27#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "maybe_value%27#0",
        "maybe_exists%27#0"
      ]
    },
    "3183": {
      "error": "check self.quorum_medium exists",
      "op": "assert // check self.quorum_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "maybe_value%27#0"
      ]
    },
    "3184": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0"
      ]
    },
    "3185": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "0"
      ]
    },
    "3186": {
      "op": "bytec 39 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x71756f72756d5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "3188": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%28#0",
        "maybe_value%2#0",
        "maybe_value%28#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "maybe_value%28#0",
        "maybe_exists%28#0"
      ]
    },
    "3189": {
      "error": "check self.quorum_large exists",
      "op": "assert // check self.quorum_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "maybe_value%28#0"
      ]
    },
    "3190": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%19#0"
      ]
    },
    "3191": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0"
      ]
    },
    "3193": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%head%12#0"
      ]
    },
    "3194": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%val_as_bytes%19#0"
      ]
    },
    "3195": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0"
      ]
    },
    "3196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "0"
      ]
    },
    "3197": {
      "op": "bytec 40 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "3199": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%29#0",
        "maybe_value%2#0",
        "maybe_value%29#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "maybe_value%29#0",
        "maybe_exists%29#0"
      ]
    },
    "3200": {
      "error": "check self.weighted_quorum_small exists",
      "op": "assert // check self.weighted_quorum_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "maybe_value%29#0"
      ]
    },
    "3201": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0"
      ]
    },
    "3202": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "0"
      ]
    },
    "3203": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "3205": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%30#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%30#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "maybe_value%30#0",
        "maybe_exists%30#0"
      ]
    },
    "3206": {
      "error": "check self.weighted_quorum_medium exists",
      "op": "assert // check self.weighted_quorum_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "maybe_value%30#0"
      ]
    },
    "3207": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0"
      ]
    },
    "3208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "0"
      ]
    },
    "3209": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "3211": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%31#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%31#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "maybe_value%31#0",
        "maybe_exists%31#0"
      ]
    },
    "3212": {
      "error": "check self.weighted_quorum_large exists",
      "op": "assert // check self.weighted_quorum_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "maybe_value%31#0"
      ]
    },
    "3213": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%22#0"
      ]
    },
    "3214": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0"
      ]
    },
    "3216": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%15#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%head%15#0"
      ]
    },
    "3217": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%15#0",
        "aggregate%val_as_bytes%22#0"
      ]
    },
    "3218": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0"
      ]
    },
    "3219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "0"
      ]
    },
    "3220": {
      "op": "bytec_3 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3221": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%32#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "maybe_value%32#0",
        "maybe_exists%32#0"
      ]
    },
    "3222": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "maybe_value%32#0"
      ]
    },
    "3223": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0"
      ]
    },
    "3224": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "0"
      ]
    },
    "3225": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3227": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%33#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%33#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "maybe_value%33#0",
        "maybe_exists%33#0"
      ]
    },
    "3228": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "maybe_value%33#0"
      ]
    },
    "3229": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0"
      ]
    },
    "3230": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "0"
      ]
    },
    "3231": {
      "op": "bytec 48 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3233": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%34#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_exists%34#0"
      ]
    },
    "3234": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0"
      ]
    },
    "3235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "0"
      ]
    },
    "3236": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3238": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%35#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_exists%35#0"
      ]
    },
    "3239": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0"
      ]
    },
    "3240": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0"
      ]
    },
    "3241": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "0"
      ]
    },
    "3242": {
      "op": "bytec 44 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3244": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%36#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%36#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "maybe_value%36#0",
        "maybe_exists%36#0"
      ]
    },
    "3245": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "maybe_value%36#0"
      ]
    },
    "3246": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0"
      ]
    },
    "3247": {
      "op": "uncover 23",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3249": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%encoded_bool%1#0",
        "0"
      ]
    },
    "3250": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%get_bit%0#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3251": {
      "op": "uncover 24",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%get_bit%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3253": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%get_bit%0#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%get_bit%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "3254": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "aggregate%get_bit%0#0"
      ]
    },
    "3256": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3257": {
      "op": "uncover 23",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%set_bit%0#0",
        "maybe_value%2#0"
      ]
    },
    "3259": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%18#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%18#0"
      ]
    },
    "3260": {
      "op": "uncover 22",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%18#0",
        "maybe_value%3#0"
      ]
    },
    "3262": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%19#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%19#0"
      ]
    },
    "3263": {
      "op": "uncover 21",
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%19#0",
        "maybe_value%4#0"
      ]
    },
    "3265": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%20#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%20#0"
      ]
    },
    "3266": {
      "op": "uncover 20",
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%20#0",
        "maybe_value%5#0"
      ]
    },
    "3268": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%21#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%21#0"
      ]
    },
    "3269": {
      "op": "uncover 19",
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%21#0",
        "maybe_value%6#0"
      ]
    },
    "3271": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%22#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%22#0"
      ]
    },
    "3272": {
      "op": "uncover 18",
      "stack_out": [
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%22#0",
        "maybe_value%7#0"
      ]
    },
    "3274": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%23#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%23#0"
      ]
    },
    "3275": {
      "op": "uncover 17",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%23#0",
        "maybe_value%8#0"
      ]
    },
    "3277": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%24#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%24#0"
      ]
    },
    "3278": {
      "op": "uncover 16",
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%24#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3280": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%25#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%25#0"
      ]
    },
    "3281": {
      "op": "uncover 15",
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%25#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3283": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%26#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%26#0"
      ]
    },
    "3284": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%26#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "3286": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%27#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%27#0"
      ]
    },
    "3287": {
      "op": "uncover 13",
      "stack_out": [
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%27#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3289": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%28#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%28#0"
      ]
    },
    "3290": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%28#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "3292": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%29#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%29#0"
      ]
    },
    "3293": {
      "op": "uncover 11",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%29#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "3295": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%30#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%30#0"
      ]
    },
    "3296": {
      "op": "uncover 10",
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%30#0",
        "aggregate%head%2#0"
      ]
    },
    "3298": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%31#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%31#0"
      ]
    },
    "3299": {
      "op": "uncover 9",
      "stack_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%31#0",
        "aggregate%head%6#0"
      ]
    },
    "3301": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%32#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%32#0"
      ]
    },
    "3302": {
      "op": "uncover 8",
      "stack_out": [
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%32#0",
        "aggregate%head%10#0"
      ]
    },
    "3304": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%33#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%33#0"
      ]
    },
    "3305": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%33#0",
        "aggregate%head%13#0"
      ]
    },
    "3307": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%16#0",
        "aggregate%head%34#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%34#0"
      ]
    },
    "3308": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%34#0",
        "aggregate%head%16#0"
      ]
    },
    "3310": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%35#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%35#0"
      ]
    },
    "3311": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%35#0",
        "aggregate%val_as_bytes%23#0"
      ]
    },
    "3313": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%36#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%36#0"
      ]
    },
    "3314": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%36#0",
        "aggregate%val_as_bytes%24#0"
      ]
    },
    "3316": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%37#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%37#0"
      ]
    },
    "3317": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%37#0",
        "maybe_value%34#0"
      ]
    },
    "3319": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%38#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%38#0"
      ]
    },
    "3320": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%38#0",
        "aggregate%val_as_bytes%25#0"
      ]
    },
    "3322": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%39#0",
        "aggregate%val_as_bytes%26#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%39#0"
      ]
    },
    "3323": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%39#0",
        "aggregate%val_as_bytes%26#0"
      ]
    },
    "3324": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%40#0"
      ],
      "stack_out": [
        "aggregate%head%40#0"
      ]
    },
    "3325": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%40#0"
      ],
      "stack_out": [
        "aggregate%head%40#0",
        "0x151f7c75"
      ]
    },
    "3326": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%head%40#0"
      ]
    },
    "3327": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3328": {
      "op": "log",
      "stack_out": []
    },
    "3329": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3330": {
      "op": "return",
      "stack_out": []
    },
    "3331": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_xgov_box[routing]",
      "params": {},
      "block": "get_xgov_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "3334": {
      "op": "dup",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "3335": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "3336": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "3337": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "3338": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "3339": {
      "op": "bytec 4 // 0x78",
      "defined_out": [
        "0x78",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "0x78"
      ]
    },
    "3341": {
      "op": "swap",
      "stack_out": [
        "0x78",
        "xgov_address#0"
      ]
    },
    "3342": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3343": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3344": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3345": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3346": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3347": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3348": {
      "op": "log",
      "stack_out": []
    },
    "3349": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3350": {
      "op": "return",
      "stack_out": []
    },
    "3351": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposer_box[routing]",
      "params": {},
      "block": "get_proposer_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0"
      ]
    },
    "3354": {
      "op": "dup",
      "defined_out": [
        "proposer_address#0",
        "proposer_address#0 (copy)"
      ],
      "stack_out": [
        "proposer_address#0",
        "proposer_address#0 (copy)"
      ]
    },
    "3355": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "len%0#0"
      ]
    },
    "3356": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "len%0#0",
        "32"
      ]
    },
    "3357": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "eq%0#0"
      ]
    },
    "3358": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposer_address#0"
      ]
    },
    "3359": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "0x70"
      ]
    },
    "3360": {
      "op": "swap",
      "stack_out": [
        "0x70",
        "proposer_address#0"
      ]
    },
    "3361": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3362": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3363": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3364": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3365": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3366": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3367": {
      "op": "log",
      "stack_out": []
    },
    "3368": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3369": {
      "op": "return",
      "stack_out": []
    },
    "3370": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_request_box[routing]",
      "params": {},
      "block": "get_request_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0"
      ]
    },
    "3373": {
      "op": "dup",
      "defined_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ]
    },
    "3374": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0"
      ]
    },
    "3375": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0",
        "8"
      ]
    },
    "3376": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "eq%0#0"
      ]
    },
    "3377": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_id#0"
      ]
    },
    "3378": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "3379": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3380": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "3382": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "3383": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3384": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3385": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3386": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3387": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3388": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3389": {
      "op": "log",
      "stack_out": []
    },
    "3390": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3391": {
      "op": "return",
      "stack_out": []
    },
    "3392": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal[routing]",
      "params": {},
      "block": "is_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "3395": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "3396": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "3397": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "3398": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "3399": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "3400": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3401": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3404": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "3405": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3406": {
      "op": "return",
      "stack_out": []
    },
    "3407": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "params": {},
      "block": "is_xgov_manager",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3409": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3410": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3412": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3413": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3414": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3415": {
      "retsub": true,
      "op": "retsub"
    },
    "3416": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "params": {},
      "block": "is_xgov_subscriber",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3418": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3419": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "3421": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3422": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3423": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3424": {
      "retsub": true,
      "op": "retsub"
    },
    "3425": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "_is_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3428": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3430": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3432": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3433": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "3435": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3436": {
      "retsub": true,
      "op": "retsub"
    },
    "3437": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "get_proposal_proposer",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3440": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3442": {
      "op": "pushbytes 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)",
        "0x70726f706f736572"
      ]
    },
    "3452": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ]
    },
    "3453": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "3454": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "3455": {
      "op": "len",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%2#0"
      ]
    },
    "3456": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "proposer_bytes#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%2#0",
        "32"
      ]
    },
    "3457": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%3#0"
      ]
    },
    "3458": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "3459": {
      "retsub": true,
      "op": "retsub"
    },
    "3460": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "params": {
        "payment#0": "uint64"
      },
      "block": "valid_xgov_payment",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3463": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "3465": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3467": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3469": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3470": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "3473": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "3475": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3477": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "3478": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "3480": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3481": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "3482": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3483": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "3486": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "3487": {
      "retsub": true,
      "op": "retsub"
    },
    "3488": {
      "block": "valid_xgov_payment_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "3489": {
      "retsub": true,
      "op": "retsub"
    },
    "3490": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "params": {
        "address#0": "bytes"
      },
      "block": "valid_kyc",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3493": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "3494": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "address#0 (copy)"
      ]
    },
    "3496": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3497": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3498": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3499": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0"
      ]
    },
    "3500": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%box_get%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "1"
      ]
    },
    "3501": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3502": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "3504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "3505": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3507": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3508": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "3509": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "3510": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3513": {
      "op": "frame_dig 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3515": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "3516": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0"
      ]
    },
    "3517": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "1"
      ]
    },
    "3518": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "3519": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3521": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "3522": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3525": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "3526": {
      "block": "valid_kyc_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ],
      "op": "swap",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "3527": {
      "retsub": true,
      "op": "retsub"
    },
    "3528": {
      "block": "valid_kyc_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "3529": {
      "op": "b valid_kyc_bool_merge@4"
    },
    "3532": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "decrement_pending_proposals",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3535": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3536": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3538": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3539": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3540": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "3541": {
      "op": "-",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3542": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "tmp%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3544": {
      "op": "swap",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "tmp%0#0"
      ]
    },
    "3545": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3546": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3548": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "3551": {
      "op": "bytec_1 // 0x70",
      "defined_out": [
        "0x70",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "0x70"
      ]
    },
    "3552": {
      "op": "swap",
      "stack_out": [
        "0x70",
        "proposer#0"
      ]
    },
    "3553": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3554": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3555": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "0"
      ]
    },
    "3556": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "0",
        "1"
      ]
    },
    "3557": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0"
      ]
    },
    "3558": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0",
        "0"
      ]
    },
    "3559": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0",
        "0",
        "0"
      ]
    },
    "3560": {
      "op": "setbit",
      "defined_out": [
        "aggregate%updated_target%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%updated_target%0#0"
      ]
    },
    "3561": {
      "op": "intc_0 // 0"
    },
    "3562": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "aggregate%updated_target%0#0"
      ]
    },
    "3563": {
      "op": "box_replace",
      "stack_out": []
    },
    "3564": {
      "retsub": true,
      "op": "retsub"
    },
    "3565": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "params": {
        "voting_address#0": "bytes"
      },
      "block": "make_xgov_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3568": {
      "op": "global Round",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3570": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3571": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ]
    },
    "3573": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)",
        "0x00000000000000000000000000000000"
      ]
    },
    "3591": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%2#0"
      ]
    },
    "3592": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3593": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0"
      ]
    },
    "3594": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
{
  "version": 3,
  "sources": [
    "../../xgov_registry/contract.py"
  ],
  "mappings": ";;;;;AAuDe;;AAA6B;;AAA7B;AAAP;AACO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAGiD;AAAd;AAAnC;AACkD;;AAAd;AAApC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGkD;;AAApB;;AAA9B;AACoD;;AAApB;;AAAhC;AAEoD;;AAApB;;AAAhC;AAEwB;;AAApB;;AADJ;AAGmD;;AAApB;;AAA/B;AAE0C;;AAAd;AAA5B;AACuC;;AAAd;AAAzB;AAC8C;;AAAd;AAAhC;AACmD;;AAAd;AAArC;AAEkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAI8C;;AAAd;AAAhC;AAC+C;;AAAd;AAAjC;AAC8C;;AAAd;AAAhC;AAGkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAIkB;;AAAd;AADJ;AAImD;;AAAd;AAArC;AAGmD;;AAAd;AAArC;AACiD;;AAAd;AAAnC;AAEmD;;AAAd;AAArC;AAE4C;;AAAd;AAA9B;AAEkB;;AAAd;AADJ;AAKkB;;AAAd;AADJ;AA/GR;;;;;;AAAA;;;AAAA;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AA8mBK;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AArSG;;AAAuC;;AAAvC;AArLO;;AAsLkB;AAAlB;AAPV;AASA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAEc;;AAAA;AAAA;;AACtB;;;AACkD;AAAtC;;AAAA;AAAA;AAhBP;AAAA;AAmBkD;AAA3C;;AAAA;AAAA;;;;;AAEP;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAaU;;;AAAP;AAIgB;AAAA;AADhB;;AAAA;AAAA;;AAAA;AAhBH;AAAA;AA6BU;;;AAAP;AAGA;;AAAA;;AAZH;AAAA;AAoBU;;;AAAP;AACA;AAA6B;AAA7B;AAPH;AAAA;AAeU;;;AAAP;AACA;;AAA8B;AAA9B;AAPH;AAAA;AAeU;;;AAAP;AACA;AAA6B;AAA7B;AAPH;AAAA;AAeU;;;AAAP;AACA;;AAA8B;AAA9B;AAPH;AAAA;AASA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AACA;;AAAA;AAAA;AAbH;AAAA;;;;;;AAeA;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAaU;;;AAAP;AAzXO;AAAA;;AAAA;AAAA;AAAA;AA0XP;AAqBI;AAAA;AAAA;AArUG;;;;AAqUH;AAAA;;;AACI;AAtUD;;;;AAsUC;AADJ;;;;AADJ;AAMI;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1UG;;AA0UH;AADJ;AAKI;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AACE;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AADF;AAAA;;;AAEE;;AADA;AACA;AAAA;AAAA;;AADA;;AAAA;AADF;;;AAGE;;AAAA;;AAAA;AADA;;AAAA;AADA;;;;AAFN;AAQI;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAvWG;AAAA;AAA4B;;;AAA5B;AAsCH;;;;;AAAA;AAGG;;AAAA;;AAAA;AAAP;AAE8B;;AAAA;AAAA;AA1BvB;;AAgCyB;AAAhC;;AAAA;AAAA;AAyTA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AACqC;AAAA;AAAA;AAArC;;AAAA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAGyC;;AAAA;AAAA;AAAA;AAAzC;;AAAA;AAAA;AAGwC;;AAAA;AAAxC;;AAAA;AAAA;AAIuC;AAAA;;;AAAA;AAAA;AAAA;AAAvC;;AAAA;AAAA;AACwC;AADD;AACC;AAAxC;;AAAA;AAAA;AAGuC;AAAA;;AAAA;AAAvC;;AAAA;AAAA;AACwC;;AAAA;AAAxC;;AAAA;AAAA;AAImC;AAAA;;;AAAA;AAAA;AAAA;AAAnC;;AAAA;AAAA;AACoC;AADD;AACC;AAApC;;AAAA;AAAA;AACmC;AAAA;;AAAA;AAAnC;;AAAA;AAAA;AACoC;;AAAA;AAApC;;AAAA;AAAA;AAE0B;AAAA;;;AAAA;AAAA;AAAA;AAA1B;;AAAA;AAAA;AAC2B;AADD;AACC;AAA3B;;AAAA;AAAA;AAC0B;;AAAA;AAA1B;;AAAA;AAAA;AAEmC;;;AAAA;AAAA;AAAA;AAAnC;;AAAA;AAAA;AACoC;AADD;AACC;AAApC;;AAAA;AAAA;AACmC;;AAAA;AAAnC;;AAAA;AAAA;AA5FH;AAAA;;;;;;;;;AAuGU;;;AAAP;AATH;AAAA;AAWA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEyB;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;;AAAP;AAG4B;;;AAA5B;AAAc;;AAAd;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAxBH;AAAA;AAmCc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGI;AAAc;;AAAd;AAAJ;;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAhBH;AAAA;AAkBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuBU;;AAAA;;AAAA;AAAP;AACW;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGkC;AAA3B;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGO;;;AAAP;AAGM;AAAA;;AAAA;AAAA;AACkB;;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAOyB;AAAzB;AAAA;;AAAA;AAAA;AAzCH;AAAA;AA2CA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAG2B;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmD;AAAA;;;AAAnB;;;AAA5B;AAAA;;;AAAd;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAEA;;AApBH;AAAA;AAsBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAGqB;AAAA;AAAjB;;AAAA;AAAA;AAAJ;;AAfH;AAAA;AAiBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBU;;AAAA;;AAAA;AAAP;AACW;AAAA;AAAA;AAAA;AAAJ;AAAP;AAG8B;AAAvB;;AAAA;AAAA;AAAA;;AAAP;AAGO;;;AAAP;AAGO;AAAA;;AAAA;AAAA;AAC8B;;AAAA;;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAA7B;;AAAA;AAAA;AAAA;AAAA;AAOqC;AAArC;AAAA;;AAAA;AAAA;AA1CH;AAAA;AA4CA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAII;AAAA;AADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKQ;;;AAAd;AAAA;AAAA;AAAJ;;AACA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAGA;;AAxBH;AAAA;AA0BA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYU;;;AAAP;AAGiC;AAAA;AAA7B;;AAAA;AAAA;AAAJ;;AAfH;AAAA;AAiBA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGgC;AAAvB;AAAA;AAAA;;AAAA;AAAA;;AACT;AACW;AAAA;AAIP;;AAAc;AAAA;;;AAAd;AAAA;;;AACG;;AAAA;;AAAA;AADH;;;;AADJ;AAMA;AAAA;AAAA;;AAAA;AA9BH;AAAA;;;;;AAgCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEyB;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGI;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEA;AAAkB;;AAAlB;AAxkBO;;;;;;;;;;;AAwkBP;AAvBH;AAAA;AA2BA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAC0B;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAjmBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAmmBP;AAvBH;AAAA;AA2BA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AApwBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAsxBP;AAGI;AAAA;AAAoB;AAAA;;AAAA;AAAA;AAApB;;AAAA;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAC6B;AAA7B;;AAAA;AAAA;AA1BH;AAAA;AA4BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBc;AAAA;AAAA;AAAA;AAAJ;AAAP;AACW;AAAA;;AAAA;AAAA;AAAJ;AAAP;AAGqB;AAAd;;AAAA;AAAA;AAAA;;AAAP;AAGW;AACP;;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AAAA;AAAP;AAGsB;;AAAf;;;AAAP;AAEO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEa;;AAAA;;AAAA;AAEc;;AAAA;AAC3B;AASa;AAAA;AAA2B;;AAA3B;AADI;;;AAEH;AAEF;AAER;;;;;AAIiB;;;;AADD;;;;AAb8B;;;;;;;;;;;AAQtC;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAUT;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHT;;AAAA;;;;;;;;;;AAUQ;AAFA;AAFA;AAFA;AAFA;AAUD;;AAAgB;;AAAhB;AAAP;AAEQ;;AAAA;;AAAA;AAGZ;AAAkB;;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACa;;AAAA;AAAA;;AAAA;;AAAA;AACF;AAAA;;AAAA;AAAA;AAAgC;;AAAA;;AAAA;AAAhC;;;;;AAFX;;;AAGQ;;;AAHR;AAOA;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AA3FH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DM;;AAAA;;;AAAwB;;AAAxB;;;;AAiCN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA+Bc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGyB;;AAAA;AAAlB;AAAA;;;AAAP;AAGgC;AAAvB;;AAAA;AAAA;AAAA;AAAA;;AACT;AACW;AAAA;AAAA;AAEP;AAAA;AAAA;AAAuC;AAAvC;AADiD;AAArD;;AAAA;AAAA;;AAAA;AAII;;AADqD;AAAzD;;AAAA;;AAAA;;AAAA;AAKO;;AAAc;AAAA;;;AAAd;AAAP;AAGa;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQV;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;AAAA;;;;;;;;;;;;;;AAcQ;AAFA;AAFA;AAFA;AAFA;AAFA;AAFA;AAcD;;AAAgB;;AAAhB;AAAP;AA7EP;AAAA;AA2DM;;AAAA;;;AAAwB;;AAAxB;;;;AAoBN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBuB;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGyB;AAAlB;AAAA;;;AAAP;AAGW;AAAA;;;AA38BiC;;AAC3B;;;;;;;;;;;;;;;;;;AAD2B;AAG5C;AA28BmB;AAAZ;;AAAA;AAAA;AAAA;;AAAP;AAEO;;AAAA;;;AAAP;AAII;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AA18BA;;;;;;;;;AAAA;;;AAAoD;;;AAApD;AAGA;AAAA;AAAA;;AAAA;AAAA;AA68Ba;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIV;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AADT;AAAA;;;;AAIQ;AAFA;AAID;;AAAgB;;AAAhB;AAAP;AAnDP;AAAA;AA2CM;;AAAA;;;AAAwB;;AAAxB;;;;;;;;AAUN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB8C;AAAA;AAtgC1B;;;;;;;;AADO;AAAA;AAAA;AAAA;;AAGxB;AAqgCG;;;AAAgD;AAAmB;;AAAnB;AAAhD;;;AAGqB;;AAAe;AAAA;;AAAA;AAAA;AAAf;AAApB;AAGG;;AAAA;AAAA;;;AAAP;AAEa;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIV;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;AAAA;;;;;;;;AAQQ;AAFA;AAFA;AAFA;AAQD;;AAAgB;;AAAhB;AAAP;AAEJ;;AAAA;;;AA3CH;AAAA;AA6BM;;AAAA;;;AAAwB;;AAAxB;;;;AAgBN;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAec;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGyB;AAAA;;AAAlB;;;AAAP;AAEW;AAAA;;;AACJ;;AAAA;AAAP;AAEa;;;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIV;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAX;;;AACqD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAlB;;AAAA;AAAA;;AAAkB;AAEhC;;AADT;AAAA;;;;AAIQ;AAFA;AAID;;AAAgB;;AAAhB;AAAP;AAEJ;;AAAA;;;AArCH;AAAA;AA2BM;;AAAA;;;AAAwB;;AAAxB;;;;AAYN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaO;AAAA;;AAAoB;;AAApB;AADJ;AAGA;AAAA;;AAAA;AAAA;AAAgC;AAAA;;AAAhC;AAAA;;AAAA;AAAA;AAfH;AAAA;AAiBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcU;;;AAAP;AAEI;AAAsB;AAAA;;AAAA;AAAA;AAAtB;AAAA;AADJ;AAGO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AACA;;AAAA;AAAA;;AAAA;AAAA;AAEA;AACa;AAAA;;AAAA;AAAA;;;;;AADb;;;AAGQ;;;AAHR;AArBH;AAAA;AAuCU;;;AAAP;AACO;;AAAY;;AAAqB;;AAArB;AAAZ;AAAP;AAII;;AAAA;;AAAA;AACE;;AAAA;;AAAA;AADF;AAEE;AAAA;;AAAA;AAAA;AAFF;AAKJ;AAAA;AACA;AACa;AAAA;;AAAA;AAAA;;;;;AADb;;;AAGQ;;;AAHR;AAvBH;AAAA;AAoCsC;AAAA;AAAA;AAAA;AAAL;AAAA;AAAV;;AAAA;AAAA;;AAAA;AACgB;AAAA;;AAAA;AAAA;AAAL;AAAA;AAAV;;AAAA;AAAA;;AAAA;AACJ;AAAA;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;AACE;AAAA;;AAAA;AAAA;AACG;AAAA;;AAAA;AAAA;AACH;AAAA;;AAAA;AAAA;AACK;AAAA;;AAAA;AAAA;AACN;AAAA;;AAAA;AAAA;AACS;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACa;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AAEL;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHiB;;AAAA;AAAA;AAAA;AAML;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOJ;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAJY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOA;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHG;;AAAA;AAAA;AAAA;AAMS;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AAHY;;AAAA;AAAA;AAAA;AAKc;AAAA;;AAAA;AAAA;AAAZ;AACY;AAAA;;AAAA;AAAA;AAAZ;AACL;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AA/Cb;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWU;AAAA;AAAA;AAAA;AAAA;AAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWU;AAAA;AAAA;AAAA;AAAA;AAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAa2B;AAAA;AAAjB;;AAAA;AAAA;AAAA;AAAA;AAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAauC;AAAA;AAA7B;;AAAA;AAAA;AAAA;AAAA;AAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE4B;AAAlB;;;AAAP;AAFH;AAAA;AAxxCU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAIO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAUH;;;AAEU;;AAAA;;AAAA;AAAoC;;AAApC;AAAP;AAUH;;;AAEqC;;AACjB;;;;;;;;;;AADiB;AAGlC;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;AAkBH;;;AAGO;;AAAA;;AAAoB;;AAApB;AAAA;;;AACI;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AADJ;;;;AADJ;;AAAA;AAKH;;;AAGO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AACI;;AAAA;AAAA;AAAA;AAAA;AACF;;AADE;AADJ;;;;AADJ;AAAA;;;;;AA6DH;;;AAGG;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;AAAA;AAGW;;AAAA;;;AACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEH;;;AAesC;;AAAZ;AAJhB;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "5": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "7": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "28"
      ]
    },
    "9": {
      "op": "==",
      "defined_out": [
        "tmp%1#2"
      ],
      "stack_out": [
        "tmp%1#2"
      ]
    },
    "10": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "11": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "13": {
      "op": "pushint 36 // 36",
      "defined_out": [
        "36",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "36"
      ]
    },
    "15": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "16": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "17": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "19": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "20": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "21": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "23": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "24": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "25": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "27": {
      "op": "app_global_put",
      "stack_out": []
    },
    "28": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "30": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "31": {
      "op": "app_global_put",
      "stack_out": []
    },
    "32": {
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "34": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "tmp%8#1"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "tmp%8#1"
      ]
    },
    "36": {
      "op": "app_global_put",
      "stack_out": []
    },
    "37": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "39": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "tmp%9#1"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "tmp%9#1"
      ]
    },
    "41": {
      "op": "app_global_put",
      "stack_out": []
    },
    "42": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "44": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f7061796f72",
        "tmp%10#0"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "tmp%10#0"
      ]
    },
    "46": {
      "op": "app_global_put",
      "stack_out": []
    },
    "47": {
      "op": "bytec 23 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c"
      ]
    },
    "49": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "tmp%11#0"
      ],
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "tmp%11#0"
      ]
    },
    "51": {
      "op": "app_global_put",
      "stack_out": []
    },
    "52": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "54": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "tmp%12#0"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "tmp%12#0"
      ]
    },
    "56": {
      "op": "app_global_put",
      "stack_out": []
    },
    "57": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "59": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%13#0"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%13#0"
      ]
    },
    "61": {
      "op": "app_global_put",
      "stack_out": []
    },
    "62": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e"
      ]
    },
    "64": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "tmp%14#0"
      ],
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "tmp%14#0"
      ]
    },
    "66": {
      "op": "app_global_put",
      "stack_out": []
    },
    "67": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565"
      ],
      "stack_out": [
        "0x78676f765f666565"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f765f666565",
        "0"
      ]
    },
    "70": {
      "op": "app_global_put",
      "stack_out": []
    },
    "71": {
      "op": "bytec 4 // 0x78676f7673",
      "defined_out": [
        "0x78676f7673"
      ],
      "stack_out": [
        "0x78676f7673"
      ]
    },
    "73": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x78676f7673",
        "0"
      ]
    },
    "74": {
      "op": "app_global_put",
      "stack_out": []
    },
    "75": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565"
      ],
      "stack_out": [
        "0x70726f706f7365725f666565"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "0"
      ]
    },
    "78": {
      "op": "app_global_put",
      "stack_out": []
    },
    "79": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "81": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "0"
      ]
    },
    "82": {
      "op": "app_global_put",
      "stack_out": []
    },
    "83": {
      "op": "bytec 24 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ],
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "85": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "0"
      ]
    },
    "86": {
      "op": "app_global_put",
      "stack_out": []
    },
    "87": {
      "op": "bytec 25 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "0"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "bytec 26 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "94": {
      "op": "app_global_put",
      "stack_out": []
    },
    "95": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "97": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "0"
      ]
    },
    "98": {
      "op": "app_global_put",
      "stack_out": []
    },
    "99": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "0"
      ]
    },
    "102": {
      "op": "app_global_put",
      "stack_out": []
    },
    "103": {
      "op": "bytec 29 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "0"
      ]
    },
    "106": {
      "op": "app_global_put",
      "stack_out": []
    },
    "107": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "110": {
      "op": "app_global_put",
      "stack_out": []
    },
    "111": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": []
    },
    "115": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "118": {
      "op": "app_global_put",
      "stack_out": []
    },
    "119": {
      "op": "bytec 33 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "0"
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "0"
      ]
    },
    "130": {
      "op": "app_global_put",
      "stack_out": []
    },
    "131": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "0"
      ]
    },
    "134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "135": {
      "op": "bytec 37 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "0"
      ]
    },
    "138": {
      "op": "app_global_put",
      "stack_out": []
    },
    "139": {
      "op": "bytec 38 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "142": {
      "op": "app_global_put",
      "stack_out": []
    },
    "143": {
      "op": "bytec 39 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "146": {
      "op": "app_global_put",
      "stack_out": []
    },
    "147": {
      "op": "bytec 40 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x71756f72756d5f6c61726765"
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "0"
      ]
    },
    "150": {
      "op": "app_global_put",
      "stack_out": []
    },
    "151": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "0"
      ]
    },
    "154": {
      "op": "app_global_put",
      "stack_out": []
    },
    "155": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "0"
      ]
    },
    "158": {
      "op": "app_global_put",
      "stack_out": []
    },
    "159": {
      "op": "bytec 43 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "0"
      ]
    },
    "162": {
      "op": "app_global_put",
      "stack_out": []
    },
    "163": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "165": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "0"
      ]
    },
    "166": {
      "op": "app_global_put",
      "stack_out": []
    },
    "167": {
      "op": "bytec 44 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "169": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "170": {
      "op": "app_global_put",
      "stack_out": []
    },
    "171": {
      "op": "bytec 45 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "173": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "174": {
      "op": "app_global_put",
      "stack_out": []
    },
    "175": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "177": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "0"
      ]
    },
    "178": {
      "op": "app_global_put",
      "stack_out": []
    },
    "179": {
      "op": "bytec 46 // 0x726571756573745f6964",
      "defined_out": [
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0x726571756573745f6964"
      ]
    },
    "181": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x726571756573745f6964",
        "0"
      ]
    },
    "182": {
      "op": "app_global_put",
      "stack_out": []
    },
    "183": {
      "op": "bytec 47 // 0x726571756573745f756e7375627363726962655f6964",
      "defined_out": [
        "0x726571756573745f756e7375627363726962655f6964"
      ],
      "stack_out": [
        "0x726571756573745f756e7375627363726962655f6964"
      ]
    },
    "185": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x726571756573745f756e7375627363726962655f6964",
        "0"
      ]
    },
    "186": {
      "op": "app_global_put",
      "stack_out": []
    },
    "187": {
      "op": "bytec 48 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ],
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "189": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "0"
      ]
    },
    "190": {
      "op": "app_global_put",
      "stack_out": []
    },
    "191": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "pushbytes 0x4956c1ab // method \"update_xgov_registry()void\"",
      "defined_out": [
        "Method(update_xgov_registry()void)"
      ],
      "stack_out": [
        "Method(update_xgov_registry()void)"
      ]
    },
    "197": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(update_xgov_registry()void)",
        "tmp%0#1"
      ],
      "stack_out": [
        "Method(update_xgov_registry()void)",
        "tmp%0#1"
      ]
    },
    "200": {
      "op": "match main_update_xgov_registry_route@4",
      "stack_out": []
    },
    "204": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "206": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "207": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "208": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "210": {
      "op": "bz main_create_NoOp@49",
      "stack_out": []
    },
    "213": {
      "op": "pushbytess 0x959c4762 0x6c1f564d 0xe10a512e 0x86f7e0e6 0x39e26d8a 0x98352e86 0xfa4ed6e2 0xd6c9cc1a 0x5c484055 0x37d6adf1 0xd4216b6e 0xba8520f2 0x1677b30e 0x84b7d268 0x653a0bdb 0xa082cef8 0xdf39fdb9 0x45077390 0x3c31bc02 0x0d2c7891 0x93facdba 0xce8b3a1c 0xfaea081f 0x0da27885 0x7a4fee43 0x52dd10d7 0xd4d37a64 0x34349dcc 0x158f8dd6 0xdb27b9af 0xf5910756 0x65610a9f 0xfdc695c2 0xba90ab54 0xb3b58482 0x00b3cef5 0x6f752007 0x3a8d568f 0x230cc121 0xcb0a2b41 0x26983200 // method \"init_proposal_contract(uint64)void\", method \"load_proposal_contract(uint64,byte[])void\", method \"delete_proposal_contract_box()void\", method \"pause_registry()void\", method \"pause_proposals()void\", method \"resume_registry()void\", method \"resume_proposals()void\", method \"set_xgov_manager(address)void\", method \"set_payor(address)void\", method \"set_xgov_council(address)void\", method \"set_xgov_subscriber(address)void\", method \"set_kyc_provider(address)void\", method \"set_committee_manager(address)void\", method \"set_xgov_daemon(address)void\", method \"config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void\", method \"subscribe_xgov(address,pay)void\", method \"unsubscribe_xgov()void\", method \"request_subscribe_xgov(address,address,uint64,pay)void\", method \"approve_subscribe_xgov(uint64)void\", method \"reject_subscribe_xgov(uint64)void\", method \"request_unsubscribe_xgov(address,address,uint64,pay)void\", method \"approve_unsubscribe_xgov(uint64)void\", method \"reject_unsubscribe_xgov(uint64)void\", method \"set_voting_account(address,address)void\", method \"subscribe_proposer(pay)void\", method \"set_proposer_kyc(address,bool,uint64)void\", method \"declare_committee(byte[32],uint64,uint64)void\", method \"open_proposal(pay)uint64\", method \"vote_proposal(uint64,address,uint64,uint64)void\", method \"pay_grant_proposal(uint64)void\", method \"finalize_proposal(uint64)void\", method \"drop_proposal(uint64)void\", method \"deposit_funds(pay)void\", method \"withdraw_funds(uint64)void\", method \"withdraw_balance()void\", method \"get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64)\", method \"get_xgov_box(address)(address,uint64,uint64,uint64)\", method \"get_proposer_box(address)(bool,bool,uint64)\", method \"get_request_box(uint64)(address,address,uint64)\", method \"get_request_unsubscribe_box(uint64)(address,address,uint64)\", method \"is_proposal(uint64)void\"",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(approve_unsubscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_request_unsubscribe_box(uint64)(address,address,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(init_proposal_contract(uint64)void)",
        "Method(is_proposal(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(reject_unsubscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(request_unsubscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)"
      ],
      "stack_out": [
        "Method(init_proposal_contract(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_unsubscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_unsubscribe_xgov(uint64)void)",
        "Method(reject_unsubscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_request_unsubscribe_box(uint64)(address,address,uint64))",
        "Method(is_proposal(uint64)void)"
      ]
    },
    "420": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(approve_unsubscribe_xgov(uint64)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(deposit_funds(pay)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_request_unsubscribe_box(uint64)(address,address,uint64))",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(init_proposal_contract(uint64)void)",
        "Method(is_proposal(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(open_proposal(pay)uint64)",
        "Method(pause_proposals()void)",
        "Method(pause_registry()void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(reject_unsubscribe_xgov(uint64)void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(request_unsubscribe_xgov(address,address,uint64,pay)void)",
        "Method(resume_proposals()void)",
        "Method(resume_registry()void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(withdraw_funds(uint64)void)",
        "tmp%10#0"
      ],
      "stack_out": [
        "Method(init_proposal_contract(uint64)void)",
        "Method(load_proposal_contract(uint64,byte[])void)",
        "Method(delete_proposal_contract_box()void)",
        "Method(pause_registry()void)",
        "Method(pause_proposals()void)",
        "Method(resume_registry()void)",
        "Method(resume_proposals()void)",
        "Method(set_xgov_manager(address)void)",
        "Method(set_payor(address)void)",
        "Method(set_xgov_council(address)void)",
        "Method(set_xgov_subscriber(address)void)",
        "Method(set_kyc_provider(address)void)",
        "Method(set_committee_manager(address)void)",
        "Method(set_xgov_daemon(address)void)",
        "Method(config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3]))void)",
        "Method(subscribe_xgov(address,pay)void)",
        "Method(unsubscribe_xgov()void)",
        "Method(request_subscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_subscribe_xgov(uint64)void)",
        "Method(reject_subscribe_xgov(uint64)void)",
        "Method(request_unsubscribe_xgov(address,address,uint64,pay)void)",
        "Method(approve_unsubscribe_xgov(uint64)void)",
        "Method(reject_unsubscribe_xgov(uint64)void)",
        "Method(set_voting_account(address,address)void)",
        "Method(subscribe_proposer(pay)void)",
        "Method(set_proposer_kyc(address,bool,uint64)void)",
        "Method(declare_committee(byte[32],uint64,uint64)void)",
        "Method(open_proposal(pay)uint64)",
        "Method(vote_proposal(uint64,address,uint64,uint64)void)",
        "Method(pay_grant_proposal(uint64)void)",
        "Method(finalize_proposal(uint64)void)",
        "Method(drop_proposal(uint64)void)",
        "Method(deposit_funds(pay)void)",
        "Method(withdraw_funds(uint64)void)",
        "Method(withdraw_balance()void)",
        "Method(get_state()(bool,bool,address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64[3],uint64[3],uint64,uint64,byte[32],uint64,uint64))",
        "Method(get_xgov_box(address)(address,uint64,uint64,uint64))",
        "Method(get_proposer_box(address)(bool,bool,uint64))",
        "Method(get_request_box(uint64)(address,address,uint64))",
        "Method(get_request_unsubscribe_box(uint64)(address,address,uint64))",
        "Method(is_proposal(uint64)void)",
        "tmp%10#0"
      ]
    },
    "423": {
      "op": "match init_proposal_contract load_proposal_contract delete_proposal_contract_box pause_registry pause_proposals resume_registry resume_proposals set_xgov_manager set_payor set_xgov_council set_xgov_subscriber set_kyc_provider set_committee_manager set_xgov_daemon config_xgov_registry subscribe_xgov unsubscribe_xgov request_subscribe_xgov approve_subscribe_xgov reject_subscribe_xgov request_unsubscribe_xgov approve_unsubscribe_xgov reject_unsubscribe_xgov set_voting_account subscribe_proposer set_proposer_kyc declare_committee open_proposal vote_proposal pay_grant_proposal finalize_proposal drop_proposal deposit_funds withdraw_funds withdraw_balance get_state get_xgov_box get_proposer_box get_request_box get_request_unsubscribe_box is_proposal",
      "stack_out": []
    },
    "507": {
      "op": "err"
    },
    "508": {
      "block": "main_create_NoOp@49",
      "stack_in": [],
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "514": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create()void)",
        "tmp%11#0"
      ],
      "stack_out": [
        "Method(create()void)",
        "tmp%11#0"
      ]
    },
    "517": {
      "op": "match create",
      "stack_out": []
    },
    "521": {
      "op": "err"
    },
    "522": {
      "block": "main_update_xgov_registry_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "524": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "UpdateApplication"
      ]
    },
    "526": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "527": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "529": {
      "op": "&&",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "530": {
      "error": "OnCompletion must be UpdateApplication && can only call when not creating",
      "op": "assert // OnCompletion must be UpdateApplication && can only call when not creating",
      "stack_out": []
    },
    "531": {
      "op": "b update_xgov_registry"
    },
    "534": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "536": {
      "op": "txn Sender",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "538": {
      "op": "app_global_put",
      "stack_out": []
    },
    "539": {
      "op": "bytec 51 // TMPL_entropy",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "541": {
      "op": "dup",
      "defined_out": [
        "TMPL_entropy",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "TMPL_entropy"
      ]
    },
    "542": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "543": {
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "544": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.init_proposal_contract[routing]",
      "params": {},
      "block": "init_proposal_contract",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "547": {
      "op": "dup",
      "defined_out": [
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "size#0"
      ]
    },
    "548": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "len%0#0"
      ]
    },
    "549": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "len%0#0",
        "8"
      ]
    },
    "550": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "eq%0#0"
      ]
    },
    "551": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "size#0"
      ]
    },
    "552": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "size#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "size#0",
        "tmp%0#1"
      ]
    },
    "555": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "size#0"
      ]
    },
    "556": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "0x7061"
      ]
    },
    "558": {
      "op": "box_len",
      "defined_out": [
        "_box#0",
        "exist#0",
        "size#0"
      ],
      "stack_out": [
        "size#0",
        "_box#0",
        "exist#0"
      ]
    },
    "559": {
      "op": "bury 1",
      "stack_out": [
        "size#0",
        "exist#0"
      ]
    },
    "561": {
      "op": "bz init_proposal_contract_else_body@3",
      "stack_out": [
        "size#0"
      ]
    },
    "564": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "565": {
      "op": "bytec 8 // 0x7061",
      "stack_out": [
        "tmp%1#0",
        "0x7061"
      ]
    },
    "567": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%1#0"
      ]
    },
    "568": {
      "op": "box_resize",
      "stack_out": []
    },
    "569": {
      "block": "init_proposal_contract_after_if_else@4",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "570": {
      "op": "return",
      "stack_out": []
    },
    "571": {
      "block": "init_proposal_contract_else_body@3",
      "stack_in": [
        "size#0"
      ],
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "572": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x7061"
      ]
    },
    "574": {
      "op": "swap",
      "stack_out": [
        "0x7061",
        "tmp%2#0"
      ]
    },
    "575": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "576": {
      "op": "pop",
      "stack_out": []
    },
    "577": {
      "op": "b init_proposal_contract_after_if_else@4"
    },
    "580": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.load_proposal_contract[routing]",
      "params": {},
      "block": "load_proposal_contract",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "offset#0"
      ],
      "stack_out": [
        "offset#0"
      ]
    },
    "583": {
      "op": "dup",
      "defined_out": [
        "offset#0",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "offset#0",
        "offset#0 (copy)"
      ]
    },
    "584": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "len%0#0"
      ]
    },
    "585": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "len%0#0",
        "8"
      ]
    },
    "586": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "eq%0#0"
      ]
    },
    "587": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "offset#0"
      ]
    },
    "588": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0"
      ]
    },
    "591": {
      "op": "dup",
      "defined_out": [
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "592": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "0"
      ]
    },
    "593": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "594": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "596": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "add%0#0"
      ]
    },
    "597": {
      "op": "dig 1",
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "add%0#0",
        "tmp%1#0 (copy)"
      ]
    },
    "599": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "len%1#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "add%0#0",
        "len%1#0"
      ]
    },
    "600": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "offset#0",
        "tmp%1#0",
        "eq%1#0"
      ]
    },
    "601": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "offset#0",
        "tmp%1#0"
      ]
    },
    "602": {
      "op": "extract 2 0",
      "defined_out": [
        "data#0",
        "offset#0"
      ],
      "stack_out": [
        "offset#0",
        "data#0"
      ]
    },
    "605": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "data#0",
        "offset#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "offset#0",
        "data#0",
        "tmp%0#1"
      ]
    },
    "608": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "offset#0",
        "data#0"
      ]
    },
    "609": {
      "op": "swap",
      "stack_out": [
        "data#0",
        "offset#0"
      ]
    },
    "610": {
      "op": "btoi",
      "defined_out": [
        "data#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "data#0",
        "tmp%1#1"
      ]
    },
    "611": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "data#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "data#0",
        "tmp%1#1",
        "0x7061"
      ]
    },
    "613": {
      "op": "swap",
      "stack_out": [
        "data#0",
        "0x7061",
        "tmp%1#1"
      ]
    },
    "614": {
      "op": "uncover 2",
      "stack_out": [
        "0x7061",
        "tmp%1#1",
        "data#0"
      ]
    },
    "616": {
      "op": "box_replace",
      "stack_out": []
    },
    "617": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "618": {
      "op": "return",
      "stack_out": []
    },
    "619": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.delete_proposal_contract_box[routing]",
      "params": {},
      "block": "delete_proposal_contract_box",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "622": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "623": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061"
      ],
      "stack_out": [
        "0x7061"
      ]
    },
    "625": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "626": {
      "op": "pop",
      "stack_out": []
    },
    "627": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "628": {
      "op": "return",
      "stack_out": []
    },
    "629": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_registry[routing]",
      "params": {},
      "block": "pause_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "632": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "633": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "634": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "1"
      ]
    },
    "635": {
      "op": "app_global_put",
      "stack_out": []
    },
    "636": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "637": {
      "op": "return",
      "stack_out": []
    },
    "638": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pause_proposals[routing]",
      "params": {},
      "block": "pause_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "641": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "642": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "644": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "1"
      ]
    },
    "645": {
      "op": "app_global_put",
      "stack_out": []
    },
    "646": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "647": {
      "op": "return",
      "stack_out": []
    },
    "648": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_registry[routing]",
      "params": {},
      "block": "resume_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "651": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "652": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "653": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279",
        "0"
      ]
    },
    "654": {
      "op": "app_global_put",
      "stack_out": []
    },
    "655": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "656": {
      "op": "return",
      "stack_out": []
    },
    "657": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.resume_proposals[routing]",
      "params": {},
      "block": "resume_proposals",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "660": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "661": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "663": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73"
      ],
      "stack_out": [
        "0x7061757365645f70726f706f73616c73",
        "0"
      ]
    },
    "664": {
      "op": "app_global_put",
      "stack_out": []
    },
    "665": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "666": {
      "op": "return",
      "stack_out": []
    },
    "667": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager[routing]",
      "params": {},
      "block": "set_xgov_manager",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "manager#0"
      ],
      "stack_out": [
        "manager#0"
      ]
    },
    "670": {
      "op": "dup",
      "defined_out": [
        "manager#0",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "manager#0",
        "manager#0 (copy)"
      ]
    },
    "671": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0"
      ]
    },
    "672": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0",
        "32"
      ]
    },
    "673": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "eq%0#0"
      ]
    },
    "674": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "manager#0"
      ]
    },
    "675": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "manager#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "manager#0",
        "tmp%0#1"
      ]
    },
    "678": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "manager#0"
      ]
    },
    "679": {
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "681": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "manager#0"
      ]
    },
    "682": {
      "op": "app_global_put",
      "stack_out": []
    },
    "683": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "684": {
      "op": "return",
      "stack_out": []
    },
    "685": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor[routing]",
      "params": {},
      "block": "set_payor",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "payor#0"
      ],
      "stack_out": [
        "payor#0"
      ]
    },
    "688": {
      "op": "dup",
      "defined_out": [
        "payor#0",
        "payor#0 (copy)"
      ],
      "stack_out": [
        "payor#0",
        "payor#0 (copy)"
      ]
    },
    "689": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "len%0#0"
      ]
    },
    "690": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "len%0#0",
        "32"
      ]
    },
    "691": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "eq%0#0"
      ]
    },
    "692": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "payor#0"
      ]
    },
    "693": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "payor#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payor#0",
        "tmp%0#1"
      ]
    },
    "696": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "payor#0"
      ]
    },
    "697": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72",
        "payor#0"
      ],
      "stack_out": [
        "payor#0",
        "0x78676f765f7061796f72"
      ]
    },
    "699": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f7061796f72",
        "payor#0"
      ]
    },
    "700": {
      "op": "app_global_put",
      "stack_out": []
    },
    "701": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "702": {
      "op": "return",
      "stack_out": []
    },
    "703": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_council[routing]",
      "params": {},
      "block": "set_xgov_council",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "council#0"
      ],
      "stack_out": [
        "council#0"
      ]
    },
    "706": {
      "op": "dup",
      "defined_out": [
        "council#0",
        "council#0 (copy)"
      ],
      "stack_out": [
        "council#0",
        "council#0 (copy)"
      ]
    },
    "707": {
      "op": "len",
      "defined_out": [
        "council#0",
        "len%0#0"
      ],
      "stack_out": [
        "council#0",
        "len%0#0"
      ]
    },
    "708": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "council#0",
        "len%0#0"
      ],
      "stack_out": [
        "council#0",
        "len%0#0",
        "32"
      ]
    },
    "709": {
      "op": "==",
      "defined_out": [
        "council#0",
        "eq%0#0"
      ],
      "stack_out": [
        "council#0",
        "eq%0#0"
      ]
    },
    "710": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "council#0"
      ]
    },
    "711": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "council#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "council#0",
        "tmp%0#1"
      ]
    },
    "714": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "council#0"
      ]
    },
    "715": {
      "op": "bytec 23 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "council#0"
      ],
      "stack_out": [
        "council#0",
        "0x78676f765f636f756e63696c"
      ]
    },
    "717": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f636f756e63696c",
        "council#0"
      ]
    },
    "718": {
      "op": "app_global_put",
      "stack_out": []
    },
    "719": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "720": {
      "op": "return",
      "stack_out": []
    },
    "721": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber[routing]",
      "params": {},
      "block": "set_xgov_subscriber",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0"
      ]
    },
    "724": {
      "op": "dup",
      "defined_out": [
        "subscriber#0",
        "subscriber#0 (copy)"
      ],
      "stack_out": [
        "subscriber#0",
        "subscriber#0 (copy)"
      ]
    },
    "725": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "len%0#0"
      ]
    },
    "726": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "len%0#0",
        "32"
      ]
    },
    "727": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "eq%0#0"
      ]
    },
    "728": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "subscriber#0"
      ]
    },
    "729": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "subscriber#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "subscriber#0",
        "tmp%0#1"
      ]
    },
    "732": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "subscriber#0"
      ]
    },
    "733": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0"
      ],
      "stack_out": [
        "subscriber#0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "735": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0"
      ]
    },
    "736": {
      "op": "app_global_put",
      "stack_out": []
    },
    "737": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "738": {
      "op": "return",
      "stack_out": []
    },
    "739": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider[routing]",
      "params": {},
      "block": "set_kyc_provider",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "provider#0"
      ],
      "stack_out": [
        "provider#0"
      ]
    },
    "742": {
      "op": "dup",
      "defined_out": [
        "provider#0",
        "provider#0 (copy)"
      ],
      "stack_out": [
        "provider#0",
        "provider#0 (copy)"
      ]
    },
    "743": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "len%0#0"
      ]
    },
    "744": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "len%0#0",
        "32"
      ]
    },
    "745": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "eq%0#0"
      ]
    },
    "746": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "provider#0"
      ]
    },
    "747": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "provider#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "provider#0",
        "tmp%0#1"
      ]
    },
    "750": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "provider#0"
      ]
    },
    "751": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "provider#0"
      ],
      "stack_out": [
        "provider#0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "753": {
      "op": "swap",
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "provider#0"
      ]
    },
    "754": {
      "op": "app_global_put",
      "stack_out": []
    },
    "755": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "756": {
      "op": "return",
      "stack_out": []
    },
    "757": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager[routing]",
      "params": {},
      "block": "set_committee_manager",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "manager#0"
      ],
      "stack_out": [
        "manager#0"
      ]
    },
    "760": {
      "op": "dup",
      "defined_out": [
        "manager#0",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "manager#0",
        "manager#0 (copy)"
      ]
    },
    "761": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0"
      ]
    },
    "762": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "len%0#0",
        "32"
      ]
    },
    "763": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "eq%0#0"
      ]
    },
    "764": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "manager#0"
      ]
    },
    "765": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "manager#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "manager#0",
        "tmp%0#1"
      ]
    },
    "768": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "manager#0"
      ]
    },
    "769": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0"
      ],
      "stack_out": [
        "manager#0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "771": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0"
      ]
    },
    "772": {
      "op": "app_global_put",
      "stack_out": []
    },
    "773": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "774": {
      "op": "return",
      "stack_out": []
    },
    "775": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_daemon[routing]",
      "params": {},
      "block": "set_xgov_daemon",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0"
      ]
    },
    "778": {
      "op": "dup",
      "defined_out": [
        "xgov_daemon#0",
        "xgov_daemon#0 (copy)"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "xgov_daemon#0 (copy)"
      ]
    },
    "779": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "len%0#0"
      ]
    },
    "780": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "len%0#0",
        "32"
      ]
    },
    "781": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "eq%0#0"
      ]
    },
    "782": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_daemon#0"
      ]
    },
    "783": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#1",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "tmp%0#1"
      ]
    },
    "786": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_daemon#0"
      ]
    },
    "787": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0"
      ],
      "stack_out": [
        "xgov_daemon#0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "789": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f6461656d6f6e",
        "xgov_daemon#0"
      ]
    },
    "790": {
      "op": "app_global_put",
      "stack_out": []
    },
    "791": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "792": {
      "op": "return",
      "stack_out": []
    },
    "793": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry[routing]",
      "params": {},
      "block": "config_xgov_registry",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0"
      ]
    },
    "794": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0"
      ]
    },
    "796": {
      "op": "dupn 3",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "798": {
      "op": "txna ApplicationArgs 1"
    },
    "801": {
      "op": "dupn 2",
      "defined_out": [
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "803": {
      "op": "len",
      "defined_out": [
        "config#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "len%0#0"
      ]
    },
    "804": {
      "op": "pushint 184 // 184",
      "defined_out": [
        "184",
        "config#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "len%0#0",
        "184"
      ]
    },
    "807": {
      "op": "==",
      "defined_out": [
        "config#0",
        "eq%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "eq%0#0"
      ]
    },
    "808": {
      "error": "invalid number of bytes for smart_contracts.common.abi_types.XGovRegistryConfig",
      "op": "assert // invalid number of bytes for smart_contracts.common.abi_types.XGovRegistryConfig",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0"
      ]
    },
    "809": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "config#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "tmp%0#1"
      ]
    },
    "812": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0"
      ]
    },
    "813": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "0"
      ]
    },
    "814": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "config#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "816": {
      "op": "app_global_get_ex",
      "defined_out": [
        "config#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "817": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "maybe_value%0#0"
      ]
    },
    "818": {
      "op": "!",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "tmp%0#1"
      ]
    },
    "819": {
      "error": "Cannot perform operation with pending proposals",
      "op": "assert // Cannot perform operation with pending proposals",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0"
      ]
    },
    "820": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "config#0",
        "0"
      ]
    },
    "821": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "822": {
      "op": "dup",
      "defined_out": [
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "823": {
      "op": "pushint 38100 // 38100",
      "defined_out": [
        "38100",
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0",
        "38100"
      ]
    },
    "827": {
      "op": ">=",
      "defined_out": [
        "config#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "828": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "831": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0"
      ]
    },
    "832": {
      "op": "pushint 34900 // 34900",
      "defined_out": [
        "34900",
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%8#0",
        "34900"
      ]
    },
    "836": {
      "op": ">=",
      "defined_out": [
        "config#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%11#0"
      ]
    },
    "837": {
      "op": "bz config_xgov_registry_bool_false@4",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "840": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "config#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%0#0"
      ]
    },
    "841": {
      "error": "Invalid xGov fee",
      "block": "config_xgov_registry_bool_merge@5",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%0#0"
      ],
      "op": "assert // Invalid xGov fee",
      "defined_out": [],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "842": {
      "op": "dig 1",
      "defined_out": [
        "config#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "844": {
      "op": "dup",
      "defined_out": [
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "845": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "8"
      ]
    },
    "846": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0"
      ]
    },
    "847": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "848": {
      "op": "bury 6",
      "defined_out": [
        "config#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0"
      ]
    },
    "850": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "config#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%12#0",
        "19300"
      ]
    },
    "852": {
      "op": ">=",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%13#0"
      ]
    },
    "853": {
      "error": "Invalid proposer fee",
      "op": "assert // Invalid proposer fee",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "854": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "855": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "config#0",
        "config#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "40"
      ]
    },
    "857": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%14#0"
      ]
    },
    "858": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "859": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "config#0",
        "tmp%14#0"
      ]
    },
    "861": {
      "op": "bury 5",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "config#0"
      ]
    },
    "863": {
      "op": "extract 48 24",
      "defined_out": [
        "aggregate%extract%3#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0"
      ]
    },
    "866": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0"
      ]
    },
    "867": {
      "op": "bury 9",
      "defined_out": [
        "aggregate%extract%3#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0"
      ]
    },
    "869": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "aggregate%extract%3#0",
        "0"
      ]
    },
    "870": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "871": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "872": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "874": {
      "op": "<",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%15#0"
      ]
    },
    "875": {
      "op": "bz config_xgov_registry_bool_false@9",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "878": {
      "op": "dig 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0"
      ]
    },
    "880": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0",
        "8"
      ]
    },
    "881": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0"
      ]
    },
    "882": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "883": {
      "op": "bury 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0"
      ]
    },
    "885": {
      "op": "dig 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "887": {
      "op": ">",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%16#0"
      ]
    },
    "888": {
      "op": "bz config_xgov_registry_bool_false@9",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "891": {
      "op": "dig 6",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0"
      ]
    },
    "893": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%3#0",
        "16"
      ]
    },
    "895": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%17#0"
      ]
    },
    "896": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%17#0",
        "awst_tmp%1#0"
      ]
    },
    "898": {
      "op": ">",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%18#0"
      ]
    },
    "899": {
      "op": "bz config_xgov_registry_bool_false@9",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "902": {
      "op": "intc_1 // 1",
      "defined_out": [
        "aggregate%extract%3#0",
        "and_result%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%1#0"
      ]
    },
    "903": {
      "error": "Inconsistent requested amount config",
      "block": "config_xgov_registry_bool_merge@10",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%1#0"
      ],
      "op": "assert // Inconsistent requested amount config",
      "defined_out": [],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "904": {
      "op": "dig 1",
      "defined_out": [
        "config#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "906": {
      "op": "dup",
      "defined_out": [
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "907": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "config#0",
        "config#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "16"
      ]
    },
    "909": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0"
      ]
    },
    "910": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "config#0 (copy)"
      ]
    },
    "912": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "config#0",
        "config#0 (copy)",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "config#0 (copy)",
        "24"
      ]
    },
    "914": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "915": {
      "op": "dup2",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding_bps#0 (copy)",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "daemon_ops_funding_bps#0 (copy)"
      ]
    },
    "916": {
      "op": "*",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#3"
      ]
    },
    "917": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%0#3",
        "10000"
      ]
    },
    "920": {
      "op": "/",
      "defined_out": [
        "config#0",
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0"
      ]
    },
    "921": {
      "op": "pushint 16835300 // 16835300",
      "defined_out": [
        "16835300",
        "config#0",
        "daemon_ops_funding#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "daemon_ops_funding#0",
        "16835300"
      ]
    },
    "926": {
      "op": "+",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "to_substract#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "927": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "929": {
      "op": "dig 1",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0",
        "to_substract#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0 (copy)"
      ]
    },
    "931": {
      "op": ">",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%2#1",
        "to_substract#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "tmp%2#1"
      ]
    },
    "932": {
      "error": "Invalid open proposal fee",
      "op": "assert // Invalid open proposal fee",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0"
      ]
    },
    "933": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "to_substract#0",
        "open_proposal_fee#0 (copy)"
      ]
    },
    "935": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0 (copy)",
        "to_substract#0"
      ]
    },
    "936": {
      "op": "-",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0"
      ]
    },
    "937": {
      "op": "intc 4 // 19300",
      "defined_out": [
        "19300",
        "config#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "mbr_available_for_committee#0",
        "19300"
      ]
    },
    "939": {
      "op": "/",
      "defined_out": [
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%6#1"
      ]
    },
    "940": {
      "op": "bytec 48 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0x6d61785f636f6d6d69747465655f73697a65",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%6#1",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "942": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "tmp%6#1"
      ]
    },
    "943": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "944": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565"
      ]
    },
    "946": {
      "op": "dig 4",
      "defined_out": [
        "0x78676f765f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f666565",
        "tmp%8#0"
      ]
    },
    "948": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "949": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565"
      ]
    },
    "951": {
      "op": "dig 7",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x70726f706f7365725f666565",
        "tmp%12#0"
      ]
    },
    "953": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "954": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "config#0",
        "daemon_ops_funding_bps#0",
        "open_proposal_fee#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "956": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "daemon_ops_funding_bps#0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "open_proposal_fee#0"
      ]
    },
    "958": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "959": {
      "op": "bytec 24 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "config#0",
        "daemon_ops_funding_bps#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "daemon_ops_funding_bps#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "961": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "daemon_ops_funding_bps#0"
      ]
    },
    "962": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "963": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "964": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "config#0",
        "config#0 (copy)",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)",
        "32"
      ]
    },
    "965": {
      "op": "extract_uint64",
      "defined_out": [
        "config#0",
        "tmp%12#0",
        "tmp%25#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%25#0"
      ]
    },
    "966": {
      "op": "bytec 25 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "config#0",
        "tmp%12#0",
        "tmp%25#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%25#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "968": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "tmp%25#0"
      ]
    },
    "969": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "970": {
      "op": "bytec 26 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "config#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "972": {
      "op": "dig 4",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "tmp%14#0"
      ]
    },
    "974": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "975": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "977": {
      "op": "dig 7",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "awst_tmp%0#0"
      ]
    },
    "979": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "980": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0"
      ]
    },
    "982": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)"
      ]
    },
    "983": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "aggregate%extract%3#0 (copy)",
        "8"
      ]
    },
    "984": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%28#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "tmp%28#0"
      ]
    },
    "985": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%28#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "tmp%28#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "987": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "tmp%28#0"
      ]
    },
    "988": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0"
      ]
    },
    "989": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%3#0",
        "16"
      ]
    },
    "991": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%29#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%29#0"
      ]
    },
    "992": {
      "op": "bytec 29 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%29#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%29#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "994": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "tmp%29#0"
      ]
    },
    "995": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "996": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "997": {
      "op": "extract 72 32",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "1000": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)"
      ]
    },
    "1001": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "0"
      ]
    },
    "1002": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%30#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%30#0"
      ]
    },
    "1003": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%30#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%30#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1005": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "tmp%30#0"
      ]
    },
    "1006": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "1007": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)"
      ]
    },
    "1008": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "8"
      ]
    },
    "1009": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%31#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%31#0"
      ]
    },
    "1010": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%31#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%31#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1012": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "tmp%31#0"
      ]
    },
    "1013": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "1014": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)"
      ]
    },
    "1015": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "aggregate%extract%11#0 (copy)",
        "16"
      ]
    },
    "1017": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%32#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%32#0"
      ]
    },
    "1018": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "aggregate%extract%11#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%32#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "tmp%32#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1020": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "tmp%32#0"
      ]
    },
    "1021": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0"
      ]
    },
    "1022": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%11#0",
        "24"
      ]
    },
    "1024": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%33#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%33#0"
      ]
    },
    "1025": {
      "op": "bytec 33 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%33#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%33#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "1027": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "tmp%33#0"
      ]
    },
    "1028": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "1029": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "1030": {
      "op": "extract 104 32",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1033": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)"
      ]
    },
    "1034": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "0"
      ]
    },
    "1035": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%34#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%34#0"
      ]
    },
    "1036": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%34#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%34#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "1038": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "tmp%34#0"
      ]
    },
    "1039": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1040": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)"
      ]
    },
    "1041": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "8"
      ]
    },
    "1042": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%35#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%35#0"
      ]
    },
    "1043": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%35#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%35#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "1045": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "tmp%35#0"
      ]
    },
    "1046": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1047": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)"
      ]
    },
    "1048": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "aggregate%extract%15#0 (copy)",
        "16"
      ]
    },
    "1050": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%36#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%36#0"
      ]
    },
    "1051": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "aggregate%extract%15#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%36#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "tmp%36#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "1053": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "tmp%36#0"
      ]
    },
    "1054": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0"
      ]
    },
    "1055": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%15#0",
        "24"
      ]
    },
    "1057": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%37#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%37#0"
      ]
    },
    "1058": {
      "op": "bytec 37 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%37#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%37#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "1060": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "tmp%37#0"
      ]
    },
    "1061": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "1062": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "config#0 (copy)"
      ]
    },
    "1063": {
      "op": "extract 136 24",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0"
      ]
    },
    "1066": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)"
      ]
    },
    "1067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)",
        "0"
      ]
    },
    "1068": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%38#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%38#0"
      ]
    },
    "1069": {
      "op": "bytec 38 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%38#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%38#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "1071": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "0x71756f72756d5f736d616c6c",
        "tmp%38#0"
      ]
    },
    "1072": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0"
      ]
    },
    "1073": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)"
      ]
    },
    "1074": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "aggregate%extract%19#0 (copy)",
        "8"
      ]
    },
    "1075": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%39#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%39#0"
      ]
    },
    "1076": {
      "op": "bytec 39 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "aggregate%extract%19#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%39#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "tmp%39#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "1078": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "0x71756f72756d5f6d656469756d",
        "tmp%39#0"
      ]
    },
    "1079": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0"
      ]
    },
    "1080": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "aggregate%extract%19#0",
        "16"
      ]
    },
    "1082": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%40#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%40#0"
      ]
    },
    "1083": {
      "op": "bytec 40 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%40#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "tmp%40#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "1085": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0",
        "0x71756f72756d5f6c61726765",
        "tmp%40#0"
      ]
    },
    "1086": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "config#0"
      ]
    },
    "1087": {
      "op": "extract 160 24",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0"
      ]
    },
    "1090": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)"
      ]
    },
    "1091": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)",
        "0"
      ]
    },
    "1092": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%41#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%41#0"
      ]
    },
    "1093": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%41#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%41#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "1095": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "tmp%41#0"
      ]
    },
    "1096": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0"
      ]
    },
    "1097": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)"
      ]
    },
    "1098": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "aggregate%extract%22#0 (copy)",
        "8"
      ]
    },
    "1099": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%42#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%42#0"
      ]
    },
    "1100": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "aggregate%extract%22#0",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%42#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "tmp%42#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "1102": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "tmp%42#0"
      ]
    },
    "1103": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0"
      ]
    },
    "1104": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "aggregate%extract%22#0",
        "16"
      ]
    },
    "1106": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%43#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%43#0"
      ]
    },
    "1107": {
      "op": "bytec 43 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%43#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "tmp%43#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "1109": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "tmp%43#0"
      ]
    },
    "1110": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "1111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "config#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1112": {
      "op": "return",
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ]
    },
    "1113": {
      "block": "config_xgov_registry_bool_false@9",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%1#0"
      ]
    },
    "1114": {
      "op": "b config_xgov_registry_bool_merge@10"
    },
    "1117": {
      "block": "config_xgov_registry_bool_false@4",
      "stack_in": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "aggregate%extract%3#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%12#0",
        "tmp%14#0",
        "config#0",
        "tmp%8#0",
        "and_result%0#0"
      ]
    },
    "1118": {
      "op": "b config_xgov_registry_bool_merge@5"
    },
    "1121": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry[routing]",
      "params": {},
      "block": "update_xgov_registry",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1124": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1125": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1126": {
      "op": "return",
      "stack_out": []
    },
    "1127": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov[routing]",
      "params": {},
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0"
      ]
    },
    "1130": {
      "op": "dup",
      "defined_out": [
        "voting_address#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "voting_address#0",
        "voting_address#0 (copy)"
      ]
    },
    "1131": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "len%0#0"
      ]
    },
    "1132": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1133": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "eq%0#0"
      ]
    },
    "1134": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "voting_address#0"
      ]
    },
    "1135": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "tmp%1#0"
      ]
    },
    "1137": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "tmp%1#0",
        "1"
      ]
    },
    "1138": {
      "op": "-",
      "defined_out": [
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1139": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1140": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1142": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1143": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1144": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0"
      ]
    },
    "1146": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1147": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1148": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1149": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%0#1",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1150": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1151": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0x78"
      ]
    },
    "1152": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "0x78",
        "materialized_values%0#0"
      ]
    },
    "1154": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1155": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "payment#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1156": {
      "op": "bury 1",
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1158": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%1#1",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1159": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": [
        "voting_address#0",
        "payment#0"
      ]
    },
    "1160": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0",
        "voting_address#0"
      ],
      "stack_out": [
        "voting_address#0",
        "tmp%2#0"
      ]
    },
    "1163": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "voting_address#0"
      ]
    },
    "1164": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1167": {
      "op": "bytec_1 // 0x78",
      "stack_out": [
        "tmp%3#0",
        "0x78"
      ]
    },
    "1168": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x78",
        "materialized_values%1#0"
      ]
    },
    "1170": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1171": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "tmp%3#0"
      ]
    },
    "1172": {
      "op": "box_put",
      "stack_out": []
    },
    "1173": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1174": {
      "op": "bytec 4 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1176": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1177": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1178": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1179": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1180": {
      "op": "bytec 4 // 0x78676f7673",
      "stack_out": [
        "tmp%4#0",
        "0x78676f7673"
      ]
    },
    "1182": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "tmp%4#0"
      ]
    },
    "1183": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1184": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1185": {
      "op": "return",
      "stack_out": []
    },
    "1186": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov[routing]",
      "params": {},
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1187": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1188": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1189": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1190": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1191": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1192": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "1193": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x78",
        "materialized_values%0#0"
      ]
    },
    "1195": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1196": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1197": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "1199": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1200": {
      "op": "bytec_1 // 0x78",
      "stack_out": [
        "0x78"
      ]
    },
    "1201": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x78",
        "materialized_values%1#0"
      ]
    },
    "1203": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1204": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1205": {
      "op": "pop",
      "stack_out": []
    },
    "1206": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1207": {
      "op": "bytec 4 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "1209": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1210": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1211": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "1212": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1213": {
      "op": "bytec 4 // 0x78676f7673",
      "stack_out": [
        "tmp%1#0",
        "0x78676f7673"
      ]
    },
    "1215": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "tmp%1#0"
      ]
    },
    "1216": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1217": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1218": {
      "op": "return",
      "stack_out": []
    },
    "1219": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov[routing]",
      "params": {},
      "block": "request_subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "1222": {
      "op": "dup",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1223": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "1224": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1225": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "1226": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "1227": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1230": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "owner_address#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "owner_address#0 (copy)"
      ]
    },
    "1231": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "len%1#0"
      ]
    },
    "1232": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "len%1#0",
        "32"
      ]
    },
    "1233": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "eq%1#0"
      ]
    },
    "1234": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1235": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1238": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "relation_type#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "relation_type#0 (copy)"
      ]
    },
    "1239": {
      "op": "len",
      "defined_out": [
        "len%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "len%2#0"
      ]
    },
    "1240": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "len%2#0",
        "8"
      ]
    },
    "1241": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "eq%2#0"
      ]
    },
    "1242": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1243": {
      "op": "txn GroupIndex",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0"
      ]
    },
    "1245": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "1"
      ]
    },
    "1246": {
      "op": "-",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1247": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "payment#0 (copy)",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1248": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1250": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "owner_address#0",
        "pay",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1251": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1252": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1253": {
      "op": "txn Sender",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%0#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1255": {
      "op": "dig 3",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%0#1",
        "owner_address#0 (copy)"
      ]
    },
    "1257": {
      "op": "==",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1258": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1259": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0"
      ]
    },
    "1260": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1261": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1262": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1263": {
      "op": "!",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%2#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%2#1"
      ]
    },
    "1264": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1265": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0x78"
      ]
    },
    "1266": {
      "op": "dig 4",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1268": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1269": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1270": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1272": {
      "op": "!",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%3#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%3#1"
      ]
    },
    "1273": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1274": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "tmp%4#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%4#0"
      ]
    },
    "1277": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1278": {
      "op": "intc_0 // 0",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "0"
      ]
    },
    "1279": {
      "op": "bytec 46 // 0x726571756573745f6964",
      "defined_out": [
        "0",
        "0x726571756573745f6964",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "0",
        "0x726571756573745f6964"
      ]
    },
    "1281": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "owner_address#0",
        "relation_type#0",
        "rid#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "rid#0",
        "maybe_exists%2#0"
      ]
    },
    "1282": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "rid#0"
      ]
    },
    "1283": {
      "op": "uncover 3",
      "stack_out": [
        "owner_address#0",
        "relation_type#0",
        "rid#0",
        "xgov_address#0"
      ]
    },
    "1285": {
      "op": "uncover 3",
      "stack_out": [
        "relation_type#0",
        "rid#0",
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1287": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "relation_type#0",
        "rid#0"
      ],
      "stack_out": [
        "relation_type#0",
        "rid#0",
        "aggregate%head%1#0"
      ]
    },
    "1288": {
      "op": "uncover 2",
      "stack_out": [
        "rid#0",
        "aggregate%head%1#0",
        "relation_type#0"
      ]
    },
    "1290": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0"
      ]
    },
    "1291": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%2#0",
        "rid#0",
        "rid#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "rid#0 (copy)"
      ]
    },
    "1293": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "encoded_value%0#0"
      ]
    },
    "1294": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1296": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1297": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "box_prefixed_key%1#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "aggregate%head%2#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1298": {
      "op": "swap",
      "stack_out": [
        "rid#0",
        "box_prefixed_key%1#0",
        "aggregate%head%2#0"
      ]
    },
    "1299": {
      "op": "box_put",
      "stack_out": [
        "rid#0"
      ]
    },
    "1300": {
      "op": "intc_1 // 1",
      "stack_out": [
        "rid#0",
        "1"
      ]
    },
    "1301": {
      "op": "+",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1302": {
      "op": "bytec 46 // 0x726571756573745f6964",
      "stack_out": [
        "tmp%6#0",
        "0x726571756573745f6964"
      ]
    },
    "1304": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f6964",
        "tmp%6#0"
      ]
    },
    "1305": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1306": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1307": {
      "op": "return",
      "stack_out": []
    },
    "1308": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov[routing]",
      "params": {},
      "block": "approve_subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0"
      ]
    },
    "1311": {
      "op": "dup",
      "defined_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ]
    },
    "1312": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0"
      ]
    },
    "1313": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1314": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "eq%0#0"
      ]
    },
    "1315": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1316": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "request_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "request_id#0",
        "tmp%0#1"
      ]
    },
    "1319": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1320": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1321": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1322": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1324": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1325": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1326": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1327": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1328": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0"
      ]
    },
    "1329": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "1330": {
      "op": "extract 32 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "aggregate%extract%0#0"
      ]
    },
    "1333": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "op": "callsub make_xgov_box",
      "defined_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "tmp%1#0"
      ]
    },
    "1336": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "request#0"
      ]
    },
    "1337": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "1340": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "aggregate%extract%1#0",
        "0x78"
      ]
    },
    "1341": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "0x78",
        "aggregate%extract%1#0"
      ]
    },
    "1342": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1343": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%1#0"
      ]
    },
    "1344": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1345": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1346": {
      "op": "bytec 4 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "0x78676f7673"
      ]
    },
    "1348": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1349": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1350": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1351": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1352": {
      "op": "bytec 4 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "0x78676f7673"
      ]
    },
    "1354": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x78676f7673",
        "tmp%2#0"
      ]
    },
    "1355": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1356": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1357": {
      "op": "pop",
      "stack_out": []
    },
    "1358": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1359": {
      "op": "return",
      "stack_out": []
    },
    "1360": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov[routing]",
      "params": {},
      "block": "reject_subscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0"
      ]
    },
    "1363": {
      "op": "dup",
      "defined_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ]
    },
    "1364": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0"
      ]
    },
    "1365": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1366": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "eq%0#0"
      ]
    },
    "1367": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1368": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "request_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "request_id#0",
        "tmp%0#1"
      ]
    },
    "1371": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "request_id#0"
      ]
    },
    "1372": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1373": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1374": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "1376": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "1377": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1378": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1379": {
      "op": "pop",
      "stack_out": []
    },
    "1380": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1381": {
      "op": "return",
      "stack_out": []
    },
    "1382": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_unsubscribe_xgov[routing]",
      "params": {},
      "block": "request_unsubscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "1385": {
      "op": "dup",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1386": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "1387": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1388": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "1389": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "1390": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1393": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "owner_address#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "owner_address#0 (copy)"
      ]
    },
    "1394": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "len%1#0"
      ]
    },
    "1395": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "len%1#0",
        "32"
      ]
    },
    "1396": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "owner_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "eq%1#0"
      ]
    },
    "1397": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1398": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1401": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "relation_type#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "relation_type#0 (copy)"
      ]
    },
    "1402": {
      "op": "len",
      "defined_out": [
        "len%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "len%2#0"
      ]
    },
    "1403": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "len%2#0",
        "8"
      ]
    },
    "1404": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "eq%2#0"
      ]
    },
    "1405": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1406": {
      "op": "txn GroupIndex",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0"
      ]
    },
    "1408": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#0",
        "1"
      ]
    },
    "1409": {
      "op": "-",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1410": {
      "op": "dup",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "payment#0 (copy)",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1411": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1413": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "owner_address#0",
        "pay",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1414": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1415": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1416": {
      "op": "txn Sender",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%0#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1418": {
      "op": "dig 3",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%0#1",
        "owner_address#0 (copy)"
      ]
    },
    "1420": {
      "op": "==",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1421": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1422": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0"
      ]
    },
    "1423": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1424": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1425": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1426": {
      "op": "!",
      "defined_out": [
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "tmp%2#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "tmp%2#1"
      ]
    },
    "1427": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1428": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0x78"
      ]
    },
    "1429": {
      "op": "dig 4",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "1431": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1432": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "owner_address#0",
        "payment#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1433": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1435": {
      "error": "Not an xGov",
      "op": "assert // Not an xGov",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "payment#0"
      ]
    },
    "1436": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "owner_address#0",
        "relation_type#0",
        "tmp%3#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "tmp%3#1"
      ]
    },
    "1439": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0"
      ]
    },
    "1440": {
      "op": "intc_0 // 0",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "0"
      ]
    },
    "1441": {
      "op": "bytec 47 // 0x726571756573745f756e7375627363726962655f6964",
      "defined_out": [
        "0",
        "0x726571756573745f756e7375627363726962655f6964",
        "owner_address#0",
        "relation_type#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "0",
        "0x726571756573745f756e7375627363726962655f6964"
      ]
    },
    "1443": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "owner_address#0",
        "relation_type#0",
        "ruid#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "ruid#0",
        "maybe_exists%2#0"
      ]
    },
    "1444": {
      "error": "check self.request_unsubscribe_id exists",
      "op": "assert // check self.request_unsubscribe_id exists",
      "stack_out": [
        "xgov_address#0",
        "owner_address#0",
        "relation_type#0",
        "ruid#0"
      ]
    },
    "1445": {
      "op": "uncover 3",
      "stack_out": [
        "owner_address#0",
        "relation_type#0",
        "ruid#0",
        "xgov_address#0"
      ]
    },
    "1447": {
      "op": "uncover 3",
      "stack_out": [
        "relation_type#0",
        "ruid#0",
        "xgov_address#0",
        "owner_address#0"
      ]
    },
    "1449": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "relation_type#0",
        "ruid#0"
      ],
      "stack_out": [
        "relation_type#0",
        "ruid#0",
        "aggregate%head%1#0"
      ]
    },
    "1450": {
      "op": "uncover 2",
      "stack_out": [
        "ruid#0",
        "aggregate%head%1#0",
        "relation_type#0"
      ]
    },
    "1452": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "ruid#0"
      ],
      "stack_out": [
        "ruid#0",
        "aggregate%head%2#0"
      ]
    },
    "1453": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%2#0",
        "ruid#0",
        "ruid#0 (copy)"
      ],
      "stack_out": [
        "ruid#0",
        "aggregate%head%2#0",
        "ruid#0 (copy)"
      ]
    },
    "1455": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "ruid#0"
      ],
      "stack_out": [
        "ruid#0",
        "aggregate%head%2#0",
        "encoded_value%0#0"
      ]
    },
    "1456": {
      "op": "bytec 21 // 0x7275",
      "defined_out": [
        "0x7275",
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "ruid#0"
      ],
      "stack_out": [
        "ruid#0",
        "aggregate%head%2#0",
        "encoded_value%0#0",
        "0x7275"
      ]
    },
    "1458": {
      "op": "swap",
      "stack_out": [
        "ruid#0",
        "aggregate%head%2#0",
        "0x7275",
        "encoded_value%0#0"
      ]
    },
    "1459": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "box_prefixed_key%1#0",
        "ruid#0"
      ],
      "stack_out": [
        "ruid#0",
        "aggregate%head%2#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1460": {
      "op": "swap",
      "stack_out": [
        "ruid#0",
        "box_prefixed_key%1#0",
        "aggregate%head%2#0"
      ]
    },
    "1461": {
      "op": "box_put",
      "stack_out": [
        "ruid#0"
      ]
    },
    "1462": {
      "op": "intc_1 // 1",
      "stack_out": [
        "ruid#0",
        "1"
      ]
    },
    "1463": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1464": {
      "op": "bytec 47 // 0x726571756573745f756e7375627363726962655f6964",
      "stack_out": [
        "tmp%5#0",
        "0x726571756573745f756e7375627363726962655f6964"
      ]
    },
    "1466": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f756e7375627363726962655f6964",
        "tmp%5#0"
      ]
    },
    "1467": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1468": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1469": {
      "op": "return",
      "stack_out": []
    },
    "1470": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_unsubscribe_xgov[routing]",
      "params": {},
      "block": "approve_unsubscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "1473": {
      "op": "dup",
      "defined_out": [
        "request_unsubscribe_id#0",
        "request_unsubscribe_id#0 (copy)"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "request_unsubscribe_id#0 (copy)"
      ]
    },
    "1474": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "len%0#0"
      ]
    },
    "1475": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1476": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "eq%0#0"
      ]
    },
    "1477": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "1478": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "request_unsubscribe_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "tmp%0#1"
      ]
    },
    "1481": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "1482": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1483": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1484": {
      "op": "bytec 21 // 0x7275",
      "defined_out": [
        "0x7275",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x7275"
      ]
    },
    "1486": {
      "op": "swap",
      "stack_out": [
        "0x7275",
        "encoded_value%0#0"
      ]
    },
    "1487": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1488": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1489": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "request#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1490": {
      "error": "check self.request_unsubscribe_box entry exists",
      "op": "assert // check self.request_unsubscribe_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "request#0"
      ]
    },
    "1491": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1494": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "0x78"
      ]
    },
    "1495": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x78",
        "aggregate%extract%0#0"
      ]
    },
    "1496": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1497": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1498": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1499": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1500": {
      "op": "bytec 4 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "0x78676f7673"
      ]
    },
    "1502": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1503": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ]
    },
    "1504": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1505": {
      "op": "-",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "1506": {
      "op": "bytec 4 // 0x78676f7673",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "0x78676f7673"
      ]
    },
    "1508": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x78676f7673",
        "tmp%1#0"
      ]
    },
    "1509": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1510": {
      "op": "box_del",
      "stack_out": [
        "{box_del}"
      ]
    },
    "1511": {
      "op": "pop",
      "stack_out": []
    },
    "1512": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1513": {
      "op": "return",
      "stack_out": []
    },
    "1514": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_unsubscribe_xgov[routing]",
      "params": {},
      "block": "reject_unsubscribe_xgov",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "1517": {
      "op": "dup",
      "defined_out": [
        "request_unsubscribe_id#0",
        "request_unsubscribe_id#0 (copy)"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "request_unsubscribe_id#0 (copy)"
      ]
    },
    "1518": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "len%0#0"
      ]
    },
    "1519": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1520": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "eq%0#0"
      ]
    },
    "1521": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "1522": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "request_unsubscribe_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "tmp%0#1"
      ]
    },
    "1525": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "1526": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "1527": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1528": {
      "op": "bytec 21 // 0x7275",
      "defined_out": [
        "0x7275",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x7275"
      ]
    },
    "1530": {
      "op": "swap",
      "stack_out": [
        "0x7275",
        "encoded_value%0#0"
      ]
    },
    "1531": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1532": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1533": {
      "op": "pop",
      "stack_out": []
    },
    "1534": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1535": {
      "op": "return",
      "stack_out": []
    },
    "1536": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account[routing]",
      "params": {},
      "block": "set_voting_account",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "1539": {
      "op": "dupn 2",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "1541": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "1542": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "1543": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "1544": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0"
      ]
    },
    "1545": {
      "op": "txna ApplicationArgs 2"
    },
    "1548": {
      "op": "dup",
      "defined_out": [
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0",
        "voting_address#0",
        "voting_address#0"
      ]
    },
    "1549": {
      "op": "cover 2",
      "defined_out": [
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "voting_address#0"
      ]
    },
    "1551": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "len%1#0"
      ]
    },
    "1552": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "len%1#0",
        "32"
      ]
    },
    "1553": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "eq%1#0"
      ]
    },
    "1554": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0"
      ]
    },
    "1555": {
      "op": "intc_0 // 0",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "0"
      ]
    },
    "1556": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1557": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1558": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "maybe_value%0#0"
      ]
    },
    "1559": {
      "op": "!",
      "defined_out": [
        "tmp%0#1",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "tmp%0#1"
      ]
    },
    "1560": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0"
      ]
    },
    "1561": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "xgov_address#0",
        "0x78"
      ]
    },
    "1562": {
      "op": "swap",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "0x78",
        "xgov_address#0"
      ]
    },
    "1563": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1564": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1566": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "exists#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "1567": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "1569": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1570": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "voting_address#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1571": {
      "op": "pop",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "1572": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "voting_address#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%1#1"
      ]
    },
    "1574": {
      "op": "swap",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "xgov_box#0"
      ]
    },
    "1575": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "aggregate%extract%0#0"
      ]
    },
    "1578": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%2#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1579": {
      "op": "bnz set_voting_account_bool_true@3",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1582": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "1584": {
      "op": "dig 3",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%3#0",
        "xgov_address#0"
      ]
    },
    "1586": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0",
        "voting_address#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "1587": {
      "op": "bz set_voting_account_bool_false@4",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1590": {
      "block": "set_voting_account_bool_true@3",
      "stack_in": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "1591": {
      "error": "Unauthorized",
      "block": "set_voting_account_bool_merge@5",
      "stack_in": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ],
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1592": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1593": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1594": {
      "op": "dig 3",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "0",
        "voting_address#0"
      ]
    },
    "1596": {
      "op": "box_replace",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1597": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "1"
      ]
    },
    "1598": {
      "op": "return",
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1599": {
      "block": "set_voting_account_bool_false@4",
      "stack_in": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "voting_address#0",
        "box_prefixed_key%0#0",
        "or_result%0#0"
      ]
    },
    "1600": {
      "op": "b set_voting_account_bool_merge@5"
    },
    "1603": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer[routing]",
      "params": {},
      "block": "subscribe_proposer",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1605": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1606": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "1607": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1608": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1610": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1611": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1612": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "1613": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "1614": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1615": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1616": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1617": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1618": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "payment#0"
      ]
    },
    "1619": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70"
      ]
    },
    "1620": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "1622": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1623": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1624": {
      "op": "bury 1",
      "stack_out": [
        "payment#0",
        "maybe_exists%1#0"
      ]
    },
    "1626": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%1#0"
      ]
    },
    "1627": {
      "error": "Already a proposer",
      "op": "assert // Already a proposer",
      "stack_out": [
        "payment#0"
      ]
    },
    "1628": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1629": {
      "op": "gtxns Receiver",
      "defined_out": [
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%2#0"
      ]
    },
    "1631": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "payment#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1633": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%4#0"
      ]
    },
    "1634": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "payment#0"
      ]
    },
    "1635": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1637": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1638": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1640": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1641": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "1642": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1643": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "1644": {
      "op": "bytec_3 // 0x70",
      "stack_out": [
        "0x70"
      ]
    },
    "1645": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "0x70",
        "materialized_values%1#0"
      ]
    },
    "1647": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1648": {
      "op": "pushbytes 0x000000000000000000",
      "defined_out": [
        "0x000000000000000000",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "0x000000000000000000"
      ]
    },
    "1659": {
      "op": "box_put",
      "stack_out": []
    },
    "1660": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1661": {
      "op": "return",
      "stack_out": []
    },
    "1662": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc[routing]",
      "params": {},
      "block": "set_proposer_kyc",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "1665": {
      "op": "dup",
      "defined_out": [
        "proposer#0",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "proposer#0",
        "proposer#0 (copy)"
      ]
    },
    "1666": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "len%0#0"
      ]
    },
    "1667": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "len%0#0",
        "32"
      ]
    },
    "1668": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "eq%0#0"
      ]
    },
    "1669": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposer#0"
      ]
    },
    "1670": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0"
      ]
    },
    "1673": {
      "op": "dup",
      "defined_out": [
        "kyc_status#0",
        "kyc_status#0 (copy)",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_status#0 (copy)"
      ]
    },
    "1674": {
      "op": "len",
      "defined_out": [
        "kyc_status#0",
        "len%1#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "len%1#0"
      ]
    },
    "1675": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "kyc_status#0",
        "len%1#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "len%1#0",
        "1"
      ]
    },
    "1676": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "eq%1#0"
      ]
    },
    "1677": {
      "error": "invalid number of bytes for arc4.bool",
      "op": "assert // invalid number of bytes for arc4.bool",
      "stack_out": [
        "proposer#0",
        "kyc_status#0"
      ]
    },
    "1678": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0"
      ]
    },
    "1681": {
      "op": "dup",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_expiring#0 (copy)",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "kyc_expiring#0 (copy)"
      ]
    },
    "1682": {
      "op": "len",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "len%2#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "len%2#0"
      ]
    },
    "1683": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "kyc_expiring#0",
        "kyc_status#0",
        "len%2#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "len%2#0",
        "8"
      ]
    },
    "1684": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "eq%2#0"
      ]
    },
    "1685": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0"
      ]
    },
    "1686": {
      "op": "txn Sender",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1"
      ]
    },
    "1688": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "0"
      ]
    },
    "1689": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "1691": {
      "op": "app_global_get_ex",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposer#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1692": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "1693": {
      "op": "==",
      "defined_out": [
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "tmp%1#1"
      ]
    },
    "1694": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0"
      ]
    },
    "1695": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "kyc_expiring#0",
        "kyc_status#0",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "kyc_status#0",
        "kyc_expiring#0",
        "0x70"
      ]
    },
    "1696": {
      "op": "uncover 3",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "0x70",
        "proposer#0"
      ]
    },
    "1698": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1699": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1700": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1701": {
      "op": "bury 1",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1703": {
      "error": "Proposer does not exist",
      "op": "assert // Proposer does not exist",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1704": {
      "op": "dup",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1705": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1706": {
      "op": "pop",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0"
      ]
    },
    "1707": {
      "op": "intc_0 // 0",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "0"
      ]
    },
    "1708": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1709": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "1711": {
      "op": "intc_0 // 0",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "1712": {
      "op": "uncover 2",
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1714": {
      "op": "setbit",
      "defined_out": [
        "active_proposal#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0",
        "kyc_status#0"
      ],
      "stack_out": [
        "kyc_status#0",
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0"
      ]
    },
    "1715": {
      "op": "uncover 3",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0"
      ]
    },
    "1717": {
      "op": "intc_0 // 0",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "kyc_status#0",
        "0"
      ]
    },
    "1718": {
      "op": "getbit",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1719": {
      "op": "intc_1 // 1"
    },
    "1720": {
      "op": "swap",
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "active_proposal#0",
        "1",
        "aggregate%get_bit%0#0"
      ]
    },
    "1721": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "box_prefixed_key%0#0",
        "kyc_expiring#0"
      ],
      "stack_out": [
        "kyc_expiring#0",
        "box_prefixed_key%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "1722": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%set_bit%0#0",
        "kyc_expiring#0"
      ]
    },
    "1724": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1725": {
      "op": "box_put",
      "stack_out": []
    },
    "1726": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1727": {
      "op": "return",
      "stack_out": []
    },
    "1728": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee[routing]",
      "params": {},
      "block": "declare_committee",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1731": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1732": {
      "op": "len",
      "defined_out": [
        "committee_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "len%0#0"
      ]
    },
    "1733": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "committee_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "len%0#0",
        "32"
      ]
    },
    "1734": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "eq%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "eq%0#0"
      ]
    },
    "1735": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1736": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "committee_id#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0"
      ]
    },
    "1739": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "size#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "size#0 (copy)"
      ]
    },
    "1740": {
      "op": "len",
      "defined_out": [
        "committee_id#0",
        "len%1#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "len%1#0"
      ]
    },
    "1741": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "committee_id#0",
        "len%1#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "len%1#0",
        "8"
      ]
    },
    "1742": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "eq%1#0",
        "size#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "eq%1#0"
      ]
    },
    "1743": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "committee_id#0",
        "size#0"
      ]
    },
    "1744": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ]
    },
    "1747": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "votes#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "votes#0 (copy)"
      ]
    },
    "1748": {
      "op": "len",
      "defined_out": [
        "committee_id#0",
        "len%2#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "len%2#0"
      ]
    },
    "1749": {
      "op": "intc_2 // 8",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "len%2#0",
        "8"
      ]
    },
    "1750": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "eq%2#0",
        "size#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "eq%2#0"
      ]
    },
    "1751": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ]
    },
    "1752": {
      "op": "txn Sender",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2"
      ]
    },
    "1754": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "committee_id#0",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "0"
      ]
    },
    "1755": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "committee_id#0",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "1757": {
      "op": "app_global_get_ex",
      "defined_out": [
        "committee_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "size#0",
        "tmp%0#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1758": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%0#2",
        "maybe_value%0#1"
      ]
    },
    "1759": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "size#0",
        "tmp%1#2",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0",
        "tmp%1#2"
      ]
    },
    "1760": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "committee_id#0",
        "size#0",
        "votes#0"
      ]
    },
    "1761": {
      "op": "swap",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "size#0"
      ]
    },
    "1762": {
      "op": "btoi",
      "defined_out": [
        "committee_id#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1"
      ]
    },
    "1763": {
      "op": "intc_0 // 0",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "0"
      ]
    },
    "1764": {
      "op": "bytec 48 // 0x6d61785f636f6d6d69747465655f73697a65",
      "defined_out": [
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65",
        "committee_id#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "0",
        "0x6d61785f636f6d6d69747465655f73697a65"
      ]
    },
    "1766": {
      "op": "app_global_get_ex",
      "defined_out": [
        "committee_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1767": {
      "error": "check self.max_committee_size exists",
      "op": "assert // check self.max_committee_size exists",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "maybe_value%0#0"
      ]
    },
    "1768": {
      "op": "dig 1",
      "defined_out": [
        "committee_id#0",
        "maybe_value%0#0",
        "tmp%2#1",
        "tmp%2#1 (copy)",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "maybe_value%0#0",
        "tmp%2#1 (copy)"
      ]
    },
    "1770": {
      "op": ">=",
      "defined_out": [
        "committee_id#0",
        "tmp%2#1",
        "tmp%3#0",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "tmp%3#0"
      ]
    },
    "1771": {
      "error": "Committee size is too large",
      "op": "assert // Committee size is too large",
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1"
      ]
    },
    "1772": {
      "op": "bytec 50 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "committee_id#0",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "votes#0",
        "tmp%2#1",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1774": {
      "op": "uncover 3",
      "stack_out": [
        "votes#0",
        "tmp%2#1",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1776": {
      "op": "app_global_put",
      "stack_out": [
        "votes#0",
        "tmp%2#1"
      ]
    },
    "1777": {
      "op": "bytec 44 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#1",
        "votes#0"
      ],
      "stack_out": [
        "votes#0",
        "tmp%2#1",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1779": {
      "op": "swap",
      "stack_out": [
        "votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "tmp%2#1"
      ]
    },
    "1780": {
      "op": "app_global_put",
      "stack_out": [
        "votes#0"
      ]
    },
    "1781": {
      "op": "btoi",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1782": {
      "op": "bytec 45 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1784": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "tmp%5#0"
      ]
    },
    "1785": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1786": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1787": {
      "op": "return",
      "stack_out": []
    },
    "1788": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal[routing]",
      "params": {},
      "block": "open_proposal",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1790": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1791": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "1792": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1793": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "1795": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1796": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1797": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "1798": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "1799": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "1800": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1801": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "1802": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1"
      ]
    },
    "1803": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "payment#0"
      ]
    },
    "1804": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "1805": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "1807": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1808": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "payment#0",
        "maybe_value%1#0"
      ]
    },
    "1809": {
      "op": "!",
      "defined_out": [
        "payment#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%1#1"
      ]
    },
    "1810": {
      "error": "Creation of proposals is paused",
      "op": "assert // Creation of proposals is paused",
      "stack_out": [
        "payment#0"
      ]
    },
    "1811": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70"
      ]
    },
    "1812": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70",
        "materialized_values%0#0"
      ]
    },
    "1814": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1815": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%2#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "_%0#0",
        "maybe_exists%2#0"
      ]
    },
    "1816": {
      "op": "bury 1",
      "stack_out": [
        "payment#0",
        "maybe_exists%2#0"
      ]
    },
    "1818": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "payment#0"
      ]
    },
    "1819": {
      "op": "bytec_3 // 0x70",
      "stack_out": [
        "payment#0",
        "0x70"
      ]
    },
    "1820": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "materialized_values%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0x70",
        "materialized_values%1#0"
      ]
    },
    "1822": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1823": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1824": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "payment#0",
        "aggregate%box_get%0#0"
      ]
    },
    "1825": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "aggregate%box_get%0#0",
        "0"
      ]
    },
    "1826": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1827": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "1829": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "1830": {
      "op": "uncover 2",
      "stack_out": [
        "payment#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1832": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1833": {
      "op": "bytec 9 // 0x00",
      "stack_out": [
        "payment#0",
        "aggregate%encoded_bool%0#0",
        "0x00"
      ]
    },
    "1835": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%3#1"
      ]
    },
    "1836": {
      "error": "Proposer already has an active proposal",
      "op": "assert // Proposer already has an active proposal",
      "stack_out": [
        "payment#0"
      ]
    },
    "1837": {
      "op": "txn Sender",
      "defined_out": [
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%4#0"
      ]
    },
    "1839": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "payment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%5#0"
      ]
    },
    "1842": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "payment#0"
      ]
    },
    "1843": {
      "op": "txn Fee",
      "defined_out": [
        "payment#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0"
      ]
    },
    "1845": {
      "op": "global MinTxnFee",
      "defined_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1847": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "payment#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%7#0",
        "3"
      ]
    },
    "1849": {
      "op": "*",
      "defined_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1850": {
      "op": ">=",
      "defined_out": [
        "payment#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%9#0"
      ]
    },
    "1851": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": [
        "payment#0"
      ]
    },
    "1852": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "1853": {
      "op": "gtxns Receiver",
      "defined_out": [
        "payment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%10#0"
      ]
    },
    "1855": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "payment#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1857": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%12#0"
      ]
    },
    "1858": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "payment#0"
      ]
    },
    "1859": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1861": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "1862": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "1864": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1865": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "tmp%13#0",
        "maybe_value%2#0"
      ]
    },
    "1866": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1867": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "1868": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1870": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "check%0#0"
      ]
    },
    "1872": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1873": {
      "op": "bytec 8 // 0x7061",
      "defined_out": [
        "0x7061",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "0x7061"
      ]
    },
    "1875": {
      "op": "box_get",
      "defined_out": [
        "exist#0",
        "mbr_before#0",
        "proposal_approval#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "exist#0"
      ]
    },
    "1876": {
      "error": "Missing proposal approval program",
      "op": "assert // Missing proposal approval program",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0"
      ]
    },
    "1877": {
      "op": "dup",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "proposal_approval#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "proposal_approval#0 (copy)"
      ]
    },
    "1878": {
      "op": "len",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0"
      ]
    },
    "1879": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%16#0",
        "4"
      ]
    },
    "1881": {
      "op": "+",
      "defined_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ]
    },
    "1882": {
      "op": "pushint 2048 // 2048",
      "defined_out": [
        "2048",
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "total_size#0",
        "2048"
      ]
    },
    "1885": {
      "op": "/",
      "defined_out": [
        "extra_pages#0",
        "mbr_before#0",
        "proposal_approval#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "extra_pages#0"
      ]
    },
    "1886": {
      "op": "itxn_begin"
    },
    "1887": {
      "op": "txn Sender",
      "defined_out": [
        "extra_pages#0",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "extra_pages#0",
        "tmp%20#0"
      ]
    },
    "1889": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "extra_pages#0"
      ]
    },
    "1890": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1892": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "3"
      ]
    },
    "1894": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1896": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "20"
      ]
    },
    "1898": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1900": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0",
        "CoEBQw=="
      ]
    },
    "1906": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "mbr_before#0",
        "proposal_approval#0",
        "tmp%20#0"
      ]
    },
    "1908": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0",
        "proposal_approval#0"
      ]
    },
    "1909": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0"
      ]
    },
    "1911": {
      "op": "pushbytes 0x216b1e07 // method \"create(address)string\"",
      "defined_out": [
        "Method(create(address)string)",
        "mbr_before#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0",
        "Method(create(address)string)"
      ]
    },
    "1917": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "mbr_before#0",
        "tmp%20#0"
      ]
    },
    "1919": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1921": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "appl"
      ]
    },
    "1923": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1925": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "0"
      ]
    },
    "1926": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_before#0"
      ]
    },
    "1928": {
      "op": "itxn_submit"
    },
    "1929": {
      "op": "itxn LastLog"
    },
    "1931": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1933": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "1936": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "1937": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "1938": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1939": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "1941": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "1942": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "1943": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "len%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "1944": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "eq%0#0",
        "mbr_before#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "1945": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1946": {
      "op": "dup",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1947": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%23#0"
      ]
    },
    "1950": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%23#0",
        "0x151f7c75"
      ]
    },
    "1951": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%24#0"
      ]
    },
    "1952": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1953": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "1955": {
      "op": "swap",
      "defined_out": [
        "awst_tmp%0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%0#0"
      ]
    },
    "1956": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0"
      ]
    },
    "1959": {
      "op": "dup",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "1960": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1961": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "1962": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "4"
      ]
    },
    "1964": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%26#0",
        "tmp%27#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "1965": {
      "op": "bz open_proposal_ternary_false@4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1968": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "ternary_result%0#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "ternary_result%0#0"
      ]
    },
    "1969": {
      "block": "open_proposal_ternary_merge@5",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "ternary_result%0#0"
      ],
      "op": "bz open_proposal_else_body@12",
      "defined_out": [],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "1972": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "4"
      ]
    },
    "1974": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "4",
        "tmp%26#0"
      ]
    },
    "1976": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "4",
        "tmp%26#0 (copy)",
        "tmp%26#0 (copy)"
      ]
    },
    "1977": {
      "op": "cover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "4",
        "tmp%26#0 (copy)"
      ]
    },
    "1979": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "1980": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "1982": {
      "op": "dig 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%26#0 (copy)"
      ]
    },
    "1984": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "4",
        "tmp%26#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "1986": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "bounded_index%0#0"
      ]
    },
    "1987": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "1989": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%26#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "1990": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%26#0"
      ]
    },
    "1992": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "error_without_prefix#0"
      ]
    },
    "1993": {
      "op": "bytec 49 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "error_without_prefix#0",
        "\"Missing Config\""
      ]
    },
    "1995": {
      "op": "pushbytess \"Empty Committee ID\" \"Wrong Committee Members\" \"Wrong Committee Votes\" // \"Empty Committee ID\", \"Wrong Committee Members\", \"Wrong Committee Votes\"",
      "defined_out": [
        "\"Empty Committee ID\"",
        "\"Missing Config\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "error_without_prefix#0",
        "\"Missing Config\"",
        "\"Empty Committee ID\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\""
      ]
    },
    "2062": {
      "op": "uncover 4",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "\"Missing Config\"",
        "\"Empty Committee ID\"",
        "\"Wrong Committee Members\"",
        "\"Wrong Committee Votes\"",
        "error_without_prefix#0"
      ]
    },
    "2064": {
      "op": "match open_proposal_switch_case_0@7 open_proposal_switch_case_1@8 open_proposal_switch_case_2@9 open_proposal_switch_case_3@10",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "2074": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2075": {
      "error": "Wrong Committee Votes",
      "block": "open_proposal_switch_case_3@10",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Wrong Committee Votes"
    },
    "2076": {
      "error": "Wrong Committee Members",
      "block": "open_proposal_switch_case_2@9",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Wrong Committee Members"
    },
    "2077": {
      "error": "Empty Committee ID",
      "block": "open_proposal_switch_case_1@8",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Empty Committee ID"
    },
    "2078": {
      "error": "Missing Config",
      "block": "open_proposal_switch_case_0@7",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "err // Missing Config"
    },
    "2079": {
      "block": "open_proposal_else_body@12",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%1#0"
      ]
    },
    "2081": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2083": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%31#0"
      ]
    },
    "2084": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "2085": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%32#0"
      ]
    },
    "2087": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "awst_tmp%1#0",
        "check%1#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "check%1#0"
      ]
    },
    "2089": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0"
      ]
    },
    "2090": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "awst_tmp%1#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "0x70"
      ]
    },
    "2091": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "awst_tmp%1#0",
        "materialized_values%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "0x70",
        "materialized_values%2#0"
      ]
    },
    "2093": {
      "op": "concat",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0"
      ]
    },
    "2094": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "2095": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "0"
      ]
    },
    "2096": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "0",
        "1"
      ]
    },
    "2097": {
      "op": "box_extract",
      "defined_out": [
        "awst_tmp%1#0",
        "box%box_extract%0#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box%box_extract%0#0"
      ]
    },
    "2098": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box%box_extract%0#0",
        "0"
      ]
    },
    "2099": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "box%box_extract%0#0",
        "0",
        "1"
      ]
    },
    "2100": {
      "op": "setbit",
      "defined_out": [
        "aggregate%updated_target%0#0",
        "awst_tmp%1#0",
        "box_prefixed_key%2#0",
        "mbr_after#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "aggregate%updated_target%0#0"
      ]
    },
    "2101": {
      "op": "intc_0 // 0"
    },
    "2102": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "box_prefixed_key%2#0",
        "0",
        "aggregate%updated_target%0#0"
      ]
    },
    "2103": {
      "op": "box_replace",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0"
      ]
    },
    "2104": {
      "op": "itxn_begin"
    },
    "2105": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2107": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "tx.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "2108": {
      "op": "cover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0 (copy)"
      ]
    },
    "2110": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "awst_tmp%1#0",
        "check%2#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "2112": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0"
      ]
    },
    "2113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "0"
      ]
    },
    "2114": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "awst_tmp%1#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "2116": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_exists%5#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "maybe_value%4#0",
        "maybe_exists%5#0"
      ]
    },
    "2117": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "mbr_after#0",
        "value%2#0",
        "maybe_value%4#0"
      ]
    },
    "2118": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%4#0",
        "mbr_after#0"
      ]
    },
    "2120": {
      "op": "dig 8",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%4#0",
        "mbr_after#0",
        "mbr_before#0"
      ]
    },
    "2122": {
      "op": "-",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_value%4#0",
        "mbr_before#0",
        "tmp%34#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "maybe_value%4#0",
        "tmp%34#0"
      ]
    },
    "2123": {
      "op": "-",
      "defined_out": [
        "awst_tmp%1#0",
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "2124": {
      "op": "itxn_field Amount",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "value%2#0"
      ]
    },
    "2126": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2128": {
      "op": "intc_1 // pay",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "pay",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "pay"
      ]
    },
    "2129": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "2132": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2134": {
      "op": "itxn_submit"
    },
    "2135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0"
      ]
    },
    "2136": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "2138": {
      "op": "app_global_get_ex",
      "defined_out": [
        "awst_tmp%1#0",
        "maybe_exists%6#0",
        "maybe_value%5#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%5#0",
        "maybe_exists%6#0"
      ]
    },
    "2139": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%5#0"
      ]
    },
    "2140": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "2141": {
      "op": "+",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%35#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "tmp%35#0"
      ]
    },
    "2142": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "tmp%35#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "2144": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0",
        "0x70656e64696e675f70726f706f73616c73",
        "tmp%35#0"
      ]
    },
    "2145": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tx.CreatedApplicationID#0"
      ]
    },
    "2146": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2147": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0",
        "awst_tmp%1#0",
        "mbr_before#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "2148": {
      "op": "swap",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2149": {
      "op": "concat",
      "defined_out": [
        "awst_tmp%1#0",
        "mbr_before#0",
        "tmp%3#0",
        "tx.CreatedApplicationID#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%3#0"
      ]
    },
    "2150": {
      "op": "log",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "2151": {
      "op": "intc_1 // 1",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "1"
      ]
    },
    "2152": {
      "op": "return",
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ]
    },
    "2153": {
      "block": "open_proposal_ternary_false@4",
      "stack_in": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "awst_tmp%0#0"
      ]
    },
    "2155": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%28#0"
      ]
    },
    "2158": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "tmp%28#0",
        "\"ERR:\""
      ]
    },
    "2160": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "mbr_before#0",
        "awst_tmp%0#0",
        "tx.CreatedApplicationID#0",
        "awst_tmp%1#0",
        "tmp%26#0",
        "ternary_result%0#0"
      ]
    },
    "2161": {
      "op": "b open_proposal_ternary_merge@5"
    },
    "2164": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal[routing]",
      "params": {},
      "block": "vote_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2167": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2168": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2169": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2170": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2171": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2172": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0"
      ]
    },
    "2175": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "2176": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "len%1#0"
      ]
    },
    "2177": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%1#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "len%1#0",
        "32"
      ]
    },
    "2178": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "eq%1#0"
      ]
    },
    "2179": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0"
      ]
    },
    "2180": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0"
      ]
    },
    "2183": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "approval_votes#0 (copy)",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "approval_votes#0 (copy)"
      ]
    },
    "2184": {
      "op": "len",
      "defined_out": [
        "approval_votes#0",
        "len%2#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "len%2#0"
      ]
    },
    "2185": {
      "op": "intc_2 // 8",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "len%2#0",
        "8"
      ]
    },
    "2186": {
      "op": "==",
      "defined_out": [
        "approval_votes#0",
        "eq%2#0",
        "proposal_id#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "eq%2#0"
      ]
    },
    "2187": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0"
      ]
    },
    "2188": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2191": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "rejection_votes#0 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "rejection_votes#0 (copy)"
      ]
    },
    "2192": {
      "op": "len",
      "defined_out": [
        "approval_votes#0",
        "len%3#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "len%3#0"
      ]
    },
    "2193": {
      "op": "intc_2 // 8",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "len%3#0",
        "8"
      ]
    },
    "2194": {
      "op": "==",
      "defined_out": [
        "approval_votes#0",
        "eq%3#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "eq%3#0"
      ]
    },
    "2195": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2196": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "0"
      ]
    },
    "2197": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2198": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approval_votes#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposal_id#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2199": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "maybe_value%0#0"
      ]
    },
    "2200": {
      "op": "!",
      "defined_out": [
        "approval_votes#0",
        "proposal_id#0",
        "rejection_votes#0",
        "tmp%0#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%0#1"
      ]
    },
    "2201": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "proposal_id#0",
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2202": {
      "op": "uncover 3",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "proposal_id#0"
      ]
    },
    "2204": {
      "op": "btoi",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1"
      ]
    },
    "2205": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%1#1 (copy)",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ]
    },
    "2206": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%2#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%2#1"
      ]
    },
    "2209": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1"
      ]
    },
    "2210": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "0x78"
      ]
    },
    "2211": {
      "op": "dig 4",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2213": {
      "op": "concat",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2214": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2215": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "exists#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "_%0#0",
        "exists#0"
      ]
    },
    "2216": {
      "op": "bury 1",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "exists#0"
      ]
    },
    "2218": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2219": {
      "op": "dup",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2220": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%box_get%1#0"
      ]
    },
    "2221": {
      "op": "pop",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "2222": {
      "op": "dup",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)"
      ]
    },
    "2223": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "xgov_box#0 (copy)",
        "32"
      ]
    },
    "2224": {
      "op": "extract_uint64",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%3#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%3#1"
      ]
    },
    "2225": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%3#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%3#1",
        "1"
      ]
    },
    "2226": {
      "op": "+",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%4#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%4#0"
      ]
    },
    "2227": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2228": {
      "op": "dig 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2230": {
      "op": "intc_3 // 32",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0 (copy)",
        "32"
      ]
    },
    "2231": {
      "op": "uncover 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "box_prefixed_key%0#0 (copy)",
        "32",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2233": {
      "op": "box_replace",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0"
      ]
    },
    "2234": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%6#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "tmp%6#0"
      ]
    },
    "2236": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "box_prefixed_key%0#0",
        "xgov_box#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2237": {
      "op": "uncover 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2239": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "aggregate%val_as_bytes%1#0",
        "approval_votes#0",
        "box_prefixed_key%0#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "40"
      ]
    },
    "2241": {
      "op": "uncover 2",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "box_prefixed_key%0#0",
        "40",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2243": {
      "op": "box_replace",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0"
      ]
    },
    "2244": {
      "op": "txn Sender",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "xgov_address#0",
        "xgov_box#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "xgov_box#0",
        "tmp%8#0"
      ]
    },
    "2246": {
      "op": "swap",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "xgov_box#0"
      ]
    },
    "2247": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%1#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%8#0",
        "aggregate%extract%1#0"
      ]
    },
    "2250": {
      "op": "==",
      "defined_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%9#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1",
        "tmp%9#0"
      ]
    },
    "2251": {
      "error": "Must be voting address",
      "op": "assert // Must be voting address",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "tmp%1#1"
      ]
    },
    "2252": {
      "op": "itxn_begin"
    },
    "2253": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2255": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)",
        "approval_votes#0",
        "rejection_votes#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0",
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "2261": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "xgov_address#0",
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2263": {
      "op": "uncover 2",
      "stack_out": [
        "approval_votes#0",
        "rejection_votes#0",
        "xgov_address#0"
      ]
    },
    "2265": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "approval_votes#0",
        "rejection_votes#0"
      ]
    },
    "2267": {
      "op": "swap",
      "stack_out": [
        "rejection_votes#0",
        "approval_votes#0"
      ]
    },
    "2268": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "rejection_votes#0"
      ]
    },
    "2270": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2272": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2274": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2277": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2279": {
      "op": "itxn_submit"
    },
    "2280": {
      "op": "itxn LastLog"
    },
    "2282": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2284": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2287": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2289": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2290": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2292": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2293": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2294": {
      "op": "len",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2295": {
      "op": "==",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2296": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2297": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2298": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "2301": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "2302": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%12#0"
      ]
    },
    "2303": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2304": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2307": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2308": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2309": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0"
      ]
    },
    "2310": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4"
      ]
    },
    "2312": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2313": {
      "op": "bz vote_proposal_ternary_false@4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2316": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ]
    },
    "2317": {
      "block": "vote_proposal_ternary_merge@5",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ],
      "op": "bz vote_proposal_else_body@14",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2320": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4"
      ]
    },
    "2322": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4",
        "tmp%14#0"
      ]
    },
    "2324": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)",
        "tmp%14#0 (copy)"
      ]
    },
    "2325": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)"
      ]
    },
    "2327": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2328": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2330": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%14#0 (copy)"
      ]
    },
    "2332": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "4",
        "tmp%14#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2334": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "bounded_index%0#0"
      ]
    },
    "2335": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2337": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2338": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%14#0"
      ]
    },
    "2340": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0"
      ]
    },
    "2341": {
      "op": "bytec 22 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2343": {
      "op": "bytec 49 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "2345": {
      "op": "pushbytess \"Voter not found\" \"Voter already voted\" \"Votes exceeded\" \"Voting Period Expired\" // \"Voter not found\", \"Voter already voted\", \"Votes exceeded\", \"Voting Period Expired\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Voter already voted\"",
        "\"Voter not found\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\""
      ]
    },
    "2420": {
      "op": "uncover 6",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"Voter not found\"",
        "\"Voter already voted\"",
        "\"Votes exceeded\"",
        "\"Voting Period Expired\"",
        "error_without_prefix#0"
      ]
    },
    "2422": {
      "op": "match vote_proposal_switch_case_0@7 vote_proposal_switch_case_1@8 vote_proposal_switch_case_2@9 vote_proposal_switch_case_3@10 vote_proposal_switch_case_4@11 vote_proposal_switch_case_5@12",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2436": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2437": {
      "error": "Voting Period Expired",
      "block": "vote_proposal_switch_case_5@12",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Voting Period Expired"
    },
    "2438": {
      "error": "Votes exceeded",
      "block": "vote_proposal_switch_case_4@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Votes exceeded"
    },
    "2439": {
      "error": "Voter already voted",
      "block": "vote_proposal_switch_case_3@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Voter already voted"
    },
    "2440": {
      "error": "Voter not found",
      "block": "vote_proposal_switch_case_2@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Voter not found"
    },
    "2441": {
      "error": "Missing Config",
      "block": "vote_proposal_switch_case_1@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Missing Config"
    },
    "2442": {
      "error": "Wrong Proposal Status or finalized",
      "block": "vote_proposal_switch_case_0@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2443": {
      "block": "vote_proposal_else_body@14",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0"
      ]
    },
    "2445": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2447": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%19#0"
      ]
    },
    "2448": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2449": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "1"
      ]
    },
    "2450": {
      "op": "return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2451": {
      "block": "vote_proposal_ternary_false@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "awst_tmp%0#0"
      ]
    },
    "2453": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "2456": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "tmp%16#0",
        "\"ERR:\""
      ]
    },
    "2458": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%14#0",
        "ternary_result%0#0"
      ]
    },
    "2459": {
      "op": "b vote_proposal_ternary_merge@5"
    },
    "2462": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal[routing]",
      "params": {},
      "block": "pay_grant_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2465": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2466": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2467": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2468": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2469": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2470": {
      "op": "txn Sender",
      "defined_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "2472": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0"
      ]
    },
    "2473": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "2475": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2476": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "proposal_id#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0"
      ]
    },
    "2477": {
      "op": "==",
      "defined_out": [
        "proposal_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposal_id#0",
        "tmp%0#1"
      ]
    },
    "2478": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2479": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2480": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2481": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%2#0"
      ]
    },
    "2484": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2485": {
      "op": "dup",
      "stack_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2486": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposal_id#1",
        "proposer#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0"
      ]
    },
    "2489": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "proposal_id#1 (copy)"
      ]
    },
    "2491": {
      "op": "pushbytes 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "proposal_id#1",
        "proposal_id#1 (copy)",
        "proposer#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "proposal_id#1 (copy)",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "2509": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount_exists#0"
      ]
    },
    "2510": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2511": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70"
      ]
    },
    "2512": {
      "op": "dig 2",
      "defined_out": [
        "0x70",
        "proposal_id#1",
        "proposer#0",
        "proposer#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2514": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "box_prefixed_key%0#0"
      ]
    },
    "2515": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "2516": {
      "op": "bury 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_exists%1#0"
      ]
    },
    "2518": {
      "error": "Wrong proposer",
      "op": "assert // Wrong proposer",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2519": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "proposer#0 (copy)"
      ]
    },
    "2521": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%7#0"
      ]
    },
    "2524": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ]
    },
    "2525": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0"
      ]
    },
    "2526": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2528": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "2529": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2530": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "2531": {
      "op": "dig 2",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "2533": {
      "op": ">=",
      "defined_out": [
        "maybe_value%1#0",
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "tmp%8#0"
      ]
    },
    "2534": {
      "error": "Insufficient treasury funds",
      "op": "assert // Insufficient treasury funds",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2535": {
      "op": "itxn_begin"
    },
    "2536": {
      "op": "dig 1",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "requested_amount#1 (copy)"
      ]
    },
    "2538": {
      "op": "itxn_field Amount",
      "stack_out": [
        "proposal_id#1",
        "proposer#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2540": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "proposer#0"
      ]
    },
    "2542": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2544": {
      "op": "intc_1 // pay",
      "defined_out": [
        "maybe_value%1#0",
        "pay",
        "proposal_id#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "pay"
      ]
    },
    "2545": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2547": {
      "op": "intc_0 // 0",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0",
        "0"
      ]
    },
    "2548": {
      "op": "itxn_field Fee",
      "stack_out": [
        "proposal_id#1",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "2550": {
      "op": "itxn_submit"
    },
    "2551": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "maybe_value%1#0",
        "requested_amount#1"
      ]
    },
    "2552": {
      "op": "-",
      "defined_out": [
        "proposal_id#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "proposal_id#1",
        "tmp%0#2"
      ]
    },
    "2553": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "proposal_id#1",
        "tmp%0#2",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "2555": {
      "op": "swap",
      "stack_out": [
        "proposal_id#1",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%0#2"
      ]
    },
    "2556": {
      "op": "app_global_put",
      "stack_out": [
        "proposal_id#1"
      ]
    },
    "2557": {
      "op": "itxn_begin"
    },
    "2558": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2560": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)"
      ],
      "stack_out": [
        "Method(fund()string)"
      ]
    },
    "2566": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2568": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2570": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2572": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2573": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2575": {
      "op": "itxn_submit"
    },
    "2576": {
      "op": "itxn LastLog"
    },
    "2578": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2580": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2583": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2584": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2585": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2586": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2588": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2589": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2590": {
      "op": "len",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2591": {
      "op": "==",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2592": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2593": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2594": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0"
      ]
    },
    "2597": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "2598": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%11#0"
      ]
    },
    "2599": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2600": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2603": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2604": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2605": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "2606": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4"
      ]
    },
    "2608": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2609": {
      "op": "bz pay_grant_proposal_ternary_false@4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2612": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ]
    },
    "2613": {
      "block": "pay_grant_proposal_ternary_merge@5",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ],
      "op": "bz pay_grant_proposal_else_body@9",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2616": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4"
      ]
    },
    "2618": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4",
        "tmp%13#0"
      ]
    },
    "2620": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)",
        "tmp%13#0 (copy)"
      ]
    },
    "2621": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)"
      ]
    },
    "2623": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2624": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2626": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%13#0 (copy)"
      ]
    },
    "2628": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "4",
        "tmp%13#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2630": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "bounded_index%0#0"
      ]
    },
    "2631": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2633": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2634": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%13#0"
      ]
    },
    "2636": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0"
      ]
    },
    "2637": {
      "op": "bytec 22 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2639": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "2640": {
      "op": "match pay_grant_proposal_switch_case_0@7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2644": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2645": {
      "error": "Wrong Proposal Status or finalized",
      "block": "pay_grant_proposal_switch_case_0@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2646": {
      "block": "pay_grant_proposal_else_body@9",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0"
      ]
    },
    "2648": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2650": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%18#0"
      ]
    },
    "2651": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2652": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "1"
      ]
    },
    "2653": {
      "op": "return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ]
    },
    "2654": {
      "block": "pay_grant_proposal_ternary_false@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "2656": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "2659": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "tmp%15#0",
        "\"ERR:\""
      ]
    },
    "2661": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%13#0",
        "ternary_result%0#0"
      ]
    },
    "2662": {
      "op": "b pay_grant_proposal_ternary_merge@5"
    },
    "2665": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.finalize_proposal[routing]",
      "params": {},
      "block": "finalize_proposal",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2666": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2667": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2669": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0"
      ]
    },
    "2672": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2673": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2674": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2675": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2676": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#0"
      ]
    },
    "2677": {
      "op": "btoi",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1"
      ]
    },
    "2678": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1"
      ]
    },
    "2679": {
      "op": "pushbytes 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "proposal_id#1",
        "0x737461747573"
      ]
    },
    "2687": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ]
    },
    "2688": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0"
      ]
    },
    "2689": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status_exists#0",
        "status#0",
        "status#0 (copy)"
      ]
    },
    "2690": {
      "op": "uncover 2",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "status_exists#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "2692": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "2693": {
      "op": "bz finalize_proposal_if_body@3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2696": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0"
      ]
    },
    "2697": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "proposal_id#1",
        "status#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "status#0",
        "10"
      ]
    },
    "2699": {
      "op": "==",
      "defined_out": [
        "proposal_id#1",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%3#0"
      ]
    },
    "2700": {
      "op": "bz finalize_proposal_after_if_else@4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2703": {
      "block": "finalize_proposal_if_body@3",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "2705": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0"
      ]
    },
    "2706": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "2708": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2709": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "maybe_value%0#0"
      ]
    },
    "2710": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%4#0"
      ]
    },
    "2711": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2712": {
      "block": "finalize_proposal_after_if_else@4",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "2714": {
      "op": "dup",
      "defined_out": [
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "proposal_id#1 (copy)"
      ]
    },
    "2715": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "proposal_id#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1",
        "tmp%6#0"
      ]
    },
    "2718": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "2719": {
      "op": "itxn_begin"
    },
    "2720": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2722": {
      "op": "pushbytes 0x802069b4 // method \"finalize()string\"",
      "defined_out": [
        "Method(finalize()string)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "Method(finalize()string)"
      ]
    },
    "2728": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2730": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "appl"
      ]
    },
    "2732": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2734": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "0"
      ]
    },
    "2735": {
      "op": "itxn_field Fee",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2737": {
      "op": "itxn_submit"
    },
    "2738": {
      "op": "itxn LastLog"
    },
    "2740": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2741": {
      "op": "bury 6",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2743": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2744": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2747": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2748": {
      "op": "intc_0 // 0",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2749": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2750": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2752": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2753": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2754": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "len%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2755": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "eq%0#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2756": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2757": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2758": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "2761": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2762": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_id#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2763": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2764": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "2767": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2768": {
      "op": "bury 5",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "2770": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "2771": {
      "op": "dup",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2772": {
      "op": "bury 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0"
      ]
    },
    "2774": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2776": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%12#0"
      ]
    },
    "2777": {
      "op": "bz finalize_proposal_ternary_false@7",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2780": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "proposal_id#1",
        "ternary_result%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "2781": {
      "block": "finalize_proposal_ternary_merge@8",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ],
      "op": "bz finalize_proposal_else_body@14",
      "defined_out": [],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2784": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4"
      ]
    },
    "2786": {
      "op": "dig 3",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0"
      ]
    },
    "2788": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "2789": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2791": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2792": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2794": {
      "op": "dig 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2796": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2798": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "2799": {
      "op": "dig 5",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2801": {
      "op": "swap",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2802": {
      "op": "uncover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "2804": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0"
      ]
    },
    "2805": {
      "op": "bytec 22 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "2807": {
      "op": "bytec 49 // \"Missing Config\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\""
      ]
    },
    "2809": {
      "op": "pushbytes \"There are voters assigned to this proposal\"",
      "defined_out": [
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\""
      ]
    },
    "2853": {
      "op": "uncover 3",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "\"Wrong Proposal Status or finalized\"",
        "\"Missing Config\"",
        "\"There are voters assigned to this proposal\"",
        "error_without_prefix#0"
      ]
    },
    "2855": {
      "op": "match finalize_proposal_switch_case_0@10 finalize_proposal_switch_case_1@11 finalize_proposal_switch_case_2@12",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2863": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "2864": {
      "error": "There are voters assigned to this proposal",
      "block": "finalize_proposal_switch_case_2@12",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "err // There are voters assigned to this proposal"
    },
    "2865": {
      "error": "Missing Config",
      "block": "finalize_proposal_switch_case_1@11",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "err // Missing Config"
    },
    "2866": {
      "error": "Wrong Proposal Status or finalized",
      "block": "finalize_proposal_switch_case_0@10",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "2867": {
      "block": "finalize_proposal_else_body@14",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0"
      ]
    },
    "2869": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "2871": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%16#0"
      ]
    },
    "2872": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2873": {
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "proposal_id#1"
      ]
    },
    "2875": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2878": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0",
        "proposal_id#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "1"
      ]
    },
    "2879": {
      "op": "return",
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ]
    },
    "2880": {
      "block": "finalize_proposal_ternary_false@7",
      "stack_in": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "awst_tmp%0#0"
      ]
    },
    "2882": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0"
      ]
    },
    "2885": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "2887": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "proposal_id#1",
        "status#0",
        "ternary_result%0#0"
      ]
    },
    "2888": {
      "op": "b finalize_proposal_ternary_merge@8"
    },
    "2891": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.drop_proposal[routing]",
      "params": {},
      "block": "drop_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2894": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "2895": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "2896": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "2897": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "2898": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2899": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "0"
      ]
    },
    "2900": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "2901": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2902": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "proposal_id#0",
        "maybe_value%0#0"
      ]
    },
    "2903": {
      "op": "!",
      "defined_out": [
        "proposal_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "proposal_id#0",
        "tmp%0#1"
      ]
    },
    "2904": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "2905": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2906": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2908": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2911": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2912": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "2913": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0"
      ]
    },
    "2916": {
      "op": "txn Sender",
      "defined_out": [
        "proposer#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "proposer#0",
        "tmp%5#0"
      ]
    },
    "2918": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0",
        "tmp%6#0"
      ]
    },
    "2919": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "2920": {
      "op": "itxn_begin"
    },
    "2921": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2923": {
      "op": "pushbytes 0x7371321a // method \"drop()string\"",
      "defined_out": [
        "Method(drop()string)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "Method(drop()string)"
      ]
    },
    "2929": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2931": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "appl"
      ]
    },
    "2933": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2935": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "2936": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2938": {
      "op": "itxn_submit"
    },
    "2939": {
      "op": "itxn LastLog"
    },
    "2941": {
      "op": "dupn 2",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2943": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0"
      ]
    },
    "2946": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2947": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "error#0 (copy)",
        "0"
      ]
    },
    "2948": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2949": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2951": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "awst_tmp%0#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "error#0",
        "add%0#0"
      ]
    },
    "2952": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "error#0"
      ]
    },
    "2953": {
      "op": "len",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2954": {
      "op": "==",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "eq%0#0"
      ]
    },
    "2955": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2956": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2957": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "2960": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2961": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2962": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2963": {
      "op": "extract 6 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2966": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0"
      ]
    },
    "2967": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2968": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "2969": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2971": {
      "op": "<",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%1#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2972": {
      "op": "bz drop_proposal_ternary_false@4",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2975": {
      "op": "intc_0 // 0",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "ternary_result%0#0",
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ]
    },
    "2976": {
      "block": "drop_proposal_ternary_merge@5",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ],
      "op": "bz drop_proposal_else_body@9",
      "defined_out": [],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "2979": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4"
      ]
    },
    "2981": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4",
        "tmp%11#0"
      ]
    },
    "2983": {
      "op": "dup",
      "defined_out": [
        "4",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "2984": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2986": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "2987": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4"
      ]
    },
    "2989": {
      "op": "dig 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "is_out_of_bounds%0#0",
        "4",
        "tmp%11#0 (copy)"
      ]
    },
    "2991": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "4",
        "tmp%11#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "2993": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "bounded_index%0#0"
      ]
    },
    "2994": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "bounded_index%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2996": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0"
      ]
    },
    "2997": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "bounded_index%0#0",
        "tmp%11#0"
      ]
    },
    "2999": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0"
      ]
    },
    "3000": {
      "op": "bytec 22 // \"Wrong Proposal Status or finalized\"",
      "defined_out": [
        "\"Wrong Proposal Status or finalized\"",
        "awst_tmp%1#0",
        "error_without_prefix#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "error_without_prefix#0",
        "\"Wrong Proposal Status or finalized\""
      ]
    },
    "3002": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "\"Wrong Proposal Status or finalized\"",
        "error_without_prefix#0"
      ]
    },
    "3003": {
      "op": "match drop_proposal_switch_case_0@7",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "3007": {
      "error": "Unknown error",
      "op": "err // Unknown error"
    },
    "3008": {
      "error": "Wrong Proposal Status or finalized",
      "block": "drop_proposal_switch_case_0@7",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "err // Wrong Proposal Status or finalized"
    },
    "3009": {
      "block": "drop_proposal_else_body@9",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0"
      ]
    },
    "3011": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%1#0",
        "\"\""
      ]
    },
    "3013": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%16#0"
      ]
    },
    "3014": {
      "error": "Unknown error",
      "op": "assert // Unknown error",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "3015": {
      "op": "dig 3",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%1#0"
      ]
    },
    "3017": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "op": "callsub decrement_pending_proposals",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "3020": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "awst_tmp%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "1"
      ]
    },
    "3021": {
      "op": "return",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ]
    },
    "3022": {
      "block": "drop_proposal_ternary_false@4",
      "stack_in": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "awst_tmp%0#0"
      ]
    },
    "3024": {
      "op": "extract 6 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "3027": {
      "op": "bytec 12 // \"ERR:\"",
      "defined_out": [
        "\"ERR:\"",
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "\"ERR:\""
      ]
    },
    "3029": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "tmp%11#0",
        "ternary_result%0#0"
      ]
    },
    "3030": {
      "op": "b drop_proposal_ternary_merge@5"
    },
    "3033": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds[routing]",
      "params": {},
      "block": "deposit_funds",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3035": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "3036": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "3037": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "3038": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "3040": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "3041": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "3042": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "3043": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "3044": {
      "op": "gtxns Receiver",
      "defined_out": [
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1"
      ]
    },
    "3046": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "payment#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%0#1",
        "tmp%1#0"
      ]
    },
    "3048": {
      "op": "==",
      "defined_out": [
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "tmp%2#0"
      ]
    },
    "3049": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "payment#0"
      ]
    },
    "3050": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "3051": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3053": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3054": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "3055": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "payment#0"
      ]
    },
    "3056": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "3058": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3059": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "tmp%4#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3061": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%4#0"
      ]
    },
    "3062": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3063": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3064": {
      "op": "return",
      "stack_out": []
    },
    "3065": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds[routing]",
      "params": {},
      "block": "withdraw_funds",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0"
      ]
    },
    "3068": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "amount#0 (copy)"
      ]
    },
    "3069": {
      "op": "len",
      "defined_out": [
        "amount#0",
        "len%0#0"
      ],
      "stack_out": [
        "amount#0",
        "len%0#0"
      ]
    },
    "3070": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "amount#0",
        "len%0#0"
      ],
      "stack_out": [
        "amount#0",
        "len%0#0",
        "8"
      ]
    },
    "3071": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "eq%0#0"
      ],
      "stack_out": [
        "amount#0",
        "eq%0#0"
      ]
    },
    "3072": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "amount#0"
      ]
    },
    "3073": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "amount#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "amount#0",
        "tmp%0#1"
      ]
    },
    "3076": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "amount#0"
      ]
    },
    "3077": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3078": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "3079": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3081": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3082": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "3083": {
      "op": "dup2",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%1#0 (copy)",
        "maybe_value%0#0 (copy)"
      ]
    },
    "3084": {
      "op": "<=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "3085": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "3086": {
      "op": "txn Fee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "3088": {
      "op": "global MinTxnFee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "3090": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "2"
      ]
    },
    "3092": {
      "op": "*",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "3093": {
      "op": ">=",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "3094": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "3095": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3097": {
      "op": "-",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%8#0"
      ]
    },
    "3098": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "tmp%1#0",
        "tmp%8#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3100": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%8#0"
      ]
    },
    "3101": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3102": {
      "op": "itxn_begin"
    },
    "3103": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "3104": {
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3106": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3107": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0"
      ]
    },
    "3108": {
      "op": "itxn_field Receiver"
    },
    "3110": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "3112": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3113": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3116": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3118": {
      "op": "itxn_submit"
    },
    "3119": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3120": {
      "op": "return",
      "stack_out": []
    },
    "3121": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_balance[routing]",
      "params": {},
      "block": "withdraw_balance",
      "stack_in": [],
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3124": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "3125": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3127": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3129": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "3131": {
      "op": "*",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "3132": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3133": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "3134": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3136": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3138": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3139": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%6#0"
      ]
    },
    "3141": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3143": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0",
        "value%1#0"
      ]
    },
    "3144": {
      "op": "-",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "3146": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3148": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3149": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0"
      ]
    },
    "3150": {
      "op": "-",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0"
      ]
    },
    "3151": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "amount#0 (copy)"
      ]
    },
    "3152": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "amount#0"
      ]
    },
    "3153": {
      "op": "itxn_begin"
    },
    "3154": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "0"
      ]
    },
    "3155": {
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3157": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "amount#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3158": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "amount#0",
        "maybe_value%1#0"
      ]
    },
    "3159": {
      "op": "itxn_field Receiver"
    },
    "3161": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "3163": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3164": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3166": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3167": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3169": {
      "op": "itxn_submit"
    },
    "3170": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3171": {
      "op": "return",
      "stack_out": []
    },
    "3172": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state[routing]",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3173": {
      "op": "bytec_0 // 0x7061757365645f7265676973747279",
      "defined_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0",
        "0x7061757365645f7265676973747279"
      ]
    },
    "3174": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3175": {
      "error": "check self.paused_registry exists",
      "op": "assert // check self.paused_registry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3177": {
      "op": "!=",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3178": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0x00"
      ]
    },
    "3180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#1",
        "0x00",
        "0"
      ]
    },
    "3181": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%0#1"
      ]
    },
    "3183": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3184": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "3185": {
      "op": "bytec 10 // 0x7061757365645f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x7061757365645f70726f706f73616c73",
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0",
        "0x7061757365645f70726f706f73616c73"
      ]
    },
    "3187": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3188": {
      "error": "check self.paused_proposals exists",
      "op": "assert // check self.paused_proposals exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%1#0"
      ]
    },
    "3189": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "3190": {
      "op": "!=",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0"
      ]
    },
    "3191": {
      "op": "bytec 9 // 0x00",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "3193": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "3194": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "3196": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3197": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "0"
      ]
    },
    "3198": {
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3200": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3201": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0"
      ]
    },
    "3202": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3203": {
      "op": "bytec 14 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "3205": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3206": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "3207": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3208": {
      "op": "bytec 23 // 0x78676f765f636f756e63696c",
      "defined_out": [
        "0",
        "0x78676f765f636f756e63696c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "0x78676f765f636f756e63696c"
      ]
    },
    "3210": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3211": {
      "error": "check self.xgov_council exists",
      "op": "assert // check self.xgov_council exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "3212": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "3213": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "3215": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3216": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "3217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "3218": {
      "op": "bytec 15 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "3220": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3221": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "3222": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0"
      ]
    },
    "3223": {
      "op": "bytec 16 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "3225": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3226": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ]
    },
    "3227": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "3228": {
      "op": "bytec 17 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0",
        "0x78676f765f6461656d6f6e",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "3230": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3231": {
      "error": "check self.xgov_daemon exists",
      "op": "assert // check self.xgov_daemon exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ]
    },
    "3232": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "3233": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "3235": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_exists%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3236": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "3237": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3238": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "0"
      ]
    },
    "3239": {
      "op": "bytec 19 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "3241": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3242": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%10#0"
      ]
    },
    "3243": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "0"
      ]
    },
    "3245": {
      "op": "bytec 11 // 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x6f70656e5f70726f706f73616c5f666565",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "3247": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3248": {
      "error": "check self.open_proposal_fee exists",
      "op": "assert // check self.open_proposal_fee exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "maybe_value%11#0"
      ]
    },
    "3249": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "3250": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "0"
      ]
    },
    "3251": {
      "op": "bytec 24 // 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "3253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_exists%12#0",
        "maybe_value%12#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3254": {
      "error": "check self.daemon_ops_funding_bps exists",
      "op": "assert // check self.daemon_ops_funding_bps exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "maybe_value%12#0"
      ]
    },
    "3255": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "0"
      ]
    },
    "3257": {
      "op": "bytec 25 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "3259": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3260": {
      "error": "check self.proposal_commitment_bps exists",
      "op": "assert // check self.proposal_commitment_bps exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "maybe_value%13#0"
      ]
    },
    "3261": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "3262": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "0"
      ]
    },
    "3263": {
      "op": "bytec 26 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "3265": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_exists%14#0",
        "maybe_value%14#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3266": {
      "error": "check self.min_requested_amount exists",
      "op": "assert // check self.min_requested_amount exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "maybe_value%14#0"
      ]
    },
    "3267": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "3268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "0"
      ]
    },
    "3269": {
      "op": "bytec 27 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "3271": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%15#0",
        "maybe_value%15#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3272": {
      "error": "check self.max_requested_amount_small exists",
      "op": "assert // check self.max_requested_amount_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%15#0"
      ]
    },
    "3273": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "3274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "0"
      ]
    },
    "3275": {
      "op": "bytec 28 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "3277": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_exists%16#0",
        "maybe_value%16#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3278": {
      "error": "check self.max_requested_amount_medium exists",
      "op": "assert // check self.max_requested_amount_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "maybe_value%16#0"
      ]
    },
    "3279": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "3280": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "3281": {
      "op": "bytec 29 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "3283": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_exists%17#0",
        "maybe_value%17#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3284": {
      "error": "check self.max_requested_amount_large exists",
      "op": "assert // check self.max_requested_amount_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "maybe_value%17#0"
      ]
    },
    "3285": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "3286": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%8#0",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "3288": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%8#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%8#0",
        "aggregate%head%1#0"
      ]
    },
    "3289": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "3290": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0"
      ]
    },
    "3291": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "0"
      ]
    },
    "3292": {
      "op": "bytec 30 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "3294": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%18#0",
        "maybe_value%18#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3295": {
      "error": "check self.discussion_duration_small exists",
      "op": "assert // check self.discussion_duration_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "maybe_value%18#0"
      ]
    },
    "3296": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0"
      ]
    },
    "3297": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "0"
      ]
    },
    "3298": {
      "op": "bytec 31 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "3300": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_exists%19#0",
        "maybe_value%19#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3301": {
      "error": "check self.discussion_duration_medium exists",
      "op": "assert // check self.discussion_duration_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%19#0"
      ]
    },
    "3302": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0"
      ]
    },
    "3303": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "0"
      ]
    },
    "3304": {
      "op": "bytec 32 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "3306": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_exists%20#0",
        "maybe_value%2#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3307": {
      "error": "check self.discussion_duration_large exists",
      "op": "assert // check self.discussion_duration_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "maybe_value%20#0"
      ]
    },
    "3308": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0"
      ]
    },
    "3309": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "0"
      ]
    },
    "3310": {
      "op": "bytec 33 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "3312": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_exists%21#0",
        "maybe_value%2#0",
        "maybe_value%21#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "3313": {
      "error": "check self.discussion_duration_xlarge exists",
      "op": "assert // check self.discussion_duration_xlarge exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "maybe_value%21#0"
      ]
    },
    "3314": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%val_as_bytes%9#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0"
      ]
    },
    "3315": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%10#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%9#0"
      ]
    },
    "3317": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%9#0",
        "aggregate%val_as_bytes%10#0"
      ]
    },
    "3319": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%4#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%11#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%head%4#0"
      ]
    },
    "3320": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%head%4#0",
        "aggregate%val_as_bytes%11#0"
      ]
    },
    "3322": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%12#0",
        "aggregate%head%5#0"
      ]
    },
    "3323": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%12#0"
      ]
    },
    "3324": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0"
      ]
    },
    "3325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "0"
      ]
    },
    "3326": {
      "op": "bytec 34 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "3328": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%22#0",
        "maybe_value%2#0",
        "maybe_value%22#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "3329": {
      "error": "check self.voting_duration_small exists",
      "op": "assert // check self.voting_duration_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "maybe_value%22#0"
      ]
    },
    "3330": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0"
      ]
    },
    "3331": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "0"
      ]
    },
    "3332": {
      "op": "bytec 35 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "3334": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%23#0",
        "maybe_value%2#0",
        "maybe_value%23#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "3335": {
      "error": "check self.voting_duration_medium exists",
      "op": "assert // check self.voting_duration_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "maybe_value%23#0"
      ]
    },
    "3336": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0"
      ]
    },
    "3337": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "0"
      ]
    },
    "3338": {
      "op": "bytec 36 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "3340": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%24#0",
        "maybe_value%2#0",
        "maybe_value%24#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "3341": {
      "error": "check self.voting_duration_large exists",
      "op": "assert // check self.voting_duration_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "maybe_value%24#0"
      ]
    },
    "3342": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0"
      ]
    },
    "3343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "0"
      ]
    },
    "3344": {
      "op": "bytec 37 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "3346": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%25#0",
        "maybe_value%2#0",
        "maybe_value%25#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "maybe_value%25#0",
        "maybe_exists%25#0"
      ]
    },
    "3347": {
      "error": "check self.voting_duration_xlarge exists",
      "op": "assert // check self.voting_duration_xlarge exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "maybe_value%25#0"
      ]
    },
    "3348": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0"
      ]
    },
    "3349": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%14#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%13#0"
      ]
    },
    "3351": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%13#0",
        "aggregate%val_as_bytes%14#0"
      ]
    },
    "3353": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%15#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%head%8#0"
      ]
    },
    "3354": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%15#0"
      ]
    },
    "3356": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%9#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%16#0",
        "aggregate%head%9#0"
      ]
    },
    "3357": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%9#0",
        "aggregate%val_as_bytes%16#0"
      ]
    },
    "3358": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0"
      ]
    },
    "3359": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "0"
      ]
    },
    "3360": {
      "op": "bytec 38 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x71756f72756d5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "3362": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%26#0",
        "maybe_value%2#0",
        "maybe_value%26#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "maybe_value%26#0",
        "maybe_exists%26#0"
      ]
    },
    "3363": {
      "error": "check self.quorum_small exists",
      "op": "assert // check self.quorum_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "maybe_value%26#0"
      ]
    },
    "3364": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0"
      ]
    },
    "3365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "0"
      ]
    },
    "3366": {
      "op": "bytec 39 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x71756f72756d5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "3368": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%27#0",
        "maybe_value%2#0",
        "maybe_value%27#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "maybe_value%27#0",
        "maybe_exists%27#0"
      ]
    },
    "3369": {
      "error": "check self.quorum_medium exists",
      "op": "assert // check self.quorum_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "maybe_value%27#0"
      ]
    },
    "3370": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0"
      ]
    },
    "3371": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "0"
      ]
    },
    "3372": {
      "op": "bytec 40 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x71756f72756d5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "3374": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%28#0",
        "maybe_value%2#0",
        "maybe_value%28#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "maybe_value%28#0",
        "maybe_exists%28#0"
      ]
    },
    "3375": {
      "error": "check self.quorum_large exists",
      "op": "assert // check self.quorum_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "maybe_value%28#0"
      ]
    },
    "3376": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0",
        "aggregate%val_as_bytes%19#0"
      ]
    },
    "3377": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%val_as_bytes%17#0",
        "aggregate%val_as_bytes%18#0"
      ]
    },
    "3379": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%19#0",
        "aggregate%head%12#0"
      ]
    },
    "3380": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%val_as_bytes%19#0"
      ]
    },
    "3381": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0"
      ]
    },
    "3382": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "0"
      ]
    },
    "3383": {
      "op": "bytec 41 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "3385": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%29#0",
        "maybe_value%2#0",
        "maybe_value%29#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "maybe_value%29#0",
        "maybe_exists%29#0"
      ]
    },
    "3386": {
      "error": "check self.weighted_quorum_small exists",
      "op": "assert // check self.weighted_quorum_small exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "maybe_value%29#0"
      ]
    },
    "3387": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0"
      ]
    },
    "3388": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "0"
      ]
    },
    "3389": {
      "op": "bytec 42 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "3391": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%30#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%30#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "maybe_value%30#0",
        "maybe_exists%30#0"
      ]
    },
    "3392": {
      "error": "check self.weighted_quorum_medium exists",
      "op": "assert // check self.weighted_quorum_medium exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "maybe_value%30#0"
      ]
    },
    "3393": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0"
      ]
    },
    "3394": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "0"
      ]
    },
    "3395": {
      "op": "bytec 43 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "3397": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%31#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%31#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "maybe_value%31#0",
        "maybe_exists%31#0"
      ]
    },
    "3398": {
      "error": "check self.weighted_quorum_large exists",
      "op": "assert // check self.weighted_quorum_large exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "maybe_value%31#0"
      ]
    },
    "3399": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0",
        "aggregate%val_as_bytes%22#0"
      ]
    },
    "3400": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%val_as_bytes%20#0",
        "aggregate%val_as_bytes%21#0"
      ]
    },
    "3402": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%15#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%val_as_bytes%22#0",
        "aggregate%head%15#0"
      ]
    },
    "3403": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%15#0",
        "aggregate%val_as_bytes%22#0"
      ]
    },
    "3404": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0"
      ]
    },
    "3405": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "0"
      ]
    },
    "3406": {
      "op": "bytec 5 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "3408": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%32#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "maybe_value%32#0",
        "maybe_exists%32#0"
      ]
    },
    "3409": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "maybe_value%32#0"
      ]
    },
    "3410": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0"
      ]
    },
    "3411": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "0"
      ]
    },
    "3412": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3414": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%33#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%33#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "maybe_value%33#0",
        "maybe_exists%33#0"
      ]
    },
    "3415": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "maybe_value%33#0"
      ]
    },
    "3416": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0"
      ]
    },
    "3417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "0"
      ]
    },
    "3418": {
      "op": "bytec 50 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3420": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%34#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_exists%34#0"
      ]
    },
    "3421": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0"
      ]
    },
    "3422": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "0"
      ]
    },
    "3423": {
      "op": "bytec 44 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3425": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%35#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_exists%35#0"
      ]
    },
    "3426": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "maybe_value%35#0"
      ]
    },
    "3427": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0"
      ]
    },
    "3428": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "0"
      ]
    },
    "3429": {
      "op": "bytec 45 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3431": {
      "op": "app_global_get_ex",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_exists%36#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%36#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "maybe_value%36#0",
        "maybe_exists%36#0"
      ]
    },
    "3432": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "maybe_value%36#0"
      ]
    },
    "3433": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0"
      ]
    },
    "3434": {
      "op": "uncover 23",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3436": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%encoded_bool%1#0",
        "0"
      ]
    },
    "3437": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%get_bit%0#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3438": {
      "op": "uncover 24",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%get_bit%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3440": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%get_bit%0#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%get_bit%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "3441": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "aggregate%get_bit%0#0"
      ]
    },
    "3443": {
      "op": "setbit",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3444": {
      "op": "uncover 23",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%set_bit%0#0",
        "maybe_value%2#0"
      ]
    },
    "3446": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%18#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%18#0"
      ]
    },
    "3447": {
      "op": "uncover 22",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%18#0",
        "maybe_value%3#0"
      ]
    },
    "3449": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%19#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%19#0"
      ]
    },
    "3450": {
      "op": "uncover 21",
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%19#0",
        "maybe_value%4#0"
      ]
    },
    "3452": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%20#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%20#0"
      ]
    },
    "3453": {
      "op": "uncover 20",
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%20#0",
        "maybe_value%5#0"
      ]
    },
    "3455": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%21#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%21#0"
      ]
    },
    "3456": {
      "op": "uncover 19",
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%21#0",
        "maybe_value%6#0"
      ]
    },
    "3458": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%22#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%7#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%22#0"
      ]
    },
    "3459": {
      "op": "uncover 18",
      "stack_out": [
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%22#0",
        "maybe_value%7#0"
      ]
    },
    "3461": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%23#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%8#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%23#0"
      ]
    },
    "3462": {
      "op": "uncover 17",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%23#0",
        "maybe_value%8#0"
      ]
    },
    "3464": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%24#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%24#0"
      ]
    },
    "3465": {
      "op": "uncover 16",
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%24#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3467": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%25#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%25#0"
      ]
    },
    "3468": {
      "op": "uncover 15",
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%25#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3470": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%26#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%26#0"
      ]
    },
    "3471": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%26#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "3473": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%27#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%3#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%27#0"
      ]
    },
    "3474": {
      "op": "uncover 13",
      "stack_out": [
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%27#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3476": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%28#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%28#0"
      ]
    },
    "3477": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%28#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "3479": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%29#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%val_as_bytes%5#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%5#0",
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%29#0"
      ]
    },
    "3480": {
      "op": "uncover 11",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%29#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "3482": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%2#0",
        "aggregate%head%30#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%30#0"
      ]
    },
    "3483": {
      "op": "uncover 10",
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%30#0",
        "aggregate%head%2#0"
      ]
    },
    "3485": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%31#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%31#0"
      ]
    },
    "3486": {
      "op": "uncover 9",
      "stack_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%31#0",
        "aggregate%head%6#0"
      ]
    },
    "3488": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%32#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%32#0"
      ]
    },
    "3489": {
      "op": "uncover 8",
      "stack_out": [
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%32#0",
        "aggregate%head%10#0"
      ]
    },
    "3491": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%head%33#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%13#0",
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%33#0"
      ]
    },
    "3492": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%33#0",
        "aggregate%head%13#0"
      ]
    },
    "3494": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%16#0",
        "aggregate%head%34#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%head%16#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%34#0"
      ]
    },
    "3495": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%34#0",
        "aggregate%head%16#0"
      ]
    },
    "3497": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%35#0",
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%23#0",
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%35#0"
      ]
    },
    "3498": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%35#0",
        "aggregate%val_as_bytes%23#0"
      ]
    },
    "3500": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%36#0",
        "aggregate%val_as_bytes%24#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%24#0",
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%36#0"
      ]
    },
    "3501": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%36#0",
        "aggregate%val_as_bytes%24#0"
      ]
    },
    "3503": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%37#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%34#0"
      ],
      "stack_out": [
        "maybe_value%34#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%37#0"
      ]
    },
    "3504": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%37#0",
        "maybe_value%34#0"
      ]
    },
    "3506": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%38#0",
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%25#0",
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%38#0"
      ]
    },
    "3507": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%38#0",
        "aggregate%val_as_bytes%25#0"
      ]
    },
    "3509": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%39#0",
        "aggregate%val_as_bytes%26#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%26#0",
        "aggregate%head%39#0"
      ]
    },
    "3510": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%39#0",
        "aggregate%val_as_bytes%26#0"
      ]
    },
    "3511": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%40#0"
      ],
      "stack_out": [
        "aggregate%head%40#0"
      ]
    },
    "3512": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%40#0"
      ],
      "stack_out": [
        "aggregate%head%40#0",
        "0x151f7c75"
      ]
    },
    "3513": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%head%40#0"
      ]
    },
    "3514": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3515": {
      "op": "log",
      "stack_out": []
    },
    "3516": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "3517": {
      "op": "return",
      "stack_out": []
    },
    "3518": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_xgov_box[routing]",
      "params": {},
      "block": "get_xgov_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "3521": {
      "op": "dup",
      "defined_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "xgov_address#0",
        "xgov_address#0 (copy)"
      ]
    },
    "3522": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0"
      ]
    },
    "3523": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "len%0#0",
        "32"
      ]
    },
    "3524": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "eq%0#0"
      ]
    },
    "3525": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "xgov_address#0"
      ]
    },
    "3526": {
      "op": "bytec_1 // 0x78",
      "defined_out": [
        "0x78",
        "xgov_address#0"
      ],
      "stack_out": [
        "xgov_address#0",
        "0x78"
      ]
    },
    "3527": {
      "op": "swap",
      "stack_out": [
        "0x78",
        "xgov_address#0"
      ]
    },
    "3528": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3529": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3530": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3531": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3532": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3533": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3534": {
      "op": "log",
      "stack_out": []
    },
    "3535": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3536": {
      "op": "return",
      "stack_out": []
    },
    "3537": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposer_box[routing]",
      "params": {},
      "block": "get_proposer_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0"
      ]
    },
    "3540": {
      "op": "dup",
      "defined_out": [
        "proposer_address#0",
        "proposer_address#0 (copy)"
      ],
      "stack_out": [
        "proposer_address#0",
        "proposer_address#0 (copy)"
      ]
    },
    "3541": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "len%0#0"
      ]
    },
    "3542": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "len%0#0",
        "32"
      ]
    },
    "3543": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "eq%0#0"
      ]
    },
    "3544": {
      "error": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "op": "assert // invalid number of bytes for arc4.static_array<arc4.uint8, 32>",
      "stack_out": [
        "proposer_address#0"
      ]
    },
    "3545": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "proposer_address#0"
      ],
      "stack_out": [
        "proposer_address#0",
        "0x70"
      ]
    },
    "3546": {
      "op": "swap",
      "stack_out": [
        "0x70",
        "proposer_address#0"
      ]
    },
    "3547": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3548": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3549": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3550": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3551": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3552": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3553": {
      "op": "log",
      "stack_out": []
    },
    "3554": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3555": {
      "op": "return",
      "stack_out": []
    },
    "3556": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_request_box[routing]",
      "params": {},
      "block": "get_request_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0"
      ]
    },
    "3559": {
      "op": "dup",
      "defined_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0",
        "request_id#0 (copy)"
      ]
    },
    "3560": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0"
      ]
    },
    "3561": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "len%0#0",
        "8"
      ]
    },
    "3562": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_id#0"
      ],
      "stack_out": [
        "request_id#0",
        "eq%0#0"
      ]
    },
    "3563": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_id#0"
      ]
    },
    "3564": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "3565": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3566": {
      "op": "bytec 20 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x72"
      ]
    },
    "3568": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "encoded_value%0#0"
      ]
    },
    "3569": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3570": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3571": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3572": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3573": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3574": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3575": {
      "op": "log",
      "stack_out": []
    },
    "3576": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3577": {
      "op": "return",
      "stack_out": []
    },
    "3578": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_request_unsubscribe_box[routing]",
      "params": {},
      "block": "get_request_unsubscribe_box",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "3581": {
      "op": "dup",
      "defined_out": [
        "request_unsubscribe_id#0",
        "request_unsubscribe_id#0 (copy)"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "request_unsubscribe_id#0 (copy)"
      ]
    },
    "3582": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "len%0#0"
      ]
    },
    "3583": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "len%0#0",
        "8"
      ]
    },
    "3584": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "request_unsubscribe_id#0"
      ],
      "stack_out": [
        "request_unsubscribe_id#0",
        "eq%0#0"
      ]
    },
    "3585": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "request_unsubscribe_id#0"
      ]
    },
    "3586": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "3587": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "3588": {
      "op": "bytec 21 // 0x7275",
      "defined_out": [
        "0x7275",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x7275"
      ]
    },
    "3590": {
      "op": "swap",
      "stack_out": [
        "0x7275",
        "encoded_value%0#0"
      ]
    },
    "3591": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3592": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3593": {
      "error": "check self.request_unsubscribe_box entry exists",
      "op": "assert // check self.request_unsubscribe_box entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "3594": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "3595": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "3596": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3597": {
      "op": "log",
      "stack_out": []
    },
    "3598": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3599": {
      "op": "return",
      "stack_out": []
    },
    "3600": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal[routing]",
      "params": {},
      "block": "is_proposal",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "3603": {
      "op": "dup",
      "defined_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0",
        "proposal_id#0 (copy)"
      ]
    },
    "3604": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0"
      ]
    },
    "3605": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "len%0#0",
        "8"
      ]
    },
    "3606": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "proposal_id#0"
      ],
      "stack_out": [
        "proposal_id#0",
        "eq%0#0"
      ]
    },
    "3607": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "proposal_id#0"
      ]
    },
    "3608": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3609": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "op": "callsub _is_proposal",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3612": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "3613": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3614": {
      "op": "return",
      "stack_out": []
    },
    "3615": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "params": {},
      "block": "is_xgov_manager",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3617": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3618": {
      "op": "bytec 6 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "3620": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3621": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3622": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3623": {
      "retsub": true,
      "op": "retsub"
    },
    "3624": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "params": {},
      "block": "is_xgov_subscriber",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3626": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3627": {
      "op": "bytec 13 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "3629": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3630": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3631": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3632": {
      "retsub": true,
      "op": "retsub"
    },
    "3633": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry._is_proposal",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "_is_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3636": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3638": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3640": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3641": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "3643": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3644": {
      "retsub": true,
      "op": "retsub"
    },
    "3645": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "get_proposal_proposer",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3648": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3650": {
      "op": "pushbytes 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)",
        "0x70726f706f736572"
      ]
    },
    "3660": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_exists#0"
      ]
    },
    "3661": {
      "error": "Missing key in state",
      "op": "assert // Missing key in state",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "3662": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "3663": {
      "op": "len",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%2#0"
      ]
    },
    "3664": {
      "op": "intc_3 // 32",
      "defined_out": [
        "32",
        "proposer_bytes#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%2#0",
        "32"
      ]
    },
    "3665": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "proposer_bytes#0",
        "tmp%3#0"
      ]
    },
    "3666": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "proposer_bytes#0"
      ]
    },
    "3667": {
      "retsub": true,
      "op": "retsub"
    },
    "3668": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "params": {
        "payment#0": "uint64"
      },
      "block": "valid_xgov_payment",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3671": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "3673": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3675": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3677": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3678": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "3681": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "3683": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3685": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "3686": {
      "op": "bytec 18 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "3688": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3689": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "3690": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3691": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "3694": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "3695": {
      "retsub": true,
      "op": "retsub"
    },
    "3696": {
      "block": "valid_xgov_payment_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "3697": {
      "retsub": true,
      "op": "retsub"
    },
    "3698": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "params": {
        "address#0": "bytes"
      },
      "block": "valid_kyc",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3701": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "3702": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "address#0 (copy)"
      ]
    },
    "3704": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3705": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3706": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3707": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0"
      ]
    },
    "3708": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%box_get%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%0#0",
        "1"
      ]
    },
    "3709": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3710": {
      "op": "bytec 9 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "3712": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "3713": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "3715": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3716": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "3717": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "3718": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3721": {
      "op": "frame_dig 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3723": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "3724": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0"
      ]
    },
    "3725": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "1"
      ]
    },
    "3726": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0"
      ]
    },
    "3727": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3729": {
      "op": ">",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "3730": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3733": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "3734": {
      "block": "valid_kyc_bool_merge@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ],
      "op": "swap",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "3735": {
      "retsub": true,
      "op": "retsub"
    },
    "3736": {
      "block": "valid_kyc_bool_false@3",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "and_result%0#0"
      ]
    },
    "3737": {
      "op": "b valid_kyc_bool_merge@4"
    },
    "3740": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.decrement_pending_proposals",
      "params": {
        "proposal_id#0": "uint64"
      },
      "block": "decrement_pending_proposals",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3743": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3744": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3746": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3747": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3748": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "3749": {
      "op": "-",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3750": {
      "op": "bytec 7 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "tmp%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "3752": {
      "op": "swap",
      "stack_out": [
        "0x70656e64696e675f70726f706f73616c73",
        "tmp%0#0"
      ]
    },
    "3753": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3754": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "3756": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_proposal_proposer",
      "op": "callsub get_proposal_proposer",
      "defined_out": [
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0"
      ]
    },
    "3759": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "proposer#0"
      ],
      "stack_out": [
        "proposer#0",
        "0x70"
      ]
    },
    "3760": {
      "op": "swap",
      "stack_out": [
        "0x70",
        "proposer#0"
      ]
    },
    "3761": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3762": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3763": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "0"
      ]
    },
    "3764": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "0",
        "1"
      ]
    },
    "3765": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0"
      ]
    },
    "3766": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0",
        "0"
      ]
    },
    "3767": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0",
        "0",
        "0"
      ]
    },
    "3768": {
      "op": "setbit",
      "defined_out": [
        "aggregate%updated_target%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%updated_target%0#0"
      ]
    },
    "3769": {
      "op": "intc_0 // 0"
    },
    "3770": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "0",
        "aggregate%updated_target%0#0"
      ]
    },
    "3771": {
      "op": "box_replace",
      "stack_out": []
    },
    "3772": {
      "retsub": true,
      "op": "retsub"
    },
    "3773": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.make_xgov_box",
      "params": {
        "voting_address#0": "bytes"
      },
      "block": "make_xgov_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3776": {
      "op": "global Round",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3778": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3779": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ]
    },
    "3781": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "voting_address#0 (copy)",
        "0x00000000000000000000000000000000"
      ]
    },
    "3799": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%2#0"
      ]
    },
    "3800": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3801": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0"
      ]
    },
    "3802": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
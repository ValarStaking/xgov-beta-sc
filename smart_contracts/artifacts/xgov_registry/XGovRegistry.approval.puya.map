{
  "version": 3,
  "sources": [
    "../../xgov_registry/contract.py"
  ],
  "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",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock 0x78676f7673 0x6f75747374616e64696e675f66756e6473 0x78 0x70 0x70656e64696e675f70726f706f73616c73 0x78676f765f6d616e61676572 0x70726f706f73616c5f666565 0x78676f765f73756273637269626572 0x78676f765f7061796f72 0x6b79635f70726f7669646572 0x636f6d6d69747465655f6d616e61676572 0x78676f765f666565 0x70726f706f7365725f666565 0x726571756573745f6964 0x151f7c75 0x00 0x78676f765f7265766965776572 0x636f6d6d69747465655f7075626c6973686572 0x70726f706f73616c5f7075626c697368696e675f627073 0x70726f706f73616c5f636f6d6d69746d656e745f627073 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d 0x6d61785f7265717565737465645f616d6f756e745f6c61726765 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d 0x64697363757373696f6e5f6475726174696f6e5f6c61726765 0x64697363757373696f6e5f6475726174696f6e5f786c61726765 0x766f74696e675f6475726174696f6e5f736d616c6c 0x766f74696e675f6475726174696f6e5f6d656469756d 0x766f74696e675f6475726174696f6e5f6c61726765 0x766f74696e675f6475726174696f6e5f786c61726765 0x636f6f6c5f646f776e5f6475726174696f6e 0x71756f72756d5f736d616c6c 0x71756f72756d5f6d656469756d 0x71756f72756d5f6c61726765 0x77656967687465645f71756f72756d5f736d616c6c 0x77656967687465645f71756f72756d5f6d656469756d 0x77656967687465645f71756f72756d5f6c61726765 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573 0x72 0x6d696e5f7265717565737465645f616d6f756e74 0x7374616c655f70726f706f73616c5f6475726174696f6e 0x636f6d6d69747465655f6964 0x737461747573"
    },
    "765": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "767": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "770": {
      "op": "txn GlobalNumByteSlice"
    },
    "772": {
      "op": "pushint 8 // 8"
    },
    "774": {
      "op": "=="
    },
    "775": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation"
    },
    "776": {
      "op": "txn GlobalNumUint"
    },
    "778": {
      "op": "pushint 31 // 31"
    },
    "780": {
      "op": "=="
    },
    "781": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation"
    },
    "782": {
      "op": "txn LocalNumByteSlice"
    },
    "784": {
      "op": "!"
    },
    "785": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation"
    },
    "786": {
      "op": "txn LocalNumUint"
    },
    "788": {
      "op": "!"
    },
    "789": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation"
    },
    "790": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572"
    },
    "792": {
      "op": "global ZeroAddress"
    },
    "794": {
      "op": "app_global_put"
    },
    "795": {
      "op": "bytec 7 // 0x78676f765f73756273637269626572"
    },
    "797": {
      "op": "global ZeroAddress"
    },
    "799": {
      "op": "app_global_put"
    },
    "800": {
      "op": "bytec 8 // 0x78676f765f7061796f72"
    },
    "802": {
      "op": "global ZeroAddress"
    },
    "804": {
      "op": "app_global_put"
    },
    "805": {
      "op": "bytec 16 // 0x78676f765f7265766965776572"
    },
    "807": {
      "op": "global ZeroAddress"
    },
    "809": {
      "op": "app_global_put"
    },
    "810": {
      "op": "bytec 9 // 0x6b79635f70726f7669646572"
    },
    "812": {
      "op": "global ZeroAddress"
    },
    "814": {
      "op": "app_global_put"
    },
    "815": {
      "op": "bytec 10 // 0x636f6d6d69747465655f6d616e61676572"
    },
    "817": {
      "op": "global ZeroAddress"
    },
    "819": {
      "op": "app_global_put"
    },
    "820": {
      "op": "bytec 17 // 0x636f6d6d69747465655f7075626c6973686572"
    },
    "822": {
      "op": "global ZeroAddress"
    },
    "824": {
      "op": "app_global_put"
    },
    "825": {
      "op": "bytec 11 // 0x78676f765f666565"
    },
    "827": {
      "op": "intc_0 // 0"
    },
    "828": {
      "op": "app_global_put"
    },
    "829": {
      "op": "bytec_0 // 0x78676f7673"
    },
    "830": {
      "op": "intc_0 // 0"
    },
    "831": {
      "op": "app_global_put"
    },
    "832": {
      "op": "bytec 12 // 0x70726f706f7365725f666565"
    },
    "834": {
      "op": "intc_0 // 0"
    },
    "835": {
      "op": "app_global_put"
    },
    "836": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565"
    },
    "838": {
      "op": "intc_0 // 0"
    },
    "839": {
      "op": "app_global_put"
    },
    "840": {
      "op": "bytec 18 // 0x70726f706f73616c5f7075626c697368696e675f627073"
    },
    "842": {
      "op": "intc_0 // 0"
    },
    "843": {
      "op": "app_global_put"
    },
    "844": {
      "op": "bytec 19 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073"
    },
    "846": {
      "op": "intc_0 // 0"
    },
    "847": {
      "op": "app_global_put"
    },
    "848": {
      "op": "bytec 41 // 0x6d696e5f7265717565737465645f616d6f756e74"
    },
    "850": {
      "op": "intc_0 // 0"
    },
    "851": {
      "op": "app_global_put"
    },
    "852": {
      "op": "bytec 20 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
    },
    "854": {
      "op": "intc_0 // 0"
    },
    "855": {
      "op": "app_global_put"
    },
    "856": {
      "op": "bytec 21 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
    },
    "858": {
      "op": "intc_0 // 0"
    },
    "859": {
      "op": "app_global_put"
    },
    "860": {
      "op": "bytec 22 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
    },
    "862": {
      "op": "intc_0 // 0"
    },
    "863": {
      "op": "app_global_put"
    },
    "864": {
      "op": "bytec 23 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
    },
    "866": {
      "op": "intc_0 // 0"
    },
    "867": {
      "op": "app_global_put"
    },
    "868": {
      "op": "bytec 24 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
    },
    "870": {
      "op": "intc_0 // 0"
    },
    "871": {
      "op": "app_global_put"
    },
    "872": {
      "op": "bytec 25 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
    },
    "874": {
      "op": "intc_0 // 0"
    },
    "875": {
      "op": "app_global_put"
    },
    "876": {
      "op": "bytec 26 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
    },
    "878": {
      "op": "intc_0 // 0"
    },
    "879": {
      "op": "app_global_put"
    },
    "880": {
      "op": "bytec 27 // 0x766f74696e675f6475726174696f6e5f736d616c6c"
    },
    "882": {
      "op": "intc_0 // 0"
    },
    "883": {
      "op": "app_global_put"
    },
    "884": {
      "op": "bytec 28 // 0x766f74696e675f6475726174696f6e5f6d656469756d"
    },
    "886": {
      "op": "intc_0 // 0"
    },
    "887": {
      "op": "app_global_put"
    },
    "888": {
      "op": "bytec 29 // 0x766f74696e675f6475726174696f6e5f6c61726765"
    },
    "890": {
      "op": "intc_0 // 0"
    },
    "891": {
      "op": "app_global_put"
    },
    "892": {
      "op": "bytec 30 // 0x766f74696e675f6475726174696f6e5f786c61726765"
    },
    "894": {
      "op": "intc_0 // 0"
    },
    "895": {
      "op": "app_global_put"
    },
    "896": {
      "op": "bytec 31 // 0x636f6f6c5f646f776e5f6475726174696f6e"
    },
    "898": {
      "op": "intc_0 // 0"
    },
    "899": {
      "op": "app_global_put"
    },
    "900": {
      "op": "bytec 42 // 0x7374616c655f70726f706f73616c5f6475726174696f6e"
    },
    "902": {
      "op": "intc_0 // 0"
    },
    "903": {
      "op": "app_global_put"
    },
    "904": {
      "op": "bytec 32 // 0x71756f72756d5f736d616c6c"
    },
    "906": {
      "op": "intc_0 // 0"
    },
    "907": {
      "op": "app_global_put"
    },
    "908": {
      "op": "bytec 33 // 0x71756f72756d5f6d656469756d"
    },
    "910": {
      "op": "intc_0 // 0"
    },
    "911": {
      "op": "app_global_put"
    },
    "912": {
      "op": "bytec 34 // 0x71756f72756d5f6c61726765"
    },
    "914": {
      "op": "intc_0 // 0"
    },
    "915": {
      "op": "app_global_put"
    },
    "916": {
      "op": "bytec 35 // 0x77656967687465645f71756f72756d5f736d616c6c"
    },
    "918": {
      "op": "intc_0 // 0"
    },
    "919": {
      "op": "app_global_put"
    },
    "920": {
      "op": "bytec 36 // 0x77656967687465645f71756f72756d5f6d656469756d"
    },
    "922": {
      "op": "intc_0 // 0"
    },
    "923": {
      "op": "app_global_put"
    },
    "924": {
      "op": "bytec 37 // 0x77656967687465645f71756f72756d5f6c61726765"
    },
    "926": {
      "op": "intc_0 // 0"
    },
    "927": {
      "op": "app_global_put"
    },
    "928": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473"
    },
    "929": {
      "op": "intc_0 // 0"
    },
    "930": {
      "op": "app_global_put"
    },
    "931": {
      "op": "bytec 38 // 0x636f6d6d69747465655f6d656d62657273"
    },
    "933": {
      "op": "intc_0 // 0"
    },
    "934": {
      "op": "app_global_put"
    },
    "935": {
      "op": "bytec 39 // 0x636f6d6d69747465655f766f746573"
    },
    "937": {
      "op": "intc_0 // 0"
    },
    "938": {
      "op": "app_global_put"
    },
    "939": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73"
    },
    "941": {
      "op": "intc_0 // 0"
    },
    "942": {
      "op": "app_global_put"
    },
    "943": {
      "op": "bytec 13 // 0x726571756573745f6964"
    },
    "945": {
      "op": "intc_0 // 0"
    },
    "946": {
      "op": "app_global_put"
    },
    "947": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "949": {
      "op": "bz main_after_if_else@32",
      "stack_out": []
    },
    "952": {
      "op": "pushbytess 0x4c5c61ba 0xd6c9cc1a 0x5c484055 0x11cf9720 0xd4216b6e 0xba8520f2 0x1677b30e 0xaa348d0d 0xae72cd8c 0x4956c1ab 0xa082cef8 0x76725559 0xe9553f8d 0x04f9322b 0x45077390 0x3c31bc02 0x0d2c7891 0x0da27885 0x7a4fee43 0x52dd10d7 0x2f4ef434 0x34349dcc 0x158f8dd6 0xdb27b9af 0xfdc695c2 0xba90ab54 0x0764de97 // method \"create()void\", method \"set_xgov_manager(address)void\", method \"set_payor(address)void\", method \"set_xgov_reviewer(address)void\", method \"set_xgov_subscriber(address)void\", method \"set_kyc_provider(address)void\", method \"set_committee_manager(address)void\", method \"set_committee_publisher(address)void\", method \"config_xgov_registry((uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3]))void\", method \"update_xgov_registry()void\", method \"subscribe_xgov(address,pay)void\", method \"unsubscribe_xgov(address)void\", method \"subscribe_xgov_app(uint64,address,pay)void\", method \"unsubscribe_xgov_app(uint64)void\", method \"request_subscribe_xgov(address,address,uint64,pay)void\", method \"approve_subscribe_xgov(uint64)void\", method \"reject_subscribe_xgov(uint64)void\", method \"set_voting_account(address,address)void\", method \"subscribe_proposer(pay)void\", method \"set_proposer_kyc(address,bool,uint64)void\", method \"declare_committee(byte[36],uint64,uint64)void\", method \"open_proposal(pay)uint64\", method \"vote_proposal(uint64,address,uint64,uint64)void\", method \"pay_grant_proposal(uint64)void\", method \"deposit_funds(pay)void\", method \"withdraw_funds(uint64)void\", method \"get_state()(address,address,address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64[3],uint64[4],uint64[4],uint64,uint64,uint64[3],uint64[3],uint64,uint64,byte[36],uint64,uint64)\""
    },
    "1089": {
      "op": "txna ApplicationArgs 0"
    },
    "1092": {
      "op": "match main_create_route@5 main_set_xgov_manager_route@6 main_set_payor_route@7 main_set_xgov_reviewer_route@8 main_set_xgov_subscriber_route@9 main_set_kyc_provider_route@10 main_set_committee_manager_route@11 main_set_committee_publisher_route@12 main_config_xgov_registry_route@13 main_update_xgov_registry_route@14 main_subscribe_xgov_route@15 main_unsubscribe_xgov_route@16 main_subscribe_xgov_app_route@17 main_unsubscribe_xgov_app_route@18 main_request_subscribe_xgov_route@19 main_approve_subscribe_xgov_route@20 main_reject_subscribe_xgov_route@21 main_set_voting_account_route@22 main_subscribe_proposer_route@23 main_set_proposer_kyc_route@24 main_declare_committee_route@25 main_open_proposal_route@26 main_vote_proposal_route@27 main_pay_grant_proposal_route@28 main_deposit_funds_route@29 main_withdraw_funds_route@30 main_get_state_route@31"
    },
    "1148": {
      "block": "main_after_if_else@32",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1149": {
      "op": "return"
    },
    "1150": {
      "block": "main_get_state_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "1152": {
      "op": "!",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "1153": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1154": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%149#0"
      ]
    },
    "1156": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1157": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "1160": {
      "op": "bytec 14 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0",
        "0x151f7c75"
      ]
    },
    "1162": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%151#0"
      ]
    },
    "1163": {
      "op": "concat",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "1164": {
      "op": "log",
      "stack_out": []
    },
    "1165": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1166": {
      "op": "return"
    },
    "1167": {
      "block": "main_withdraw_funds_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "1169": {
      "op": "!",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "1170": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1171": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "1173": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1174": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "1177": {
      "op": "btoi",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "1178": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "op": "callsub withdraw_funds",
      "stack_out": []
    },
    "1181": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1182": {
      "op": "return"
    },
    "1183": {
      "block": "main_deposit_funds_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "1185": {
      "op": "!",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "1186": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1187": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "1189": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1190": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "1192": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0",
        "1"
      ]
    },
    "1193": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "1194": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "1195": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "1197": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "1198": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "1199": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "1200": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "op": "callsub deposit_funds",
      "stack_out": []
    },
    "1203": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1204": {
      "op": "return"
    },
    "1205": {
      "block": "main_pay_grant_proposal_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "1207": {
      "op": "!",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "1208": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1209": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "1211": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1212": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "1215": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "op": "callsub pay_grant_proposal",
      "stack_out": []
    },
    "1218": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1219": {
      "op": "return"
    },
    "1220": {
      "block": "main_vote_proposal_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "1222": {
      "op": "!",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "1223": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1224": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "1226": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1227": {
      "op": "txna ApplicationArgs 1"
    },
    "1230": {
      "op": "txna ApplicationArgs 2"
    },
    "1233": {
      "op": "txna ApplicationArgs 3"
    },
    "1236": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%127#0",
        "tmp%128#0",
        "tmp%129#0",
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%127#0",
        "tmp%128#0",
        "tmp%129#0",
        "tmp%130#0"
      ]
    },
    "1239": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal",
      "op": "callsub vote_proposal",
      "stack_out": []
    },
    "1242": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1243": {
      "op": "return"
    },
    "1244": {
      "block": "main_open_proposal_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "1246": {
      "op": "!",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "1247": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1248": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "1250": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1251": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "1253": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0",
        "1"
      ]
    },
    "1254": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "1255": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "1256": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "1258": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "1259": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "1260": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "1261": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "op": "callsub open_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1264": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1265": {
      "op": "bytec 14 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1267": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "1268": {
      "op": "concat",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "1269": {
      "op": "log",
      "stack_out": []
    },
    "1270": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1271": {
      "op": "return"
    },
    "1272": {
      "block": "main_declare_committee_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "1274": {
      "op": "!",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "1275": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1276": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "1278": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1279": {
      "op": "txna ApplicationArgs 1"
    },
    "1282": {
      "op": "txna ApplicationArgs 2"
    },
    "1285": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%114#0",
        "tmp%115#0",
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "tmp%115#0",
        "tmp%116#0"
      ]
    },
    "1288": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "op": "callsub declare_committee",
      "stack_out": []
    },
    "1291": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1292": {
      "op": "return"
    },
    "1293": {
      "block": "main_set_proposer_kyc_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "1295": {
      "op": "!",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "1296": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1297": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "1299": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1300": {
      "op": "txna ApplicationArgs 1"
    },
    "1303": {
      "op": "txna ApplicationArgs 2"
    },
    "1306": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%107#0",
        "tmp%108#0",
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%107#0",
        "tmp%108#0",
        "tmp%109#0"
      ]
    },
    "1309": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "op": "callsub set_proposer_kyc",
      "stack_out": []
    },
    "1312": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1313": {
      "op": "return"
    },
    "1314": {
      "block": "main_subscribe_proposer_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "1316": {
      "op": "!",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "1317": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1318": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "1320": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1321": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "1323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0",
        "1"
      ]
    },
    "1324": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1325": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "1326": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "1328": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "1329": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "1330": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1331": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "op": "callsub subscribe_proposer",
      "stack_out": []
    },
    "1334": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1335": {
      "op": "return"
    },
    "1336": {
      "block": "main_set_voting_account_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "1338": {
      "op": "!",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "1339": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1340": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "1342": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1343": {
      "op": "txna ApplicationArgs 1"
    },
    "1346": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%96#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "tmp%97#0"
      ]
    },
    "1349": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "op": "callsub set_voting_account",
      "stack_out": []
    },
    "1352": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1353": {
      "op": "return"
    },
    "1354": {
      "block": "main_reject_subscribe_xgov_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1356": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1357": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1358": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "1360": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1361": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "1364": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov",
      "op": "callsub reject_subscribe_xgov",
      "stack_out": []
    },
    "1367": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1368": {
      "op": "return"
    },
    "1369": {
      "block": "main_approve_subscribe_xgov_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1371": {
      "op": "!",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1372": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1373": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "1375": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1376": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "1379": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "op": "callsub approve_subscribe_xgov",
      "stack_out": []
    },
    "1382": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1383": {
      "op": "return"
    },
    "1384": {
      "block": "main_request_subscribe_xgov_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "1386": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1387": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1388": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1390": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1391": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1394": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0"
      ]
    },
    "1397": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ]
    },
    "1400": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0"
      ]
    },
    "1402": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "1"
      ]
    },
    "1403": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "gtxn_idx%2#0"
      ]
    },
    "1404": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "1405": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "1407": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "1408": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "1409": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "gtxn_idx%2#0"
      ]
    },
    "1410": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "op": "callsub request_subscribe_xgov",
      "stack_out": []
    },
    "1413": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1414": {
      "op": "return"
    },
    "1415": {
      "block": "main_unsubscribe_xgov_app_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1417": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1418": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1419": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1421": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1422": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1425": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov_app",
      "op": "callsub unsubscribe_xgov_app",
      "stack_out": []
    },
    "1428": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1429": {
      "op": "return"
    },
    "1430": {
      "block": "main_subscribe_xgov_app_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "1432": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "1433": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1434": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "1436": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1437": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "1440": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "1443": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%66#0",
        "tmp%67#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "tmp%68#0"
      ]
    },
    "1445": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "tmp%68#0",
        "1"
      ]
    },
    "1446": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "gtxn_idx%1#0"
      ]
    },
    "1447": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "1448": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "1450": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "1451": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "1452": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "gtxn_idx%1#0"
      ]
    },
    "1453": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov_app",
      "op": "callsub subscribe_xgov_app",
      "stack_out": []
    },
    "1456": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1457": {
      "op": "return"
    },
    "1458": {
      "block": "main_unsubscribe_xgov_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1460": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1461": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1462": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1464": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1465": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "1468": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "op": "callsub unsubscribe_xgov",
      "stack_out": []
    },
    "1471": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1472": {
      "op": "return"
    },
    "1473": {
      "block": "main_subscribe_xgov_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1475": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1476": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1477": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1479": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1480": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1483": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "1485": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0",
        "1"
      ]
    },
    "1486": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0"
      ]
    },
    "1487": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "1488": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "1490": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1491": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1492": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%55#0",
        "gtxn_idx%0#0"
      ]
    },
    "1493": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "op": "callsub subscribe_xgov",
      "stack_out": []
    },
    "1496": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1497": {
      "op": "return"
    },
    "1498": {
      "block": "main_update_xgov_registry_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "1500": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "UpdateApplication"
      ]
    },
    "1502": {
      "op": "==",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "1503": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "1504": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "1506": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1507": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "op": "callsub update_xgov_registry"
    },
    "1510": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1511": {
      "op": "return"
    },
    "1512": {
      "block": "main_config_xgov_registry_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1514": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1515": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1516": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1518": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1519": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "1522": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "op": "callsub config_xgov_registry",
      "stack_out": []
    },
    "1525": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1526": {
      "op": "return"
    },
    "1527": {
      "block": "main_set_committee_publisher_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "1529": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "1530": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1531": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1533": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1534": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1537": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_publisher",
      "op": "callsub set_committee_publisher",
      "stack_out": []
    },
    "1540": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1541": {
      "op": "return"
    },
    "1542": {
      "block": "main_set_committee_manager_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1544": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1545": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1546": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1548": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1549": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1552": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "op": "callsub set_committee_manager",
      "stack_out": []
    },
    "1555": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1556": {
      "op": "return"
    },
    "1557": {
      "block": "main_set_kyc_provider_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1559": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1560": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1561": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1563": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1564": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1567": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "op": "callsub set_kyc_provider",
      "stack_out": []
    },
    "1570": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1571": {
      "op": "return"
    },
    "1572": {
      "block": "main_set_xgov_subscriber_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1574": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1575": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1576": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1578": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1579": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1582": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "op": "callsub set_xgov_subscriber",
      "stack_out": []
    },
    "1585": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1586": {
      "op": "return"
    },
    "1587": {
      "block": "main_set_xgov_reviewer_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1589": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1590": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1591": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1593": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1594": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1597": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_reviewer",
      "op": "callsub set_xgov_reviewer",
      "stack_out": []
    },
    "1600": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1601": {
      "op": "return"
    },
    "1602": {
      "block": "main_set_payor_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1604": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1605": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1606": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1608": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1609": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1612": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "op": "callsub set_payor",
      "stack_out": []
    },
    "1615": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1616": {
      "op": "return"
    },
    "1617": {
      "block": "main_set_xgov_manager_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "1619": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1620": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1621": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1623": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1624": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1627": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "op": "callsub set_xgov_manager",
      "stack_out": []
    },
    "1630": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1631": {
      "op": "return"
    },
    "1632": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "1634": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "1635": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1636": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "1638": {
      "op": "!",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "1639": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1640": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "op": "callsub create"
    },
    "1643": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1644": {
      "op": "return"
    },
    "1645": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "params": {},
      "block": "is_xgov_manager",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1648": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1650": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1651": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "1653": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1654": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1655": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1656": {
      "retsub": true,
      "op": "retsub"
    },
    "1657": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "params": {},
      "block": "is_xgov_subscriber",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1660": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1662": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1663": {
      "op": "bytec 7 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "1665": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1666": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1667": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1668": {
      "retsub": true,
      "op": "retsub"
    },
    "1669": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "is_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1672": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "1674": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1675": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "1677": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "1678": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%1#0"
      ]
    },
    "1680": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1681": {
      "retsub": true,
      "op": "retsub"
    },
    "1682": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "params": {
        "payment#0": "uint64"
      },
      "block": "valid_xgov_payment",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1685": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "1687": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1689": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1691": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1692": {
      "op": "bz valid_xgov_payment_bool_false@3",
      "stack_out": []
    },
    "1695": {
      "op": "frame_dig -1"
    },
    "1697": {
      "op": "gtxns Amount"
    },
    "1699": {
      "op": "intc_0 // 0"
    },
    "1700": {
      "op": "bytec 11 // 0x78676f765f666565"
    },
    "1702": {
      "op": "app_global_get_ex"
    },
    "1703": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists"
    },
    "1704": {
      "op": "=="
    },
    "1705": {
      "op": "bz valid_xgov_payment_bool_false@3"
    },
    "1708": {
      "op": "intc_1 // 1"
    },
    "1709": {
      "retsub": true,
      "op": "retsub"
    },
    "1710": {
      "block": "valid_xgov_payment_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1711": {
      "retsub": true,
      "op": "retsub"
    },
    "1712": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "params": {
        "address#0": "bytes"
      },
      "block": "valid_kyc",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1715": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "1716": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70",
        "address#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "address#0 (copy)"
      ]
    },
    "1718": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1719": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1720": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1721": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1722": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1723": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "is_true%0#0"
      ]
    },
    "1724": {
      "op": "bytec 15 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1726": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1727": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1729": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_bool%0#0"
      ]
    },
    "1730": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1731": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1732": {
      "op": "bz valid_kyc_bool_false@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1735": {
      "op": "frame_dig 0"
    },
    "1737": {
      "op": "box_get"
    },
    "1738": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists"
    },
    "1739": {
      "error": "Index access is out of bounds",
      "op": "extract 1 8 // on error: Index access is out of bounds"
    },
    "1742": {
      "op": "btoi"
    },
    "1743": {
      "op": "global LatestTimestamp"
    },
    "1745": {
      "op": ">"
    },
    "1746": {
      "op": "bz valid_kyc_bool_false@3"
    },
    "1749": {
      "op": "intc_1 // 1"
    },
    "1750": {
      "block": "valid_kyc_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "and_result%0#0"
      ],
      "op": "swap",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "1751": {
      "retsub": true,
      "op": "retsub"
    },
    "1752": {
      "block": "valid_kyc_bool_false@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "and_result%0#0"
      ]
    },
    "1753": {
      "op": "b valid_kyc_bool_merge@4"
    },
    "1756": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.create",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1759": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572"
    },
    "1761": {
      "op": "txn Sender",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "new_state_value%0#0"
      ]
    },
    "1763": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1764": {
      "retsub": true,
      "op": "retsub"
    },
    "1765": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_xgov_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1768": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1771": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1772": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572"
      ]
    },
    "1774": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1776": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1777": {
      "retsub": true,
      "op": "retsub"
    },
    "1778": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_payor",
      "params": {
        "payor#0": "bytes"
      },
      "block": "set_payor",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1781": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1784": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1785": {
      "op": "bytec 8 // 0x78676f765f7061796f72",
      "defined_out": [
        "0x78676f765f7061796f72"
      ],
      "stack_out": [
        "0x78676f765f7061796f72"
      ]
    },
    "1787": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7061796f72",
        "payor#0 (copy)"
      ]
    },
    "1789": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1790": {
      "retsub": true,
      "op": "retsub"
    },
    "1791": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_reviewer",
      "params": {
        "reviewer#0": "bytes"
      },
      "block": "set_xgov_reviewer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1794": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1797": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1798": {
      "op": "bytec 16 // 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572"
      ]
    },
    "1800": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "reviewer#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f7265766965776572",
        "reviewer#0 (copy)"
      ]
    },
    "1802": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1803": {
      "retsub": true,
      "op": "retsub"
    },
    "1804": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_xgov_subscriber",
      "params": {
        "subscriber#0": "bytes"
      },
      "block": "set_xgov_subscriber",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1807": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1810": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1811": {
      "op": "bytec 7 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0x78676f765f73756273637269626572"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572"
      ]
    },
    "1813": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ],
      "stack_out": [
        "0x78676f765f73756273637269626572",
        "subscriber#0 (copy)"
      ]
    },
    "1815": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1816": {
      "retsub": true,
      "op": "retsub"
    },
    "1817": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_kyc_provider",
      "params": {
        "provider#0": "bytes"
      },
      "block": "set_kyc_provider",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1820": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1823": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1824": {
      "op": "bytec 9 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0x6b79635f70726f7669646572"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572"
      ]
    },
    "1826": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ],
      "stack_out": [
        "0x6b79635f70726f7669646572",
        "provider#0 (copy)"
      ]
    },
    "1828": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1829": {
      "retsub": true,
      "op": "retsub"
    },
    "1830": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_manager",
      "params": {
        "manager#0": "bytes"
      },
      "block": "set_committee_manager",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1833": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1836": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1837": {
      "op": "bytec 10 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "1839": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d616e61676572",
        "manager#0 (copy)"
      ]
    },
    "1841": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1842": {
      "retsub": true,
      "op": "retsub"
    },
    "1843": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_committee_publisher",
      "params": {
        "publisher#0": "bytes"
      },
      "block": "set_committee_publisher",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1846": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1849": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1850": {
      "op": "bytec 17 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1852": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "publisher#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "publisher#0 (copy)"
      ]
    },
    "1854": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1855": {
      "retsub": true,
      "op": "retsub"
    },
    "1856": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.config_xgov_registry",
      "params": {
        "config#0": "bytes"
      },
      "block": "config_xgov_registry",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1859": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1862": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1863": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1864": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ],
      "stack_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "1866": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1867": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1868": {
      "op": "!",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1869": {
      "error": "Cannot perform operation with pending proposals",
      "op": "assert // Cannot perform operation with pending proposals",
      "stack_out": []
    },
    "1870": {
      "op": "frame_dig -1",
      "defined_out": [
        "config#0 (copy)"
      ],
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1872": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1875": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1876": {
      "op": "bytec 11 // 0x78676f765f666565",
      "defined_out": [
        "0x78676f765f666565",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f765f666565"
      ]
    },
    "1878": {
      "op": "swap",
      "stack_out": [
        "0x78676f765f666565",
        "new_state_value%0#0"
      ]
    },
    "1879": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1880": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1882": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1885": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "1886": {
      "op": "bytec 12 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0x70726f706f7365725f666565",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "0x70726f706f7365725f666565"
      ]
    },
    "1888": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f7365725f666565",
        "new_state_value%1#0"
      ]
    },
    "1889": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1890": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1892": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1895": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%2#0"
      ]
    },
    "1896": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%2#0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "1898": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f73616c5f666565",
        "new_state_value%2#0"
      ]
    },
    "1899": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1900": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1902": {
      "error": "Index access is out of bounds",
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1905": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0"
      ]
    },
    "1906": {
      "op": "bytec 18 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "1908": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "new_state_value%3#0"
      ]
    },
    "1909": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1910": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1912": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1915": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%4#0"
      ],
      "stack_out": [
        "new_state_value%4#0"
      ]
    },
    "1916": {
      "op": "bytec 19 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "new_state_value%4#0"
      ],
      "stack_out": [
        "new_state_value%4#0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1918": {
      "op": "swap",
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "new_state_value%4#0"
      ]
    },
    "1919": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1920": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1922": {
      "error": "Index access is out of bounds",
      "op": "extract 48 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1925": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1926": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1929": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%5#0"
      ]
    },
    "1930": {
      "op": "bytec 20 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "new_state_value%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%5#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1932": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "new_state_value%5#0"
      ]
    },
    "1933": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1934": {
      "op": "dup",
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1935": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%10#0"
      ]
    },
    "1938": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%6#0"
      ]
    },
    "1939": {
      "op": "bytec 21 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "new_state_value%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%6#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1941": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "new_state_value%6#0"
      ]
    },
    "1942": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1943": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1946": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%7#0"
      ],
      "stack_out": [
        "new_state_value%7#0"
      ]
    },
    "1947": {
      "op": "bytec 22 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "new_state_value%7#0"
      ],
      "stack_out": [
        "new_state_value%7#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1949": {
      "op": "swap",
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "new_state_value%7#0"
      ]
    },
    "1950": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1951": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1953": {
      "error": "Index access is out of bounds",
      "op": "extract 72 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1956": {
      "op": "dup",
      "defined_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1957": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1960": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%8#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%8#0"
      ]
    },
    "1961": {
      "op": "bytec 23 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "new_state_value%8#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%8#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1963": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "new_state_value%8#0"
      ]
    },
    "1964": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1965": {
      "op": "dup",
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1966": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "1969": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%9#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%9#0"
      ]
    },
    "1970": {
      "op": "bytec 24 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "new_state_value%9#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%9#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1972": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "new_state_value%9#0"
      ]
    },
    "1973": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1974": {
      "op": "dup",
      "stack_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1975": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%13#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%18#0"
      ]
    },
    "1978": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%10#0"
      ]
    },
    "1979": {
      "op": "bytec 25 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "new_state_value%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "new_state_value%10#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1981": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "new_state_value%10#0"
      ]
    },
    "1982": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1983": {
      "error": "Index access is out of bounds",
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1986": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%11#0"
      ],
      "stack_out": [
        "new_state_value%11#0"
      ]
    },
    "1987": {
      "op": "bytec 26 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "new_state_value%11#0"
      ],
      "stack_out": [
        "new_state_value%11#0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "1989": {
      "op": "swap",
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "new_state_value%11#0"
      ]
    },
    "1990": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1991": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "1993": {
      "error": "Index access is out of bounds",
      "op": "extract 104 32 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1996": {
      "op": "dup",
      "defined_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1997": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2000": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%12#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%12#0"
      ]
    },
    "2001": {
      "op": "bytec 27 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "new_state_value%12#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%12#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "2003": {
      "op": "swap",
      "stack_out": [
        "tmp%21#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "new_state_value%12#0"
      ]
    },
    "2004": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "2005": {
      "op": "dup",
      "stack_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "2006": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "2009": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%13#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%13#0"
      ]
    },
    "2010": {
      "op": "bytec 28 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "new_state_value%13#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%13#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "2012": {
      "op": "swap",
      "stack_out": [
        "tmp%21#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "new_state_value%13#0"
      ]
    },
    "2013": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "2014": {
      "op": "dup",
      "stack_out": [
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "2015": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%21#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%26#0"
      ]
    },
    "2018": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%14#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%14#0"
      ]
    },
    "2019": {
      "op": "bytec 29 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "new_state_value%14#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "new_state_value%14#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "2021": {
      "op": "swap",
      "stack_out": [
        "tmp%21#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "new_state_value%14#0"
      ]
    },
    "2022": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "2023": {
      "error": "Index access is out of bounds",
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "2026": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%15#0"
      ],
      "stack_out": [
        "new_state_value%15#0"
      ]
    },
    "2027": {
      "op": "bytec 30 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "new_state_value%15#0"
      ],
      "stack_out": [
        "new_state_value%15#0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "2029": {
      "op": "swap",
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "new_state_value%15#0"
      ]
    },
    "2030": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2031": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "2033": {
      "error": "Index access is out of bounds",
      "op": "extract 136 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "2036": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%16#0"
      ],
      "stack_out": [
        "new_state_value%16#0"
      ]
    },
    "2037": {
      "op": "bytec 31 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "new_state_value%16#0"
      ],
      "stack_out": [
        "new_state_value%16#0",
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "2039": {
      "op": "swap",
      "stack_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "new_state_value%16#0"
      ]
    },
    "2040": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2041": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "2043": {
      "error": "Index access is out of bounds",
      "op": "extract 152 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "2046": {
      "op": "dup",
      "defined_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "2047": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "2050": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%17#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%17#0"
      ]
    },
    "2051": {
      "op": "bytec 32 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "new_state_value%17#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%17#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "2053": {
      "op": "swap",
      "stack_out": [
        "tmp%30#0",
        "0x71756f72756d5f736d616c6c",
        "new_state_value%17#0"
      ]
    },
    "2054": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "2055": {
      "op": "dup",
      "stack_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "2056": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%30#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "tmp%33#0"
      ]
    },
    "2059": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%18#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%18#0"
      ]
    },
    "2060": {
      "op": "bytec 33 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "new_state_value%18#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "new_state_value%18#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "2062": {
      "op": "swap",
      "stack_out": [
        "tmp%30#0",
        "0x71756f72756d5f6d656469756d",
        "new_state_value%18#0"
      ]
    },
    "2063": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "2064": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "2067": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%19#0"
      ],
      "stack_out": [
        "new_state_value%19#0"
      ]
    },
    "2068": {
      "op": "bytec 34 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765",
        "new_state_value%19#0"
      ],
      "stack_out": [
        "new_state_value%19#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "2070": {
      "op": "swap",
      "stack_out": [
        "0x71756f72756d5f6c61726765",
        "new_state_value%19#0"
      ]
    },
    "2071": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2072": {
      "op": "frame_dig -1",
      "stack_out": [
        "config#0 (copy)"
      ]
    },
    "2074": {
      "error": "Index access is out of bounds",
      "op": "extract 176 24 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "2077": {
      "op": "dup",
      "defined_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ]
    },
    "2078": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "2081": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%20#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%20#0"
      ]
    },
    "2082": {
      "op": "bytec 35 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "new_state_value%20#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%20#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "2084": {
      "op": "swap",
      "stack_out": [
        "tmp%36#0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "new_state_value%20#0"
      ]
    },
    "2085": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "2086": {
      "op": "dup",
      "stack_out": [
        "tmp%36#0",
        "tmp%36#0 (copy)"
      ]
    },
    "2087": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%36#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%39#0"
      ]
    },
    "2090": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%21#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%21#0"
      ]
    },
    "2091": {
      "op": "bytec 36 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "new_state_value%21#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "new_state_value%21#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "2093": {
      "op": "swap",
      "stack_out": [
        "tmp%36#0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "new_state_value%21#0"
      ]
    },
    "2094": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "2095": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "2098": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%22#0"
      ],
      "stack_out": [
        "new_state_value%22#0"
      ]
    },
    "2099": {
      "op": "bytec 37 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "new_state_value%22#0"
      ],
      "stack_out": [
        "new_state_value%22#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "2101": {
      "op": "swap",
      "stack_out": [
        "0x77656967687465645f71756f72756d5f6c61726765",
        "new_state_value%22#0"
      ]
    },
    "2102": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2103": {
      "retsub": true,
      "op": "retsub"
    },
    "2104": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.update_xgov_registry",
      "params": {},
      "block": "update_xgov_registry",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2107": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2110": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2111": {
      "retsub": true,
      "op": "retsub"
    },
    "2112": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov",
      "params": {
        "voting_address#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "subscribe_xgov",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2115": {
      "op": "bytec_2 // 0x78"
    },
    "2116": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x78",
        "tmp%0#0"
      ]
    },
    "2118": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2119": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2120": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2122": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2123": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": []
    },
    "2124": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2126": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2129": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "2130": {
      "op": "bytec_2 // 0x78"
    },
    "2131": {
      "op": "txn Sender",
      "defined_out": [
        "0x78",
        "tmp%4#0"
      ],
      "stack_out": [
        "0x78",
        "tmp%4#0"
      ]
    },
    "2133": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2134": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%5#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "voting_address#0 (copy)"
      ]
    },
    "2136": {
      "op": "box_put",
      "stack_out": []
    },
    "2137": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2138": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "2139": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2140": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2141": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2142": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2143": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2144": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2145": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2146": {
      "retsub": true,
      "op": "retsub"
    },
    "2147": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov",
      "params": {
        "xgov_address#0": "bytes"
      },
      "block": "unsubscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2150": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2151": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2153": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2154": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2156": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2157": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2159": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2160": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_exists%1#0"
      ]
    },
    "2161": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2162": {
      "op": "frame_dig -1"
    },
    "2164": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0",
        "voting_address#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "xgov_address#0 (copy)",
        "tmp%2#0"
      ]
    },
    "2166": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "tmp%3#0"
      ]
    },
    "2167": {
      "op": "bnz unsubscribe_xgov_bool_true@2",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2170": {
      "op": "frame_dig 1"
    },
    "2172": {
      "op": "txn Sender"
    },
    "2174": {
      "op": "=="
    },
    "2175": {
      "op": "bz unsubscribe_xgov_bool_false@3"
    },
    "2178": {
      "block": "unsubscribe_xgov_bool_true@2",
      "stack_in": [
        "tmp%0#0",
        "voting_address#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "2179": {
      "block": "unsubscribe_xgov_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "voting_address#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2180": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "tmp%0#0"
      ]
    },
    "2182": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "{box_del}"
      ]
    },
    "2183": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2184": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "0"
      ]
    },
    "2185": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "0",
        "0x78676f7673"
      ]
    },
    "2186": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2187": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_value%2#0"
      ]
    },
    "2188": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "2189": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "new_state_value%0#0"
      ]
    },
    "2190": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2191": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2192": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0",
        "voting_address#0"
      ]
    },
    "2193": {
      "retsub": true,
      "op": "retsub"
    },
    "2194": {
      "block": "unsubscribe_xgov_bool_false@3",
      "stack_in": [
        "tmp%0#0",
        "voting_address#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "2195": {
      "op": "b unsubscribe_xgov_bool_merge@4"
    },
    "2198": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_xgov_app",
      "params": {
        "app_id#0": "bytes",
        "voting_address#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "subscribe_xgov_app",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2201": {
      "op": "frame_dig -3",
      "defined_out": [
        "app_id#0 (copy)"
      ],
      "stack_out": [
        "app_id#0 (copy)"
      ]
    },
    "2203": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2204": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2205": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "app_creator#0",
        "check%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "app_creator#0",
        "check%0#0"
      ]
    },
    "2207": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "app_creator#0"
      ]
    },
    "2208": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "tmp%0#0"
      ]
    },
    "2209": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "check%1#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "check%1#0"
      ]
    },
    "2211": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app_creator#0",
        "app_address#0"
      ]
    },
    "2212": {
      "op": "txn Sender",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "tmp%2#0"
      ]
    },
    "2214": {
      "op": "uncover 2",
      "stack_out": [
        "app_address#0",
        "tmp%2#0",
        "app_creator#0"
      ]
    },
    "2216": {
      "op": "==",
      "defined_out": [
        "app_address#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "app_address#0",
        "tmp%3#0"
      ]
    },
    "2217": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "app_address#0"
      ]
    },
    "2218": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "app_address#0"
      ],
      "stack_out": [
        "app_address#0",
        "0x78"
      ]
    },
    "2219": {
      "op": "swap",
      "stack_out": [
        "0x78",
        "app_address#0"
      ]
    },
    "2220": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2221": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2222": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2223": {
      "op": "bury 1",
      "stack_out": [
        "tmp%4#0",
        "maybe_exists%0#0"
      ]
    },
    "2225": {
      "op": "!",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2226": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2227": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "payment#0 (copy)"
      ]
    },
    "2229": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "2232": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2233": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%4#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "voting_address#0 (copy)"
      ]
    },
    "2235": {
      "op": "box_put",
      "stack_out": []
    },
    "2236": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2237": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673"
      ],
      "stack_out": [
        "0",
        "0x78676f7673"
      ]
    },
    "2238": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2239": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2240": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "2241": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2242": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2243": {
      "op": "swap",
      "stack_out": [
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2244": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2245": {
      "retsub": true,
      "op": "retsub"
    },
    "2246": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.unsubscribe_xgov_app",
      "params": {
        "app_id#0": "bytes"
      },
      "block": "unsubscribe_xgov_app",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2249": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_id#0 (copy)"
      ],
      "stack_out": [
        "app_id#0 (copy)"
      ]
    },
    "2251": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2252": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2253": {
      "op": "app_params_get AppCreator",
      "defined_out": [
        "app_creator#0",
        "check%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "app_creator#0",
        "check%0#0"
      ]
    },
    "2255": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "app_creator#0"
      ]
    },
    "2256": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "tmp%0#0"
      ]
    },
    "2257": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "app_address#0",
        "app_creator#0",
        "check%1#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "check%1#0"
      ]
    },
    "2259": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app_creator#0",
        "app_address#0"
      ]
    },
    "2260": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "app_address#0",
        "app_creator#0"
      ],
      "stack_out": [
        "app_creator#0",
        "app_address#0",
        "0x78"
      ]
    },
    "2261": {
      "op": "swap",
      "stack_out": [
        "app_creator#0",
        "0x78",
        "app_address#0"
      ]
    },
    "2262": {
      "op": "concat",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app_creator#0",
        "tmp%2#0"
      ]
    },
    "2263": {
      "op": "dup",
      "stack_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "2264": {
      "op": "cover 2",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "tmp%2#0"
      ]
    },
    "2266": {
      "op": "dup",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2267": {
      "op": "box_len",
      "defined_out": [
        "app_creator#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2268": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "2270": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "tmp%2#0"
      ]
    },
    "2271": {
      "op": "box_get",
      "defined_out": [
        "app_creator#0",
        "maybe_exists%1#0",
        "tmp%2#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "voting_address#0",
        "maybe_exists%1#0"
      ]
    },
    "2272": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "app_creator#0",
        "maybe_exists%1#0",
        "voting_address#0"
      ]
    },
    "2273": {
      "op": "cover 2",
      "defined_out": [
        "app_creator#0",
        "maybe_exists%1#0",
        "tmp%2#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "app_creator#0",
        "maybe_exists%1#0"
      ]
    },
    "2275": {
      "error": "check self.xgov_box entry exists",
      "op": "assert // check self.xgov_box entry exists",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "app_creator#0"
      ]
    },
    "2276": {
      "op": "txn Sender",
      "defined_out": [
        "app_creator#0",
        "tmp%2#0",
        "tmp%4#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "app_creator#0",
        "tmp%4#0"
      ]
    },
    "2278": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "tmp%5#0"
      ]
    },
    "2279": {
      "op": "bnz unsubscribe_xgov_app_bool_true@2",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0"
      ]
    },
    "2282": {
      "op": "frame_dig 1"
    },
    "2284": {
      "op": "txn Sender"
    },
    "2286": {
      "op": "=="
    },
    "2287": {
      "op": "bz unsubscribe_xgov_app_bool_false@3"
    },
    "2290": {
      "block": "unsubscribe_xgov_app_bool_true@2",
      "stack_in": [
        "tmp%2#0",
        "voting_address#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "2291": {
      "block": "unsubscribe_xgov_app_bool_merge@4",
      "stack_in": [
        "tmp%2#0",
        "voting_address#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0"
      ]
    },
    "2292": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "tmp%2#0"
      ]
    },
    "2294": {
      "op": "box_del",
      "defined_out": [
        "tmp%2#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "{box_del}"
      ]
    },
    "2295": {
      "op": "pop",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0"
      ]
    },
    "2296": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "0"
      ]
    },
    "2297": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "0",
        "0x78676f7673"
      ]
    },
    "2298": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2299": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "maybe_value%2#0"
      ]
    },
    "2300": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "2301": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "new_state_value%0#0"
      ]
    },
    "2302": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2303": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2304": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0",
        "voting_address#0"
      ]
    },
    "2305": {
      "retsub": true,
      "op": "retsub"
    },
    "2306": {
      "block": "unsubscribe_xgov_app_bool_false@3",
      "stack_in": [
        "tmp%2#0",
        "voting_address#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "voting_address#0",
        "or_result%0#0"
      ]
    },
    "2307": {
      "op": "b unsubscribe_xgov_app_bool_merge@4"
    },
    "2310": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.request_subscribe_xgov",
      "params": {
        "xgov_address#0": "bytes",
        "owner_address#0": "bytes",
        "relation_type#0": "bytes",
        "payment#0": "uint64"
      },
      "block": "request_subscribe_xgov",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2313": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2314": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2316": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2317": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2318": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2320": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2321": {
      "error": "Already an xGov",
      "op": "assert // Already an xGov",
      "stack_out": []
    },
    "2322": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2324": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_xgov_payment",
      "op": "callsub valid_xgov_payment",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2327": {
      "error": "Invalid payment",
      "op": "assert // Invalid payment",
      "stack_out": []
    },
    "2328": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2329": {
      "op": "bytec 13 // 0x726571756573745f6964",
      "defined_out": [
        "0",
        "0x726571756573745f6964"
      ],
      "stack_out": [
        "0",
        "0x726571756573745f6964"
      ]
    },
    "2331": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "maybe_exists%1#0"
      ]
    },
    "2332": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "rid#0"
      ]
    },
    "2333": {
      "op": "frame_dig -4",
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)"
      ]
    },
    "2335": {
      "op": "frame_dig -3",
      "defined_out": [
        "owner_address#0 (copy)",
        "rid#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "rid#0",
        "xgov_address#0 (copy)",
        "owner_address#0 (copy)"
      ]
    },
    "2337": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2338": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%2#0",
        "relation_type#0 (copy)"
      ]
    },
    "2340": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ],
      "stack_out": [
        "rid#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2341": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "rid#0"
      ]
    },
    "2342": {
      "op": "itob",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%3#0"
      ]
    },
    "2343": {
      "op": "bytec 40 // 0x72",
      "defined_out": [
        "0x72",
        "encoded_tuple_buffer%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%3#0",
        "0x72"
      ]
    },
    "2345": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "0x72",
        "tmp%3#0"
      ]
    },
    "2346": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%4#0"
      ]
    },
    "2347": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2348": {
      "op": "box_put",
      "stack_out": []
    },
    "2349": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2350": {
      "op": "bytec 13 // 0x726571756573745f6964",
      "stack_out": [
        "0",
        "0x726571756573745f6964"
      ]
    },
    "2352": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2353": {
      "error": "check self.request_id exists",
      "op": "assert // check self.request_id exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "2354": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "2355": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2356": {
      "op": "bytec 13 // 0x726571756573745f6964",
      "stack_out": [
        "new_state_value%0#0",
        "0x726571756573745f6964"
      ]
    },
    "2358": {
      "op": "swap",
      "stack_out": [
        "0x726571756573745f6964",
        "new_state_value%0#0"
      ]
    },
    "2359": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2360": {
      "retsub": true,
      "op": "retsub"
    },
    "2361": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.approve_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "approve_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2364": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2367": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2368": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "2370": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2371": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2372": {
      "op": "bytec 40 // 0x72",
      "defined_out": [
        "0x72",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x72"
      ]
    },
    "2374": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "tmp%2#0"
      ]
    },
    "2375": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2376": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "2377": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "request#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "request#0",
        "maybe_exists%0#0"
      ]
    },
    "2378": {
      "error": "check self.request_box entry exists",
      "op": "assert // check self.request_box entry exists",
      "stack_out": [
        "tmp%3#0",
        "request#0"
      ]
    },
    "2379": {
      "op": "dup",
      "defined_out": [
        "request#0",
        "request#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "2380": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "request#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "request#0",
        "tmp%4#0"
      ]
    },
    "2383": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "request#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "request#0",
        "tmp%4#0",
        "0x78"
      ]
    },
    "2384": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "request#0",
        "0x78",
        "tmp%4#0"
      ]
    },
    "2385": {
      "op": "concat",
      "defined_out": [
        "request#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "request#0",
        "tmp%5#0"
      ]
    },
    "2386": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0",
        "request#0"
      ]
    },
    "2387": {
      "error": "Index access is out of bounds",
      "op": "extract 32 32 // on error: Index access is out of bounds",
      "defined_out": [
        "new_box_value%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0",
        "new_box_value%0#0"
      ]
    },
    "2390": {
      "op": "box_put",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2391": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "2392": {
      "op": "bytec_0 // 0x78676f7673",
      "defined_out": [
        "0",
        "0x78676f7673",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "0x78676f7673"
      ]
    },
    "2393": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2394": {
      "error": "check self.xgovs exists",
      "op": "assert // check self.xgovs exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%1#0"
      ]
    },
    "2395": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2396": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "new_state_value%0#0"
      ]
    },
    "2397": {
      "op": "bytec_0 // 0x78676f7673",
      "stack_out": [
        "tmp%3#0",
        "new_state_value%0#0",
        "0x78676f7673"
      ]
    },
    "2398": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "0x78676f7673",
        "new_state_value%0#0"
      ]
    },
    "2399": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2400": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2401": {
      "op": "pop",
      "stack_out": []
    },
    "2402": {
      "retsub": true,
      "op": "retsub"
    },
    "2403": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.reject_subscribe_xgov",
      "params": {
        "request_id#0": "bytes"
      },
      "block": "reject_subscribe_xgov",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2406": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_subscriber",
      "op": "callsub is_xgov_subscriber",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2409": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2410": {
      "op": "frame_dig -1",
      "defined_out": [
        "request_id#0 (copy)"
      ],
      "stack_out": [
        "request_id#0 (copy)"
      ]
    },
    "2412": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2413": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2414": {
      "op": "bytec 40 // 0x72",
      "defined_out": [
        "0x72",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x72"
      ]
    },
    "2416": {
      "op": "swap",
      "stack_out": [
        "0x72",
        "tmp%2#0"
      ]
    },
    "2417": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2418": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "2419": {
      "op": "pop",
      "stack_out": []
    },
    "2420": {
      "retsub": true,
      "op": "retsub"
    },
    "2421": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_voting_account",
      "params": {
        "xgov_address#0": "bytes",
        "voting_address#0": "bytes"
      },
      "block": "set_voting_account",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2424": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78"
      ],
      "stack_out": [
        "0x78"
      ]
    },
    "2425": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "2427": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2428": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2429": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "old_voting_address#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "old_voting_address#0",
        "exists#0"
      ]
    },
    "2430": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%0#0",
        "old_voting_address#0"
      ]
    },
    "2431": {
      "op": "txn Sender",
      "defined_out": [
        "old_voting_address#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "old_voting_address#0",
        "tmp%1#0"
      ]
    },
    "2433": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2434": {
      "op": "bnz set_voting_account_bool_true@2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2437": {
      "op": "frame_dig -2"
    },
    "2439": {
      "op": "txn Sender"
    },
    "2441": {
      "op": "=="
    },
    "2442": {
      "op": "bz set_voting_account_bool_false@3"
    },
    "2445": {
      "block": "set_voting_account_bool_true@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "or_result%0#0"
      ]
    },
    "2446": {
      "block": "set_voting_account_bool_merge@4",
      "stack_in": [
        "tmp%0#0",
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2447": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2449": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "voting_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "voting_address#0 (copy)"
      ]
    },
    "2451": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2452": {
      "retsub": true,
      "op": "retsub"
    },
    "2453": {
      "block": "set_voting_account_bool_false@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "or_result%0#0"
      ]
    },
    "2454": {
      "op": "b set_voting_account_bool_merge@4"
    },
    "2457": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.subscribe_proposer",
      "params": {
        "payment#0": "uint64"
      },
      "block": "subscribe_proposer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2460": {
      "op": "bytec_3 // 0x70"
    },
    "2461": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%0#0"
      ]
    },
    "2463": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2464": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2465": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2467": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2468": {
      "error": "Already a proposer",
      "op": "assert // Already a proposer",
      "stack_out": []
    },
    "2469": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2471": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2473": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2475": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2476": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2477": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2479": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2481": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "2482": {
      "op": "bytec 12 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "2484": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2485": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "tmp%6#0",
        "maybe_value%1#0"
      ]
    },
    "2486": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2487": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "2488": {
      "op": "bytec_3 // 0x70"
    },
    "2489": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%8#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%8#0"
      ]
    },
    "2491": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2492": {
      "op": "pushbytes 0x000000000000000000",
      "defined_out": [
        "0x000000000000000000",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0x000000000000000000"
      ]
    },
    "2503": {
      "op": "box_put",
      "stack_out": []
    },
    "2504": {
      "retsub": true,
      "op": "retsub"
    },
    "2505": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.set_proposer_kyc",
      "params": {
        "proposer#0": "bytes",
        "kyc_status#0": "bytes",
        "kyc_expiring#0": "bytes"
      },
      "block": "set_proposer_kyc",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2508": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2510": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2511": {
      "op": "bytec 9 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "2513": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2514": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2515": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2516": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2517": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70"
      ],
      "stack_out": [
        "0x70"
      ]
    },
    "2518": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x70",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70",
        "proposer#0 (copy)"
      ]
    },
    "2520": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2521": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2522": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2523": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "2525": {
      "error": "Proposer does not exist",
      "op": "assert // Proposer does not exist",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2526": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2527": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2528": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "2529": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2530": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "is_true%0#0"
      ]
    },
    "2531": {
      "op": "bytec 15 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2534": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2536": {
      "op": "setbit",
      "defined_out": [
        "active_proposal#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0"
      ]
    },
    "2537": {
      "op": "frame_dig -2",
      "defined_out": [
        "active_proposal#0",
        "kyc_status#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "kyc_status#0 (copy)"
      ]
    },
    "2539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "kyc_status#0 (copy)",
        "0"
      ]
    },
    "2540": {
      "op": "getbit",
      "defined_out": [
        "active_proposal#0",
        "is_true%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "is_true%1#0"
      ]
    },
    "2541": {
      "op": "intc_1 // 1"
    },
    "2542": {
      "op": "swap",
      "defined_out": [
        "1",
        "active_proposal#0",
        "is_true%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "active_proposal#0",
        "1",
        "is_true%1#0"
      ]
    },
    "2543": {
      "op": "setbit",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2544": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "kyc_expiring#0 (copy)"
      ]
    },
    "2546": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2547": {
      "op": "box_put",
      "stack_out": []
    },
    "2548": {
      "retsub": true,
      "op": "retsub"
    },
    "2549": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.declare_committee",
      "params": {
        "cid#0": "bytes",
        "size#0": "bytes",
        "votes#0": "bytes"
      },
      "block": "declare_committee",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2552": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2554": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "2555": {
      "op": "bytec 10 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "2557": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2558": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "2559": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2560": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2561": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "2563": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "cid#0 (copy)"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "cid#0 (copy)"
      ]
    },
    "2565": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2566": {
      "op": "frame_dig -2",
      "defined_out": [
        "size#0 (copy)"
      ],
      "stack_out": [
        "size#0 (copy)"
      ]
    },
    "2568": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2569": {
      "op": "bytec 38 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2571": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "new_state_value%0#0"
      ]
    },
    "2572": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2573": {
      "op": "frame_dig -1",
      "defined_out": [
        "votes#0 (copy)"
      ],
      "stack_out": [
        "votes#0 (copy)"
      ]
    },
    "2575": {
      "op": "btoi",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "2576": {
      "op": "bytec 39 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2578": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "new_state_value%1#0"
      ]
    },
    "2579": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2580": {
      "retsub": true,
      "op": "retsub"
    },
    "2581": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.open_proposal",
      "params": {
        "payment#0": "uint64"
      },
      "block": "open_proposal",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2584": {
      "op": "bytec_3 // 0x70"
    },
    "2585": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%0#0"
      ]
    },
    "2587": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2588": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2589": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "2591": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2592": {
      "op": "bytec_3 // 0x70"
    },
    "2593": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "tmp%2#0"
      ],
      "stack_out": [
        "0x70",
        "tmp%2#0"
      ]
    },
    "2595": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2596": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2597": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2598": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "2599": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0"
      ]
    },
    "2600": {
      "op": "bytec 15 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0"
      ],
      "stack_out": [
        "is_true%0#0",
        "0x00"
      ]
    },
    "2602": {
      "op": "intc_0 // 0",
      "stack_out": [
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2603": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2605": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "2606": {
      "op": "bytec 15 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "2608": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2609": {
      "error": "Proposer already has an active proposal",
      "op": "assert // Proposer already has an active proposal",
      "stack_out": []
    },
    "2610": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2612": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2615": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": []
    },
    "2616": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2618": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2620": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "3"
      ]
    },
    "2622": {
      "op": "*",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2623": {
      "op": ">=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "2624": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "2625": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2627": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2629": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2631": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "2632": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "2633": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "2635": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2637": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "2638": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f666565",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "2640": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2641": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "tmp%14#0",
        "maybe_value%2#0"
      ]
    },
    "2642": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "2643": {
      "error": "Wrong payment amount",
      "op": "assert // Wrong payment amount",
      "stack_out": []
    },
    "2644": {
      "op": "itxn_begin"
    },
    "2645": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2647": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "18"
      ]
    },
    "2649": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2651": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "5"
      ]
    },
    "2653": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2655": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "1"
      ]
    },
    "2656": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2658": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "CoEBQw=="
      ]
    },
    "2664": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2666": {
      "op": "pushbytes base64(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)",
      "defined_out": [
        "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",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "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"
      ]
    },
    "5909": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "5911": {
      "op": "pushbytes 0xcc694eaa // method \"create(address)void\"",
      "defined_out": [
        "Method(create(address)void)",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "Method(create(address)void)"
      ]
    },
    "5917": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "5919": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5921": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5922": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5924": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5925": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5927": {
      "op": "itxn_submit"
    },
    "5928": {
      "op": "itxn CreatedApplicationID"
    },
    "5930": {
      "op": "bytec_3 // 0x70"
    },
    "5931": {
      "op": "txn Sender",
      "defined_out": [
        "0x70",
        "res.CreatedApplicationID#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0x70",
        "tmp%17#0"
      ]
    },
    "5933": {
      "op": "concat",
      "defined_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0"
      ]
    },
    "5934": {
      "op": "dup",
      "defined_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ]
    },
    "5935": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "res.CreatedApplicationID#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "5936": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "maybe_value%3#0"
      ]
    },
    "5937": {
      "op": "intc_0 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "5938": {
      "op": "intc_1 // 1",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "maybe_value%3#0",
        "0",
        "1"
      ]
    },
    "5939": {
      "op": "setbit",
      "defined_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "tmp%18#0",
        "updated_data%0#0"
      ]
    },
    "5940": {
      "op": "box_put",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "5941": {
      "op": "itxn_begin"
    },
    "5942": {
      "op": "dup",
      "defined_out": [
        "res.CreatedApplicationID#0",
        "res.CreatedApplicationID#0 (copy)"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "res.CreatedApplicationID#0 (copy)"
      ]
    },
    "5943": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "5945": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0"
      ]
    },
    "5946": {
      "op": "intc_0 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "0"
      ]
    },
    "5947": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "5949": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "5950": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%4#0"
      ]
    },
    "5951": {
      "op": "pushint 963000 // 963000",
      "defined_out": [
        "963000",
        "maybe_value%4#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "maybe_value%4#0",
        "963000"
      ]
    },
    "5955": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "res.CreatedApplicationID#0",
        "value%0#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "5956": {
      "op": "itxn_field Amount",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "value%0#0"
      ]
    },
    "5958": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "5960": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay",
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "pay"
      ]
    },
    "5961": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "5963": {
      "op": "intc_0 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0"
      ]
    },
    "5964": {
      "op": "itxn_field Fee",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "5966": {
      "op": "itxn_submit"
    },
    "5967": {
      "op": "intc_0 // 0",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0"
      ]
    },
    "5968": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "5970": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "5971": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "maybe_value%5#0"
      ]
    },
    "5972": {
      "op": "intc_1 // 1",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "5973": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "res.CreatedApplicationID#0"
      ],
      "stack_out": [
        "res.CreatedApplicationID#0",
        "new_state_value%0#0"
      ]
    },
    "5974": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "new_state_value%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "5976": {
      "op": "swap",
      "stack_out": [
        "res.CreatedApplicationID#0",
        "0x70656e64696e675f70726f706f73616c73",
        "new_state_value%0#0"
      ]
    },
    "5977": {
      "op": "app_global_put",
      "stack_out": [
        "res.CreatedApplicationID#0"
      ]
    },
    "5978": {
      "retsub": true,
      "op": "retsub"
    },
    "5979": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.vote_proposal",
      "params": {
        "proposal_id#0": "bytes",
        "xgov_address#0": "bytes",
        "approval_votes#0": "bytes",
        "rejection_votes#0": "bytes"
      },
      "block": "vote_proposal",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "5982": {
      "op": "frame_dig -4",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "5984": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "op": "callsub is_proposal",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5987": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "5988": {
      "op": "frame_dig -4",
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "5990": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "5991": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "5992": {
      "op": "bytec 44 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "0x737461747573"
      ]
    },
    "5994": {
      "op": "app_global_get_ex",
      "defined_out": [
        "status#0",
        "status_exists#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "5995": {
      "op": "pop",
      "stack_out": [
        "tmp%1#0",
        "status#0"
      ]
    },
    "5996": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "status#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "status#0",
        "25"
      ]
    },
    "5998": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "5999": {
      "error": "Proposal is not in voting phase",
      "op": "assert // Proposal is not in voting phase",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6000": {
      "op": "bytec_2 // 0x78",
      "defined_out": [
        "0x78",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x78"
      ]
    },
    "6001": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x78",
        "tmp%1#0",
        "xgov_address#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x78",
        "xgov_address#0 (copy)"
      ]
    },
    "6003": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "6004": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "tmp%1#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "voting_address#0",
        "exists#0"
      ]
    },
    "6005": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%1#0",
        "voting_address#0"
      ]
    },
    "6006": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%4#0",
        "voting_address#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "voting_address#0",
        "tmp%4#0"
      ]
    },
    "6008": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0"
      ]
    },
    "6009": {
      "error": "Must be voting address",
      "op": "assert // Must be voting address",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6010": {
      "op": "itxn_begin"
    },
    "6011": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "6013": {
      "op": "pushbytes 0x1841a0d2 // method \"vote(address,uint64,uint64)string\"",
      "defined_out": [
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(vote(address,uint64,uint64)string)"
      ]
    },
    "6019": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6021": {
      "op": "frame_dig -3",
      "stack_out": [
        "xgov_address#0 (copy)"
      ]
    },
    "6023": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6025": {
      "op": "frame_dig -2",
      "defined_out": [
        "approval_votes#0 (copy)"
      ],
      "stack_out": [
        "approval_votes#0 (copy)"
      ]
    },
    "6027": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6029": {
      "op": "frame_dig -1",
      "defined_out": [
        "rejection_votes#0 (copy)"
      ],
      "stack_out": [
        "rejection_votes#0 (copy)"
      ]
    },
    "6031": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "6033": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "6034": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "6036": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6037": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "6039": {
      "op": "itxn_submit"
    },
    "6040": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "6042": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "6045": {
      "op": "bytec 14 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "6047": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "6048": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": []
    },
    "6049": {
      "retsub": true,
      "op": "retsub"
    },
    "6050": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.pay_grant_proposal",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "pay_grant_proposal",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6053": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6055": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "6056": {
      "op": "bytec 8 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "6058": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6059": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "6060": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6061": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "6062": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "6064": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_proposal",
      "op": "callsub is_proposal",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "6067": {
      "error": "Invalid proposal",
      "op": "assert // Invalid proposal",
      "stack_out": []
    },
    "6068": {
      "op": "frame_dig -1",
      "stack_out": [
        "proposal_id#0 (copy)"
      ]
    },
    "6070": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "6071": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "6072": {
      "op": "bytec 44 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "0x737461747573"
      ]
    },
    "6074": {
      "op": "app_global_get_ex",
      "defined_out": [
        "status#0",
        "status_exists#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "status#0",
        "status_exists#0"
      ]
    },
    "6075": {
      "op": "pop",
      "stack_out": [
        "tmp%3#0",
        "status#0"
      ]
    },
    "6076": {
      "op": "swap",
      "stack_out": [
        "status#0",
        "tmp%3#0"
      ]
    },
    "6077": {
      "op": "dup",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "6078": {
      "op": "pushbytes 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572",
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "0x70726f706f736572"
      ]
    },
    "6088": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_exists#0",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "proposer_exists#0"
      ]
    },
    "6089": {
      "op": "pop",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "6090": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "6091": {
      "op": "len",
      "defined_out": [
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%5#0"
      ]
    },
    "6092": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%5#0",
        "32"
      ]
    },
    "6094": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%6#0"
      ]
    },
    "6095": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "6096": {
      "op": "dig 1",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%3#0 (copy)"
      ]
    },
    "6098": {
      "op": "pushbytes 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "proposer_bytes#0",
        "status#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%3#0 (copy)",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "6116": {
      "op": "app_global_get_ex",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "requested_amount_exists#0",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "requested_amount_exists#0"
      ]
    },
    "6117": {
      "op": "pop",
      "stack_out": [
        "status#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "requested_amount#0"
      ]
    },
    "6118": {
      "op": "cover 2",
      "stack_out": [
        "status#0",
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "6120": {
      "op": "uncover 3",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "status#0"
      ]
    },
    "6122": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "proposer_bytes#0",
        "requested_amount#0",
        "status#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "status#0",
        "30"
      ]
    },
    "6124": {
      "op": "==",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%8#0"
      ]
    },
    "6125": {
      "error": "Proposal is not approved",
      "op": "assert // Proposal is not approved",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0"
      ]
    },
    "6126": {
      "op": "bytec_3 // 0x70",
      "defined_out": [
        "0x70",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "0x70"
      ]
    },
    "6127": {
      "op": "dig 1",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "0x70",
        "proposer_bytes#0 (copy)"
      ]
    },
    "6129": {
      "op": "concat",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "6130": {
      "op": "dup",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "6131": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "6132": {
      "op": "bury 1",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_exists%1#0"
      ]
    },
    "6134": {
      "error": "Wrong proposer",
      "op": "assert // Wrong proposer",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "6135": {
      "op": "dig 1",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "proposer_bytes#0 (copy)"
      ]
    },
    "6137": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.valid_kyc",
      "op": "callsub valid_kyc",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "6140": {
      "error": "Invalid KYC",
      "op": "assert // Invalid KYC",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "6141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "0"
      ]
    },
    "6142": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6143": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "6144": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%2#0"
      ]
    },
    "6145": {
      "op": "dig 4",
      "defined_out": [
        "maybe_value%2#0",
        "proposer_bytes#0",
        "requested_amount#0",
        "requested_amount#0 (copy)",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "requested_amount#0 (copy)"
      ]
    },
    "6147": {
      "op": ">=",
      "defined_out": [
        "proposer_bytes#0",
        "requested_amount#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "6148": {
      "error": "Insufficient treasury funds",
      "op": "assert // Insufficient treasury funds",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "6149": {
      "op": "itxn_begin"
    },
    "6150": {
      "op": "dig 3",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0",
        "requested_amount#0 (copy)"
      ]
    },
    "6152": {
      "op": "itxn_field Amount",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "proposer_bytes#0",
        "tmp%9#0"
      ]
    },
    "6154": {
      "op": "swap",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "proposer_bytes#0"
      ]
    },
    "6155": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "6157": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "pay"
      ]
    },
    "6158": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "6160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "0"
      ]
    },
    "6161": {
      "op": "itxn_field Fee",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "6163": {
      "op": "itxn_submit"
    },
    "6164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "0"
      ]
    },
    "6165": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6166": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "6167": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "requested_amount#0",
        "tmp%3#0",
        "tmp%9#0",
        "maybe_value%0#1"
      ]
    },
    "6168": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "maybe_value%0#1",
        "requested_amount#0"
      ]
    },
    "6170": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "new_state_value%0#0"
      ]
    },
    "6171": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "new_state_value%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6172": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0",
        "0x6f75747374616e64696e675f66756e6473",
        "new_state_value%0#0"
      ]
    },
    "6173": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "6174": {
      "op": "itxn_begin"
    },
    "6175": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "tmp%3#0"
      ]
    },
    "6176": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "6178": {
      "op": "pushbytes 0x8a5e4c80 // method \"fund()string\"",
      "defined_out": [
        "Method(fund()string)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "Method(fund()string)"
      ]
    },
    "6184": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "6186": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "appl"
      ]
    },
    "6187": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "6189": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "6190": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "6192": {
      "op": "itxn_submit"
    },
    "6193": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "awst_tmp%0#0"
      ]
    },
    "6195": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%13#0"
      ]
    },
    "6198": {
      "op": "bytec 14 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%13#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%13#0",
        "0x151f7c75"
      ]
    },
    "6200": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%14#0"
      ]
    },
    "6201": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "6202": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "6203": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "6205": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "6206": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%3#0"
      ]
    },
    "6207": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "6208": {
      "op": "-",
      "stack_out": [
        "tmp%9#0",
        "new_state_value%0#0"
      ]
    },
    "6209": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "stack_out": [
        "tmp%9#0",
        "new_state_value%0#0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "6211": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "0x70656e64696e675f70726f706f73616c73",
        "new_state_value%0#0"
      ]
    },
    "6212": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "6213": {
      "op": "dup",
      "stack_out": [
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "6214": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "6215": {
      "error": "check self.proposer_box entry exists",
      "op": "assert // check self.proposer_box entry exists",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0"
      ]
    },
    "6216": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "6217": {
      "op": "dup",
      "stack_out": [
        "tmp%9#0",
        "maybe_value%4#0",
        "0",
        "0"
      ]
    },
    "6218": {
      "op": "setbit",
      "defined_out": [
        "tmp%9#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "updated_data%0#0"
      ]
    },
    "6219": {
      "op": "box_put",
      "stack_out": []
    },
    "6220": {
      "retsub": true,
      "op": "retsub"
    },
    "6221": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.deposit_funds",
      "params": {
        "payment#0": "uint64"
      },
      "block": "deposit_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6224": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "6226": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6228": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "6230": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "6231": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": []
    },
    "6232": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6233": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6234": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6235": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6236": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "payment#0 (copy)"
      ]
    },
    "6238": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "6240": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "6241": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "new_state_value%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6242": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "new_state_value%0#0"
      ]
    },
    "6243": {
      "op": "app_global_put",
      "stack_out": []
    },
    "6244": {
      "retsub": true,
      "op": "retsub"
    },
    "6245": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.withdraw_funds",
      "params": {
        "amount#0": "uint64"
      },
      "block": "withdraw_funds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "6248": {
      "callsub": "smart_contracts.xgov_registry.contract.XGovRegistry.is_xgov_manager",
      "op": "callsub is_xgov_manager",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "6251": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "6252": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6253": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ],
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6254": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6255": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6256": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "6258": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "6259": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": []
    },
    "6260": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "6262": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "6264": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "6266": {
      "op": "*",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "6267": {
      "op": ">=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "6268": {
      "error": "Insufficient fee",
      "op": "assert // Insufficient fee",
      "stack_out": []
    },
    "6269": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6270": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6271": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "6272": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "6273": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%1#0",
        "amount#0 (copy)"
      ]
    },
    "6275": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "6276": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "stack_out": [
        "new_state_value%0#0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6277": {
      "op": "swap",
      "stack_out": [
        "0x6f75747374616e64696e675f66756e6473",
        "new_state_value%0#0"
      ]
    },
    "6278": {
      "op": "app_global_put",
      "stack_out": []
    },
    "6279": {
      "op": "itxn_begin"
    },
    "6280": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6281": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "6283": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "6284": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "6285": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%2#0",
        "amount#0 (copy)"
      ]
    },
    "6287": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "6289": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "6291": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "6292": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "6294": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "6295": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "6297": {
      "op": "itxn_submit"
    },
    "6298": {
      "retsub": true,
      "op": "retsub"
    },
    "6299": {
      "subroutine": "smart_contracts.xgov_registry.contract.XGovRegistry.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "6302": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "6303": {
      "op": "bytec 5 // 0x78676f765f6d616e61676572",
      "defined_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ],
      "stack_out": [
        "0",
        "0x78676f765f6d616e61676572"
      ]
    },
    "6305": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "6306": {
      "error": "check self.xgov_manager exists",
      "op": "assert // check self.xgov_manager exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "6307": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "6308": {
      "op": "bytec 8 // 0x78676f765f7061796f72",
      "defined_out": [
        "0",
        "0x78676f765f7061796f72",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x78676f765f7061796f72"
      ]
    },
    "6310": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "6311": {
      "error": "check self.xgov_payor exists",
      "op": "assert // check self.xgov_payor exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "6312": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "6313": {
      "op": "bytec 16 // 0x78676f765f7265766965776572",
      "defined_out": [
        "0",
        "0x78676f765f7265766965776572",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0",
        "0x78676f765f7265766965776572"
      ]
    },
    "6315": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "6316": {
      "error": "check self.xgov_reviewer exists",
      "op": "assert // check self.xgov_reviewer exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "6317": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "6318": {
      "op": "bytec 7 // 0x78676f765f73756273637269626572",
      "defined_out": [
        "0",
        "0x78676f765f73756273637269626572",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0",
        "0x78676f765f73756273637269626572"
      ]
    },
    "6320": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "6321": {
      "error": "check self.xgov_subscriber exists",
      "op": "assert // check self.xgov_subscriber exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "6322": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "6323": {
      "op": "bytec 9 // 0x6b79635f70726f7669646572",
      "defined_out": [
        "0",
        "0x6b79635f70726f7669646572",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "0x6b79635f70726f7669646572"
      ]
    },
    "6325": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "6326": {
      "error": "check self.kyc_provider exists",
      "op": "assert // check self.kyc_provider exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "6327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "6328": {
      "op": "bytec 10 // 0x636f6d6d69747465655f6d616e61676572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d616e61676572",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "0x636f6d6d69747465655f6d616e61676572"
      ]
    },
    "6330": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "6331": {
      "error": "check self.committee_manager exists",
      "op": "assert // check self.committee_manager exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "6332": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0"
      ]
    },
    "6333": {
      "op": "bytec 17 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f7075626c6973686572",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "6335": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "6336": {
      "error": "check self.committee_publisher exists",
      "op": "assert // check self.committee_publisher exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "6337": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0"
      ]
    },
    "6338": {
      "op": "bytec 11 // 0x78676f765f666565",
      "defined_out": [
        "0",
        "0x78676f765f666565",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "0",
        "0x78676f765f666565"
      ]
    },
    "6340": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "6341": {
      "error": "check self.xgov_fee exists",
      "op": "assert // check self.xgov_fee exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%7#0"
      ]
    },
    "6342": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "6343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "6344": {
      "op": "bytec 12 // 0x70726f706f7365725f666565",
      "defined_out": [
        "0",
        "0x70726f706f7365725f666565",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "0",
        "0x70726f706f7365725f666565"
      ]
    },
    "6346": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "6347": {
      "error": "check self.proposer_fee exists",
      "op": "assert // check self.proposer_fee exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "maybe_value%8#0"
      ]
    },
    "6348": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "6349": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "6350": {
      "op": "bytec 6 // 0x70726f706f73616c5f666565",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f666565",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "6352": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "6353": {
      "error": "check self.proposal_fee exists",
      "op": "assert // check self.proposal_fee exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "maybe_value%9#0"
      ]
    },
    "6354": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "6355": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "6356": {
      "op": "bytec 18 // 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "6358": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%10#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "6359": {
      "error": "check self.proposal_publishing_bps exists",
      "op": "assert // check self.proposal_publishing_bps exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%10#0"
      ]
    },
    "6360": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "6361": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "6362": {
      "op": "bytec 19 // 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "6364": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%11#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "6365": {
      "error": "check self.proposal_commitment_bps exists",
      "op": "assert // check self.proposal_commitment_bps exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%11#0"
      ]
    },
    "6366": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "6367": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "6368": {
      "op": "bytec 41 // 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "6370": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%12#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "6371": {
      "error": "check self.min_requested_amount exists",
      "op": "assert // check self.min_requested_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%12#0"
      ]
    },
    "6372": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "6373": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "6374": {
      "op": "bytec 20 // 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "6376": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%13#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "6377": {
      "error": "check self.max_requested_amount_small exists",
      "op": "assert // check self.max_requested_amount_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%13#0"
      ]
    },
    "6378": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "6379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0"
      ]
    },
    "6380": {
      "op": "bytec 21 // 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "6382": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%14#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "6383": {
      "error": "check self.max_requested_amount_medium exists",
      "op": "assert // check self.max_requested_amount_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "maybe_value%14#0"
      ]
    },
    "6384": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "6385": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "6386": {
      "op": "bytec 22 // 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "6388": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%15#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "6389": {
      "error": "check self.max_requested_amount_large exists",
      "op": "assert // check self.max_requested_amount_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%15#0"
      ]
    },
    "6390": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "6391": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "6393": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%8#0",
        "result%1#0"
      ]
    },
    "6394": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%1#0",
        "val_as_bytes%8#0"
      ]
    },
    "6395": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0"
      ]
    },
    "6396": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0"
      ]
    },
    "6397": {
      "op": "bytec 23 // 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "6399": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%16#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "6400": {
      "error": "check self.discussion_duration_small exists",
      "op": "assert // check self.discussion_duration_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "maybe_value%16#0"
      ]
    },
    "6401": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0"
      ]
    },
    "6402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "6403": {
      "op": "bytec 24 // 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "6405": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%17#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "6406": {
      "error": "check self.discussion_duration_medium exists",
      "op": "assert // check self.discussion_duration_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "maybe_value%17#0"
      ]
    },
    "6407": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "6408": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "6409": {
      "op": "bytec 25 // 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "6411": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%18#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "6412": {
      "error": "check self.discussion_duration_large exists",
      "op": "assert // check self.discussion_duration_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%18#0"
      ]
    },
    "6413": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "6414": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "6415": {
      "op": "bytec 26 // 0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x64697363757373696f6e5f6475726174696f6e5f786c61726765"
      ]
    },
    "6417": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%19#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "6418": {
      "error": "check self.discussion_duration_xlarge exists",
      "op": "assert // check self.discussion_duration_xlarge exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%19#0"
      ]
    },
    "6419": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "6420": {
      "op": "uncover 3"
    },
    "6422": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "6424": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "result%4#0"
      ]
    },
    "6425": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%4#0",
        "val_as_bytes%11#0"
      ]
    },
    "6427": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "val_as_bytes%12#0",
        "result%5#0"
      ]
    },
    "6428": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%5#0",
        "val_as_bytes%12#0"
      ]
    },
    "6429": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0"
      ]
    },
    "6430": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0"
      ]
    },
    "6431": {
      "op": "bytec 27 // 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "6433": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%20#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "6434": {
      "error": "check self.voting_duration_small exists",
      "op": "assert // check self.voting_duration_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "maybe_value%20#0"
      ]
    },
    "6435": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0"
      ]
    },
    "6436": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "6437": {
      "op": "bytec 28 // 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "6439": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%21#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%21#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%21#0",
        "maybe_exists%21#0"
      ]
    },
    "6440": {
      "error": "check self.voting_duration_medium exists",
      "op": "assert // check self.voting_duration_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "maybe_value%21#0"
      ]
    },
    "6441": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "6442": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "6443": {
      "op": "bytec 29 // 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "6445": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%22#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%22#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%22#0",
        "maybe_exists%22#0"
      ]
    },
    "6446": {
      "error": "check self.voting_duration_large exists",
      "op": "assert // check self.voting_duration_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%22#0"
      ]
    },
    "6447": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "6448": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0"
      ]
    },
    "6449": {
      "op": "bytec 30 // 0x766f74696e675f6475726174696f6e5f786c61726765",
      "defined_out": [
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0",
        "0x766f74696e675f6475726174696f6e5f786c61726765"
      ]
    },
    "6451": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%23#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%23#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%23#0",
        "maybe_exists%23#0"
      ]
    },
    "6452": {
      "error": "check self.voting_duration_xlarge exists",
      "op": "assert // check self.voting_duration_xlarge exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%23#0"
      ]
    },
    "6453": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ]
    },
    "6454": {
      "op": "uncover 3"
    },
    "6456": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "6458": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "result%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "result%8#0"
      ]
    },
    "6459": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%8#0",
        "val_as_bytes%15#0"
      ]
    },
    "6461": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%16#0",
        "result%9#0"
      ]
    },
    "6462": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%9#0",
        "val_as_bytes%16#0"
      ]
    },
    "6463": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0"
      ]
    },
    "6464": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0"
      ]
    },
    "6465": {
      "op": "bytec 31 // 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0",
        "0x636f6f6c5f646f776e5f6475726174696f6e",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "0",
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "6467": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%24#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%24#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%24#0",
        "maybe_exists%24#0"
      ]
    },
    "6468": {
      "error": "check self.cool_down_duration exists",
      "op": "assert // check self.cool_down_duration exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "maybe_value%24#0"
      ]
    },
    "6469": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0"
      ]
    },
    "6470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0"
      ]
    },
    "6471": {
      "op": "bytec 42 // 0x7374616c655f70726f706f73616c5f6475726174696f6e",
      "defined_out": [
        "0",
        "0x7374616c655f70726f706f73616c5f6475726174696f6e",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "0",
        "0x7374616c655f70726f706f73616c5f6475726174696f6e"
      ]
    },
    "6473": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%25#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%25#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%25#0",
        "maybe_exists%25#0"
      ]
    },
    "6474": {
      "error": "check self.stale_proposal_duration exists",
      "op": "assert // check self.stale_proposal_duration exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "maybe_value%25#0"
      ]
    },
    "6475": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "6476": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0"
      ]
    },
    "6477": {
      "op": "bytec 32 // 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x71756f72756d5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "6479": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%26#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%26#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%26#0",
        "maybe_exists%26#0"
      ]
    },
    "6480": {
      "error": "check self.quorum_small exists",
      "op": "assert // check self.quorum_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "maybe_value%26#0"
      ]
    },
    "6481": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0"
      ]
    },
    "6482": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "0"
      ]
    },
    "6483": {
      "op": "bytec 33 // 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x71756f72756d5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "6485": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%27#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%27#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "maybe_value%27#0",
        "maybe_exists%27#0"
      ]
    },
    "6486": {
      "error": "check self.quorum_medium exists",
      "op": "assert // check self.quorum_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "maybe_value%27#0"
      ]
    },
    "6487": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0"
      ]
    },
    "6488": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "0"
      ]
    },
    "6489": {
      "op": "bytec 34 // 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x71756f72756d5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "6491": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%28#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%28#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "maybe_value%28#0",
        "maybe_exists%28#0"
      ]
    },
    "6492": {
      "error": "check self.quorum_large exists",
      "op": "assert // check self.quorum_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "maybe_value%28#0"
      ]
    },
    "6493": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%2#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0",
        "val_as_bytes%21#0"
      ]
    },
    "6494": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%21#0",
        "val_as_bytes%19#0",
        "val_as_bytes%20#0"
      ]
    },
    "6496": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%12#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%21#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%21#0",
        "result%12#0"
      ]
    },
    "6497": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%12#0",
        "val_as_bytes%21#0"
      ]
    },
    "6498": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0"
      ]
    },
    "6499": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "0"
      ]
    },
    "6500": {
      "op": "bytec 35 // 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "6502": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%29#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%29#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "maybe_value%29#0",
        "maybe_exists%29#0"
      ]
    },
    "6503": {
      "error": "check self.weighted_quorum_small exists",
      "op": "assert // check self.weighted_quorum_small exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "maybe_value%29#0"
      ]
    },
    "6504": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0"
      ]
    },
    "6505": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "0"
      ]
    },
    "6506": {
      "op": "bytec 36 // 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "6508": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%30#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%30#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "maybe_value%30#0",
        "maybe_exists%30#0"
      ]
    },
    "6509": {
      "error": "check self.weighted_quorum_medium exists",
      "op": "assert // check self.weighted_quorum_medium exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "maybe_value%30#0"
      ]
    },
    "6510": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0"
      ]
    },
    "6511": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "0"
      ]
    },
    "6512": {
      "op": "bytec 37 // 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "6514": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%31#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%31#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "maybe_value%31#0",
        "maybe_exists%31#0"
      ]
    },
    "6515": {
      "error": "check self.weighted_quorum_large exists",
      "op": "assert // check self.weighted_quorum_large exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "maybe_value%31#0"
      ]
    },
    "6516": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0",
        "val_as_bytes%24#0"
      ]
    },
    "6517": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%24#0",
        "val_as_bytes%22#0",
        "val_as_bytes%23#0"
      ]
    },
    "6519": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%15#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%24#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "val_as_bytes%24#0",
        "result%15#0"
      ]
    },
    "6520": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%15#0",
        "val_as_bytes%24#0"
      ]
    },
    "6521": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0"
      ]
    },
    "6522": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "0"
      ]
    },
    "6523": {
      "op": "bytec_1 // 0x6f75747374616e64696e675f66756e6473",
      "defined_out": [
        "0",
        "0x6f75747374616e64696e675f66756e6473",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "0",
        "0x6f75747374616e64696e675f66756e6473"
      ]
    },
    "6524": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%32#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%32#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%32#0",
        "maybe_exists%32#0"
      ]
    },
    "6525": {
      "error": "check self.outstanding_funds exists",
      "op": "assert // check self.outstanding_funds exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "maybe_value%32#0"
      ]
    },
    "6526": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0"
      ]
    },
    "6527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "0"
      ]
    },
    "6528": {
      "op": "bytec 4 // 0x70656e64696e675f70726f706f73616c73",
      "defined_out": [
        "0",
        "0x70656e64696e675f70726f706f73616c73",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "0",
        "0x70656e64696e675f70726f706f73616c73"
      ]
    },
    "6530": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%33#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%33#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "maybe_value%33#0",
        "maybe_exists%33#0"
      ]
    },
    "6531": {
      "error": "check self.pending_proposals exists",
      "op": "assert // check self.pending_proposals exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "maybe_value%33#0"
      ]
    },
    "6532": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0"
      ]
    },
    "6533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "0"
      ]
    },
    "6534": {
      "op": "bytec 43 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "6536": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%34#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "maybe_exists%34#0"
      ]
    },
    "6537": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0"
      ]
    },
    "6538": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "0"
      ]
    },
    "6539": {
      "op": "bytec 38 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "6541": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%35#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "maybe_value%35#0",
        "maybe_exists%35#0"
      ]
    },
    "6542": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "maybe_value%35#0"
      ]
    },
    "6543": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0"
      ]
    },
    "6544": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "0"
      ]
    },
    "6545": {
      "op": "bytec 39 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "6547": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%36#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%36#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "maybe_value%36#0",
        "maybe_exists%36#0"
      ]
    },
    "6548": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "maybe_value%36#0"
      ]
    },
    "6549": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ]
    },
    "6550": {
      "op": "uncover 24"
    },
    "6552": {
      "op": "uncover 24",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "6554": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "6555": {
      "op": "uncover 23",
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0"
      ]
    },
    "6557": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "6558": {
      "op": "uncover 22",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0"
      ]
    },
    "6560": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%34#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "6561": {
      "op": "uncover 21",
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%4#0",
        "maybe_value%4#0"
      ]
    },
    "6563": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%34#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "6564": {
      "op": "uncover 20",
      "stack_out": [
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%5#0"
      ]
    },
    "6566": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "maybe_value%34#0",
        "maybe_value%6#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "6567": {
      "op": "uncover 19",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%6#0",
        "maybe_value%6#0"
      ]
    },
    "6569": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "6570": {
      "op": "uncover 18",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%0#0"
      ]
    },
    "6572": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%1#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "6573": {
      "op": "uncover 17",
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "6575": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%2#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "6576": {
      "op": "uncover 16",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%2#0"
      ]
    },
    "6578": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "6579": {
      "op": "uncover 15",
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%3#0"
      ]
    },
    "6581": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "6582": {
      "op": "uncover 14",
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%4#0"
      ]
    },
    "6584": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "6585": {
      "op": "uncover 13",
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%5#0"
      ]
    },
    "6587": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%2#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%2#0",
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "6588": {
      "op": "uncover 12",
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%13#0",
        "result%2#0"
      ]
    },
    "6590": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "result%6#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%6#0",
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "6591": {
      "op": "uncover 11",
      "stack_out": [
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%14#0",
        "result%6#0"
      ]
    },
    "6593": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "maybe_value%34#0",
        "result%10#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%10#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "6594": {
      "op": "uncover 10",
      "stack_out": [
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%15#0",
        "result%10#0"
      ]
    },
    "6596": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "maybe_value%34#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%17#0",
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "6597": {
      "op": "uncover 9",
      "stack_out": [
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%17#0"
      ]
    },
    "6599": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "maybe_value%34#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%18#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%18#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "6600": {
      "op": "uncover 8",
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%17#0",
        "val_as_bytes%18#0"
      ]
    },
    "6602": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "maybe_value%34#0",
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%13#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "6603": {
      "op": "uncover 7",
      "stack_out": [
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%18#0",
        "result%13#0"
      ]
    },
    "6605": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "maybe_value%34#0",
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "result%16#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "6606": {
      "op": "uncover 6",
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%19#0",
        "result%16#0"
      ]
    },
    "6608": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "maybe_value%34#0",
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%25#0",
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "6609": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%25#0"
      ]
    },
    "6611": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "maybe_value%34#0",
        "val_as_bytes%26#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%26#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "6612": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%21#0",
        "val_as_bytes%26#0"
      ]
    },
    "6614": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0",
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "maybe_value%34#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%22#0"
      ]
    },
    "6615": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%22#0",
        "maybe_value%34#0"
      ]
    },
    "6617": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%27#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%27#0",
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%23#0"
      ]
    },
    "6618": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%23#0",
        "val_as_bytes%27#0"
      ]
    },
    "6620": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%24#0",
        "val_as_bytes%28#0"
      ],
      "stack_out": [
        "val_as_bytes%28#0",
        "encoded_tuple_buffer%24#0"
      ]
    },
    "6621": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%24#0",
        "val_as_bytes%28#0"
      ]
    },
    "6622": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%25#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%25#0"
      ]
    },
    "6623": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
{
  "version": 3,
  "sources": [
    "../../proposal/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CY;;AAA6B;;AAA7B;AADJ;AAGO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAIQ;;AADJ;;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADe;AADvB;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADe;AADvB;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAQA;;AAAoB;AAApB;AACA;;AAAsB;AAAtB;AA3GR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA43BK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAx0BL;;;AAw0BK;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AApxBL;;;;AAAA;AAoxBK;;;AAAA;;AA5CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAjDA;;AAAA;AAAA;AAAA;;AAAA;AAvrBL;;;AAAA;;;AAAA;;;AAurBK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAnpBL;;;AAAA;;;AAmpBK;;;AAAA;;AA1CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAtjBL;;;AAAA;;;AAsjBK;;;AAAA;;AAxDA;;AAAA;AAAA;AAAA;;AAAA;AA9fL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AA8fK;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAhfL;;;AAgfK;;;AAAA;;AAnYL;;;;;AAE0B;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAEd;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAiIW;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AAhIR;;AAAS;AAAT;AAAX;;;AACmB;AAAP;;AAAA;;AAAA;;AAAA;AAEG;;AAAA;;AAAA;AAA4C;AAAnD;;AAAA;;AAAA;AAgIK;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AAvIsB;;;AA4IzB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AA3IsB;;;AA2NzC;;;AAEe;;AAAA;AAAsB;;AAAtB;AAAP;AACO;;AAAS;AAAT;AAAP;;;;AAoDR;;;AAGY;;;;;;;;;;;;;;;;;;;;;;;;;AAD6B;;;AAGjB;AAAT;AAAP;AAPO;;AAAA;AAA4B;;AAA5B;AAQP;AAoCR;;;AAKY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGR;AAAR;AACG;;;AACS;;;;;;;;;;;;;;;;;;;;;;AAAR;;AACJ;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;AAGY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGhB;AACA;AAKI;;;;;;;;;;;;;;;;;AADqB;;;AAIT;AAAT;AAAP;AACO;AAAP;;AAQO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAUO;;AAEC;;AADJ;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AAAP;AAQO;;AAAgC;AAAA;;AAAA;AAAA;AAAhC;AAAP;AAER;;;AAEQ;;;;;;;;;AAAA;;;AAGQ;;;AAHR;;AAMR;;;AAE2B;AAAA;;AAAA;AAAA;AAAnB;;AAAA;AAAA;;;AACA;;AAA2B;AAA3B;;AAER;;;AAQY;;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAA6B;;AAA7B;;AAER;;;;AAmCQ;;;AAvMO;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;AA2MI;;AAAA;;;AAAA;;AAAmB;;AAAA;AAAA;AAAqB;;AAAA;AAAA;AAhM5C;;AAAA;;AAAA;;;AAAA;;AAGoB;AAAhB;AAAA;;;AACG;;AAAgB;AAAhB;AADH;;;;AADJ;AAMI;;;;;;;;;;;;;;;;;;;;;;AAD0B;;;AAGd;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAEO;;AAAA;AAAA;;AAAA;AAAP;AAEI;AAAA;;AAAA;AADJ;AAyBA;AAAuB;;;AAEhB;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAA;AAAP;AAmJA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AA/II;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADiC;;;AAAA;AAAA;;AAGrB;AAAT;AAAP;AAEG;AAAX;;;AACY;AAA8B;AAA9B;AAuIJ;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAAA;;AAAA;AACmB;;AAAA;AAAnB;;AAAA;AAAA;AAC2B;;;AAA3B;;AAAA;AAAA;AAGA;;AAA2B;;AAA3B;AACA;AAAoB;AAApB;;AA7IK;;AAAA;;AAAA;AAAb;;;AACY;AAA8B;AAA9B;;;;AAEA;AAA8B;;AAA9B;;;;;;;;AA4IZ;;;AAgBQ;;;AAjPO;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAoPiC;;AAAA;;;AAAjC;AAAA;;AAAA;;;AAAA;;AAEA;;AAAA;AAAA;AACA;;AAAA;;AAAA;;AAWA;;;AAhRO;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAoRa;AAAA;;AAAA;AAAA;AADb;;;AAIA;;AAAmB;AAAnB;AACA;;AAAoC;AAApC;AACA;AAA8B;AAA9B;AACA;;AAAmB;AAAnB;AACA;;AAA0B;AAA1B;AACA;;AAA8B;AAA9B;AACA;;AAA2B;AAA3B;AACA;AAAoB;AAApB;;AAER;;;;AAcQ;;;AA3TO;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAEsB;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAElB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAhGW;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AAuFO;;AAAA;AAAP;AA/BwC;;AAApC;;;AAEG;AAAmC;AAAnC;AAAP;AAGI;;AADuB;;;AAGX;AAAT;AAAP;AACA;AAAA;AAGI;;AADqB;;;AAGT;AAAT;AAAP;AACA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAsUA;AAAoB;AAApB;AACA;;AAA6B;;AAA7B;AAGI;;;;;;;;;;;;;;AADkB;;;AAGN;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;AADwB;;;AAGZ;AAAT;AAAP;AAKY;;AADJ;;;AADK;AAAA;AAAA;;AAAA;AAAA;AA3QN;;AAAA;AAA4B;;AAA5B;AA0QP;;;;AAraK;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAya3B;;;AA9be;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAgdiD;;AAAA;AA1c7B;;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;;AAAA;AA2c4B;;AAElB;;AAFkB;AAA5B;AAKA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEG;AAAA;;AAAA;AAAA;AAAqB;AAAA;;AAAA;AAAA;AAArB;AAAX;;;AAEgB;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AADJ;AAGA;AAAoB;;AAApB;AACA;;AAA0B;;AAA1B;;AAEZ;;;;;;;;;AAqBQ;;;AApiBO;;;AAAP;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AAoiBR;;AAAS;AAAT;AAAX;;;AACY;AAGc;;AAAA;AAAA;;AAAkB;;AAAA;AAAA;;AAzhBpB;;AAAb;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;AA0hBR;;AAAS;AAAT;AAAX;;;AACY;AAEQ;;AAAA;AAAA;AAAA;AAEF;AAAA;;;AACA;;;AAFkB;AAA5B;;AAAA;AAAA;AAKA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AAEQ;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAA;;AAAQ;AAER;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEO;AAAP;;AAAA;AAziBY;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACT;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmhBH;;;AAjhBoB;;AAAA;;;AAAzB;;AAAA;;AAAA;AAAA;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;AAghBH;;;AA9gBD;;;AA8gBC;;;AAriBgB;;;AAAA;AAAA;;AAAA;;AAAA;;AACZ;AAAT;AAAX;;;AAGW;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4hBH;;;AA1hBD;;;AA0hBC;;;AA0BhB;;;;;;;AAUQ;;;AA1iBO;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AAEwB;;;AACR;AAAT;AAAP;AAGI;;;AACG;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AADA;AADH;;;;AADJ;AA2iB6B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAvfd;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AA6eI;AAAA;;AAAA;AAAA;AA1XG;AAA4B;;AAA5B;AAAA;;AA+XwC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA7ehC;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AAkec;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAA+C;AAAA;;AAAA;AAAA;AAA/C;AAAd;;AAEI;AAAA;;AAAA;AAAA;AAlYG;AAA4B;;AAA5B;AAAA;;AAsYH;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AACI;;AAAA;;AAAA;AADJ;;;AAII;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAJJ;;;AAMA;AAAoB;;AAApB;;AAEA;AAAoB;;AAApB;AAEa;AAAA;;AAAA;AAAA;AADb;;;AAGA;;AAAgC;;AAAhC;;AA5fC;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAtBd;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;AADW;;;AAAA;;;;;;;;;AA0gB3B;;;AAjUe;;AACiC;;;;;;;;;;;;;;;AAApC;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AAzVP;AACO;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AAwqBR;;AAAA;;;AACY;AAAoB;;AAApB;AAGsB;AAAA;;AAAA;AAAA;AAET;;AAAA;AADb;;;AAIA;;AAAgC;;AAAhC;;AAEA;AAAoB;;AAApB;;AAEZ;;;;AAjrBe;;;AAAP;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AAyrBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAEJ;AAAoB;;AAApB;AAIa;AAAA;;AAAA;AAAA;AADb;;;AAIA;;AAAgC;;AAAhC;AAEO;AAAP;AAAA;AAnsBO;;;AAsrBC;;;AAehB;;;;;;;AAjsBe;;;AAAP;AAEI;AAAA;AAAA;AAAA;AAAA;;;AACG;AAAA;AAAA;AAAA;AAAqB;AAArB;AADH;;;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAFH;;;AAGG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAHH;;;AAIG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAJH;;;;AADJ;AASI;AAAA;AAAA;AAAA;AAAA;;;AACI;AAAA;AAAA;AAAA;AAAqB;AAArB;AADJ;;;AAII;;;;;;;;;;;;;;;;;;;;AADuB;;;AAAA;AAAA;;AAGX;AAAT;AAAP;AAEI;AAAA;;AAAA;AAAA;AAAA;;;AACI;;AACD;AAAA;;AAAA;AAAA;AAAA;;AAAA;AADC;AADJ;;;;AADJ;AAisBZ;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAC+B;;AAAhB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAf;;;AACgB;;AAAA;;;;;;;;;;;AAGL;;AAAA;;AAAA;AAAX;;;AAGe;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAf;;;AAE6B;AAAA;;AAAA;AAAA;AADb;;;AAGkB;AAAA;;AAAA;AAAA;AAET;;AAAA;AACF;;AAAA;;AAAA;AAFX;;;AAIA;AAAoB;;AAApB;;;;;;;;;;AAEZ;;;;AA5sBe;;;AAAP;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AAqtBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAEG;AAAP;AAAA;AAttBO;;;AAktBC;;;AAekB;AAAA;;AAAA;AAAA;AACM;AAAA;;AAAA;AAAA;AAAZ;AACE;AAAA;;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;AACsB;AAAA;;AAAA;AAAA;AAAZ;AACc;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AACM;AAAA;AAAA;AAAA;AAAZ;AACsB;AAAA;AAAA;AAAA;AAAZ;AACA;AAAA;;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACmB;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AACD;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AACQ;AAAA;;AAAA;AAAA;AAAZ;AACa;AAAA;;AAAA;AAAA;AAAZ;AACO;AAAA;;AAAA;AAAA;AAAZ;AACyB;AAAA;;AAAA;AAAA;AAAZ;AArBhB;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 10 20 10000"
    },
    "9": {
      "op": "bytecblock 0x737461747573 0x0000 0x 0x66756e64696e675f63617465676f7279 0x70726f706f736572 0x72656769737472795f6170705f6964 0x636f6d6d69747465655f6d656d62657273 0x636f6f6c5f646f776e5f73746172745f7473 0x636f6d6d69747465655f766f746573 0x766f7465645f6d656d62657273 0x617070726f76616c73 0x72656a656374696f6e73 0x7469746c65 0x636964 0x7375626d697373696f6e5f74696d657374616d70 0x6c6f636b65645f616d6f756e74 0x6e756c6c73 0x766f74655f6f70656e696e675f74696d657374616d70 0x666f637573 0x66756e64696e675f74797065 0x7265717565737465645f616d6f756e74 0x636f6d6d69747465655f6964 \"voters_count\" \"assigned_votes\" 0x151f7c75 0x66696e616c697a6174696f6e5f74696d657374616d70 \"V\" 0x00 0x00194552523a57726f6e672050726f706f73616c20537461747573 0x636f6d6d69747465655f7075626c6973686572"
    },
    "383": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "385": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "388": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "390": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "4"
      ]
    },
    "392": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "393": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "394": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "396": {
      "op": "pushint 19 // 19",
      "defined_out": [
        "19",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "19"
      ]
    },
    "398": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "399": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "400": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "402": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "403": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "404": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "406": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "407": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "408": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "410": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x70726f706f736572",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "new_state_value%0#0"
      ]
    },
    "412": {
      "op": "app_global_put",
      "stack_out": []
    },
    "413": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "415": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "0"
      ]
    },
    "416": {
      "op": "app_global_put",
      "stack_out": []
    },
    "417": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "419": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "420": {
      "op": "app_global_put",
      "stack_out": []
    },
    "421": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "423": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "424": {
      "op": "app_global_put",
      "stack_out": []
    },
    "425": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "427": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "428": {
      "op": "app_global_put",
      "stack_out": []
    },
    "429": {
      "op": "bytec 25 // 0x66696e616c697a6174696f6e5f74696d657374616d70",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ]
    },
    "431": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "432": {
      "op": "app_global_put",
      "stack_out": []
    },
    "433": {
      "op": "bytec 17 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "435": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "0"
      ]
    },
    "436": {
      "op": "app_global_put",
      "stack_out": []
    },
    "437": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "439": {
      "op": "app_global_put",
      "stack_out": []
    },
    "440": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f63617465676f7279",
        "0"
      ]
    },
    "442": {
      "op": "app_global_put",
      "stack_out": []
    },
    "443": {
      "op": "bytec 18 // 0x666f637573",
      "defined_out": [
        "0x666f637573"
      ],
      "stack_out": [
        "0x666f637573"
      ]
    },
    "445": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x666f637573",
        "0"
      ]
    },
    "446": {
      "op": "app_global_put",
      "stack_out": []
    },
    "447": {
      "op": "bytec 19 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "450": {
      "op": "app_global_put",
      "stack_out": []
    },
    "451": {
      "op": "bytec 20 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "454": {
      "op": "app_global_put",
      "stack_out": []
    },
    "455": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "457": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "458": {
      "op": "app_global_put",
      "stack_out": []
    },
    "459": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "461": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "462": {
      "op": "app_global_put",
      "stack_out": []
    },
    "463": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "465": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "466": {
      "op": "app_global_put",
      "stack_out": []
    },
    "467": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "469": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "470": {
      "op": "app_global_put",
      "stack_out": []
    },
    "471": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0x766f7465645f6d656d62657273"
      ],
      "stack_out": [
        "0x766f7465645f6d656d62657273"
      ]
    },
    "473": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f7465645f6d656d62657273",
        "0"
      ]
    },
    "474": {
      "op": "app_global_put",
      "stack_out": []
    },
    "475": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0x617070726f76616c73"
      ],
      "stack_out": [
        "0x617070726f76616c73"
      ]
    },
    "477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x617070726f76616c73",
        "0"
      ]
    },
    "478": {
      "op": "app_global_put",
      "stack_out": []
    },
    "479": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0x72656a656374696f6e73"
      ],
      "stack_out": [
        "0x72656a656374696f6e73"
      ]
    },
    "481": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x72656a656374696f6e73",
        "0"
      ]
    },
    "482": {
      "op": "app_global_put",
      "stack_out": []
    },
    "483": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0x6e756c6c73"
      ],
      "stack_out": [
        "0x6e756c6c73"
      ]
    },
    "485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6e756c6c73",
        "0"
      ]
    },
    "486": {
      "op": "app_global_put",
      "stack_out": []
    },
    "487": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "489": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "0"
      ]
    },
    "490": {
      "op": "app_global_put",
      "stack_out": []
    },
    "491": {
      "op": "bytec 22 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\""
      ],
      "stack_out": [
        "\"voters_count\""
      ]
    },
    "493": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"voters_count\"",
        "0"
      ]
    },
    "494": {
      "op": "app_global_put",
      "stack_out": []
    },
    "495": {
      "op": "bytec 23 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\""
      ],
      "stack_out": [
        "\"assigned_votes\""
      ]
    },
    "497": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"assigned_votes\"",
        "0"
      ]
    },
    "498": {
      "op": "app_global_put",
      "stack_out": []
    },
    "499": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "501": {
      "op": "bz main_after_if_else@18",
      "stack_out": []
    },
    "504": {
      "op": "pushbytess 0xcc694eaa 0xc92066d7 0x40df8a0c 0x5fcdfdee 0x23d8b7ce 0x74e6557e 0x1841a0d2 0x734dbecc 0x212d9f07 0x8a5e4c80 0x461b5751 0x1feb95da 0xaccb37ed // method \"create(address)void\", method \"submit(pay,string,byte[36],uint64,uint64,uint8)void\", method \"update(string,byte[36])void\", method \"drop()void\", method \"finalize()void\", method \"assign_voter(address,uint64)void\", method \"vote(address,uint64,uint64)string\", method \"scrutiny()void\", method \"review(bool)void\", method \"fund()string\", method \"decommission(address[])void\", method \"delete()string\", method \"get_state()(address,uint64,string,byte[36],uint64,uint64,uint64,uint64,uint64,uint8,uint64,uint64,uint64,byte[36],uint64,uint64,uint64,uint64,uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(assign_voter(address,uint64)void)",
        "Method(create(address)void)",
        "Method(decommission(address[])void)",
        "Method(delete()string)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(fund()string)",
        "Method(get_state()(address,uint64,string,byte[36],uint64,uint64,uint64,uint64,uint64,uint8,uint64,uint64,uint64,byte[36],uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(review(bool)void)",
        "Method(scrutiny()void)",
        "Method(submit(pay,string,byte[36],uint64,uint64,uint8)void)",
        "Method(update(string,byte[36])void)",
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "Method(submit(pay,string,byte[36],uint64,uint64,uint8)void)",
        "Method(update(string,byte[36])void)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(assign_voter(address,uint64)void)",
        "Method(vote(address,uint64,uint64)string)",
        "Method(scrutiny()void)",
        "Method(review(bool)void)",
        "Method(fund()string)",
        "Method(decommission(address[])void)",
        "Method(delete()string)",
        "Method(get_state()(address,uint64,string,byte[36],uint64,uint64,uint64,uint64,uint64,uint8,uint64,uint64,uint64,byte[36],uint64,uint64,uint64,uint64,uint64,uint64,uint64))"
      ]
    },
    "571": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(assign_voter(address,uint64)void)",
        "Method(create(address)void)",
        "Method(decommission(address[])void)",
        "Method(delete()string)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(fund()string)",
        "Method(get_state()(address,uint64,string,byte[36],uint64,uint64,uint64,uint64,uint64,uint8,uint64,uint64,uint64,byte[36],uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(review(bool)void)",
        "Method(scrutiny()void)",
        "Method(submit(pay,string,byte[36],uint64,uint64,uint8)void)",
        "Method(update(string,byte[36])void)",
        "Method(vote(address,uint64,uint64)string)",
        "tmp%2#1"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "Method(submit(pay,string,byte[36],uint64,uint64,uint8)void)",
        "Method(update(string,byte[36])void)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(assign_voter(address,uint64)void)",
        "Method(vote(address,uint64,uint64)string)",
        "Method(scrutiny()void)",
        "Method(review(bool)void)",
        "Method(fund()string)",
        "Method(decommission(address[])void)",
        "Method(delete()string)",
        "Method(get_state()(address,uint64,string,byte[36],uint64,uint64,uint64,uint64,uint64,uint8,uint64,uint64,uint64,byte[36],uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "tmp%2#1"
      ]
    },
    "574": {
      "op": "match main_create_route@5 main_submit_route@6 main_update_route@7 main_drop_route@8 main_finalize_route@9 main_assign_voter_route@10 main_vote_route@11 main_scrutiny_route@12 main_review_route@13 main_fund_route@14 main_decommission_route@15 main_delete_route@16 main_get_state_route@17",
      "stack_out": []
    },
    "602": {
      "block": "main_after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "603": {
      "op": "return",
      "stack_out": []
    },
    "604": {
      "block": "main_get_state_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "606": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "607": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "608": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "610": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "611": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "614": {
      "op": "bytec 24 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "0x151f7c75"
      ]
    },
    "616": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%66#0"
      ]
    },
    "617": {
      "op": "concat",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "618": {
      "op": "log",
      "stack_out": []
    },
    "619": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "620": {
      "op": "return",
      "stack_out": []
    },
    "621": {
      "block": "main_delete_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "623": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0",
        "DeleteApplication"
      ]
    },
    "625": {
      "op": "==",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "626": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "627": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "629": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "630": {
      "callsub": "smart_contracts.proposal.contract.Proposal.delete",
      "op": "callsub delete",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "633": {
      "op": "bytec 24 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0",
        "0x151f7c75"
      ]
    },
    "635": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%60#0"
      ]
    },
    "636": {
      "op": "concat",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "637": {
      "op": "log",
      "stack_out": []
    },
    "638": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "639": {
      "op": "return",
      "stack_out": []
    },
    "640": {
      "block": "main_decommission_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "642": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "643": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "644": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "646": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "647": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "650": {
      "callsub": "smart_contracts.proposal.contract.Proposal.decommission",
      "op": "callsub decommission",
      "stack_out": []
    },
    "653": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "654": {
      "op": "return",
      "stack_out": []
    },
    "655": {
      "block": "main_fund_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "657": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "658": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "659": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "661": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "662": {
      "callsub": "smart_contracts.proposal.contract.Proposal.fund",
      "op": "callsub fund",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "665": {
      "op": "bytec 24 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "0x151f7c75"
      ]
    },
    "667": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%49#0"
      ]
    },
    "668": {
      "op": "concat",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "669": {
      "op": "log",
      "stack_out": []
    },
    "670": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "671": {
      "op": "return",
      "stack_out": []
    },
    "672": {
      "block": "main_review_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "674": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "675": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "676": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "678": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "679": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "682": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0",
        "0"
      ]
    },
    "683": {
      "op": "getbit",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "684": {
      "callsub": "smart_contracts.proposal.contract.Proposal.review",
      "op": "callsub review",
      "stack_out": []
    },
    "687": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "688": {
      "op": "return",
      "stack_out": []
    },
    "689": {
      "block": "main_scrutiny_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "691": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "692": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "693": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "695": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "696": {
      "callsub": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "op": "callsub scrutiny"
    },
    "699": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "700": {
      "op": "return",
      "stack_out": []
    },
    "701": {
      "block": "main_vote_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "703": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "704": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "705": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "707": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "708": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "711": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "714": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "717": {
      "callsub": "smart_contracts.proposal.contract.Proposal.vote",
      "op": "callsub vote",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "720": {
      "op": "bytec 24 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "0x151f7c75"
      ]
    },
    "722": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%34#0"
      ]
    },
    "723": {
      "op": "concat",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "724": {
      "op": "log",
      "stack_out": []
    },
    "725": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "726": {
      "op": "return",
      "stack_out": []
    },
    "727": {
      "block": "main_assign_voter_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "729": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "730": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "731": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "733": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "734": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "737": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "740": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "op": "callsub assign_voter",
      "stack_out": []
    },
    "743": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "744": {
      "op": "return",
      "stack_out": []
    },
    "745": {
      "block": "main_finalize_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "747": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "748": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "749": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "751": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "752": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize",
      "op": "callsub finalize"
    },
    "755": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "756": {
      "op": "return",
      "stack_out": []
    },
    "757": {
      "block": "main_drop_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "759": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "760": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "761": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "763": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "764": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop",
      "op": "callsub drop"
    },
    "767": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "768": {
      "op": "return",
      "stack_out": []
    },
    "769": {
      "block": "main_update_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "771": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "772": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "773": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "775": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "776": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "779": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[36]%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "reinterpret_bytes[36]%1#0"
      ]
    },
    "782": {
      "callsub": "smart_contracts.proposal.contract.Proposal.update",
      "op": "callsub update",
      "stack_out": []
    },
    "785": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "786": {
      "op": "return",
      "stack_out": []
    },
    "787": {
      "block": "main_submit_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "789": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "790": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "791": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "793": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "794": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "796": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "1"
      ]
    },
    "797": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "798": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "799": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "801": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "802": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "803": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "804": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0"
      ]
    },
    "807": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[36]%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[36]%0#0"
      ]
    },
    "810": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[36]%0#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[36]%0#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "813": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[36]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[36]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "816": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[36]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[36]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "819": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit",
      "op": "callsub submit",
      "stack_out": []
    },
    "822": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "823": {
      "op": "return",
      "stack_out": []
    },
    "824": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "826": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "827": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "828": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "830": {
      "op": "!",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "831": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "832": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "835": {
      "callsub": "smart_contracts.proposal.contract.Proposal.create",
      "op": "callsub create",
      "stack_out": []
    },
    "838": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "839": {
      "op": "return",
      "stack_out": []
    },
    "840": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "params": {},
      "block": "is_voting_open",
      "stack_in": [],
      "op": "proto 0 2"
    },
    "843": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "844": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0"
      ]
    },
    "845": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0"
      ]
    },
    "847": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "0"
      ]
    },
    "848": {
      "op": "bytec 17 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "850": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "851": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "852": {
      "op": "-",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ]
    },
    "853": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "0"
      ]
    },
    "854": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "855": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "maybe_exists%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "856": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maybe_exists%1#0",
        "category#0"
      ]
    },
    "857": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maybe_exists%1#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "858": {
      "op": "uncover 2",
      "defined_out": [
        "category#0",
        "maybe_exists%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "860": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "861": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "10"
      ]
    },
    "862": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%0#1",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%0#1"
      ]
    },
    "863": {
      "op": "bz is_voting_open_else_body@5",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "866": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "category#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "889": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "tmp%1#1",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%1#1",
        "error#0"
      ]
    },
    "892": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "894": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "896": {
      "block": "is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "error#0"
      ]
    },
    "898": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "error#0",
        "0x0000"
      ]
    },
    "899": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "900": {
      "op": "bz is_voting_open_after_if_else@2",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "903": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0"
      ]
    },
    "904": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0",
        "error#0"
      ]
    },
    "906": {
      "op": "frame_bury 1"
    },
    "908": {
      "op": "frame_bury 0"
    },
    "910": {
      "retsub": true,
      "op": "retsub"
    },
    "911": {
      "block": "is_voting_open_after_if_else@2",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "voting_duration#0"
      ]
    },
    "913": {
      "op": "frame_dig 1",
      "defined_out": [
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "voting_duration#0",
        "maximum_voting_duration#0"
      ]
    },
    "915": {
      "op": "<=",
      "defined_out": [
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%2#0"
      ]
    },
    "916": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "917": {
      "op": "frame_bury 1"
    },
    "919": {
      "op": "frame_bury 0"
    },
    "921": {
      "retsub": true,
      "op": "retsub"
    },
    "922": {
      "block": "is_voting_open_else_body@5",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "924": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "20"
      ]
    },
    "925": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%3#0"
      ]
    },
    "926": {
      "op": "bz is_voting_open_else_body@7",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "929": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "953": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%4#0",
        "error#0"
      ]
    },
    "956": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "958": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "960": {
      "op": "b is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8"
    },
    "963": {
      "block": "is_voting_open_else_body@7",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "986": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%6#0",
        "error#0"
      ]
    },
    "989": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "991": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "993": {
      "op": "b is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8"
    },
    "996": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "updateable_input_validation",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "999": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1001": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1002": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "123"
      ]
    },
    "1004": {
      "op": "<=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1005": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "1006": {
      "op": "frame_dig -2",
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1008": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "\"\""
      ]
    },
    "1009": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1010": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "1011": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)"
      ],
      "stack_out": [
        "cid#0 (copy)"
      ]
    },
    "1013": {
      "retsub": true,
      "op": "retsub"
    },
    "1014": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "get_expected_locked_amount",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1017": {
      "op": "pushbytes 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1042": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0"
      ]
    },
    "1045": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1046": {
      "op": "==",
      "defined_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ]
    },
    "1047": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "proposal_commitment_bps#0"
      ]
    },
    "1048": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1050": {
      "op": "*",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1051": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "10000"
      ]
    },
    "1053": {
      "op": "/",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1054": {
      "retsub": true,
      "op": "retsub"
    },
    "1055": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_uint_from_registry_config",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "1058": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1059": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1061": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1062": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1063": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1065": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1066": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0",
        "error#0"
      ]
    },
    "1067": {
      "op": "swap",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "exists#0"
      ]
    },
    "1068": {
      "op": "bnz get_uint_from_registry_config_after_if_else@2",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "1071": {
      "op": "pushbytes 0x00124552523a4d697373696e6720436f6e666967",
      "stack_out": [
        "value#0",
        "error#0",
        "error#0"
      ]
    },
    "1093": {
      "op": "frame_bury 1",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "1095": {
      "block": "get_uint_from_registry_config_after_if_else@2",
      "stack_in": [
        "value#0",
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0"
      ]
    },
    "1097": {
      "op": "frame_dig 1",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1099": {
      "op": "uncover 3"
    },
    "1101": {
      "op": "uncover 3"
    },
    "1103": {
      "retsub": true,
      "op": "retsub"
    },
    "1104": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_bytes_from_registry_config",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1107": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1108": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1110": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1111": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1112": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1115": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "value#0"
      ]
    },
    "1116": {
      "retsub": true,
      "op": "retsub"
    },
    "1117": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "params": {},
      "block": "check_registry_not_paused",
      "stack_in": [],
      "op": "pushbytes 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1134": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "registry_paused#0"
      ],
      "stack_out": [
        "registry_paused#0",
        "error#0"
      ]
    },
    "1137": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "registry_paused#0"
      ],
      "stack_out": [
        "registry_paused#0",
        "error#0",
        "0x0000"
      ]
    },
    "1138": {
      "op": "==",
      "defined_out": [
        "registry_paused#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "registry_paused#0",
        "tmp%0#0"
      ]
    },
    "1139": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "registry_paused#0"
      ]
    },
    "1140": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1141": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1142": {
      "retsub": true,
      "op": "retsub"
    },
    "1143": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "params": {},
      "block": "is_proposer",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1146": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1148": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1149": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1150": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1151": {
      "retsub": true,
      "op": "retsub"
    },
    "1152": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "params": {},
      "block": "is_committee_publisher",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1154": {
      "op": "bytec 29 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1156": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1159": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1160": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1161": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "32"
      ]
    },
    "1163": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1164": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1165": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1166": {
      "retsub": true,
      "op": "retsub"
    },
    "1167": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "params": {},
      "block": "is_registry_call",
      "stack_in": [],
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1169": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1170": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1172": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1173": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1174": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1175": {
      "retsub": true,
      "op": "retsub"
    },
    "1176": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.pay",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "pay",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1179": {
      "op": "itxn_begin"
    },
    "1180": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "1182": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "1184": {
      "op": "frame_dig -2",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "1186": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1188": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1189": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1191": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1192": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1194": {
      "op": "itxn_submit"
    },
    "1195": {
      "retsub": true,
      "op": "retsub"
    },
    "1196": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "params": {
        "receiver#0": "bytes"
      },
      "block": "transfer_locked_amount",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1199": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1200": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1202": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1203": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1204": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "receiver#0 (copy)"
      ]
    },
    "1206": {
      "op": "swap",
      "stack_out": [
        "receiver#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1207": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": []
    },
    "1210": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1212": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "1213": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1214": {
      "retsub": true,
      "op": "retsub"
    },
    "1215": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.create",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1218": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1220": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1221": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "1223": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ]
    },
    "1225": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1226": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1228": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ]
    },
    "1230": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1231": {
      "retsub": true,
      "op": "retsub"
    },
    "1232": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit",
      "params": {
        "payment#0": "uint64",
        "title#0": "bytes",
        "cid#0": "bytes",
        "funding_type#0": "bytes",
        "requested_amount#0": "bytes",
        "focus#0": "bytes"
      },
      "block": "submit",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "1235": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1236": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1239": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%0#1"
      ]
    },
    "1242": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1243": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0"
      ]
    },
    "1244": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0",
        "0x737461747573"
      ]
    },
    "1245": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1246": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "max_requested_amount_medium#0",
        "maybe_value%0#0"
      ]
    },
    "1247": {
      "op": "!",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%1#1"
      ]
    },
    "1248": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1249": {
      "op": "frame_dig -5",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "title#0 (copy)"
      ]
    },
    "1251": {
      "op": "extract 2 0",
      "defined_out": [
        "title#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "title#0"
      ]
    },
    "1254": {
      "op": "frame_bury -5",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1256": {
      "op": "frame_dig -3",
      "defined_out": [
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#0 (copy)"
      ]
    },
    "1258": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1"
      ]
    },
    "1259": {
      "op": "dup",
      "defined_out": [
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "funding_type#1"
      ]
    },
    "1260": {
      "op": "frame_dig -2",
      "defined_out": [
        "funding_type#1",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "funding_type#1",
        "requested_amount#0 (copy)"
      ]
    },
    "1262": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1263": {
      "op": "swap",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1264": {
      "op": "frame_dig -5",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)"
      ]
    },
    "1266": {
      "op": "frame_dig -4",
      "defined_out": [
        "cid#0 (copy)",
        "funding_type#1",
        "requested_amount#1",
        "title#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "1268": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "cid#0"
      ]
    },
    "1271": {
      "op": "frame_bury -4",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1273": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "10"
      ]
    },
    "1274": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%0#1"
      ]
    },
    "1275": {
      "op": "bnz submit_bool_true@5",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1278": {
      "op": "frame_dig 1",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1280": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "20"
      ]
    },
    "1281": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%1#1"
      ]
    },
    "1282": {
      "op": "bz submit_bool_false@6",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1285": {
      "block": "submit_bool_true@5",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "or_result%0#0"
      ]
    },
    "1286": {
      "block": "submit_bool_merge@7",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "or_result%0#0"
      ],
      "error": "Wrong Funding Type",
      "op": "assert // Wrong Funding Type",
      "defined_out": [],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1287": {
      "op": "pushbytes 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "1309": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "error#0"
      ]
    },
    "1312": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "error#0",
        "0x0000"
      ]
    },
    "1313": {
      "op": "==",
      "defined_out": [
        "min_requested_amount#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "tmp%2#1"
      ]
    },
    "1314": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0"
      ]
    },
    "1315": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1343": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_large#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0"
      ]
    },
    "1346": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0",
        "0x0000"
      ]
    },
    "1347": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "tmp%3#1"
      ]
    },
    "1348": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0"
      ]
    },
    "1349": {
      "op": "frame_dig 2",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#1"
      ]
    },
    "1351": {
      "op": "dup",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1352": {
      "op": "uncover 3",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)",
        "min_requested_amount#0"
      ]
    },
    "1354": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_large#0",
        "requested_amount#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "tmp%4#1"
      ]
    },
    "1355": {
      "error": "Requested amount is less than the minimum requested amount",
      "op": "assert // Requested amount is less than the minimum requested amount",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1"
      ]
    },
    "1356": {
      "op": "dup",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1357": {
      "op": "uncover 2",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "requested_amount#1 (copy)",
        "max_requested_amount_large#0"
      ]
    },
    "1359": {
      "op": "<=",
      "defined_out": [
        "requested_amount#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "tmp%5#1"
      ]
    },
    "1360": {
      "error": "Requested amount is more than the maximum requested amount",
      "op": "assert // Requested amount is more than the maximum requested amount",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1361": {
      "op": "dup",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1362": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1365": {
      "op": "frame_dig -6",
      "defined_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1367": {
      "op": "gtxns Sender",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3"
      ]
    },
    "1369": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "0"
      ]
    },
    "1370": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1372": {
      "op": "app_global_get_ex",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1373": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "maybe_value%0#1"
      ]
    },
    "1374": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%1#1"
      ]
    },
    "1375": {
      "error": "Wrong Sender",
      "op": "assert // Wrong Sender",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1376": {
      "op": "frame_dig -6",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1378": {
      "op": "gtxns Receiver",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%2#2"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%2#2"
      ]
    },
    "1380": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%2#2",
        "tmp%3#2"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%2#2",
        "tmp%3#2"
      ]
    },
    "1382": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%4#1"
      ]
    },
    "1383": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1384": {
      "op": "frame_dig -6",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1386": {
      "op": "gtxns Amount",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%5#2"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%5#2"
      ]
    },
    "1388": {
      "op": "==",
      "defined_out": [
        "requested_amount#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "tmp%6#0"
      ]
    },
    "1389": {
      "error": "Locked amount is incorrect",
      "op": "assert // Locked amount is incorrect",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1390": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x7469746c65"
      ]
    },
    "1392": {
      "op": "frame_dig -5",
      "defined_out": [
        "0x7469746c65",
        "requested_amount#1",
        "title#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x7469746c65",
        "title#0 (copy)"
      ]
    },
    "1394": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1395": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x636964"
      ]
    },
    "1397": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x636964",
        "cid#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "1399": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1400": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1428": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1431": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1432": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_small#0",
        "requested_amount#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "tmp%0#1"
      ]
    },
    "1433": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0"
      ]
    },
    "1434": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1463": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "max_requested_amount_medium#0",
        "error#0"
      ]
    },
    "1466": {
      "op": "swap",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "max_requested_amount_medium#0"
      ]
    },
    "1467": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1469": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1470": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "tmp%1#1"
      ]
    },
    "1471": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0"
      ]
    },
    "1472": {
      "op": "<=",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%2#1"
      ]
    },
    "1473": {
      "op": "bz submit_else_body@13",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1476": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1477": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "10",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "10"
      ]
    },
    "1478": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1479": {
      "block": "submit_after_if_else@16",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "bytec 19 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f74797065"
      ]
    },
    "1481": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x66756e64696e675f74797065",
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f74797065",
        "funding_type#1"
      ]
    },
    "1483": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1484": {
      "op": "bytec 20 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1486": {
      "op": "frame_dig 2",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1"
      ]
    },
    "1488": {
      "op": "dup",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "1489": {
      "op": "cover 2",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1 (copy)"
      ]
    },
    "1491": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1492": {
      "op": "frame_dig -1",
      "defined_out": [
        "focus#0 (copy)",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "focus#0 (copy)"
      ]
    },
    "1494": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1",
        "new_state_value%3#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "new_state_value%3#0"
      ]
    },
    "1495": {
      "op": "bytec 18 // 0x666f637573",
      "defined_out": [
        "0x666f637573",
        "funding_type#1",
        "new_state_value%3#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "new_state_value%3#0",
        "0x666f637573"
      ]
    },
    "1497": {
      "op": "swap",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x666f637573",
        "new_state_value%3#0"
      ]
    },
    "1498": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1499": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "funding_type#1",
        "new_state_value%4#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "new_state_value%4#0"
      ]
    },
    "1502": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74",
        "funding_type#1",
        "new_state_value%4#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "new_state_value%4#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1504": {
      "op": "swap",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x6c6f636b65645f616d6f756e74",
        "new_state_value%4#0"
      ]
    },
    "1505": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1506": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1508": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "funding_type#1",
        "new_state_value%5#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "new_state_value%5#0"
      ]
    },
    "1510": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1511": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x737461747573"
      ]
    },
    "1512": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x737461747573",
        "10",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x737461747573",
        "10"
      ]
    },
    "1513": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1514": {
      "retsub": true,
      "op": "retsub"
    },
    "1515": {
      "block": "submit_else_body@13",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1517": {
      "op": "frame_dig 0",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_medium#0"
      ]
    },
    "1519": {
      "op": "<=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%3#1"
      ]
    },
    "1520": {
      "op": "bz submit_else_body@15",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1523": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1524": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "20",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "20"
      ]
    },
    "1525": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1526": {
      "op": "b submit_after_if_else@16"
    },
    "1529": {
      "block": "submit_else_body@15",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1530": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "33"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "33"
      ]
    },
    "1532": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1533": {
      "op": "b submit_after_if_else@16"
    },
    "1536": {
      "block": "submit_bool_false@6",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "or_result%0#0"
      ]
    },
    "1537": {
      "op": "b submit_bool_merge@7"
    },
    "1540": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.update",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "update",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1543": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1546": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1549": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1550": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1551": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1552": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1553": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1554": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1555": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1556": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1557": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1559": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1562": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1563": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "1565": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "cid#0"
      ]
    },
    "1568": {
      "op": "frame_bury -1",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1570": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x7469746c65"
      ]
    },
    "1572": {
      "op": "swap",
      "stack_out": [
        "0x7469746c65",
        "tmp%0#0"
      ]
    },
    "1573": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1574": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1576": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "1578": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1579": {
      "retsub": true,
      "op": "retsub"
    },
    "1580": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop",
      "params": {},
      "block": "drop",
      "stack_in": [],
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1583": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1586": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1587": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1588": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1589": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1590": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#1"
      ]
    },
    "1591": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "10"
      ]
    },
    "1592": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1593": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1594": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1595": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "1597": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1598": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1599": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": []
    },
    "1602": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "1604": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "1605": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1606": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1608": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "1609": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1610": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1611": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f63617465676f7279",
        "0"
      ]
    },
    "1612": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1613": {
      "op": "bytec 18 // 0x666f637573",
      "defined_out": [
        "0x666f637573"
      ],
      "stack_out": [
        "0x666f637573"
      ]
    },
    "1615": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x666f637573",
        "0"
      ]
    },
    "1616": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1617": {
      "op": "bytec 19 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "1619": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "1620": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1621": {
      "op": "bytec 20 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1623": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "1624": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1625": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1627": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "1628": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1629": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1630": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "1631": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1632": {
      "retsub": true,
      "op": "retsub"
    },
    "1633": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize",
      "params": {},
      "block": "finalize",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1636": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1637": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1640": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "1643": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "1644": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "1645": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "1646": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1647": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "1648": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "10"
      ]
    },
    "1649": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "1650": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": [
        "error#0"
      ]
    },
    "1651": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "1653": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1654": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1656": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1657": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1658": {
      "op": "-",
      "defined_out": [
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0"
      ]
    },
    "1659": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "0"
      ]
    },
    "1660": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1661": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "1662": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "1663": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "maybe_exists%2#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "1664": {
      "op": "uncover 2",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "1666": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "1667": {
      "op": "intc_2 // 10",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "10"
      ]
    },
    "1668": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%0#0"
      ]
    },
    "1669": {
      "op": "bz finalize_else_body@3",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1672": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "category#0",
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1699": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1702": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1704": {
      "block": "finalize_after_if_else@7",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1706": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "1707": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#2"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "tmp%2#2"
      ]
    },
    "1708": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1709": {
      "op": "frame_dig 1",
      "defined_out": [
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "discussion_duration#0"
      ]
    },
    "1711": {
      "op": "<=",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%3#0"
      ]
    },
    "1712": {
      "error": "Too early",
      "op": "assert // Too early",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1713": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1715": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0"
      ]
    },
    "1718": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1719": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "committee_id#0",
        "committee_id#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_id#0 (copy)",
        "0x"
      ]
    },
    "1720": {
      "op": "!=",
      "defined_out": [
        "committee_id#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "tmp%0#0"
      ]
    },
    "1721": {
      "error": "Empty Committee ID",
      "op": "assert // Empty Committee ID",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0"
      ]
    },
    "1722": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_id#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1724": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ]
    },
    "1727": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "error#0",
        "0x0000"
      ]
    },
    "1728": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "discussion_duration#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "tmp%1#0"
      ]
    },
    "1729": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1730": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ]
    },
    "1731": {
      "error": "Wrong Committee Members",
      "op": "assert // Wrong Committee Members",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1732": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_id#0",
        "committee_members#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1734": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0"
      ]
    },
    "1737": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0",
        "0x0000"
      ]
    },
    "1738": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "tmp%3#0"
      ]
    },
    "1739": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1740": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ]
    },
    "1741": {
      "error": "Wrong Committee Votes",
      "op": "assert // Wrong Committee Votes",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1742": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1744": {
      "op": "uncover 3",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1746": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1747": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1749": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0"
      ]
    },
    "1751": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_votes#0"
      ]
    },
    "1752": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1754": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0"
      ]
    },
    "1755": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1756": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x737461747573"
      ]
    },
    "1757": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x737461747573",
        "20",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x737461747573",
        "20"
      ]
    },
    "1758": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1759": {
      "op": "bytec 25 // 0x66696e616c697a6174696f6e5f74696d657374616d70",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ]
    },
    "1761": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "discussion_duration#0",
        "error#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "new_state_value%0#0"
      ]
    },
    "1763": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1764": {
      "op": "pushbytes 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "1778": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "error#0"
      ]
    },
    "1781": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "error#0",
        "0x0000"
      ]
    },
    "1782": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "tmp%0#0"
      ]
    },
    "1783": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0"
      ]
    },
    "1784": {
      "op": "pushbytes 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "1809": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "error#0"
      ]
    },
    "1812": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1813": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%1#0"
      ]
    },
    "1814": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1815": {
      "op": "bytec 29 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1817": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1820": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1821": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1822": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "32"
      ]
    },
    "1824": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%3#0"
      ]
    },
    "1825": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1826": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1828": {
      "op": "*",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1829": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "10000"
      ]
    },
    "1831": {
      "op": "/",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%1#4"
      ]
    },
    "1832": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1835": {
      "retsub": true,
      "op": "retsub"
    },
    "1836": {
      "block": "finalize_else_body@3",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "1838": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "20"
      ]
    },
    "1839": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "1840": {
      "op": "bz finalize_else_body@5",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1843": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1871": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1874": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1876": {
      "op": "b finalize_after_if_else@7"
    },
    "1879": {
      "block": "finalize_else_body@5",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ],
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1906": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1909": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1911": {
      "op": "b finalize_after_if_else@7"
    },
    "1914": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "params": {
        "voter#0": "bytes",
        "voting_power#0": "bytes"
      },
      "block": "assign_voter",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1917": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "op": "callsub is_committee_publisher",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1920": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1921": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1922": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1923": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1924": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1925": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "20"
      ]
    },
    "1926": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1927": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1928": {
      "op": "frame_dig -1",
      "defined_out": [
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "voting_power#0 (copy)"
      ]
    },
    "1930": {
      "op": "btoi",
      "defined_out": [
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1"
      ]
    },
    "1931": {
      "op": "bytec 26 // \"V\"",
      "defined_out": [
        "\"V\"",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "\"V\""
      ]
    },
    "1933": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"V\"",
        "voter#0 (copy)",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1935": {
      "op": "concat",
      "defined_out": [
        "tmp%0#2",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2"
      ]
    },
    "1936": {
      "op": "dup",
      "defined_out": [
        "tmp%0#2",
        "tmp%0#2 (copy)",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ]
    },
    "1937": {
      "op": "box_len",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1938": {
      "op": "bury 1",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "maybe_exists%0#0"
      ]
    },
    "1940": {
      "op": "!",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "1941": {
      "error": "Voter Already Assigned",
      "op": "assert // Voter Already Assigned",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2"
      ]
    },
    "1942": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#2",
        "voting_power#1",
        "voting_power#1 (copy)"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "voting_power#1 (copy)"
      ]
    },
    "1944": {
      "error": "Invalid Voting Power",
      "op": "assert // Invalid Voting Power",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2"
      ]
    },
    "1945": {
      "op": "frame_dig -1",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "voting_power#0 (copy)"
      ]
    },
    "1947": {
      "op": "bytec 27 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#2",
        "voting_power#0 (copy)",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "voting_power#0 (copy)",
        "0x00"
      ]
    },
    "1949": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#2",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1950": {
      "op": "box_put",
      "stack_out": [
        "voting_power#1"
      ]
    },
    "1951": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voting_power#1",
        "0"
      ]
    },
    "1952": {
      "op": "bytec 22 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "0",
        "\"voters_count\""
      ]
    },
    "1954": {
      "op": "app_global_get_ex",
      "stack_out": [
        "voting_power#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1955": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "voting_power#1",
        "maybe_value%0#0"
      ]
    },
    "1956": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1957": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "new_state_value%0#0"
      ]
    },
    "1958": {
      "op": "bytec 22 // \"voters_count\"",
      "stack_out": [
        "voting_power#1",
        "new_state_value%0#0",
        "\"voters_count\""
      ]
    },
    "1960": {
      "op": "swap",
      "stack_out": [
        "voting_power#1",
        "\"voters_count\"",
        "new_state_value%0#0"
      ]
    },
    "1961": {
      "op": "app_global_put",
      "stack_out": [
        "voting_power#1"
      ]
    },
    "1962": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voting_power#1",
        "0"
      ]
    },
    "1963": {
      "op": "bytec 23 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "0",
        "\"assigned_votes\""
      ]
    },
    "1965": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1966": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "voting_power#1",
        "maybe_value%1#0"
      ]
    },
    "1967": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "1968": {
      "op": "bytec 23 // \"assigned_votes\"",
      "stack_out": [
        "new_state_value%1#0",
        "\"assigned_votes\""
      ]
    },
    "1970": {
      "op": "swap",
      "stack_out": [
        "\"assigned_votes\"",
        "new_state_value%1#0"
      ]
    },
    "1971": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1972": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1973": {
      "op": "bytec 22 // \"voters_count\"",
      "stack_out": [
        "0",
        "\"voters_count\""
      ]
    },
    "1975": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1976": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1977": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "0"
      ]
    },
    "1978": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1980": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1981": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "1982": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1983": {
      "op": "bz assign_voter_after_if_else@2",
      "stack_out": []
    },
    "1986": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1987": {
      "op": "bytec 23 // \"assigned_votes\"",
      "stack_out": [
        "0",
        "\"assigned_votes\""
      ]
    },
    "1989": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1990": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "1991": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%4#0",
        "0"
      ]
    },
    "1992": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1994": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1995": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "1996": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1997": {
      "error": "Voting Power Mismatch",
      "op": "assert // Voting Power Mismatch",
      "stack_out": []
    },
    "1998": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1999": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "0x737461747573",
        "25"
      ],
      "stack_out": [
        "0x737461747573",
        "25"
      ]
    },
    "2001": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2002": {
      "op": "bytec 17 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "2004": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "new_state_value%2#0"
      ]
    },
    "2006": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2007": {
      "block": "assign_voter_after_if_else@2",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "2008": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.vote",
      "params": {
        "voter#0": "bytes",
        "approvals#0": "bytes",
        "rejections#0": "bytes"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2011": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2012": {
      "op": "dupn 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0"
      ]
    },
    "2014": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1"
      ]
    },
    "2015": {
      "op": "dupn 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2017": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "2020": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "2023": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2024": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0"
      ]
    },
    "2025": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0",
        "0x737461747573"
      ]
    },
    "2026": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2027": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1"
      ]
    },
    "2028": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "25"
      ]
    },
    "2030": {
      "op": "!=",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%1#1"
      ]
    },
    "2031": {
      "op": "bz vote_after_if_else@15",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2034": {
      "op": "bytec 28 // 0x00194552523a57726f6e672050726f706f73616c20537461747573",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2036": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2038": {
      "block": "vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2040": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2041": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "2042": {
      "op": "bz vote_after_if_else@2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2045": {
      "retsub": true,
      "op": "retsub",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2046": {
      "block": "vote_after_if_else@2",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#0 (copy)"
      ]
    },
    "2048": {
      "op": "btoi",
      "defined_out": [
        "approvals#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1"
      ]
    },
    "2049": {
      "op": "frame_bury 3",
      "defined_out": [
        "approvals#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2051": {
      "op": "frame_dig -1",
      "defined_out": [
        "approvals#1",
        "rejections#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#0 (copy)"
      ]
    },
    "2053": {
      "op": "btoi",
      "defined_out": [
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1"
      ]
    },
    "2054": {
      "op": "frame_bury 5",
      "defined_out": [
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2056": {
      "op": "bytec 26 // \"V\"",
      "defined_out": [
        "\"V\"",
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "\"V\""
      ]
    },
    "2058": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"V\"",
        "approvals#1",
        "rejections#1",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "2060": {
      "op": "concat",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2061": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%0#1"
      ]
    },
    "2062": {
      "op": "frame_bury 1",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2064": {
      "op": "box_len",
      "defined_out": [
        "approvals#1",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2065": {
      "op": "bury 1",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%0#0"
      ]
    },
    "2067": {
      "op": "bnz vote_after_if_else@7",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2070": {
      "op": "pushbytes 0x00134552523a566f746572206e6f7420666f756e64",
      "defined_out": [
        "approvals#1",
        "error#0",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2093": {
      "op": "frame_bury 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2095": {
      "block": "vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2097": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2098": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%3#0"
      ]
    },
    "2099": {
      "op": "bz vote_after_if_else@4",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2102": {
      "retsub": true,
      "op": "retsub",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2103": {
      "block": "vote_after_if_else@4",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2105": {
      "op": "dup",
      "defined_out": [
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ]
    },
    "2106": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0",
        "maybe_exists%0#0"
      ]
    },
    "2107": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ]
    },
    "2108": {
      "op": "dup",
      "defined_out": [
        "tmp%0#1",
        "voter_box#0",
        "voter_box#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0",
        "voter_box#0 (copy)"
      ]
    },
    "2109": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0",
        "tmp%5#0"
      ]
    },
    "2112": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0",
        "tmp%5#0",
        "0x80"
      ]
    },
    "2115": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2116": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#1"
      ]
    },
    "2118": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "tmp%0#1",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2119": {
      "op": "box_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0"
      ]
    },
    "2121": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2123": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2124": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_value%1#0"
      ]
    },
    "2125": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2126": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "new_state_value%0#0"
      ]
    },
    "2127": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "new_state_value%0#0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2129": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0x766f7465645f6d656d62657273",
        "new_state_value%0#0"
      ]
    },
    "2130": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0"
      ]
    },
    "2132": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%8#0"
      ]
    },
    "2133": {
      "op": "frame_dig 3",
      "defined_out": [
        "approvals#1",
        "tmp%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%8#0",
        "approvals#1"
      ]
    },
    "2135": {
      "op": "dup",
      "defined_out": [
        "approvals#1",
        "approvals#1 (copy)",
        "tmp%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%8#0",
        "approvals#1 (copy)",
        "approvals#1 (copy)"
      ]
    },
    "2136": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%8#0",
        "approvals#1 (copy)"
      ]
    },
    "2138": {
      "op": "-",
      "defined_out": [
        "approvals#1",
        "tmp%0#1",
        "tmp%10#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%10#0"
      ]
    },
    "2139": {
      "op": "frame_dig 5",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%0#1",
        "tmp%10#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%10#0",
        "rejections#1"
      ]
    },
    "2141": {
      "op": "dup",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "rejections#1 (copy)",
        "tmp%0#1",
        "tmp%10#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%10#0",
        "rejections#1 (copy)",
        "rejections#1 (copy)"
      ]
    },
    "2142": {
      "op": "cover 3",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "tmp%10#0",
        "rejections#1 (copy)"
      ]
    },
    "2144": {
      "op": "-",
      "defined_out": [
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0"
      ]
    },
    "2145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "0"
      ]
    },
    "2146": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2148": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2149": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "maybe_value%2#0"
      ]
    },
    "2150": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%2#0",
        "approvals#1"
      ]
    },
    "2152": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "new_state_value%1#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "new_state_value%1#0"
      ]
    },
    "2153": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "new_state_value%1#0",
        "0x617070726f76616c73"
      ]
    },
    "2155": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0x617070726f76616c73",
        "new_state_value%1#0"
      ]
    },
    "2156": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0"
      ]
    },
    "2157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0"
      ]
    },
    "2158": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2160": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2161": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0"
      ]
    },
    "2162": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0",
        "rejections#1"
      ]
    },
    "2164": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "new_state_value%2#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "new_state_value%2#0"
      ]
    },
    "2165": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "new_state_value%2#0",
        "0x72656a656374696f6e73"
      ]
    },
    "2167": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0x72656a656374696f6e73",
        "new_state_value%2#0"
      ]
    },
    "2168": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0"
      ]
    },
    "2169": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0"
      ]
    },
    "2170": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2172": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2173": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%4#0"
      ]
    },
    "2174": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "new_state_value%3#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "new_state_value%3#0"
      ]
    },
    "2175": {
      "op": "bytec 16 // 0x6e756c6c73",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "new_state_value%3#0",
        "0x6e756c6c73"
      ]
    },
    "2177": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x6e756c6c73",
        "new_state_value%3#0"
      ]
    },
    "2178": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2179": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "approvals#1",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x0000"
      ]
    },
    "2180": {
      "op": "frame_bury 0"
    },
    "2182": {
      "retsub": true,
      "op": "retsub"
    },
    "2183": {
      "block": "vote_after_if_else@7",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2185": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2186": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2187": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%1#0",
        "voter_box#0",
        "voter_box#0 (copy)"
      ]
    },
    "2188": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2190": {
      "op": "frame_bury 2",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2192": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2193": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "64"
      ]
    },
    "2195": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0"
      ]
    },
    "2196": {
      "op": "bytec 27 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2198": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2199": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2201": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "encoded_bool%0#1"
      ]
    },
    "2202": {
      "op": "bytec 27 // 0x00",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "encoded_bool%0#1",
        "0x00"
      ]
    },
    "2204": {
      "op": "!=",
      "defined_out": [
        "tmp%0#1",
        "tmp%2#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%2#1"
      ]
    },
    "2205": {
      "op": "bz vote_after_if_else@9",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2208": {
      "op": "pushbytes 0x00174552523a566f74657220616c726561647920766f746564",
      "defined_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2235": {
      "op": "frame_bury 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2237": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2240": {
      "block": "vote_after_if_else@9",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2242": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "2245": {
      "op": "frame_dig 3",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "approvals#1"
      ]
    },
    "2247": {
      "op": "frame_dig 5",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "approvals#1",
        "rejections#1"
      ]
    },
    "2249": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "tmp%3#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "tmp%3#1"
      ]
    },
    "2250": {
      "op": "itob",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "tmp%4#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "tmp%4#1"
      ]
    },
    "2251": {
      "op": "b<",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%5#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#1"
      ]
    },
    "2252": {
      "op": "bz vote_after_if_else@11",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2255": {
      "op": "pushbytes 0x00124552523a566f746573206578636565646564",
      "defined_out": [
        "approvals#1",
        "error#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2277": {
      "op": "frame_bury 0",
      "defined_out": [
        "approvals#1",
        "error#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2279": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2282": {
      "block": "vote_after_if_else@11",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2283": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2285": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2288": {
      "block": "vote_after_if_else@15",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2291": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2292": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2294": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "is_voting_open#0"
      ]
    },
    "2296": {
      "op": "frame_bury 4",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2298": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2299": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%2#1"
      ]
    },
    "2300": {
      "op": "bnz vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2303": {
      "op": "frame_dig 4",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0"
      ]
    },
    "2305": {
      "op": "bnz vote_after_if_else@19",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2308": {
      "op": "pushbytes 0x00194552523a566f74696e6720506572696f642045787069726564",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2337": {
      "op": "frame_bury 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2339": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20"
    },
    "2342": {
      "block": "vote_after_if_else@19",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2343": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2345": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20"
    },
    "2348": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "params": {},
      "block": "scrutiny",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2351": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2352": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "category#0"
      ]
    },
    "2353": {
      "op": "dupn 3",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2355": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "2358": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2359": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x737461747573"
      ]
    },
    "2360": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2361": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1"
      ]
    },
    "2362": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1",
        "25"
      ]
    },
    "2364": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2365": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2366": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2369": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "error#0",
        "0x0000"
      ]
    },
    "2370": {
      "op": "==",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "tmp%1#0"
      ]
    },
    "2371": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0"
      ]
    },
    "2372": {
      "op": "bz scrutiny_bool_true@8",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2375": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2376": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2378": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2379": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1"
      ]
    },
    "2380": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "0"
      ]
    },
    "2381": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "error#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2383": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%2#0",
        "maybe_value%1#1",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "2384": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "maybe_value%2#1"
      ]
    },
    "2385": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%2#0"
      ]
    },
    "2386": {
      "op": "bz scrutiny_bool_false@9",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2389": {
      "block": "scrutiny_bool_true@8",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ]
    },
    "2390": {
      "block": "scrutiny_bool_merge@10",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ],
      "error": "Voting Ongoing",
      "op": "assert // Voting Ongoing",
      "defined_out": [],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2391": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2392": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "2393": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0"
      ]
    },
    "2394": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%0#0",
        "category#0"
      ]
    },
    "2395": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%0#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "2396": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0",
        "category#0"
      ]
    },
    "2398": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0"
      ]
    },
    "2400": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2401": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "10"
      ]
    },
    "2402": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2403": {
      "op": "bz scrutiny_else_body@14",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2406": {
      "op": "pushbytes 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "2420": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2423": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2425": {
      "block": "scrutiny_after_if_else@18",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2427": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2428": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2429": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2430": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2431": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2433": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "error#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0",
        "maybe_exists%1#0"
      ]
    },
    "2434": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0"
      ]
    },
    "2435": {
      "op": "*",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0"
      ]
    },
    "2436": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0",
        "10000"
      ]
    },
    "2438": {
      "op": "/",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_voters_required#0"
      ]
    },
    "2439": {
      "op": "frame_bury 2",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2442": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "2443": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "error#0",
        "maybe_exists%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "2444": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "2445": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%2#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "2446": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "2448": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maybe_exists%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "2450": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2451": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "10"
      ]
    },
    "2452": {
      "op": "==",
      "defined_out": [
        "category#0",
        "error#0",
        "minimum_voters_required#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2453": {
      "op": "bz scrutiny_else_body@22",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2456": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "category#0",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "2479": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2482": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "minimum_voters_required#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2484": {
      "block": "scrutiny_after_if_else@26",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2486": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2487": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2488": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2489": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2490": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2492": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2493": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0"
      ]
    },
    "2494": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2495": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "error#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2497": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2498": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "2499": {
      "op": "+",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0"
      ]
    },
    "2500": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2501": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2503": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2504": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "maybe_value%5#0"
      ]
    },
    "2505": {
      "op": "+",
      "defined_out": [
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "total_votes#0"
      ]
    },
    "2506": {
      "op": "frame_bury 4",
      "defined_out": [
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2508": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2509": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2511": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "error#0",
        "maybe_exists%6#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0",
        "maybe_exists%6#0"
      ]
    },
    "2512": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0"
      ]
    },
    "2513": {
      "op": "*",
      "defined_out": [
        "error#0",
        "tmp%0#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0"
      ]
    },
    "2514": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "error#0",
        "tmp%0#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0",
        "10000"
      ]
    },
    "2516": {
      "op": "/",
      "defined_out": [
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2517": {
      "op": "frame_bury 3",
      "defined_out": [
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2519": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2520": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2522": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2523": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0"
      ]
    },
    "2524": {
      "op": "frame_dig 2",
      "defined_out": [
        "error#0",
        "maybe_value%7#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0",
        "minimum_voters_required#0"
      ]
    },
    "2526": {
      "op": ">=",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "tmp%1#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2527": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2530": {
      "op": "frame_dig 4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "total_votes#0"
      ]
    },
    "2532": {
      "op": "frame_dig 3",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2534": {
      "op": ">=",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%2#0"
      ]
    },
    "2535": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2538": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2539": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2541": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2542": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0"
      ]
    },
    "2543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "2544": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2546": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%9#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2547": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "2548": {
      "op": ">",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "tmp%3#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%3#0"
      ]
    },
    "2549": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2552": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573"
      ]
    },
    "2553": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "0x737461747573",
        "30",
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573",
        "30"
      ]
    },
    "2555": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2556": {
      "retsub": true,
      "op": "retsub"
    },
    "2557": {
      "block": "scrutiny_else_body@4",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573"
      ]
    },
    "2558": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "0x737461747573",
        "40"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573",
        "40"
      ]
    },
    "2560": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2561": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2562": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "2564": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2565": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%10#0"
      ]
    },
    "2566": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2569": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "2571": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ]
    },
    "2573": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2574": {
      "retsub": true,
      "op": "retsub"
    },
    "2575": {
      "block": "scrutiny_else_body@22",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2577": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "20"
      ]
    },
    "2578": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2579": {
      "op": "bz scrutiny_else_body@24",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2582": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "2606": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2609": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2611": {
      "op": "b scrutiny_after_if_else@26"
    },
    "2614": {
      "block": "scrutiny_else_body@24",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "2637": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2640": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2642": {
      "op": "b scrutiny_after_if_else@26"
    },
    "2645": {
      "block": "scrutiny_else_body@14",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2647": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "20"
      ]
    },
    "2648": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2649": {
      "op": "bz scrutiny_else_body@16",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2652": {
      "op": "pushbytes 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "2667": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2670": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2672": {
      "op": "b scrutiny_after_if_else@18"
    },
    "2675": {
      "block": "scrutiny_else_body@16",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "pushbytes 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "2689": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2692": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2694": {
      "op": "b scrutiny_after_if_else@18"
    },
    "2697": {
      "block": "scrutiny_bool_false@9",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ]
    },
    "2698": {
      "op": "b scrutiny_bool_merge@10"
    },
    "2701": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.review",
      "params": {
        "block#0": "uint64"
      },
      "block": "review",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2704": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2706": {
      "op": "pushbytes 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0x78676f765f7265766965776572"
      ]
    },
    "2721": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2724": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2725": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2726": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%1#1",
        "32"
      ]
    },
    "2728": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2729": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2730": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2731": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2732": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2733": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "2734": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2735": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#1"
      ]
    },
    "2736": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "30"
      ]
    },
    "2738": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2739": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "2740": {
      "op": "frame_dig -1",
      "defined_out": [
        "block#0 (copy)"
      ],
      "stack_out": [
        "block#0 (copy)"
      ]
    },
    "2742": {
      "op": "bz review_else_body@2",
      "stack_out": []
    },
    "2745": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "0x737461747573"
      ]
    },
    "2746": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "0x737461747573",
        "60"
      ],
      "stack_out": [
        "0x737461747573",
        "60"
      ]
    },
    "2748": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2749": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2750": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "2752": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "reg_app#0"
      ],
      "stack_out": [
        "reg_app#0",
        "maybe_exists%0#0"
      ]
    },
    "2753": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "reg_app#0"
      ]
    },
    "2754": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2756": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2757": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": []
    },
    "2760": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "2762": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ]
    },
    "2764": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2765": {
      "retsub": true,
      "op": "retsub"
    },
    "2766": {
      "block": "review_else_body@2",
      "stack_in": [],
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "2767": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "0x737461747573",
        "45"
      ],
      "stack_out": [
        "0x737461747573",
        "45"
      ]
    },
    "2769": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2770": {
      "retsub": true,
      "op": "retsub"
    },
    "2771": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.fund",
      "params": {},
      "block": "fund",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2774": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2775": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2778": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "2779": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "2780": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "2781": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2782": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#1"
      ]
    },
    "2783": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "45"
      ]
    },
    "2785": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "2786": {
      "op": "bz fund_after_if_else@5",
      "stack_out": [
        "error#0"
      ]
    },
    "2789": {
      "op": "bytec 28 // 0x00194552523a57726f6e672050726f706f73616c20537461747573",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "2791": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "2793": {
      "block": "fund_after_inlined_smart_contracts.proposal.contract.Proposal.fund_check_authorization@6",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "2795": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "2796": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2797": {
      "op": "bz fund_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "2800": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "2802": {
      "op": "swap"
    },
    "2803": {
      "retsub": true,
      "op": "retsub"
    },
    "2804": {
      "block": "fund_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0x737461747573"
      ]
    },
    "2805": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "0x737461747573",
        "50"
      ],
      "stack_out": [
        "error#0",
        "0x737461747573",
        "50"
      ]
    },
    "2807": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "2808": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "2809": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "2811": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2812": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "2813": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "error#0"
      ]
    },
    "2816": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ],
      "stack_out": [
        "error#0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "2818": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ]
    },
    "2820": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "2821": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "2822": {
      "op": "swap"
    },
    "2823": {
      "retsub": true,
      "op": "retsub"
    },
    "2824": {
      "block": "fund_after_if_else@5",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "2825": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "2827": {
      "op": "b fund_after_inlined_smart_contracts.proposal.contract.Proposal.fund_check_authorization@6"
    },
    "2830": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.decommission",
      "params": {
        "voters#0": "bytes"
      },
      "block": "decommission",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2833": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2834": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0"
      ]
    },
    "2835": {
      "op": "dupn 2",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2837": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "op": "callsub is_committee_publisher",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%0#1"
      ]
    },
    "2840": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2841": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2842": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2843": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2844": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%0#0"
      ]
    },
    "2845": {
      "op": "bz decommission_bool_true@16",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2848": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2849": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2850": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2851": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%1#0"
      ]
    },
    "2852": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%1#0",
        "10"
      ]
    },
    "2853": {
      "op": "==",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%2#1"
      ]
    },
    "2854": {
      "op": "bnz decommission_bool_true@16",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2857": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2858": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2859": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "2860": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%2#1"
      ]
    },
    "2861": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%2#1",
        "50"
      ]
    },
    "2863": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%3#1"
      ]
    },
    "2864": {
      "op": "bnz decommission_bool_true@16",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2867": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2868": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2869": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%3#1",
        "maybe_exists%3#0"
      ]
    },
    "2870": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%3#1"
      ]
    },
    "2871": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "60",
        "maybe_value%3#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%3#1",
        "60"
      ]
    },
    "2873": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%4#0"
      ]
    },
    "2874": {
      "op": "bnz decommission_bool_true@16",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2877": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2878": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2879": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2880": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%4#0"
      ]
    },
    "2881": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%4#0",
        "40"
      ]
    },
    "2883": {
      "op": "==",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%5#1"
      ]
    },
    "2884": {
      "op": "bz decommission_bool_false@17",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2887": {
      "block": "decommission_bool_true@16",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "or_result%0#0"
      ]
    },
    "2888": {
      "block": "decommission_bool_merge@18",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "or_result%0#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2889": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2890": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2891": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2892": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%5#0"
      ]
    },
    "2893": {
      "op": "bz decommission_after_if_else@25",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2896": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2897": {
      "op": "bytec_0 // 0x737461747573",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2898": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2899": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%6#0"
      ]
    },
    "2900": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%6#0",
        "10"
      ]
    },
    "2901": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%7#0"
      ]
    },
    "2902": {
      "op": "bz decommission_after_if_else@25",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2905": {
      "op": "pushbytes 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "2925": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "cooldown_duration#0",
        "error#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "cooldown_duration#0",
        "error#0"
      ]
    },
    "2928": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "error#0",
        "cooldown_duration#0"
      ]
    },
    "2929": {
      "op": "frame_bury 2",
      "defined_out": [
        "cooldown_duration#0",
        "error#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "error#0"
      ]
    },
    "2931": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "cooldown_duration#0",
        "error#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "error#0",
        "0x0000"
      ]
    },
    "2932": {
      "op": "==",
      "defined_out": [
        "cooldown_duration#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%8#0"
      ]
    },
    "2933": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2934": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2935": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "cooldown_duration#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "2937": {
      "op": "app_global_get_ex",
      "defined_out": [
        "cooldown_duration#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2938": {
      "error": "check self.cool_down_start_ts exists",
      "op": "assert // check self.cool_down_start_ts exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%7#0"
      ]
    },
    "2939": {
      "op": "bz decommission_bool_false@23",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2942": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "cooldown_duration#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0"
      ]
    },
    "2944": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0",
        "0"
      ]
    },
    "2945": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0",
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "2947": {
      "op": "app_global_get_ex",
      "defined_out": [
        "cooldown_duration#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2948": {
      "error": "check self.cool_down_start_ts exists",
      "op": "assert // check self.cool_down_start_ts exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0",
        "maybe_value%8#0"
      ]
    },
    "2949": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0",
        "maybe_value%8#0",
        "cooldown_duration#0"
      ]
    },
    "2951": {
      "op": "+",
      "defined_out": [
        "cooldown_duration#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2952": {
      "op": ">=",
      "defined_out": [
        "cooldown_duration#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%12#0"
      ]
    },
    "2953": {
      "op": "bz decommission_bool_false@23",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2956": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "cooldown_duration#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "and_result%0#0"
      ]
    },
    "2957": {
      "block": "decommission_bool_merge@24",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "and_result%0#0"
      ],
      "error": "Too early",
      "op": "assert // Too early",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2958": {
      "block": "decommission_after_if_else@25",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "voters#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voters#0 (copy)"
      ]
    },
    "2960": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voters#0 (copy)",
        "0"
      ]
    },
    "2961": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "2962": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2964": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2965": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2967": {
      "block": "decommission_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2969": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "2971": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "2972": {
      "op": "bz decommission_after_for@6",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2975": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voters#0 (copy)"
      ]
    },
    "2977": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2980": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2982": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "32"
      ]
    },
    "2984": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2985": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "32"
      ]
    },
    "2987": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voter#0"
      ]
    },
    "2988": {
      "op": "bytec 26 // \"V\"",
      "defined_out": [
        "\"V\"",
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voter#0",
        "\"V\""
      ]
    },
    "2990": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "\"V\"",
        "voter#0"
      ]
    },
    "2991": {
      "op": "concat",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "2992": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2993": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "2995": {
      "op": "box_len",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2996": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2998": {
      "op": "bz decommission_after_if_else@4",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3001": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "3003": {
      "op": "box_del",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "{box_del}"
      ]
    },
    "3004": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3005": {
      "block": "decommission_after_if_else@4",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3007": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "3008": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3009": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3011": {
      "op": "b decommission_for_header@1"
    },
    "3014": {
      "block": "decommission_after_for@6",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3016": {
      "op": "acct_params_get AcctTotalBoxes",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3018": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%0#0"
      ]
    },
    "3019": {
      "op": "bnz decommission_after_if_else@10",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3022": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "3023": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "3024": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3025": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%1#0"
      ]
    },
    "3026": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%1#0",
        "10"
      ]
    },
    "3027": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%4#0"
      ]
    },
    "3028": {
      "op": "bz decommission_after_if_else@9",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3031": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "3032": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "3034": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3035": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%2#0"
      ]
    },
    "3036": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3039": {
      "block": "decommission_after_if_else@9",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "3040": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "3042": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "reg_app#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "reg_app#0",
        "maybe_exists%3#0"
      ]
    },
    "3043": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "reg_app#0"
      ]
    },
    "3044": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3046": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%1#0"
      ]
    },
    "3047": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%1#0",
        "tmp%5#0"
      ]
    },
    "3049": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%2#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3051": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%1#0",
        "value%2#0"
      ]
    },
    "3052": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3055": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0x737461747573"
      ]
    },
    "3056": {
      "op": "pushint 70 // 70",
      "defined_out": [
        "0x737461747573",
        "70"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0x737461747573",
        "70"
      ]
    },
    "3058": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "3059": {
      "block": "decommission_after_if_else@10",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3060": {
      "block": "decommission_bool_false@23",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "and_result%0#0"
      ]
    },
    "3061": {
      "op": "b decommission_bool_merge@24"
    },
    "3064": {
      "block": "decommission_bool_false@17",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "or_result%0#0"
      ]
    },
    "3065": {
      "op": "b decommission_bool_merge@18"
    },
    "3068": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.delete",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "3071": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "3072": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3075": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "3076": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3077": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3078": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3079": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "3080": {
      "op": "pushint 70 // 70",
      "defined_out": [
        "70",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "70"
      ]
    },
    "3082": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "3083": {
      "op": "bz delete_after_if_else@5",
      "stack_out": [
        "error#0"
      ]
    },
    "3086": {
      "op": "bytec 28 // 0x00194552523a57726f6e672050726f706f73616c20537461747573",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3088": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3090": {
      "block": "delete_after_inlined_smart_contracts.proposal.contract.Proposal.delete_check_authorization@6",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3092": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "3093": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3094": {
      "op": "bz delete_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "3097": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3099": {
      "op": "swap"
    },
    "3100": {
      "retsub": true,
      "op": "retsub"
    },
    "3101": {
      "block": "delete_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "3102": {
      "op": "swap"
    },
    "3103": {
      "retsub": true,
      "op": "retsub"
    },
    "3104": {
      "block": "delete_after_if_else@5",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3105": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3107": {
      "op": "b delete_after_inlined_smart_contracts.proposal.contract.Proposal.delete_check_authorization@6"
    },
    "3110": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3111": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "3113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3114": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3116": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "3118": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3119": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "3120": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3122": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0",
        "0x7469746c65",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "0",
        "0x7469746c65"
      ]
    },
    "3124": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3125": {
      "error": "check self.title exists",
      "op": "assert // check self.title exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0"
      ]
    },
    "3126": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "3127": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "length%0#0"
      ]
    },
    "3128": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "as_bytes%0#0"
      ]
    },
    "3129": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "length_uint16%0#0"
      ]
    },
    "3132": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "maybe_value%2#0"
      ]
    },
    "3133": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "3134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "0"
      ]
    },
    "3135": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0",
        "0x636964",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "0",
        "0x636964"
      ]
    },
    "3137": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3138": {
      "error": "check self.cid exists",
      "op": "assert // check self.cid exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0"
      ]
    },
    "3139": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3140": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "3142": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3143": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "3144": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "3145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "3146": {
      "op": "bytec 25 // 0x66696e616c697a6174696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ]
    },
    "3148": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3149": {
      "error": "check self.finalization_ts exists",
      "op": "assert // check self.finalization_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "maybe_value%5#0"
      ]
    },
    "3150": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3151": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "3152": {
      "op": "bytec 17 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "3154": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3155": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%6#0"
      ]
    },
    "3156": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "3157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "3158": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x737461747573"
      ]
    },
    "3159": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3160": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%7#0"
      ]
    },
    "3161": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "3162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "3163": {
      "op": "bytec_3 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "3164": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3165": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%8#0"
      ]
    },
    "3166": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "3167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "3168": {
      "op": "bytec 18 // 0x666f637573",
      "defined_out": [
        "0",
        "0x666f637573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0",
        "0x666f637573"
      ]
    },
    "3170": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3171": {
      "error": "check self.focus exists",
      "op": "assert // check self.focus exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0"
      ]
    },
    "3172": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "3173": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%6#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%6#0 (copy)"
      ]
    },
    "3174": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "bitlen%0#0"
      ]
    },
    "3175": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "3177": {
      "op": "<=",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "no_overflow%0#0"
      ]
    },
    "3178": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "3179": {
      "op": "extract 7 1",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0"
      ]
    },
    "3182": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "0"
      ]
    },
    "3183": {
      "op": "bytec 19 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0",
        "0x66756e64696e675f74797065",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "0",
        "0x66756e64696e675f74797065"
      ]
    },
    "3185": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%10#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3186": {
      "error": "check self.funding_type exists",
      "op": "assert // check self.funding_type exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "maybe_value%10#0"
      ]
    },
    "3187": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0"
      ]
    },
    "3188": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "3189": {
      "op": "bytec 20 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x7265717565737465645f616d6f756e74",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "0",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "3191": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%11#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3192": {
      "error": "check self.requested_amount exists",
      "op": "assert // check self.requested_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "maybe_value%11#0"
      ]
    },
    "3193": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "3194": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0"
      ]
    },
    "3195": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "3197": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3198": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%12#0"
      ]
    },
    "3199": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "3200": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "3201": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3203": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3204": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0"
      ]
    },
    "3205": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "0"
      ]
    },
    "3206": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3208": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%14#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3209": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "maybe_value%14#0"
      ]
    },
    "3210": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0"
      ]
    },
    "3211": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "3212": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3214": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%15#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3215": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "maybe_value%15#0"
      ]
    },
    "3216": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "3217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "3218": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "3220": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%16#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3221": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%16#0"
      ]
    },
    "3222": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "3223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0"
      ]
    },
    "3224": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "3226": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%17#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3227": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "maybe_value%17#0"
      ]
    },
    "3228": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0"
      ]
    },
    "3229": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "3230": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "3232": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%18#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3233": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "maybe_value%18#0"
      ]
    },
    "3234": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "3236": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "3238": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%19#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3239": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%19#0"
      ]
    },
    "3240": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "3241": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0"
      ]
    },
    "3242": {
      "op": "bytec 7 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "3244": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%20#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3245": {
      "error": "check self.cool_down_start_ts exists",
      "op": "assert // check self.cool_down_start_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%20#0"
      ]
    },
    "3246": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ]
    },
    "3247": {
      "op": "uncover 20",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "maybe_value%0#0"
      ]
    },
    "3249": {
      "op": "uncover 20",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3251": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3252": {
      "op": "pushbytes 0x00eb",
      "defined_out": [
        "0x00eb",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%2#0",
        "0x00eb"
      ]
    },
    "3256": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3257": {
      "op": "uncover 18",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0"
      ]
    },
    "3259": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3260": {
      "op": "uncover 17",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%1#0"
      ]
    },
    "3262": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3263": {
      "op": "uncover 16",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%2#0"
      ]
    },
    "3265": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3266": {
      "op": "uncover 15",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%3#0"
      ]
    },
    "3268": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3269": {
      "op": "uncover 14",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%4#0"
      ]
    },
    "3271": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3272": {
      "op": "uncover 13",
      "stack_out": [
        "encoded_value%0#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%5#0"
      ]
    },
    "3274": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3275": {
      "op": "uncover 12",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%9#0",
        "uint8%0#0"
      ]
    },
    "3277": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3278": {
      "op": "uncover 11",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%7#0"
      ]
    },
    "3280": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3281": {
      "op": "uncover 10",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%8#0"
      ]
    },
    "3283": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3284": {
      "op": "uncover 9",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%9#0"
      ]
    },
    "3286": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3287": {
      "op": "uncover 8",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%13#0"
      ]
    },
    "3289": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3290": {
      "op": "uncover 7",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%10#0"
      ]
    },
    "3292": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3293": {
      "op": "uncover 6",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%15#0",
        "val_as_bytes%11#0"
      ]
    },
    "3295": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3296": {
      "op": "uncover 5",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%12#0"
      ]
    },
    "3298": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3299": {
      "op": "uncover 4",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%17#0",
        "val_as_bytes%13#0"
      ]
    },
    "3301": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3302": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%18#0",
        "val_as_bytes%14#0"
      ]
    },
    "3304": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "3305": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%19#0",
        "val_as_bytes%15#0"
      ]
    },
    "3307": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "encoded_value%0#0",
        "val_as_bytes%16#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%16#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "3308": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%16#0"
      ]
    },
    "3309": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "3310": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%21#0",
        "encoded_value%0#0"
      ]
    },
    "3311": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%22#0"
      ]
    },
    "3312": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
{
  "version": 3,
  "sources": [
    "../../proposal/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CY;;AAA6B;;AAA7B;AADJ;AAGO;;AAAuB;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAKQ;;AADJ;;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADmB;AAD3B;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAIA;;AAAoB;AAApB;AACA;;AAAsB;AAAtB;AACA;;AAAyB;AAAzB;AArGR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAg+BK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AArBA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAz2BL;;;AAy2BK;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAxzBL;;;;AAAA;AAwzBK;;;AAAA;;AA5CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAhDA;;AAAA;AAAA;AAAA;;AAAA;AA5tBL;;;AAAA;;;AAAA;;;AA4tBK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA1CA;;AAAA;AAAA;AAAA;;AAAA;AAlrBL;;;AAkrBK;;;AAAA;;AAxDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AAjkBL;;;AAAA;;;AAikBK;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AA5gBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AA4gBK;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5fL;;;AA4fK;;;AAAA;;AA7YL;;;;;AAE0B;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAEd;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AA+HW;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AA9HR;;AAAS;AAAT;AAAX;;;AACmB;AAAP;;AAAA;;AAAA;;AAAA;AAEG;;AAAA;;AAAA;AAA4C;AAAnD;;AAAA;;AAAA;AA8HK;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AArIsB;;;AA0IzB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AAzIsB;;;AAyM1B;;;AAAP;AAEI;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;;;AAA8C;AAAA;AAAA;AAAA;AAAJ;;;;AAD9C;;;;;;AA2ER;;;AAGY;;;;;;;;;;;;;;;;;;;;;;;;;AAD6B;;;AAGjB;AAAT;AAAP;AAPO;;AAAA;AAA4B;;AAA5B;AAQP;AAoCR;;;AAKY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGR;AAAR;AACG;;;AACS;;;;;;;;;;;;;;;;;;;;;;AAAR;;AACJ;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;AAGY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGhB;AACA;AAKI;;;;;;;;;;;;;;;;;AADqB;;;AAIT;AAAT;AAAP;AACO;AAAP;;AAQO;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAUO;;AACiC;;AAApC;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AAAP;AAMO;;AAAgC;AAAA;;AAAA;AAAA;AAAhC;AAAP;AAER;;;AAEQ;;;;;;;;;AAAA;;;AAGQ;;;AAHR;;AAMR;;;AAE2B;AAAA;;AAAA;AAAA;AAAnB;;AAAA;AAAA;;;AACA;;AAA2B;AAA3B;;AAER;;;AAGY;;AAAA;;AAAoC;;AAApC;AADJ;AAGO;;AAAA;;;AAAyC;;;AAAzC;AAAP;;AAIR;;;AAQY;;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAA6B;;AAA7B;AAnOwC;;AAApC;;;AAEG;AAAuC;AAAvC;AAAP;AAGI;;AADuB;;;AAGX;AAAT;AAAP;AACA;AAAA;AAGI;;AADqB;;;AAGT;AAAT;AAAP;AACA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAqNR;;;;;;AAiCQ;;;AAhNO;;;AAAP;AAEI;AAAA;AAAA;AAAA;AAAA;;;AAA8C;AAAA;AAAA;AAAA;AAAJ;;;;AAD9C;AAoNI;;AAAA;;;AAAA;;AAAc;;AAAA;AAAA;AAAA;;AAAqB;;AAAA;AAAA;;AAxMhC;;AAAA;AAAsB;;AAAtB;AAAP;AACO;;AAAS;AAAT;AAAP;AAGoB;AAAhB;AAAA;;;AACG;;AAAgB;AAAhB;AADH;;;;AADJ;AAMI;;;;;;;;;;;;;;;;;;;;;;AAD0B;;;AAGd;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAEO;;AAAA;AAAA;;AAAA;AAAP;AAEI;AAAA;;AAAA;AADJ;AAyBA;AAAuB;;;AAEhB;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAA;AAAP;AA0JA;;AAAA;;AAAA;AArJI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADiC;;;AAAA;AAAA;;AAGrB;AAAT;AAAP;AAEG;AAAX;;;AACY;;AAA8B;AAA9B;AA6IJ;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAAA;;AAAA;AACmB;;AAAA;AAAnB;;AAAA;AAAA;AAC2B;;;AAA3B;;AAAA;AAAA;AAGA;;AAAqB;;AAArB;AACA;AAAoB;AAApB;;AAnJK;;AAAA;;AAAA;AAAb;;;AACY;;AAA8B;AAA9B;;;;AAEA;;AAA8B;;AAA9B;;;;;;;;;;;;AAkJZ;;;AAiBQ;;;AA7PA;;;AAIO;;AAAA;AAAA;AAAA;AAAP;AA8PA;;AAAyB;AAAzB;AAEG;;AAAA;;AAAA;AAAX;;;AAEY;;AAAA;;AACkB;;AAAA;;;AAAlB;;AAAA;AAAA;;AAGW;;AAAA;AAAA;AACU;;AAAA;AAAA;AAAA;;AAAA;AAArB;;AAAA;AAAA;AACgC;;AAAA;;;AAAhC;;AAAA;;AAAA;;AAEZ;;;;AArRe;;;AAAP;AACG;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;;;AAAyC;AAAA;AAAA;AAAA;AAAzC;;;AACQ;;;;AA8RR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAGS;AAAA;;AAAA;AAAA;AADb;;;AAIA;;AAAA;;AACA;AAAuB;AAAvB;AAEO;AAAP;AAAA;AAvSO;;;AA4RC;;;AAahB;;;;AAgBQ;;;AAvUA;;;AAEsB;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAElB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAtGW;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AA6FO;;AAAA;AAAP;AAoUA;AAAoB;AAApB;AACA;;AAA2B;;AAA3B;AAGI;;;;;;;;;;;;;;;;;;;AADuB;;;AAGX;AAAT;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAD4B;;;AAGhB;AAAT;AAAP;AAI4C;;AAApC;;;AADK;AAAA;AAAA;;AAAA;AAAA;AAzRN;;AAAA;AAA4B;;AAA5B;AAwRP;;;;AAxbK;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAwc3B;;;;;;AA7de;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAofG;;AAAX;;;AAE+B;;AAAA;;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAArB;;;AACgB;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;AAMG;;AAAA;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AAC+B;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAA0B;AAAA;;AAAA;AAvf7B;;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;;AAAA;AA8cU;;AAAA;AACA;;AAFW;AAArB;AAKA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkCS;AAAA;AAAA;;;;;AAGN;AAAA;;AAAA;AAAA;AAAqB;AAAA;;AAAA;AAAA;AAArB;AAAX;;;AAEgB;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AADJ;AAGA;AAAoB;;AAApB;AACA;;AAA0B;;AAA1B;;AAVgC;AAAhC;;;;;;AAYZ;;;;;;;;;AApjBe;;;AAAP;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AAwkBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;;AAAA;AAGc;;AAAA;AAAA;;AAAkB;;AAAA;AAAA;;AA7jBpB;;AAAb;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;AA8jBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;;AAAA;AAEQ;;AAAA;AAAA;AAAA;AAEF;AAAA;;;AACA;;;AAFkB;AAA5B;;AAAA;AAAA;AAKA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AAEQ;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAA;;AAAQ;AAER;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEO;AAAP;;AAAA;AA7kBY;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACT;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAujBH;;;AArjBoB;;AAAA;;;AAAzB;;AAAA;;AAAA;AAAA;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;AAojBH;;;AAljBD;;;AAkjBC;;;AAzkBgB;;;AAAA;AAAA;;AAAA;;AAAA;;AACZ;AAAT;AAAX;;;AAGW;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgkBH;;;AA9jBD;;;AA8jBC;;;AA0BhB;;;;;;;AAWQ;;;AA/kBO;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AAEwB;;;AACR;AAAT;AAAP;AAGI;;;AACG;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AADA;AADH;;;;AADJ;AAglB6B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA5hBd;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AAkhBI;AAAA;;AAAA;AAAA;AA1ZG;AAA4B;;AAA5B;AAAA;;AA+ZwC;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAlhBhC;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AAugBc;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAA+C;AAAA;;AAAA;AAAA;AAA/C;AAAd;;AAEI;AAAA;;AAAA;AAAA;AAlaG;AAA4B;;AAA5B;AAAA;;AAsaH;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AACI;;AAAA;;AAAA;AADJ;;;AAII;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAJJ;;;AAMA;AAAoB;;AAApB;;AAEA;AAAoB;;AAApB;AAEa;AAAA;;AAAA;AAAA;AADb;;;;AA9hBC;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAtBd;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;AADW;;;AAAA;;;;;;;;;AA8iB3B;;;AAhWe;;AACiC;;;;;;;;;;;;;;AAApC;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AA5VP;AACO;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AA0sBR;;AAAA;;;AACY;AAAoB;;AAApB;AAGsB;AAAA;;AAAA;AAAA;AAET;;AAAA;AADb;;;;AAKA;AAAoB;;AAApB;;AAEZ;;;;AAltBe;;;AAAP;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AA0tBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAEJ;AAAoB;;AAApB;AAIa;AAAA;;AAAA;AAAA;AADb;;;AAIO;AAAP;AAAA;AAluBO;;;AAutBC;;;AAahB;;;;;;;AAhuBW;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAX;;;AACmB;;;AAAP;AA+uBD;;AAAX;;;AAE+B;;AAAA;;AAAH;AAAZ;;AAAK;;AAAA;;AAAA;AAArB;;;AACgB;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;AAOrB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAC+B;;AAAhB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAf;;;AACgB;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAuB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;;AAAA;AAAA;AACA;;;;;;;;;;;;AAP4B;AAAhC;;;;;;AAlvBI;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAA;;;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AADH;;;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAFH;;;AAGM;AAAA;AAAA;AAAA;AAAJ;;;;AAJN;;;;;;;;AA4vBZ;;;;AApvBe;;;AAAP;AAEG;AAAA;AAAA;AAAA;AAAA;;;AACC;AAAA;AAAA;AAAA;AAAA;;;AACI;AAAA;AAAA;AAAA;AAAqB;AAArB;AADJ;;;AAEI;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAFJ;;;AAGI;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAHJ;;;AAII;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAJJ;;;AAMO;;;;AAuvBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAGD;AAAA;;AAAA;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAAA;AAKD;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAX;;;AAEyB;AAAA;;AAAA;AAAA;AADb;;;AAGkB;AAAA;;AAAA;AAAA;AAET;;AAAA;AACF;;AAAA;;AAAA;AACL;;AAAA;;AAAA;AADK;AAFX;;;AAKA;AAAuB;AAAvB;AAEO;AAAP;AAAA;AA3wBO;;;AAovBC;;;AAhvBD;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAP;AAqxBA;;AAAA;;AAEsB;AAAA;;AAAA;AAAA;AAET;;AAAA;AACF;;AAAA;;AAAA;AAFX;;;;AAc0B;AAAA;;AAAA;AAAA;AACM;AAAA;;AAAA;AAAA;AAAZ;AACE;AAAA;;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACc;AAAA;;AAAA;AAAA;AAAZ;AACkB;AAAA;;AAAA;AAAA;AAAZ;AACW;AAAA;;AAAA;AAAA;AAAZ;AACM;AAAA;AAAA;AAAA;AAAZ;AACa;AAAA;AAAA;AAAA;AAAV;;AAAA;AAAA;;AAAA;AACmB;AAAA;;AAAA;AAAA;AAAZ;AACA;AAAA;;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACmB;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AACD;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AACQ;AAAA;;AAAA;AAAA;AAAZ;AACa;AAAA;;AAAA;AAAA;AAAZ;AACO;AAAA;;AAAA;AAAA;AAAZ;AApBH;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 10 20 10000"
    },
    "9": {
      "op": "bytecblock 0x0000 0x737461747573 0x 0x66696e616c697a6564 0x70726f706f736572 0x72656769737472795f6170705f6964 0x66756e64696e675f63617465676f7279 \"M\" 0x636f6d6d69747465655f6d656d62657273 \"voters_count\" 0x636f6d6d69747465655f766f746573 0x766f7465645f6d656d62657273 0x617070726f76616c73 0x72656a656374696f6e73 \"assigned_votes\" 0x6c6f636b65645f616d6f756e74 0x6e756c6c73 0x151f7c75 0x00 0x6f70656e5f74696d657374616d70 0x766f74655f6f70656e696e675f74696d657374616d70 0x636f6d6d69747465655f6964 0x00264552523a57726f6e672050726f706f73616c20537461747573206f722066696e616c697a6564 0x7469746c65 0x7375626d697373696f6e5f74696d657374616d70 0x666f637573 0x66756e64696e675f74797065 0x7265717565737465645f616d6f756e74 \"metadata_uploaded\" \"V\" 0x78676f765f6461656d6f6e"
    },
    "387": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "389": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "392": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "394": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "3"
      ]
    },
    "396": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "397": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "398": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "400": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "20"
      ]
    },
    "401": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "402": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "403": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "405": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "406": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "407": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "409": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "410": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "411": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "413": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x70726f706f736572",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "materialized_values%0#0"
      ]
    },
    "415": {
      "op": "app_global_put",
      "stack_out": []
    },
    "416": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "418": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "0"
      ]
    },
    "419": {
      "op": "app_global_put",
      "stack_out": []
    },
    "420": {
      "op": "bytec 23 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "422": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "423": {
      "op": "app_global_put",
      "stack_out": []
    },
    "424": {
      "op": "bytec 19 // 0x6f70656e5f74696d657374616d70",
      "defined_out": [
        "0x6f70656e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x6f70656e5f74696d657374616d70"
      ]
    },
    "426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6f70656e5f74696d657374616d70",
        "0"
      ]
    },
    "427": {
      "op": "app_global_put",
      "stack_out": []
    },
    "428": {
      "op": "bytec 24 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "430": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "431": {
      "op": "app_global_put",
      "stack_out": []
    },
    "432": {
      "op": "bytec 20 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "434": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "0"
      ]
    },
    "435": {
      "op": "app_global_put",
      "stack_out": []
    },
    "436": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "438": {
      "op": "app_global_put",
      "stack_out": []
    },
    "439": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "0x66696e616c697a6564"
      ]
    },
    "440": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66696e616c697a6564",
        "0"
      ]
    },
    "441": {
      "op": "app_global_put",
      "stack_out": []
    },
    "442": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "444": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f63617465676f7279",
        "0"
      ]
    },
    "445": {
      "op": "app_global_put",
      "stack_out": []
    },
    "446": {
      "op": "bytec 25 // 0x666f637573",
      "defined_out": [
        "0x666f637573"
      ],
      "stack_out": [
        "0x666f637573"
      ]
    },
    "448": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x666f637573",
        "0"
      ]
    },
    "449": {
      "op": "app_global_put",
      "stack_out": []
    },
    "450": {
      "op": "bytec 26 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "452": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "453": {
      "op": "app_global_put",
      "stack_out": []
    },
    "454": {
      "op": "bytec 27 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "457": {
      "op": "app_global_put",
      "stack_out": []
    },
    "458": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "460": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "461": {
      "op": "app_global_put",
      "stack_out": []
    },
    "462": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "464": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "465": {
      "op": "app_global_put",
      "stack_out": []
    },
    "466": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "468": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "469": {
      "op": "app_global_put",
      "stack_out": []
    },
    "470": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "473": {
      "op": "app_global_put",
      "stack_out": []
    },
    "474": {
      "op": "bytec 11 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0x766f7465645f6d656d62657273"
      ],
      "stack_out": [
        "0x766f7465645f6d656d62657273"
      ]
    },
    "476": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f7465645f6d656d62657273",
        "0"
      ]
    },
    "477": {
      "op": "app_global_put",
      "stack_out": []
    },
    "478": {
      "op": "bytec 12 // 0x617070726f76616c73",
      "defined_out": [
        "0x617070726f76616c73"
      ],
      "stack_out": [
        "0x617070726f76616c73"
      ]
    },
    "480": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x617070726f76616c73",
        "0"
      ]
    },
    "481": {
      "op": "app_global_put",
      "stack_out": []
    },
    "482": {
      "op": "bytec 13 // 0x72656a656374696f6e73",
      "defined_out": [
        "0x72656a656374696f6e73"
      ],
      "stack_out": [
        "0x72656a656374696f6e73"
      ]
    },
    "484": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x72656a656374696f6e73",
        "0"
      ]
    },
    "485": {
      "op": "app_global_put",
      "stack_out": []
    },
    "486": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0x6e756c6c73"
      ],
      "stack_out": [
        "0x6e756c6c73"
      ]
    },
    "488": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6e756c6c73",
        "0"
      ]
    },
    "489": {
      "op": "app_global_put",
      "stack_out": []
    },
    "490": {
      "op": "bytec 9 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\""
      ],
      "stack_out": [
        "\"voters_count\""
      ]
    },
    "492": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"voters_count\"",
        "0"
      ]
    },
    "493": {
      "op": "app_global_put",
      "stack_out": []
    },
    "494": {
      "op": "bytec 14 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\""
      ],
      "stack_out": [
        "\"assigned_votes\""
      ]
    },
    "496": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"assigned_votes\"",
        "0"
      ]
    },
    "497": {
      "op": "app_global_put",
      "stack_out": []
    },
    "498": {
      "op": "bytec 28 // \"metadata_uploaded\"",
      "defined_out": [
        "\"metadata_uploaded\""
      ],
      "stack_out": [
        "\"metadata_uploaded\""
      ]
    },
    "500": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"metadata_uploaded\"",
        "0"
      ]
    },
    "501": {
      "op": "app_global_put",
      "stack_out": []
    },
    "502": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "504": {
      "op": "bz main_after_if_else@20",
      "stack_out": []
    },
    "507": {
      "op": "pushbytess 0xcc694eaa 0xedaeb9ca 0x7143994f 0x7371321a 0x34e613ca 0x0d9ab0d7 0x1841a0d2 0x734dbecc 0x212d9f07 0x8a5e4c80 0x2ac19b05 0x802069b4 0x24378d3c 0xa8c6f80a 0xdbd83dd9 // method \"create(address)void\", method \"open(pay,string,uint64,uint64,uint8)void\", method \"upload_metadata(byte[],bool)void\", method \"drop()string\", method \"submit()void\", method \"assign_voters((address,uint64)[])void\", method \"vote(address,uint64,uint64)string\", method \"scrutiny()void\", method \"review(bool)void\", method \"fund()string\", method \"unassign_voters(address[])void\", method \"finalize()string\", method \"delete()void\", method \"get_state()(address,uint64,string,uint64,uint64,uint64,uint64,bool,uint64,uint8,uint64,uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64)\", method \"op_up()void\"",
      "defined_out": [
        "Method(assign_voters((address,uint64)[])void)",
        "Method(create(address)void)",
        "Method(delete()void)",
        "Method(drop()string)",
        "Method(finalize()string)",
        "Method(fund()string)",
        "Method(get_state()(address,uint64,string,uint64,uint64,uint64,uint64,bool,uint64,uint8,uint64,uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(op_up()void)",
        "Method(open(pay,string,uint64,uint64,uint8)void)",
        "Method(review(bool)void)",
        "Method(scrutiny()void)",
        "Method(submit()void)",
        "Method(unassign_voters(address[])void)",
        "Method(upload_metadata(byte[],bool)void)",
        "Method(vote(address,uint64,uint64)string)"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "Method(open(pay,string,uint64,uint64,uint8)void)",
        "Method(upload_metadata(byte[],bool)void)",
        "Method(drop()string)",
        "Method(submit()void)",
        "Method(assign_voters((address,uint64)[])void)",
        "Method(vote(address,uint64,uint64)string)",
        "Method(scrutiny()void)",
        "Method(review(bool)void)",
        "Method(fund()string)",
        "Method(unassign_voters(address[])void)",
        "Method(finalize()string)",
        "Method(delete()void)",
        "Method(get_state()(address,uint64,string,uint64,uint64,uint64,uint64,bool,uint64,uint8,uint64,uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(op_up()void)"
      ]
    },
    "584": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(assign_voters((address,uint64)[])void)",
        "Method(create(address)void)",
        "Method(delete()void)",
        "Method(drop()string)",
        "Method(finalize()string)",
        "Method(fund()string)",
        "Method(get_state()(address,uint64,string,uint64,uint64,uint64,uint64,bool,uint64,uint8,uint64,uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(op_up()void)",
        "Method(open(pay,string,uint64,uint64,uint8)void)",
        "Method(review(bool)void)",
        "Method(scrutiny()void)",
        "Method(submit()void)",
        "Method(unassign_voters(address[])void)",
        "Method(upload_metadata(byte[],bool)void)",
        "Method(vote(address,uint64,uint64)string)",
        "tmp%2#1"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "Method(open(pay,string,uint64,uint64,uint8)void)",
        "Method(upload_metadata(byte[],bool)void)",
        "Method(drop()string)",
        "Method(submit()void)",
        "Method(assign_voters((address,uint64)[])void)",
        "Method(vote(address,uint64,uint64)string)",
        "Method(scrutiny()void)",
        "Method(review(bool)void)",
        "Method(fund()string)",
        "Method(unassign_voters(address[])void)",
        "Method(finalize()string)",
        "Method(delete()void)",
        "Method(get_state()(address,uint64,string,uint64,uint64,uint64,uint64,bool,uint64,uint8,uint64,uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(op_up()void)",
        "tmp%2#1"
      ]
    },
    "587": {
      "op": "match main_create_route@5 main_open_route@6 main_upload_metadata_route@7 main_drop_route@8 main_submit_route@9 main_assign_voters_route@10 main_vote_route@11 main_scrutiny_route@12 main_review_route@13 main_fund_route@14 main_unassign_voters_route@15 main_finalize_route@16 main_delete_route@17 main_get_state_route@18 main_op_up_route@19",
      "stack_out": []
    },
    "619": {
      "block": "main_after_if_else@20",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "620": {
      "op": "return",
      "stack_out": []
    },
    "621": {
      "block": "main_op_up_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "623": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "624": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "625": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "627": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "628": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "629": {
      "op": "return",
      "stack_out": []
    },
    "630": {
      "block": "main_get_state_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "632": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "633": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "634": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "636": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "637": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "640": {
      "op": "bytec 17 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "0x151f7c75"
      ]
    },
    "642": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%73#0"
      ]
    },
    "643": {
      "op": "concat",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "644": {
      "op": "log",
      "stack_out": []
    },
    "645": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "646": {
      "op": "return",
      "stack_out": []
    },
    "647": {
      "block": "main_delete_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "649": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "DeleteApplication"
      ]
    },
    "651": {
      "op": "==",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "652": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "653": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "655": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "656": {
      "callsub": "smart_contracts.proposal.contract.Proposal.delete",
      "op": "callsub delete"
    },
    "659": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "660": {
      "op": "return",
      "stack_out": []
    },
    "661": {
      "block": "main_finalize_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "663": {
      "op": "!",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "664": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "665": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "667": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "668": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize",
      "op": "callsub finalize",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "671": {
      "op": "bytec 17 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0",
        "0x151f7c75"
      ]
    },
    "673": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%63#0"
      ]
    },
    "674": {
      "op": "concat",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "675": {
      "op": "log",
      "stack_out": []
    },
    "676": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "677": {
      "op": "return",
      "stack_out": []
    },
    "678": {
      "block": "main_unassign_voters_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "680": {
      "op": "!",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "681": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "682": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "684": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "685": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "688": {
      "callsub": "smart_contracts.proposal.contract.Proposal.unassign_voters",
      "op": "callsub unassign_voters",
      "stack_out": []
    },
    "691": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "692": {
      "op": "return",
      "stack_out": []
    },
    "693": {
      "block": "main_fund_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "695": {
      "op": "!",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "696": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "697": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "699": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "700": {
      "callsub": "smart_contracts.proposal.contract.Proposal.fund",
      "op": "callsub fund",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "703": {
      "op": "bytec 17 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "0x151f7c75"
      ]
    },
    "705": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%52#0"
      ]
    },
    "706": {
      "op": "concat",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "707": {
      "op": "log",
      "stack_out": []
    },
    "708": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "709": {
      "op": "return",
      "stack_out": []
    },
    "710": {
      "block": "main_review_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "712": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "713": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "714": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "716": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "717": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "720": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0",
        "0"
      ]
    },
    "721": {
      "op": "getbit",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "722": {
      "callsub": "smart_contracts.proposal.contract.Proposal.review",
      "op": "callsub review",
      "stack_out": []
    },
    "725": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "726": {
      "op": "return",
      "stack_out": []
    },
    "727": {
      "block": "main_scrutiny_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "729": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "730": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "731": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "733": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "734": {
      "callsub": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "op": "callsub scrutiny"
    },
    "737": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "738": {
      "op": "return",
      "stack_out": []
    },
    "739": {
      "block": "main_vote_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "741": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "742": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "743": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "745": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "746": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "749": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "752": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "755": {
      "callsub": "smart_contracts.proposal.contract.Proposal.vote",
      "op": "callsub vote",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "758": {
      "op": "bytec 17 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "0x151f7c75"
      ]
    },
    "760": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%37#0"
      ]
    },
    "761": {
      "op": "concat",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "762": {
      "op": "log",
      "stack_out": []
    },
    "763": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "764": {
      "op": "return",
      "stack_out": []
    },
    "765": {
      "block": "main_assign_voters_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "767": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "768": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "769": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "771": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "772": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "775": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voters",
      "op": "callsub assign_voters",
      "stack_out": []
    },
    "778": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "779": {
      "op": "return",
      "stack_out": []
    },
    "780": {
      "block": "main_submit_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "782": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "783": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "784": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "786": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "787": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit",
      "op": "callsub submit"
    },
    "790": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "791": {
      "op": "return",
      "stack_out": []
    },
    "792": {
      "block": "main_drop_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "794": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "795": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "796": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "798": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "799": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop",
      "op": "callsub drop",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "802": {
      "op": "bytec 17 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0x151f7c75"
      ]
    },
    "804": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%22#0"
      ]
    },
    "805": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "806": {
      "op": "log",
      "stack_out": []
    },
    "807": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "808": {
      "op": "return",
      "stack_out": []
    },
    "809": {
      "block": "main_upload_metadata_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "811": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "812": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "813": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "815": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "816": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "819": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "822": {
      "callsub": "smart_contracts.proposal.contract.Proposal.upload_metadata",
      "op": "callsub upload_metadata",
      "stack_out": []
    },
    "825": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "826": {
      "op": "return",
      "stack_out": []
    },
    "827": {
      "block": "main_open_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "829": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "830": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "831": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "833": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "834": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "836": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "1"
      ]
    },
    "837": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "838": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "839": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "841": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "842": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "843": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "844": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0"
      ]
    },
    "847": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "850": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "853": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%12#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "856": {
      "callsub": "smart_contracts.proposal.contract.Proposal.open",
      "op": "callsub open",
      "stack_out": []
    },
    "859": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "860": {
      "op": "return",
      "stack_out": []
    },
    "861": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "863": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "864": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "865": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "867": {
      "op": "!",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "868": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "869": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "872": {
      "callsub": "smart_contracts.proposal.contract.Proposal.create",
      "op": "callsub create",
      "stack_out": []
    },
    "875": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "876": {
      "op": "return",
      "stack_out": []
    },
    "877": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "params": {},
      "block": "is_voting_open",
      "stack_in": [],
      "op": "proto 0 2"
    },
    "880": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "881": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0"
      ]
    },
    "882": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0"
      ]
    },
    "884": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "0"
      ]
    },
    "885": {
      "op": "bytec 20 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "887": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "888": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "889": {
      "op": "-",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ]
    },
    "890": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "0"
      ]
    },
    "891": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "893": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "maybe_exists%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "894": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maybe_exists%1#0",
        "category#0"
      ]
    },
    "895": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maybe_exists%1#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "896": {
      "op": "uncover 2",
      "defined_out": [
        "category#0",
        "maybe_exists%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "898": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "899": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "10"
      ]
    },
    "900": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%0#1",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%0#1"
      ]
    },
    "901": {
      "op": "bz is_voting_open_else_body@5",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "904": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c",
        "category#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "927": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "tmp%1#1",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%1#1",
        "error#0"
      ]
    },
    "930": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "932": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "934": {
      "block": "is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "error#0"
      ]
    },
    "936": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "error#0",
        "0x0000"
      ]
    },
    "937": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "938": {
      "op": "bz is_voting_open_after_if_else@2",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "941": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0"
      ]
    },
    "942": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0",
        "error#0"
      ]
    },
    "944": {
      "op": "frame_bury 1"
    },
    "946": {
      "op": "frame_bury 0"
    },
    "948": {
      "retsub": true,
      "op": "retsub"
    },
    "949": {
      "block": "is_voting_open_after_if_else@2",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "voting_duration#0"
      ]
    },
    "951": {
      "op": "frame_dig 1",
      "defined_out": [
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "voting_duration#0",
        "maximum_voting_duration#0"
      ]
    },
    "953": {
      "op": "<=",
      "defined_out": [
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%2#0"
      ]
    },
    "954": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "955": {
      "op": "frame_bury 1"
    },
    "957": {
      "op": "frame_bury 0"
    },
    "959": {
      "retsub": true,
      "op": "retsub"
    },
    "960": {
      "block": "is_voting_open_else_body@5",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "962": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "20"
      ]
    },
    "963": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%3#0"
      ]
    },
    "964": {
      "op": "bz is_voting_open_else_body@7",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "967": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "991": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%4#0",
        "error#0"
      ]
    },
    "994": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "996": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "998": {
      "op": "b is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8"
    },
    "1001": {
      "block": "is_voting_open_else_body@7",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "1024": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%6#0",
        "error#0"
      ]
    },
    "1027": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "1029": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "1031": {
      "op": "b is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8"
    },
    "1034": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assert_draft_and_proposer",
      "params": {},
      "block": "assert_draft_and_proposer",
      "stack_in": [],
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1037": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1038": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1039": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1040": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1041": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1042": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1043": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1044": {
      "op": "bz assert_draft_and_proposer_bool_false@3",
      "stack_out": []
    },
    "1047": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1048": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "1049": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1050": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1051": {
      "op": "bnz assert_draft_and_proposer_bool_false@3",
      "stack_out": []
    },
    "1054": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1055": {
      "block": "assert_draft_and_proposer_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "defined_out": [],
      "stack_out": []
    },
    "1056": {
      "retsub": true,
      "op": "retsub"
    },
    "1057": {
      "block": "assert_draft_and_proposer_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1058": {
      "op": "b assert_draft_and_proposer_bool_merge@4"
    },
    "1061": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "get_expected_locked_amount",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1064": {
      "op": "pushbytes 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1089": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0"
      ]
    },
    "1092": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1093": {
      "op": "==",
      "defined_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ]
    },
    "1094": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "proposal_commitment_bps#0"
      ]
    },
    "1095": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1097": {
      "op": "*",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1098": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "10000"
      ]
    },
    "1100": {
      "op": "/",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1101": {
      "retsub": true,
      "op": "retsub"
    },
    "1102": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_uint_from_registry_config",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "1105": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1106": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1108": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1109": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1110": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1112": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1113": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0",
        "error#0"
      ]
    },
    "1114": {
      "op": "swap",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "exists#0"
      ]
    },
    "1115": {
      "op": "bnz get_uint_from_registry_config_after_if_else@2",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "1118": {
      "op": "pushbytes 0x00124552523a4d697373696e6720436f6e666967",
      "stack_out": [
        "value#0",
        "error#0",
        "error#0"
      ]
    },
    "1140": {
      "op": "frame_bury 1",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "1142": {
      "block": "get_uint_from_registry_config_after_if_else@2",
      "stack_in": [
        "value#0",
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0"
      ]
    },
    "1144": {
      "op": "frame_dig 1",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1146": {
      "op": "uncover 3"
    },
    "1148": {
      "op": "uncover 3"
    },
    "1150": {
      "retsub": true,
      "op": "retsub"
    },
    "1151": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_bytes_from_registry_config",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1154": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1155": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1157": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1158": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1159": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1161": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1162": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "value#0"
      ]
    },
    "1163": {
      "retsub": true,
      "op": "retsub"
    },
    "1164": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "params": {},
      "block": "check_registry_not_paused",
      "stack_in": [],
      "op": "pushbytes 0x7061757365645f7265676973747279",
      "defined_out": [
        "0x7061757365645f7265676973747279"
      ],
      "stack_out": [
        "0x7061757365645f7265676973747279"
      ]
    },
    "1181": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "registry_paused#0"
      ],
      "stack_out": [
        "registry_paused#0",
        "error#0"
      ]
    },
    "1184": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "registry_paused#0"
      ],
      "stack_out": [
        "registry_paused#0",
        "error#0",
        "0x0000"
      ]
    },
    "1185": {
      "op": "==",
      "defined_out": [
        "registry_paused#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "registry_paused#0",
        "tmp%0#0"
      ]
    },
    "1186": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "registry_paused#0"
      ]
    },
    "1187": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1188": {
      "error": "Registry's non-admin methods are paused",
      "op": "assert // Registry's non-admin methods are paused",
      "stack_out": []
    },
    "1189": {
      "retsub": true,
      "op": "retsub"
    },
    "1190": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "params": {},
      "block": "is_proposer",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1192": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1193": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1195": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1196": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1197": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1198": {
      "retsub": true,
      "op": "retsub"
    },
    "1199": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_xgov_daemon",
      "params": {},
      "block": "is_xgov_daemon",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1201": {
      "op": "bytec 30 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "1203": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1206": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1207": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1208": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "32"
      ]
    },
    "1210": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1211": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1212": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1213": {
      "retsub": true,
      "op": "retsub"
    },
    "1214": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "params": {},
      "block": "is_registry_call",
      "stack_in": [],
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1216": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1217": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1219": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1220": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1221": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1222": {
      "retsub": true,
      "op": "retsub"
    },
    "1223": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.pay",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "pay",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1226": {
      "op": "itxn_begin"
    },
    "1227": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "1229": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "1231": {
      "op": "frame_dig -2",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "1233": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1235": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1236": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1238": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1239": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1241": {
      "op": "itxn_submit"
    },
    "1242": {
      "retsub": true,
      "op": "retsub"
    },
    "1243": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "params": {
        "receiver#0": "bytes"
      },
      "block": "transfer_locked_amount",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1246": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1247": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1249": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1250": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1251": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%0#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "receiver#0 (copy)"
      ]
    },
    "1253": {
      "op": "swap",
      "stack_out": [
        "receiver#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1254": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": []
    },
    "1257": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "1260": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1261": {
      "retsub": true,
      "op": "retsub"
    },
    "1262": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assert_same_app_and_method",
      "params": {
        "group_index#0": "uint64"
      },
      "block": "assert_same_app_and_method",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1265": {
      "op": "frame_dig -1",
      "defined_out": [
        "group_index#0 (copy)"
      ],
      "stack_out": [
        "group_index#0 (copy)"
      ]
    },
    "1267": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1269": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1271": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1272": {
      "error": "Wrong App ID",
      "op": "assert // Wrong App ID",
      "stack_out": []
    },
    "1273": {
      "op": "frame_dig -1",
      "stack_out": [
        "group_index#0 (copy)"
      ]
    },
    "1275": {
      "op": "gtxnsa ApplicationArgs 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1278": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1281": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1282": {
      "error": "Wrong Method Call",
      "op": "assert // Wrong Method Call",
      "stack_out": []
    },
    "1283": {
      "retsub": true,
      "op": "retsub"
    },
    "1284": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.create",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1287": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1289": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1290": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "1292": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ]
    },
    "1294": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1295": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1297": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "materialized_values%0#0"
      ]
    },
    "1299": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1300": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1302": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1305": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1306": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)",
        "0x"
      ]
    },
    "1307": {
      "op": "!=",
      "defined_out": [
        "committee_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "committee_id#0",
        "tmp%0#1"
      ]
    },
    "1308": {
      "error": "Empty Committee ID",
      "op": "assert // Empty Committee ID",
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1309": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1311": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ]
    },
    "1314": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "error#0",
        "0x0000"
      ]
    },
    "1315": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "tmp%1#1"
      ]
    },
    "1316": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1317": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ]
    },
    "1318": {
      "error": "Wrong Committee Members",
      "op": "assert // Wrong Committee Members",
      "stack_out": [
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1319": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_id#0",
        "committee_members#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1321": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0"
      ]
    },
    "1324": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0",
        "0x0000"
      ]
    },
    "1325": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "tmp%3#0"
      ]
    },
    "1326": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1327": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ]
    },
    "1328": {
      "error": "Wrong Committee Votes",
      "op": "assert // Wrong Committee Votes",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1329": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1331": {
      "op": "uncover 3",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1333": {
      "op": "app_global_put",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1334": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1336": {
      "op": "uncover 2",
      "stack_out": [
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0"
      ]
    },
    "1338": {
      "op": "app_global_put",
      "stack_out": [
        "committee_votes#0"
      ]
    },
    "1339": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "stack_out": [
        "committee_votes#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1341": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0"
      ]
    },
    "1342": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1343": {
      "retsub": true,
      "op": "retsub"
    },
    "1344": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.open",
      "params": {
        "payment#0": "uint64",
        "title#0": "bytes",
        "funding_type#0": "bytes",
        "requested_amount#0": "bytes",
        "focus#0": "bytes"
      },
      "block": "open",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "1347": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "funding_type#1"
      ]
    },
    "1348": {
      "op": "dupn 2",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1350": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1353": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%0#1"
      ]
    },
    "1356": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1357": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0"
      ]
    },
    "1358": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0",
        "0x737461747573"
      ]
    },
    "1359": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1360": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "maybe_value%0#0"
      ]
    },
    "1361": {
      "op": "bnz open_bool_false@4",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1364": {
      "op": "intc_0 // 0",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0"
      ]
    },
    "1365": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "1366": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1367": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "maybe_value%1#0"
      ]
    },
    "1368": {
      "op": "bnz open_bool_false@4",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1371": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "and_result%0#0"
      ]
    },
    "1372": {
      "block": "open_bool_merge@5",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "and_result%0#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "defined_out": [],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1373": {
      "op": "frame_dig -4",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "title#0 (copy)"
      ]
    },
    "1375": {
      "op": "extract 2 0",
      "defined_out": [
        "title#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "title#0"
      ]
    },
    "1378": {
      "op": "frame_bury -4",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1380": {
      "op": "frame_dig -3",
      "defined_out": [
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#0 (copy)"
      ]
    },
    "1382": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1383": {
      "op": "dup",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "funding_type#1"
      ]
    },
    "1384": {
      "op": "frame_bury 0",
      "defined_out": [
        "funding_type#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1386": {
      "op": "frame_dig -2",
      "defined_out": [
        "funding_type#1",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "requested_amount#0 (copy)"
      ]
    },
    "1388": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1389": {
      "op": "frame_bury 2",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1391": {
      "op": "frame_dig -4",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)"
      ]
    },
    "1393": {
      "op": "len",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "tmp%0#2"
      ]
    },
    "1394": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "funding_type#1",
        "requested_amount#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "tmp%0#2",
        "123"
      ]
    },
    "1396": {
      "op": "<=",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1",
        "tmp%1#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "tmp%1#2"
      ]
    },
    "1397": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1398": {
      "op": "frame_dig -4",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)"
      ]
    },
    "1400": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "funding_type#1",
        "requested_amount#1",
        "title#0 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)",
        "\"\""
      ]
    },
    "1401": {
      "op": "!=",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "tmp%2#1"
      ]
    },
    "1402": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1403": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "10"
      ]
    },
    "1404": {
      "op": "==",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%3#1"
      ]
    },
    "1405": {
      "op": "bnz open_bool_true@9",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1408": {
      "op": "frame_dig 0",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1410": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "funding_type#1",
        "20"
      ]
    },
    "1411": {
      "op": "==",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%4#1"
      ]
    },
    "1412": {
      "op": "bz open_bool_false@10",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1415": {
      "block": "open_bool_true@9",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "or_result%0#0"
      ]
    },
    "1416": {
      "block": "open_bool_merge@11",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "or_result%0#0"
      ],
      "error": "Wrong Funding Type",
      "op": "assert // Wrong Funding Type",
      "defined_out": [],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1417": {
      "op": "pushbytes 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "1439": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "error#0"
      ]
    },
    "1442": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "error#0",
        "0x0000"
      ]
    },
    "1443": {
      "op": "==",
      "defined_out": [
        "min_requested_amount#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "tmp%5#1"
      ]
    },
    "1444": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0"
      ]
    },
    "1445": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1473": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_large#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0"
      ]
    },
    "1476": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0",
        "0x0000"
      ]
    },
    "1477": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "tmp%6#0"
      ]
    },
    "1478": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0"
      ]
    },
    "1479": {
      "op": "frame_dig 2",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#1"
      ]
    },
    "1481": {
      "op": "dup",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1482": {
      "op": "uncover 3",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)",
        "min_requested_amount#0"
      ]
    },
    "1484": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_large#0",
        "requested_amount#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "tmp%7#0"
      ]
    },
    "1485": {
      "error": "Requested amount is less than the minimum requested amount",
      "op": "assert // Requested amount is less than the minimum requested amount",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1"
      ]
    },
    "1486": {
      "op": "dup",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1487": {
      "op": "uncover 2",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "requested_amount#1 (copy)",
        "max_requested_amount_large#0"
      ]
    },
    "1489": {
      "op": "<=",
      "defined_out": [
        "requested_amount#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "tmp%8#0"
      ]
    },
    "1490": {
      "error": "Requested amount is more than the maximum requested amount",
      "op": "assert // Requested amount is more than the maximum requested amount",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1491": {
      "op": "dup",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1492": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1495": {
      "op": "frame_dig -5",
      "defined_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1497": {
      "op": "gtxns Sender",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3"
      ]
    },
    "1499": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "0"
      ]
    },
    "1500": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1502": {
      "op": "app_global_get_ex",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1503": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "maybe_value%0#1"
      ]
    },
    "1504": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%1#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%1#2"
      ]
    },
    "1505": {
      "error": "Wrong Sender",
      "op": "assert // Wrong Sender",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1506": {
      "op": "frame_dig -5",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1508": {
      "op": "gtxns Receiver",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%2#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%2#2"
      ]
    },
    "1510": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%2#2",
        "tmp%3#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%2#2",
        "tmp%3#2"
      ]
    },
    "1512": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%4#1"
      ]
    },
    "1513": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1514": {
      "op": "frame_dig -5",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1516": {
      "op": "gtxns Amount",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%5#2"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%5#2"
      ]
    },
    "1518": {
      "op": "==",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "tmp%6#0"
      ]
    },
    "1519": {
      "error": "Locked amount is incorrect",
      "op": "assert // Locked amount is incorrect",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1520": {
      "op": "bytec 23 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "0x7469746c65"
      ]
    },
    "1522": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x7469746c65",
        "requested_amount#1",
        "title#0 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "0x7469746c65",
        "title#0 (copy)"
      ]
    },
    "1524": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1525": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1553": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1556": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1557": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_small#0",
        "requested_amount#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "tmp%0#1"
      ]
    },
    "1558": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0"
      ]
    },
    "1559": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1588": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "max_requested_amount_medium#0",
        "error#0"
      ]
    },
    "1591": {
      "op": "swap",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "max_requested_amount_medium#0"
      ]
    },
    "1592": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1594": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1595": {
      "op": "==",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "tmp%1#2"
      ]
    },
    "1596": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0"
      ]
    },
    "1597": {
      "op": "<=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%2#1"
      ]
    },
    "1598": {
      "op": "bz open_else_body@17",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1601": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1603": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "10",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "10"
      ]
    },
    "1604": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1605": {
      "block": "open_after_if_else@20",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "op": "bytec 26 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f74797065"
      ]
    },
    "1607": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x66756e64696e675f74797065",
        "funding_type#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f74797065",
        "funding_type#1"
      ]
    },
    "1609": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1610": {
      "op": "bytec 27 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1612": {
      "op": "frame_dig 2",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1"
      ]
    },
    "1614": {
      "op": "dup",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "1615": {
      "op": "cover 2",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1 (copy)"
      ]
    },
    "1617": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1618": {
      "op": "frame_dig -1",
      "defined_out": [
        "focus#0 (copy)",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "focus#0 (copy)"
      ]
    },
    "1620": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1",
        "materialized_values%3#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "materialized_values%3#0"
      ]
    },
    "1621": {
      "op": "bytec 25 // 0x666f637573",
      "defined_out": [
        "0x666f637573",
        "funding_type#1",
        "materialized_values%3#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "materialized_values%3#0",
        "0x666f637573"
      ]
    },
    "1623": {
      "op": "swap",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "0x666f637573",
        "materialized_values%3#0"
      ]
    },
    "1624": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1625": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "funding_type#1",
        "materialized_values%4#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "materialized_values%4#0"
      ]
    },
    "1628": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74",
        "funding_type#1",
        "materialized_values%4#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "materialized_values%4#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1630": {
      "op": "swap",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x6c6f636b65645f616d6f756e74",
        "materialized_values%4#0"
      ]
    },
    "1631": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1632": {
      "op": "bytec 19 // 0x6f70656e5f74696d657374616d70",
      "defined_out": [
        "0x6f70656e5f74696d657374616d70",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x6f70656e5f74696d657374616d70"
      ]
    },
    "1634": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x6f70656e5f74696d657374616d70",
        "funding_type#1",
        "materialized_values%5#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x6f70656e5f74696d657374616d70",
        "materialized_values%5#0"
      ]
    },
    "1636": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1637": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x737461747573"
      ]
    },
    "1638": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x737461747573",
        "10",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x737461747573",
        "10"
      ]
    },
    "1639": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1640": {
      "retsub": true,
      "op": "retsub"
    },
    "1641": {
      "block": "open_else_body@17",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1643": {
      "op": "frame_dig 1",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_medium#0"
      ]
    },
    "1645": {
      "op": "<=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%3#1"
      ]
    },
    "1646": {
      "op": "bz open_else_body@19",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1649": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1651": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "20",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "20"
      ]
    },
    "1652": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1653": {
      "op": "b open_after_if_else@20"
    },
    "1656": {
      "block": "open_else_body@19",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1658": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "33"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "33"
      ]
    },
    "1660": {
      "op": "app_global_put",
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ]
    },
    "1661": {
      "op": "b open_after_if_else@20"
    },
    "1664": {
      "block": "open_bool_false@10",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "or_result%0#0"
      ]
    },
    "1665": {
      "op": "b open_bool_merge@11"
    },
    "1668": {
      "block": "open_bool_false@4",
      "stack_in": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "funding_type#1",
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "and_result%0#0"
      ]
    },
    "1669": {
      "op": "b open_bool_merge@5"
    },
    "1672": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.upload_metadata",
      "params": {
        "payload#0": "bytes",
        "is_first_in_group#0": "bytes"
      },
      "block": "upload_metadata",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1675": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1678": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assert_draft_and_proposer",
      "op": "callsub assert_draft_and_proposer"
    },
    "1681": {
      "op": "frame_dig -2",
      "defined_out": [
        "payload#0 (copy)"
      ],
      "stack_out": [
        "payload#0 (copy)"
      ]
    },
    "1683": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payload#0 (copy)"
      ],
      "stack_out": [
        "payload#0 (copy)",
        "0"
      ]
    },
    "1684": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1685": {
      "op": "dup",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "tmp%0#1"
      ]
    },
    "1686": {
      "error": "Empty payload",
      "op": "assert // Empty payload",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1687": {
      "op": "bytec 28 // \"metadata_uploaded\"",
      "defined_out": [
        "\"metadata_uploaded\"",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "\"metadata_uploaded\""
      ]
    },
    "1689": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%0#1",
        "\"metadata_uploaded\"",
        "1"
      ]
    },
    "1690": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1691": {
      "op": "frame_dig -1",
      "defined_out": [
        "is_first_in_group#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "is_first_in_group#0 (copy)"
      ]
    },
    "1693": {
      "op": "bytec 18 // 0x00",
      "defined_out": [
        "0x00",
        "is_first_in_group#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "is_first_in_group#0 (copy)",
        "0x00"
      ]
    },
    "1695": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "tmp%0#0"
      ]
    },
    "1696": {
      "op": "bz upload_metadata_else_body@2",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1699": {
      "op": "bytec 7 // \"M\"",
      "defined_out": [
        "\"M\"",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "\"M\""
      ]
    },
    "1701": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#1",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#1",
        "{box_del}"
      ]
    },
    "1702": {
      "op": "pop",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1703": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#1",
        "payload#0 (copy)"
      ]
    },
    "1705": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "tmp%1#0"
      ]
    },
    "1708": {
      "op": "bytec 7 // \"M\"",
      "stack_out": [
        "tmp%0#1",
        "tmp%1#0",
        "\"M\""
      ]
    },
    "1710": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "\"M\"",
        "tmp%1#0"
      ]
    },
    "1711": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1712": {
      "retsub": true,
      "op": "retsub"
    },
    "1713": {
      "block": "upload_metadata_else_body@2",
      "stack_in": [
        "tmp%0#1"
      ],
      "op": "bytec 7 // \"M\"",
      "defined_out": [
        "\"M\""
      ],
      "stack_out": [
        "tmp%0#1",
        "\"M\""
      ]
    },
    "1715": {
      "op": "box_len",
      "defined_out": [
        "check%0#0",
        "old_size#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "check%0#0"
      ]
    },
    "1716": {
      "error": "check self.metadata exists",
      "op": "assert // check self.metadata exists",
      "stack_out": [
        "tmp%0#1",
        "old_size#0"
      ]
    },
    "1717": {
      "op": "bytec 7 // \"M\"",
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "\"M\""
      ]
    },
    "1719": {
      "op": "box_len",
      "defined_out": [
        "check%1#0",
        "old_size#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "1720": {
      "error": "check self.metadata exists",
      "op": "assert // check self.metadata exists",
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "value%1#0"
      ]
    },
    "1721": {
      "op": "frame_dig 0",
      "defined_out": [
        "old_size#0",
        "tmp%0#1",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "value%1#0",
        "tmp%0#1"
      ]
    },
    "1723": {
      "op": "+",
      "defined_out": [
        "old_size#0",
        "tmp%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "tmp%3#0"
      ]
    },
    "1724": {
      "op": "bytec 7 // \"M\"",
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "tmp%3#0",
        "\"M\""
      ]
    },
    "1726": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "\"M\"",
        "tmp%3#0"
      ]
    },
    "1727": {
      "op": "box_resize",
      "stack_out": [
        "tmp%0#1",
        "old_size#0"
      ]
    },
    "1728": {
      "op": "frame_dig -2",
      "defined_out": [
        "old_size#0",
        "payload#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "payload#0 (copy)"
      ]
    },
    "1730": {
      "op": "extract 2 0",
      "defined_out": [
        "old_size#0",
        "tmp%0#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "tmp%4#0"
      ]
    },
    "1733": {
      "op": "bytec 7 // \"M\"",
      "stack_out": [
        "tmp%0#1",
        "old_size#0",
        "tmp%4#0",
        "\"M\""
      ]
    },
    "1735": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#1",
        "\"M\"",
        "old_size#0",
        "tmp%4#0"
      ]
    },
    "1737": {
      "op": "box_replace",
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1738": {
      "retsub": true,
      "op": "retsub"
    },
    "1739": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop",
      "params": {},
      "block": "drop",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1742": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1743": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "1746": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "1747": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "1748": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "1749": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1750": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#1"
      ]
    },
    "1751": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "10"
      ]
    },
    "1752": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "1753": {
      "op": "bnz drop_if_body@5",
      "stack_out": [
        "error#0"
      ]
    },
    "1756": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "1757": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "1758": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1759": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "error#0",
        "maybe_value%1#0"
      ]
    },
    "1760": {
      "op": "bz drop_after_if_else@6",
      "stack_out": [
        "error#0"
      ]
    },
    "1763": {
      "block": "drop_if_body@5",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec 22 // 0x00264552523a57726f6e672050726f706f73616c20537461747573206f722066696e616c697a6564",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "1765": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "1767": {
      "block": "drop_after_inlined_smart_contracts.proposal.contract.Proposal.drop_check_authorization@7",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "1769": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "1770": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "1771": {
      "op": "bz drop_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "1774": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "1776": {
      "op": "swap"
    },
    "1777": {
      "retsub": true,
      "op": "retsub"
    },
    "1778": {
      "block": "drop_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "1779": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1781": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1782": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "1783": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "error#0"
      ]
    },
    "1786": {
      "op": "bytec 7 // \"M\"",
      "defined_out": [
        "\"M\""
      ],
      "stack_out": [
        "error#0",
        "\"M\""
      ]
    },
    "1788": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "error#0",
        "{box_del}"
      ]
    },
    "1789": {
      "op": "pop",
      "stack_out": [
        "error#0"
      ]
    },
    "1790": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "error#0",
        "0x66696e616c697a6564"
      ]
    },
    "1791": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x66696e616c697a6564",
        "1"
      ],
      "stack_out": [
        "error#0",
        "0x66696e616c697a6564",
        "1"
      ]
    },
    "1792": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "1793": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "1794": {
      "op": "swap"
    },
    "1795": {
      "retsub": true,
      "op": "retsub"
    },
    "1796": {
      "block": "drop_after_if_else@6",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "1797": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "1799": {
      "op": "b drop_after_inlined_smart_contracts.proposal.contract.Proposal.drop_check_authorization@7"
    },
    "1802": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit",
      "params": {},
      "block": "submit",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1805": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1806": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "1809": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assert_draft_and_proposer",
      "op": "callsub assert_draft_and_proposer"
    },
    "1812": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1"
      ]
    },
    "1814": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "0"
      ]
    },
    "1815": {
      "op": "bytec 19 // 0x6f70656e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x6f70656e5f74696d657374616d70",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "0",
        "0x6f70656e5f74696d657374616d70"
      ]
    },
    "1817": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1818": {
      "error": "check self.open_ts exists",
      "op": "assert // check self.open_ts exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "1819": {
      "op": "-",
      "defined_out": [
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0"
      ]
    },
    "1820": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "0"
      ]
    },
    "1821": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1823": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "1824": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "maybe_exists%1#0",
        "category#0"
      ]
    },
    "1825": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "maybe_exists%1#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "1826": {
      "op": "uncover 2",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "1828": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "1829": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "10"
      ]
    },
    "1830": {
      "op": "==",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%0#0"
      ]
    },
    "1831": {
      "op": "bz submit_else_body@3",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1834": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
        "category#0",
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1861": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1864": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1866": {
      "block": "submit_after_if_else@7",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1868": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "1869": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "tmp%2#1"
      ]
    },
    "1870": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1871": {
      "op": "frame_dig 1",
      "defined_out": [
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "discussion_duration#0"
      ]
    },
    "1873": {
      "op": "<=",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "1874": {
      "error": "Too early",
      "op": "assert // Too early",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1875": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x737461747573"
      ]
    },
    "1876": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x737461747573",
        "20",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x737461747573",
        "20"
      ]
    },
    "1877": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1878": {
      "op": "bytec 24 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1880": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "discussion_duration#0",
        "error#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "materialized_values%0#0"
      ]
    },
    "1882": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1883": {
      "op": "pushbytes 0x6f70656e5f70726f706f73616c5f666565",
      "defined_out": [
        "0x6f70656e5f70726f706f73616c5f666565",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x6f70656e5f70726f706f73616c5f666565"
      ]
    },
    "1902": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "error#0"
      ]
    },
    "1905": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "error#0",
        "0x0000"
      ]
    },
    "1906": {
      "op": "==",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "tmp%0#0"
      ]
    },
    "1907": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0"
      ]
    },
    "1908": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "0"
      ]
    },
    "1909": {
      "op": "bytec 28 // \"metadata_uploaded\"",
      "defined_out": [
        "\"metadata_uploaded\"",
        "0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "0",
        "\"metadata_uploaded\""
      ]
    },
    "1911": {
      "op": "app_global_get_ex",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1912": {
      "error": "check self.metadata_uploaded exists",
      "op": "assert // check self.metadata_uploaded exists",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "maybe_value%0#0"
      ]
    },
    "1913": {
      "error": "Missing Metadata",
      "op": "assert // Missing Metadata",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0"
      ]
    },
    "1914": {
      "op": "pushbytes 0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
      "defined_out": [
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "0x6461656d6f6e5f6f7065726174696f6e5f66756e64696e675f627073"
      ]
    },
    "1944": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "error#0"
      ]
    },
    "1947": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1948": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "tmp%1#0"
      ]
    },
    "1949": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1950": {
      "op": "bytec 30 // 0x78676f765f6461656d6f6e",
      "defined_out": [
        "0x78676f765f6461656d6f6e",
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "0x78676f765f6461656d6f6e"
      ]
    },
    "1952": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1955": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1956": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1957": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "32"
      ]
    },
    "1959": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "daemon_ops_funding_bps#0",
        "discussion_duration#0",
        "error#0",
        "open_proposal_fee#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "awst_tmp%0#0",
        "tmp%3#0"
      ]
    },
    "1960": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1961": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "open_proposal_fee#0",
        "daemon_ops_funding_bps#0"
      ]
    },
    "1963": {
      "op": "*",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%0#1"
      ]
    },
    "1964": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%0#1",
        "10000"
      ]
    },
    "1966": {
      "op": "/",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%1#3"
      ]
    },
    "1967": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1970": {
      "retsub": true,
      "op": "retsub"
    },
    "1971": {
      "block": "submit_else_body@3",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "1973": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "20"
      ]
    },
    "1974": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "1975": {
      "op": "bz submit_else_body@5",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1978": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "2006": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "2009": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "2011": {
      "op": "b submit_after_if_else@7"
    },
    "2014": {
      "block": "submit_else_body@5",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ],
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "2041": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "2044": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "2046": {
      "op": "b submit_after_if_else@7"
    },
    "2049": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voters",
      "params": {
        "voters#0": "bytes"
      },
      "block": "assign_voters",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2052": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "2053": {
      "op": "dupn 2",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2055": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_xgov_daemon",
      "op": "callsub is_xgov_daemon",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%0#1"
      ]
    },
    "2058": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2059": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "2060": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "0x737461747573"
      ]
    },
    "2061": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2062": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "2063": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "20"
      ]
    },
    "2064": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%1#1"
      ]
    },
    "2065": {
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2066": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%0#0"
      ]
    },
    "2068": {
      "op": "bnz assign_voters_else_body@6",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2071": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "2073": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2075": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2076": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2078": {
      "block": "assign_voters_for_header@2",
      "stack_in": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2080": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2082": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "continue_looping%0#0"
      ]
    },
    "2083": {
      "op": "bz assign_voters_after_if_else@7",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2086": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2088": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2089": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assert_same_app_and_method",
      "op": "callsub assert_same_app_and_method",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2092": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "1"
      ]
    },
    "2093": {
      "op": "+",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2094": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2096": {
      "op": "b assign_voters_for_header@2"
    },
    "2099": {
      "block": "assign_voters_after_if_else@7",
      "stack_in": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "voters#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "voters#0 (copy)"
      ]
    },
    "2101": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "voters#0 (copy)",
        "0"
      ]
    },
    "2102": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0"
      ]
    },
    "2103": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2105": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2106": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2108": {
      "block": "assign_voters_for_header@8",
      "stack_in": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2110": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2112": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "continue_looping%1#0"
      ]
    },
    "2113": {
      "op": "bz assign_voters_after_for@11",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2116": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "voters#0 (copy)"
      ]
    },
    "2118": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2121": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2123": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2124": {
      "op": "cover 2",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "2126": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "40"
      ]
    },
    "2128": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2129": {
      "op": "pushint 40 // 40",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "40"
      ]
    },
    "2131": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "2132": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2133": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0",
        "voter#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "tmp%4#0",
        "voter#0"
      ]
    },
    "2136": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voter#0",
        "tmp%4#0"
      ]
    },
    "2137": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "i#0",
        "tmp%3#0",
        "tmp%4#0",
        "voter#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voter#0",
        "tmp%4#0",
        "32"
      ]
    },
    "2139": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "voter#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voter#0",
        "voting_power#0"
      ]
    },
    "2140": {
      "op": "bytec 29 // \"V\"",
      "defined_out": [
        "\"V\"",
        "i#0",
        "tmp%3#0",
        "voter#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voter#0",
        "voting_power#0",
        "\"V\""
      ]
    },
    "2142": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "\"V\"",
        "voter#0"
      ]
    },
    "2144": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#1",
        "i#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1"
      ]
    },
    "2145": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1 (copy)",
        "i#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1 (copy)"
      ]
    },
    "2146": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#1",
        "i#0",
        "maybe_exists%0#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2147": {
      "op": "bury 1",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2149": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#1",
        "i#0",
        "tmp%0#1",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "tmp%0#1"
      ]
    },
    "2150": {
      "error": "Voter Already Assigned",
      "op": "assert // Voter Already Assigned",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1"
      ]
    },
    "2151": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%0#1",
        "i#0",
        "tmp%3#0",
        "voting_power#0",
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "voting_power#0 (copy)"
      ]
    },
    "2153": {
      "error": "Invalid Voting Power",
      "op": "assert // Invalid Voting Power",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1"
      ]
    },
    "2154": {
      "op": "dig 1",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "voting_power#0 (copy)"
      ]
    },
    "2156": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#1",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "val_as_bytes%0#0"
      ]
    },
    "2157": {
      "op": "bytec 18 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#1",
        "i#0",
        "tmp%3#0",
        "val_as_bytes%0#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "val_as_bytes%0#0",
        "0x00"
      ]
    },
    "2159": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#1",
        "encoded_tuple_buffer%2#0",
        "i#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "box_prefixed_key%0#1",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2160": {
      "op": "box_put",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0"
      ]
    },
    "2161": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "0"
      ]
    },
    "2162": {
      "op": "bytec 9 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0",
        "i#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "0",
        "\"voters_count\""
      ]
    },
    "2164": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2165": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "maybe_value%0#0"
      ]
    },
    "2166": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "2167": {
      "op": "+",
      "defined_out": [
        "i#0",
        "materialized_values%0#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "materialized_values%0#0"
      ]
    },
    "2168": {
      "op": "bytec 9 // \"voters_count\"",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "materialized_values%0#0",
        "\"voters_count\""
      ]
    },
    "2170": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "\"voters_count\"",
        "materialized_values%0#0"
      ]
    },
    "2171": {
      "op": "app_global_put",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0"
      ]
    },
    "2172": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "0"
      ]
    },
    "2173": {
      "op": "bytec 14 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0",
        "i#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "0",
        "\"assigned_votes\""
      ]
    },
    "2175": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%3#0",
        "voting_power#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2176": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "voting_power#0",
        "maybe_value%1#0"
      ]
    },
    "2177": {
      "op": "+",
      "defined_out": [
        "i#0",
        "materialized_values%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "materialized_values%1#0"
      ]
    },
    "2178": {
      "op": "bytec 14 // \"assigned_votes\"",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "materialized_values%1#0",
        "\"assigned_votes\""
      ]
    },
    "2180": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "\"assigned_votes\"",
        "materialized_values%1#0"
      ]
    },
    "2181": {
      "op": "app_global_put",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2182": {
      "op": "intc_1 // 1",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0",
        "1"
      ]
    },
    "2183": {
      "op": "+",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "2184": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2186": {
      "op": "b assign_voters_for_header@8"
    },
    "2189": {
      "block": "assign_voters_after_for@11",
      "stack_in": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "2190": {
      "op": "bytec 9 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "\"voters_count\""
      ]
    },
    "2192": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2193": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "2194": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "2195": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2197": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2198": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "2199": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%8#0"
      ]
    },
    "2200": {
      "op": "bz assign_voters_after_if_else@13",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "2204": {
      "op": "bytec 14 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "\"assigned_votes\""
      ]
    },
    "2206": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2207": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0"
      ]
    },
    "2208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2209": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2211": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2212": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "2213": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "2214": {
      "error": "Voting Power Mismatch",
      "op": "assert // Voting Power Mismatch",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2215": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x737461747573"
      ]
    },
    "2216": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "0x737461747573",
        "25"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x737461747573",
        "25"
      ]
    },
    "2218": {
      "op": "app_global_put",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2219": {
      "op": "bytec 20 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "2221": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "materialized_values%0#0"
      ]
    },
    "2223": {
      "op": "app_global_put",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2224": {
      "block": "assign_voters_after_if_else@13",
      "stack_in": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2225": {
      "block": "assign_voters_else_body@6",
      "stack_in": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "2226": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assert_same_app_and_method",
      "op": "callsub assert_same_app_and_method",
      "stack_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2229": {
      "op": "b assign_voters_after_if_else@7"
    },
    "2232": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.vote",
      "params": {
        "voter#0": "bytes",
        "approvals#0": "bytes",
        "rejections#0": "bytes"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#1"
      ]
    },
    "2236": {
      "op": "dupn 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0"
      ]
    },
    "2238": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1"
      ]
    },
    "2239": {
      "op": "dupn 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2241": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "2244": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2245": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0"
      ]
    },
    "2246": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0",
        "0x737461747573"
      ]
    },
    "2247": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2248": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1"
      ]
    },
    "2249": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "25"
      ]
    },
    "2251": {
      "op": "!=",
      "defined_out": [
        "tmp%1#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%1#2"
      ]
    },
    "2252": {
      "op": "bz vote_after_if_else@15",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2255": {
      "op": "bytec 22 // 0x00264552523a57726f6e672050726f706f73616c20537461747573206f722066696e616c697a6564",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2257": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2259": {
      "block": "vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2261": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2262": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "2263": {
      "op": "bz vote_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2266": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2268": {
      "op": "frame_bury 0"
    },
    "2270": {
      "retsub": true,
      "op": "retsub"
    },
    "2271": {
      "block": "vote_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#0 (copy)"
      ]
    },
    "2273": {
      "op": "btoi",
      "defined_out": [
        "approvals#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1"
      ]
    },
    "2274": {
      "op": "frame_bury 3",
      "defined_out": [
        "approvals#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2276": {
      "op": "frame_dig -1",
      "defined_out": [
        "approvals#1",
        "rejections#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#0 (copy)"
      ]
    },
    "2278": {
      "op": "btoi",
      "defined_out": [
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1"
      ]
    },
    "2279": {
      "op": "frame_bury 5",
      "defined_out": [
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2281": {
      "op": "bytec 29 // \"V\"",
      "defined_out": [
        "\"V\"",
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "\"V\""
      ]
    },
    "2283": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"V\"",
        "approvals#1",
        "rejections#1",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "2285": {
      "op": "concat",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1"
      ]
    },
    "2286": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1"
      ]
    },
    "2287": {
      "op": "frame_bury 0",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1"
      ]
    },
    "2289": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "approvals#1",
        "box_prefixed_key%0#1",
        "maybe_exists%0#0",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2290": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%0#0"
      ]
    },
    "2292": {
      "op": "bnz vote_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2295": {
      "op": "pushbytes 0x00134552523a566f746572206e6f7420666f756e64",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "error#0",
        "rejections#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2318": {
      "op": "frame_bury 1",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2320": {
      "block": "vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2322": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2323": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%3#0"
      ]
    },
    "2324": {
      "op": "bz vote_after_if_else@4",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2327": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2329": {
      "op": "frame_bury 0"
    },
    "2331": {
      "retsub": true,
      "op": "retsub"
    },
    "2332": {
      "block": "vote_after_if_else@4",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1"
      ]
    },
    "2334": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "box_prefixed_key%0#1 (copy)"
      ]
    },
    "2335": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#1",
        "maybe_exists%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "voter_box#0",
        "maybe_exists%0#0"
      ]
    },
    "2336": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "voter_box#0"
      ]
    },
    "2337": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#1",
        "voter_box#0",
        "voter_box#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "voter_box#0",
        "voter_box#0 (copy)"
      ]
    },
    "2338": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "box_prefixed_key%0#1",
        "tmp%4#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "voter_box#0",
        "tmp%4#0"
      ]
    },
    "2341": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80",
        "box_prefixed_key%0#1",
        "tmp%4#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "voter_box#0",
        "tmp%4#0",
        "0x80"
      ]
    },
    "2344": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#1",
        "encoded_tuple_buffer%2#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1",
        "voter_box#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2345": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "encoded_tuple_buffer%2#0",
        "box_prefixed_key%0#1"
      ]
    },
    "2347": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "box_prefixed_key%0#1",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2348": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2349": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0"
      ]
    },
    "2350": {
      "op": "bytec 11 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "box_prefixed_key%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2352": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#1",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2353": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_value%1#0"
      ]
    },
    "2354": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#1",
        "maybe_value%1#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2355": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#1",
        "materialized_values%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "materialized_values%0#0"
      ]
    },
    "2356": {
      "op": "bytec 11 // 0x766f7465645f6d656d62657273",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "materialized_values%0#0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2358": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0x766f7465645f6d656d62657273",
        "materialized_values%0#0"
      ]
    },
    "2359": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2360": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "0"
      ]
    },
    "2361": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#1",
        "tmp%6#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%6#0"
      ]
    },
    "2362": {
      "op": "frame_dig 3",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "tmp%6#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%6#0",
        "approvals#1"
      ]
    },
    "2364": {
      "op": "dup",
      "defined_out": [
        "approvals#1",
        "approvals#1 (copy)",
        "box_prefixed_key%0#1",
        "tmp%6#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%6#0",
        "approvals#1 (copy)",
        "approvals#1 (copy)"
      ]
    },
    "2365": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%6#0",
        "approvals#1 (copy)"
      ]
    },
    "2367": {
      "op": "-",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%8#0"
      ]
    },
    "2368": {
      "op": "frame_dig 5",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "rejections#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%8#0",
        "rejections#1"
      ]
    },
    "2370": {
      "op": "dup",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "rejections#1",
        "rejections#1 (copy)",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%8#0",
        "rejections#1 (copy)",
        "rejections#1 (copy)"
      ]
    },
    "2371": {
      "op": "cover 3",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "tmp%8#0",
        "rejections#1 (copy)"
      ]
    },
    "2373": {
      "op": "-",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0"
      ]
    },
    "2374": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "0"
      ]
    },
    "2375": {
      "op": "bytec 12 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "approvals#1",
        "box_prefixed_key%0#1",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2377": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2378": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "maybe_value%2#0"
      ]
    },
    "2379": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%2#0",
        "approvals#1"
      ]
    },
    "2381": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "materialized_values%1#0",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "materialized_values%1#0"
      ]
    },
    "2382": {
      "op": "bytec 12 // 0x617070726f76616c73",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "materialized_values%1#0",
        "0x617070726f76616c73"
      ]
    },
    "2384": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0x617070726f76616c73",
        "materialized_values%1#0"
      ]
    },
    "2385": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0"
      ]
    },
    "2386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0"
      ]
    },
    "2387": {
      "op": "bytec 13 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "approvals#1",
        "box_prefixed_key%0#1",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2389": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2390": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0"
      ]
    },
    "2391": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0",
        "rejections#1"
      ]
    },
    "2393": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "materialized_values%2#0",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "materialized_values%2#0"
      ]
    },
    "2394": {
      "op": "bytec 13 // 0x72656a656374696f6e73",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "materialized_values%2#0",
        "0x72656a656374696f6e73"
      ]
    },
    "2396": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0x72656a656374696f6e73",
        "materialized_values%2#0"
      ]
    },
    "2397": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0"
      ]
    },
    "2398": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0"
      ]
    },
    "2399": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "approvals#1",
        "box_prefixed_key%0#1",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2401": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "nulls#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2402": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%4#0"
      ]
    },
    "2403": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "box_prefixed_key%0#1",
        "materialized_values%3#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "materialized_values%3#0"
      ]
    },
    "2404": {
      "op": "bytec 16 // 0x6e756c6c73",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "materialized_values%3#0",
        "0x6e756c6c73"
      ]
    },
    "2406": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x6e756c6c73",
        "materialized_values%3#0"
      ]
    },
    "2407": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2408": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "approvals#1",
        "box_prefixed_key%0#1",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x0000"
      ]
    },
    "2409": {
      "op": "frame_bury 0"
    },
    "2411": {
      "retsub": true,
      "op": "retsub"
    },
    "2412": {
      "block": "vote_after_if_else@7",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "box_prefixed_key%0#1"
      ]
    },
    "2414": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#1",
        "maybe_exists%1#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2415": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2416": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%1#0",
        "voter_box#0",
        "voter_box#0 (copy)"
      ]
    },
    "2417": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2419": {
      "op": "frame_bury 2",
      "defined_out": [
        "box_prefixed_key%0#1",
        "maybe_exists%1#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2421": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2422": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "box_prefixed_key%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "64"
      ]
    },
    "2424": {
      "op": "getbit",
      "defined_out": [
        "box_prefixed_key%0#1",
        "is_true%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0"
      ]
    },
    "2425": {
      "op": "bytec 18 // 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#1",
        "is_true%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2427": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2428": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2430": {
      "op": "setbit",
      "defined_out": [
        "box_prefixed_key%0#1",
        "encoded_bool%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "encoded_bool%0#1"
      ]
    },
    "2431": {
      "op": "bytec 18 // 0x00",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "encoded_bool%0#1",
        "0x00"
      ]
    },
    "2433": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#1",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "2434": {
      "op": "bz vote_after_if_else@9",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2437": {
      "op": "pushbytes 0x00174552523a566f74657220616c726561647920766f746564",
      "defined_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2464": {
      "op": "frame_bury 1",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2466": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2469": {
      "block": "vote_after_if_else@9",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2471": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "2474": {
      "op": "frame_dig 3",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "approvals#1"
      ]
    },
    "2476": {
      "op": "frame_dig 5",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "approvals#1",
        "rejections#1"
      ]
    },
    "2478": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "tmp%1#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "tmp%1#1"
      ]
    },
    "2479": {
      "op": "itob",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "tmp%2#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "tmp%2#1"
      ]
    },
    "2480": {
      "op": "b<",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%3#0",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%3#0"
      ]
    },
    "2481": {
      "op": "bz vote_after_if_else@11",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2484": {
      "op": "pushbytes 0x00124552523a566f746573206578636565646564",
      "defined_out": [
        "approvals#1",
        "error#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2506": {
      "op": "frame_bury 1",
      "defined_out": [
        "approvals#1",
        "error#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2508": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2511": {
      "block": "vote_after_if_else@11",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2512": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2514": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2517": {
      "block": "vote_after_if_else@15",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2520": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2521": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2523": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "is_voting_open#0"
      ]
    },
    "2525": {
      "op": "frame_bury 4",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2527": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2528": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%2#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%2#2"
      ]
    },
    "2529": {
      "op": "bnz vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2532": {
      "op": "frame_dig 4",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0"
      ]
    },
    "2534": {
      "op": "bnz vote_after_if_else@19",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2537": {
      "op": "pushbytes 0x00194552523a566f74696e6720506572696f642045787069726564",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2566": {
      "op": "frame_bury 1",
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2568": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20"
    },
    "2571": {
      "block": "vote_after_if_else@19",
      "stack_in": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2572": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#1",
        "error#0",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2574": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20"
    },
    "2577": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "params": {},
      "block": "scrutiny",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2580": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2581": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "category#0"
      ]
    },
    "2582": {
      "op": "dupn 3",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2584": {
      "callsub": "smart_contracts.proposal.contract.Proposal.check_registry_not_paused",
      "op": "callsub check_registry_not_paused"
    },
    "2587": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2588": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x737461747573"
      ]
    },
    "2589": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2590": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1"
      ]
    },
    "2591": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1",
        "25"
      ]
    },
    "2593": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2594": {
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2595": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2598": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "error#0",
        "0x0000"
      ]
    },
    "2599": {
      "op": "==",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "tmp%1#0"
      ]
    },
    "2600": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0"
      ]
    },
    "2601": {
      "op": "bz scrutiny_bool_true@8",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2604": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2605": {
      "op": "bytec 11 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2607": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "2608": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1"
      ]
    },
    "2609": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "0"
      ]
    },
    "2610": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "error#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2612": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%2#0",
        "maybe_value%1#1",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "2613": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%1#1",
        "maybe_value%2#1"
      ]
    },
    "2614": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%2#0"
      ]
    },
    "2615": {
      "op": "bz scrutiny_bool_false@9",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2618": {
      "block": "scrutiny_bool_true@8",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ]
    },
    "2619": {
      "block": "scrutiny_bool_merge@10",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ],
      "error": "Voting Ongoing",
      "op": "assert // Voting Ongoing",
      "defined_out": [],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2620": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2621": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "2623": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0"
      ]
    },
    "2624": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%0#0",
        "category#0"
      ]
    },
    "2625": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%0#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "2626": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0",
        "category#0"
      ]
    },
    "2628": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0"
      ]
    },
    "2630": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2631": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "10"
      ]
    },
    "2632": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2633": {
      "op": "bz scrutiny_else_body@14",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2636": {
      "op": "pushbytes 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "2650": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2653": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2655": {
      "block": "scrutiny_after_if_else@18",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2657": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2658": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2659": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2660": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2661": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2663": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "error#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0",
        "maybe_exists%1#0"
      ]
    },
    "2664": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0"
      ]
    },
    "2665": {
      "op": "*",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0"
      ]
    },
    "2666": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0",
        "10000"
      ]
    },
    "2668": {
      "op": "/",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_voters_required#0"
      ]
    },
    "2669": {
      "op": "frame_bury 2",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2671": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2672": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "2674": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "error#0",
        "maybe_exists%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "2675": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "2676": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%2#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "2677": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "2679": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maybe_exists%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "2681": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2682": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "10"
      ]
    },
    "2683": {
      "op": "==",
      "defined_out": [
        "category#0",
        "error#0",
        "minimum_voters_required#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2684": {
      "op": "bz scrutiny_else_body@22",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2687": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c",
        "category#0",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "2710": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2713": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "minimum_voters_required#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2715": {
      "block": "scrutiny_after_if_else@26",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2717": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2718": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2719": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2720": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2721": {
      "op": "bytec 12 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2723": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2724": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0"
      ]
    },
    "2725": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2726": {
      "op": "bytec 13 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "error#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2728": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2729": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "2730": {
      "op": "+",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0"
      ]
    },
    "2731": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2732": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2734": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2735": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "maybe_value%5#0"
      ]
    },
    "2736": {
      "op": "+",
      "defined_out": [
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "total_votes#0"
      ]
    },
    "2737": {
      "op": "frame_bury 4",
      "defined_out": [
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2739": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2740": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2742": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "error#0",
        "maybe_exists%6#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0",
        "maybe_exists%6#0"
      ]
    },
    "2743": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0"
      ]
    },
    "2744": {
      "op": "*",
      "defined_out": [
        "error#0",
        "tmp%0#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0"
      ]
    },
    "2745": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "error#0",
        "tmp%0#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0",
        "10000"
      ]
    },
    "2747": {
      "op": "/",
      "defined_out": [
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2748": {
      "op": "frame_bury 3",
      "defined_out": [
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2750": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2751": {
      "op": "bytec 11 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2753": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2754": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0"
      ]
    },
    "2755": {
      "op": "frame_dig 2",
      "defined_out": [
        "error#0",
        "maybe_value%7#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0",
        "minimum_voters_required#0"
      ]
    },
    "2757": {
      "op": ">=",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "tmp%1#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2758": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2761": {
      "op": "frame_dig 4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "total_votes#0"
      ]
    },
    "2763": {
      "op": "frame_dig 3",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2765": {
      "op": ">=",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%2#0"
      ]
    },
    "2766": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2769": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2770": {
      "op": "bytec 12 // 0x617070726f76616c73",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2772": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2773": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0"
      ]
    },
    "2774": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "2775": {
      "op": "bytec 13 // 0x72656a656374696f6e73",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2777": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%9#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2778": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "2779": {
      "op": ">",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "tmp%3#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%3#0"
      ]
    },
    "2780": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2783": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573"
      ]
    },
    "2784": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "0x737461747573",
        "30",
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573",
        "30"
      ]
    },
    "2786": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2787": {
      "retsub": true,
      "op": "retsub"
    },
    "2788": {
      "block": "scrutiny_else_body@4",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573"
      ]
    },
    "2789": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "0x737461747573",
        "40"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573",
        "40"
      ]
    },
    "2791": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2792": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2793": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "2795": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2796": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%10#0"
      ]
    },
    "2797": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2800": {
      "retsub": true,
      "op": "retsub"
    },
    "2801": {
      "block": "scrutiny_else_body@22",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2803": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "20"
      ]
    },
    "2804": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2805": {
      "op": "bz scrutiny_else_body@24",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2808": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "2832": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2835": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2837": {
      "op": "b scrutiny_after_if_else@26"
    },
    "2840": {
      "block": "scrutiny_else_body@24",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "2863": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2866": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2868": {
      "op": "b scrutiny_after_if_else@26"
    },
    "2871": {
      "block": "scrutiny_else_body@14",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2873": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "20"
      ]
    },
    "2874": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2875": {
      "op": "bz scrutiny_else_body@16",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2878": {
      "op": "pushbytes 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "2893": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2896": {
      "op": "frame_bury 0",
      "defined_out": [
        "category#0",
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2898": {
      "op": "b scrutiny_after_if_else@18"
    },
    "2901": {
      "block": "scrutiny_else_body@16",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "pushbytes 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "2915": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2918": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2920": {
      "op": "b scrutiny_after_if_else@18"
    },
    "2923": {
      "block": "scrutiny_bool_false@9",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ]
    },
    "2924": {
      "op": "b scrutiny_bool_merge@10"
    },
    "2927": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.review",
      "params": {
        "block#0": "uint64"
      },
      "block": "review",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2930": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2932": {
      "op": "pushbytes 0x78676f765f636f756e63696c",
      "defined_out": [
        "0x78676f765f636f756e63696c",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0x78676f765f636f756e63696c"
      ]
    },
    "2946": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2949": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2950": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2951": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%1#1",
        "32"
      ]
    },
    "2953": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2954": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2955": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2956": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2957": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2958": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "2959": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2960": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#1"
      ]
    },
    "2961": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "30"
      ]
    },
    "2963": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2964": {
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "stack_out": []
    },
    "2965": {
      "op": "frame_dig -1",
      "defined_out": [
        "block#0 (copy)"
      ],
      "stack_out": [
        "block#0 (copy)"
      ]
    },
    "2967": {
      "op": "bz review_else_body@2",
      "stack_out": []
    },
    "2970": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "0x737461747573"
      ]
    },
    "2971": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "0x737461747573",
        "60"
      ],
      "stack_out": [
        "0x737461747573",
        "60"
      ]
    },
    "2973": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2974": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2975": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "2977": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "reg_app#0"
      ],
      "stack_out": [
        "reg_app#0",
        "maybe_exists%0#0"
      ]
    },
    "2978": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "reg_app#0"
      ]
    },
    "2979": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2981": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2982": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": []
    },
    "2985": {
      "retsub": true,
      "op": "retsub"
    },
    "2986": {
      "block": "review_else_body@2",
      "stack_in": [],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "2987": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "0x737461747573",
        "45"
      ],
      "stack_out": [
        "0x737461747573",
        "45"
      ]
    },
    "2989": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2990": {
      "retsub": true,
      "op": "retsub"
    },
    "2991": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.fund",
      "params": {},
      "block": "fund",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2994": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2995": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2998": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "2999": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3000": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3001": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "3002": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#1"
      ]
    },
    "3003": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "45"
      ]
    },
    "3005": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "3006": {
      "op": "bz fund_after_if_else@5",
      "stack_out": [
        "error#0"
      ]
    },
    "3009": {
      "op": "bytec 22 // 0x00264552523a57726f6e672050726f706f73616c20537461747573206f722066696e616c697a6564",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3011": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3013": {
      "block": "fund_after_inlined_smart_contracts.proposal.contract.Proposal.fund_check_authorization@6",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3015": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "3016": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3017": {
      "op": "bz fund_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "3020": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3022": {
      "op": "swap"
    },
    "3023": {
      "retsub": true,
      "op": "retsub"
    },
    "3024": {
      "block": "fund_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0x737461747573"
      ]
    },
    "3025": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "0x737461747573",
        "50"
      ],
      "stack_out": [
        "error#0",
        "0x737461747573",
        "50"
      ]
    },
    "3027": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "3028": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3029": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "3031": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3032": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "3033": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "error#0"
      ]
    },
    "3036": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "3037": {
      "op": "swap"
    },
    "3038": {
      "retsub": true,
      "op": "retsub"
    },
    "3039": {
      "block": "fund_after_if_else@5",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3040": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3042": {
      "op": "b fund_after_inlined_smart_contracts.proposal.contract.Proposal.fund_check_authorization@6"
    },
    "3045": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.unassign_voters",
      "params": {
        "voters#0": "bytes"
      },
      "block": "unassign_voters",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3048": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "3049": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0"
      ]
    },
    "3050": {
      "op": "dupn 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3052": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3053": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "0x737461747573"
      ]
    },
    "3054": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3055": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "3056": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "20"
      ]
    },
    "3057": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%0#1"
      ]
    },
    "3058": {
      "op": "bz unassign_voters_else_body@16",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3061": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_xgov_daemon",
      "op": "callsub is_xgov_daemon",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%1#1"
      ]
    },
    "3064": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3065": {
      "block": "unassign_voters_after_if_else@23",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "3067": {
      "op": "bnz unassign_voters_else_body@6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3070": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "3072": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3074": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3075": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3077": {
      "block": "unassign_voters_for_header@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3079": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3081": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "continue_looping%0#0"
      ]
    },
    "3082": {
      "op": "bz unassign_voters_after_if_else@7",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3085": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3087": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3088": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assert_same_app_and_method",
      "op": "callsub assert_same_app_and_method",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3091": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0",
        "1"
      ]
    },
    "3092": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "3093": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3095": {
      "op": "b unassign_voters_for_header@2"
    },
    "3098": {
      "block": "unassign_voters_after_if_else@7",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "voters#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "voters#0 (copy)"
      ]
    },
    "3100": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "voters#0 (copy)",
        "0"
      ]
    },
    "3101": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "array_length%0#0"
      ]
    },
    "3102": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3104": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "item_index_internal%0#0"
      ]
    },
    "3105": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3107": {
      "block": "unassign_voters_for_header@8",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "item_index_internal%0#0"
      ]
    },
    "3109": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "3111": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "continue_looping%1#0"
      ]
    },
    "3112": {
      "op": "bz unassign_voters_after_for@13",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3115": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "voters#0 (copy)"
      ]
    },
    "3117": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3120": {
      "op": "frame_dig 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3122": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "32"
      ]
    },
    "3124": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3125": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "32"
      ]
    },
    "3127": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "voter#0"
      ]
    },
    "3128": {
      "op": "bytec 29 // \"V\"",
      "defined_out": [
        "\"V\"",
        "array_length%0#0",
        "item_index_internal%0#0",
        "voter#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "voter#0",
        "\"V\""
      ]
    },
    "3130": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "\"V\"",
        "voter#0"
      ]
    },
    "3131": {
      "op": "concat",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3132": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3133": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3135": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3136": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_exists%0#0"
      ]
    },
    "3138": {
      "op": "bz unassign_voters_after_if_else@11",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3142": {
      "op": "bytec 9 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0",
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "\"voters_count\""
      ]
    },
    "3144": {
      "op": "app_global_get_ex",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "3145": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "3146": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "3147": {
      "op": "-",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "materialized_values%0#0"
      ]
    },
    "3148": {
      "op": "bytec 9 // \"voters_count\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "materialized_values%0#0",
        "\"voters_count\""
      ]
    },
    "3150": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "\"voters_count\"",
        "materialized_values%0#0"
      ]
    },
    "3151": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3152": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3153": {
      "op": "bytec 14 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0",
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "\"assigned_votes\""
      ]
    },
    "3155": {
      "op": "app_global_get_ex",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "3156": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "3157": {
      "op": "frame_dig 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3159": {
      "op": "dup",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "item_index_internal%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "box_prefixed_key%0#0 (copy)",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3160": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "3162": {
      "op": "box_get",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "3163": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "3164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3165": {
      "op": "extract_uint64",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "maybe_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "tmp%4#0"
      ]
    },
    "3166": {
      "op": "-",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "materialized_values%1#0"
      ]
    },
    "3167": {
      "op": "bytec 14 // \"assigned_votes\"",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "materialized_values%1#0",
        "\"assigned_votes\""
      ]
    },
    "3169": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0",
        "\"assigned_votes\"",
        "materialized_values%1#0"
      ]
    },
    "3170": {
      "op": "app_global_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "box_prefixed_key%0#0"
      ]
    },
    "3171": {
      "op": "box_del",
      "defined_out": [
        "array_length%0#0",
        "box_prefixed_key%0#0",
        "item_index_internal%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "{box_del}"
      ]
    },
    "3172": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3173": {
      "block": "unassign_voters_after_if_else@11",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "item_index_internal%0#0"
      ]
    },
    "3175": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "3176": {
      "op": "+",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "item_index_internal%0#0"
      ]
    },
    "3177": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3179": {
      "op": "b unassign_voters_for_header@8"
    },
    "3182": {
      "block": "unassign_voters_after_for@13",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "3183": {
      "block": "unassign_voters_else_body@6",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3184": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assert_same_app_and_method",
      "op": "callsub assert_same_app_and_method",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3187": {
      "op": "b unassign_voters_after_if_else@7"
    },
    "3190": {
      "block": "unassign_voters_else_body@16",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3191": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "0x737461747573"
      ]
    },
    "3192": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3193": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "3194": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "50"
      ]
    },
    "3196": {
      "op": "==",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%2#1"
      ]
    },
    "3197": {
      "op": "bnz unassign_voters_and_contd@19",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3200": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3201": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "0x737461747573"
      ]
    },
    "3202": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "3203": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%2#1"
      ]
    },
    "3204": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "60",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%2#1",
        "60"
      ]
    },
    "3206": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ]
    },
    "3207": {
      "op": "bnz unassign_voters_and_contd@19",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3210": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3211": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "0x737461747573"
      ]
    },
    "3212": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3213": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%3#0"
      ]
    },
    "3214": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%3#0",
        "40"
      ]
    },
    "3216": {
      "op": "==",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "tmp%4#1"
      ]
    },
    "3217": {
      "op": "bz unassign_voters_bool_false@21",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3220": {
      "block": "unassign_voters_and_contd@19",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3221": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "3222": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3223": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "maybe_value%4#0"
      ]
    },
    "3224": {
      "op": "bnz unassign_voters_bool_false@21",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3227": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "and_result%0#0"
      ]
    },
    "3228": {
      "block": "unassign_voters_bool_merge@22",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "and_result%0#0"
      ],
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "defined_out": [],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "3229": {
      "op": "b unassign_voters_after_if_else@23"
    },
    "3232": {
      "block": "unassign_voters_bool_false@21",
      "stack_in": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%2#0",
        "and_result%0#0"
      ]
    },
    "3233": {
      "op": "b unassign_voters_bool_merge@22"
    },
    "3236": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize",
      "params": {},
      "block": "finalize",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "3239": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "3240": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3243": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "3244": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3245": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "3246": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3247": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "3248": {
      "op": "bnz finalize_if_body@13",
      "stack_out": [
        "error#0"
      ]
    },
    "3251": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3252": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3254": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%1#0"
      ]
    },
    "3255": {
      "op": "bz finalize_after_if_else@14",
      "stack_out": [
        "error#0"
      ]
    },
    "3258": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3259": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3260": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "3261": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%2#1"
      ]
    },
    "3262": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%2#1",
        "10"
      ]
    },
    "3263": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "3264": {
      "op": "bz finalize_after_if_else@14",
      "stack_out": [
        "error#0"
      ]
    },
    "3267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3268": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3269": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%3#1",
        "maybe_exists%3#0"
      ]
    },
    "3270": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%3#1"
      ]
    },
    "3271": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "maybe_value%3#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%3#1",
        "50"
      ]
    },
    "3273": {
      "op": "!=",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%3#1"
      ]
    },
    "3274": {
      "op": "bz finalize_after_if_else@14",
      "stack_out": [
        "error#0"
      ]
    },
    "3277": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3278": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3279": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3280": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%4#0"
      ]
    },
    "3281": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "60",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%4#0",
        "60"
      ]
    },
    "3283": {
      "op": "!=",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%4#1"
      ]
    },
    "3284": {
      "op": "bz finalize_after_if_else@14",
      "stack_out": [
        "error#0"
      ]
    },
    "3287": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3288": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3289": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3290": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%5#0"
      ]
    },
    "3291": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%5#0",
        "40"
      ]
    },
    "3293": {
      "op": "!=",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%5#1"
      ]
    },
    "3294": {
      "op": "bz finalize_after_if_else@14",
      "stack_out": [
        "error#0"
      ]
    },
    "3297": {
      "block": "finalize_if_body@13",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec 22 // 0x00264552523a57726f6e672050726f706f73616c20537461747573206f722066696e616c697a6564",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3299": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3301": {
      "block": "finalize_after_inlined_smart_contracts.proposal.contract.Proposal.finalize_check_authorization@15",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3303": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "3304": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3305": {
      "op": "bz finalize_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "3308": {
      "op": "frame_dig 0",
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3310": {
      "op": "swap"
    },
    "3311": {
      "retsub": true,
      "op": "retsub"
    },
    "3312": {
      "block": "finalize_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3313": {
      "op": "bytec 9 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0"
      ],
      "stack_out": [
        "error#0",
        "0",
        "\"voters_count\""
      ]
    },
    "3315": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3316": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "3317": {
      "op": "bz finalize_after_if_else@4",
      "stack_out": [
        "error#0"
      ]
    },
    "3320": {
      "op": "pushbytes 0x002e4552523a54686572652061726520766f746572732061737369676e656420746f20746869732070726f706f73616c",
      "defined_out": [
        "0x002e4552523a54686572652061726520766f746572732061737369676e656420746f20746869732070726f706f73616c"
      ],
      "stack_out": [
        "error#0",
        "0x002e4552523a54686572652061726520766f746572732061737369676e656420746f20746869732070726f706f73616c"
      ]
    },
    "3370": {
      "op": "swap"
    },
    "3371": {
      "retsub": true,
      "op": "retsub"
    },
    "3372": {
      "block": "finalize_after_if_else@4",
      "stack_in": [
        "error#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3373": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3374": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3375": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%1#0"
      ]
    },
    "3376": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%1#0",
        "10"
      ]
    },
    "3377": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "3378": {
      "op": "bz finalize_after_if_else@6",
      "stack_out": [
        "error#0"
      ]
    },
    "3381": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3382": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "3384": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3385": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "maybe_value%2#0"
      ]
    },
    "3386": {
      "callsub": "smart_contracts.proposal.contract.Proposal.transfer_locked_amount",
      "op": "callsub transfer_locked_amount",
      "stack_out": [
        "error#0"
      ]
    },
    "3389": {
      "block": "finalize_after_if_else@6",
      "stack_in": [
        "error#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3390": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "3392": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "reg_app#0"
      ],
      "stack_out": [
        "error#0",
        "reg_app#0",
        "maybe_exists%3#0"
      ]
    },
    "3393": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "error#0",
        "reg_app#0"
      ]
    },
    "3394": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "error#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3396": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "error#0",
        "value%0#0"
      ]
    },
    "3397": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "value%0#0"
      ],
      "stack_out": [
        "error#0",
        "value%0#0",
        "tmp%3#0"
      ]
    },
    "3399": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%1#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "error#0",
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3401": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "error#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "3402": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "error#0",
        "value%0#0",
        "value%1#0",
        "tmp%4#0"
      ]
    },
    "3404": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%2#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "error#0",
        "value%0#0",
        "value%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3406": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "error#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ]
    },
    "3407": {
      "op": "-",
      "defined_out": [
        "tmp%5#0",
        "value%0#0"
      ],
      "stack_out": [
        "error#0",
        "value%0#0",
        "tmp%5#0"
      ]
    },
    "3408": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "error#0"
      ]
    },
    "3411": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "error#0",
        "0x66696e616c697a6564"
      ]
    },
    "3412": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x66696e616c697a6564",
        "1"
      ],
      "stack_out": [
        "error#0",
        "0x66696e616c697a6564",
        "1"
      ]
    },
    "3413": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "3414": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "3415": {
      "op": "swap"
    },
    "3416": {
      "retsub": true,
      "op": "retsub"
    },
    "3417": {
      "block": "finalize_after_if_else@14",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3418": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3420": {
      "op": "b finalize_after_inlined_smart_contracts.proposal.contract.Proposal.finalize_check_authorization@15"
    },
    "3423": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.delete",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "callsub": "smart_contracts.proposal.contract.Proposal.is_xgov_daemon",
      "op": "callsub is_xgov_daemon",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3426": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "3427": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3428": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564"
      ],
      "stack_out": [
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "3429": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "3430": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "maybe_value%0#1"
      ]
    },
    "3431": {
      "error": "Wrong Proposal Status or finalized",
      "op": "assert // Wrong Proposal Status or finalized",
      "stack_out": []
    },
    "3432": {
      "op": "bytec 7 // \"M\"",
      "defined_out": [
        "\"M\""
      ],
      "stack_out": [
        "\"M\""
      ]
    },
    "3434": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "3435": {
      "op": "pop",
      "stack_out": []
    },
    "3436": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3437": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "3439": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "reg_app#0"
      ],
      "stack_out": [
        "reg_app#0",
        "maybe_exists%0#0"
      ]
    },
    "3440": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "reg_app#0"
      ]
    },
    "3441": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3443": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3444": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "3446": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%1#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3448": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0",
        "value%1#0"
      ]
    },
    "3449": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": []
    },
    "3452": {
      "retsub": true,
      "op": "retsub"
    },
    "3453": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3454": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "3456": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3457": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3458": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3459": {
      "op": "bytec 5 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "3461": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3462": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "3463": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3464": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3465": {
      "op": "bytec 23 // 0x7469746c65",
      "defined_out": [
        "0",
        "0x7469746c65",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "0",
        "0x7469746c65"
      ]
    },
    "3467": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3468": {
      "error": "check self.title exists",
      "op": "assert // check self.title exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0"
      ]
    },
    "3469": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "3470": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "length%0#0"
      ]
    },
    "3471": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "as_bytes%0#0"
      ]
    },
    "3472": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "length_uint16%0#0"
      ]
    },
    "3475": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "maybe_value%2#0"
      ]
    },
    "3476": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "3477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "0"
      ]
    },
    "3478": {
      "op": "bytec 19 // 0x6f70656e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x6f70656e5f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "0",
        "0x6f70656e5f74696d657374616d70"
      ]
    },
    "3480": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3481": {
      "error": "check self.open_ts exists",
      "op": "assert // check self.open_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0"
      ]
    },
    "3482": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3483": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "3484": {
      "op": "bytec 24 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "3486": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3487": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "maybe_value%4#0"
      ]
    },
    "3488": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3489": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "3490": {
      "op": "bytec 20 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "3492": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3493": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%5#0"
      ]
    },
    "3494": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "3495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "3496": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x737461747573"
      ]
    },
    "3497": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3498": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%6#0"
      ]
    },
    "3499": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "3500": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "3501": {
      "op": "bytec_3 // 0x66696e616c697a6564",
      "defined_out": [
        "0",
        "0x66696e616c697a6564",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x66696e616c697a6564"
      ]
    },
    "3502": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3503": {
      "error": "check self.finalized exists",
      "op": "assert // check self.finalized exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%7#0"
      ]
    },
    "3504": {
      "op": "bytec 18 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%7#0",
        "0x00"
      ]
    },
    "3506": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%7#0",
        "0x00",
        "0"
      ]
    },
    "3507": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0x00",
        "0",
        "maybe_value%7#0"
      ]
    },
    "3509": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0"
      ]
    },
    "3510": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3511": {
      "op": "bytec 6 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "3513": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3514": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "maybe_value%8#0"
      ]
    },
    "3515": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0"
      ]
    },
    "3516": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "3517": {
      "op": "bytec 25 // 0x666f637573",
      "defined_out": [
        "0",
        "0x666f637573",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "0",
        "0x666f637573"
      ]
    },
    "3519": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3520": {
      "error": "check self.focus exists",
      "op": "assert // check self.focus exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0"
      ]
    },
    "3521": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "3522": {
      "op": "dup",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%6#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%6#0 (copy)"
      ]
    },
    "3523": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "bitlen%0#0"
      ]
    },
    "3524": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "3526": {
      "op": "<=",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "no_overflow%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "no_overflow%0#0"
      ]
    },
    "3527": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "3528": {
      "op": "extract 7 1",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0"
      ]
    },
    "3531": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "0"
      ]
    },
    "3532": {
      "op": "bytec 26 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0",
        "0x66756e64696e675f74797065",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "0",
        "0x66756e64696e675f74797065"
      ]
    },
    "3534": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%10#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3535": {
      "error": "check self.funding_type exists",
      "op": "assert // check self.funding_type exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "maybe_value%10#0"
      ]
    },
    "3536": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0"
      ]
    },
    "3537": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "3538": {
      "op": "bytec 27 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x7265717565737465645f616d6f756e74",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "0",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "3540": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%11#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3541": {
      "error": "check self.requested_amount exists",
      "op": "assert // check self.requested_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "maybe_value%11#0"
      ]
    },
    "3542": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "3543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0"
      ]
    },
    "3544": {
      "op": "bytec 15 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "3546": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3547": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%12#0"
      ]
    },
    "3548": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "3549": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "3550": {
      "op": "bytec 21 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3552": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3553": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0"
      ]
    },
    "3554": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "0"
      ]
    },
    "3555": {
      "op": "bytec 8 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3557": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%14#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3558": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "maybe_value%14#0"
      ]
    },
    "3559": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0"
      ]
    },
    "3560": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "3561": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3563": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%15#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3564": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "maybe_value%15#0"
      ]
    },
    "3565": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "3566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "3567": {
      "op": "bytec 11 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "3569": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%16#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3570": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%16#0"
      ]
    },
    "3571": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "3572": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0"
      ]
    },
    "3573": {
      "op": "bytec 12 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "3575": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%17#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3576": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "maybe_value%17#0"
      ]
    },
    "3577": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0"
      ]
    },
    "3578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "3579": {
      "op": "bytec 13 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "3581": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%18#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3582": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "maybe_value%18#0"
      ]
    },
    "3583": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3584": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "3585": {
      "op": "bytec 16 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "3587": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%19#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3588": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%19#0"
      ]
    },
    "3589": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "3590": {
      "op": "uncover 19",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%0#0"
      ]
    },
    "3592": {
      "op": "uncover 19",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3594": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3595": {
      "op": "pushbytes 0x00bc",
      "defined_out": [
        "0x00bc",
        "encoded_bool%0#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%2#0",
        "0x00bc"
      ]
    },
    "3599": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3600": {
      "op": "uncover 17",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "3602": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3603": {
      "op": "uncover 16",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "3605": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3606": {
      "op": "uncover 15",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%3#0"
      ]
    },
    "3608": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%4#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3609": {
      "op": "uncover 14",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%4#0"
      ]
    },
    "3611": {
      "op": "concat",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3612": {
      "op": "uncover 13",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%7#0",
        "encoded_bool%0#0"
      ]
    },
    "3614": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%5#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3615": {
      "op": "uncover 12",
      "stack_out": [
        "encoded_value%0#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%5#0"
      ]
    },
    "3617": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "uint8%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "uint8%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3618": {
      "op": "uncover 11",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%9#0",
        "uint8%0#0"
      ]
    },
    "3620": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3621": {
      "op": "uncover 10",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%7#0"
      ]
    },
    "3623": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3624": {
      "op": "uncover 9",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%8#0"
      ]
    },
    "3626": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%9#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3627": {
      "op": "uncover 8",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%9#0"
      ]
    },
    "3629": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3630": {
      "op": "uncover 7",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%13#0"
      ]
    },
    "3632": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3633": {
      "op": "uncover 6",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%10#0"
      ]
    },
    "3635": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3636": {
      "op": "uncover 5",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%15#0",
        "val_as_bytes%11#0"
      ]
    },
    "3638": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3639": {
      "op": "uncover 4",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%12#0"
      ]
    },
    "3641": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3642": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%17#0",
        "val_as_bytes%13#0"
      ]
    },
    "3644": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3645": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%18#0",
        "val_as_bytes%14#0"
      ]
    },
    "3647": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "encoded_value%0#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "3648": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%19#0",
        "val_as_bytes%15#0"
      ]
    },
    "3649": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "3650": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%20#0",
        "encoded_value%0#0"
      ]
    },
    "3651": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%21#0"
      ]
    },
    "3652": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
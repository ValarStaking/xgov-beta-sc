{
  "version": 3,
  "sources": [
    "../../proposal/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;AAGY;;AAA6B;;AAA7B;AADJ;AAGO;;AAAuB;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAIQ;;AADJ;;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADe;AADvB;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADuB;AAD/B;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAQA;;AAAoB;AAApB;AACA;;AAAsB;AAAtB;;AAvGR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AA8ZK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA9ZL;;;AA8ZK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AA5aL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AA4aK;;;AAAA;AAAA;AA8CA;;AAAA;AAAA;AAAA;;AAAA;AA1dL;;;AAAA;;;AA0dK;;;AAAA;AAAA;AAsBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AA2BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAyCA;;AAAA;AAAA;AAAA;;AAAA;AApjBL;;;AAAA;;;AAojBK;;;AAAA;AAAA;AAoCA;;AAAA;AAAA;AAAA;;AAAA;AAxlBL;;;AAAA;;;AAAA;;;AAwlBK;;;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAroBL;AAAA;AA8ZA;;;AAQY;;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAA6B;;AAA7B;;AAER;;;AAgCQ;;;AAE6B;;AAAA;;;AAAmB;;AAAA;AAAqB;;AAAA;AAArE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AACA;;AAAA;;AAAA;;;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;AAAA;;;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAC2B;;;AAA3B;;AAAA;AAAA;AACA;;AAA2B;;AAA3B;AACA;AAAoB;AAApB;;AAtLR;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;;AAyGR;;;AAEe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAzGR;;;AASQ;;AAAA;;AAAA;;;AAAA;;AAGI;;AAAgB;AAAhB;AAAA;;;AACG;;AAAgB;AAAhB;AADH;;;;;;;;AADJ;AAMI;;;;;;;;;;;;;;;;;;;;;;AAD0B;;;AAGd;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAEO;;AAAA;;AAAA;AAAP;AAEI;;AAAA;AADJ;;;;AA7CR;;;AAEe;;AAAA;AAAsB;;AAAtB;AAAP;AACO;;AAAS;AAAT;AAAP;;;;AA8FR;;;AAKY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGR;AAAR;AACG;;;AACS;;;;;;;;;;;;;;;;;;;;;;AAAR;;AACJ;;AAAA;;AAAA;;AAAA;;AAAA;AAzCR;;;AAIQ;;AAAuB;;;AAEhB;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAA;AAAP;;AArBR;;;AAGY;;;;;;;;;;;;;;;;;;;;;;;;;AAD6B;;;AAGjB;AAAT;AAAP;AACO;;AAAA;AAAA;;;AAAP;AAZR;;;AAIe;;AAAA;;AAAA;AAA4B;;;AAA5B;AAAP;AAyBR;;;AAGY;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADiC;;;AAAA;AAAA;;AAGrB;AAAT;AAAP;AAEG;;AAAA;AAAX;;;AACY;AAAsB;AAAtB;;;;AACC;;AAAA;;AAAA;AAAb;;;AACY;AAAsB;AAAtB;;;;AAEA;AAAsB;;AAAtB;;AAsGZ;;;AAeQ;;;AAEiC;;AAAA;;;AAAjC;AAAA;;AAAA;;;AAAA;;AAEA;;AAAA;AAAA;AACA;;AAAA;;AAAA;;AAjNR;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;;AAgNR;;;AASQ;;;AAEA;AACa;AAAA;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;;;;;AAFX;;;AAGQ;;;AAHR;AAOA;;AAAmB;AAAnB;AACA;;AAAoC;AAApC;AACA;AAAsB;AAAtB;AACA;;AAA0B;AAA1B;AACA;;AAA8B;AAA9B;AACA;;AAA2B;AAA3B;AACA;;AAA2B;AAA3B;AACA;AAAoB;AAApB;;AAzPR;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;;AAwPR;;;AAcQ;;;AAEA;;;AAEA;AAAoB;AAApB;AACA;;AAA6B;;AAA7B;AAGI;;;;;;;;;;;;;;AADkB;;;AAGN;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;AADwB;;;AAGZ;AAAT;AAAP;AAEA;AAGY;;AADJ;;;AADK;AAAA;AAAA;;AAAA;AAAA;AAKF;;AAAA;;;;;;;AANX;;;AAOQ;;;AAPR;;AArSR;;;AAGe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAEsB;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AACqC;AAAA;AAAA;AAAA;AAA7B;;;AAEvB;AAAP;;AAnGR;;;;AAEW;;AAAY;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAGd;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAGZ;;AAAS;AAAT;AAAP;AACA;AAAA;AAmDR;;;AAIgD;;AAApC;;;AAEG;AAA2C;AAA3C;AAAP;AAGI;;AADuB;;;AAGX;AAAT;AAAP;AACA;AAAA;AAGI;;AADqB;;;AAGT;AAAT;AAAP;AACA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;;AA+HR;;;AAGY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGhB;AACA;AA4KR;;;AAiBQ;;;AAEiD;;AAAA;AAAjD;;AAAA;;AAAA;;;AAE4B;;AAElB;;AAFkB;AAA5B;;AAAA;;AAAA;AAAA;AAAA;AAKA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEG;AAAA;;AAAA;AAAA;AAAqB;AAAA;;AAAA;AAAA;AAArB;AAAX;;;AAEgB;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AADJ;AAGA;AAAoB;;AAApB;AACA;;AAA0B;;AAA1B;;AAvbZ;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;;AAgPR;;;AAEe;;AAEC;;AADJ;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AAAP;AAhPR;;;AAI4B;;AAAb;;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;;AAAA;;AA+aR;;;;;AAqBgB;;;AAAR;AACY;AAAT;AAAX;;;AACY;;AAAA;;AAAA;AAE6C;;AAAA;AAAA;AAAA;;AAAkB;;AAAA;AAAA;AAAA;;AAAnE;;AAAA;;AAAQ;;;AAAR;AAAA;;AACY;AAAT;AAAX;;;AACY;;AAAA;;AAAA;AAEQ;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEF;;;AADkB;AAElB;;;AAFkB;AAA5B;;AAAA;AAAA;AAKA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AAEQ;AAAA;;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAA;;AAAQ;AAER;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEO;AAAP;;AAAA;AAjhBR;;;;;AAEe;;;AAAP;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;;AAAA;AAEoB;;;AAAA;AAAA;;AAAA;;AAAA;;AACZ;AAAT;AAAX;;;AACY;AAED;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;;AAAA;AAEG;AAAP;;AAAA;AA0RR;;;AAEe;;AAAgC;AAAA;;AAAA;AAAA;AAAhC;AAAP;AAnTR;;;AAE0B;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AACwC;AAAA;AAAA;AAAA;AAAzB;;;AAAA;AAAA;;AAAA;AACrB;AAAT;AAAX;;;AACmB;AAAP;;AAAA;AAEG;;AAAA;;AAAA;AAA4C;AAAnD;;AAAA;;AAAA;AA4ER;;;AAEW;;AAAY;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;AAAP;AAGC;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;AAAP;AAKI;;;;;;;;;;;;;;;;;;;;;;;AADG;;;AAAP;AArEZ;;;;AAIwB;;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;AAAP;;AAAA;AAEQ;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACT;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;;AAAA;AAEwB;;AAAA;;;AAAzB;;AAAA;;AAAA;AAAA;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;AAAP;;AAAA;AAEG;AAAP;;AAAA;AAqfR;;;AAUQ;;;AAI6B;AAAA;AAAA;AAAA;AAAhB;;;AAET;AAAA;;AAAA;AAAA;AADJ;AAA0B;;;AAMqB;AAAA;AAAA;AAAA;AAAzB;;;AACR;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAA+C;AAAA;;AAAA;AAAA;AAA/C;AAAd;;AAEI;AAAA;;AAAA;AAAA;AADJ;AAAyB;;;AAAzB;AAKI;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AACI;;AAAA;;AAAA;AADJ;;;AAII;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAJJ;;;AAMA;AAAoB;;AAApB;;;;AAEA;AAAoB;;AAApB;AACA;AACa;AAAA;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;;;;;AAFX;;;AAGQ;;;AAHR;AAKA;;AAA2B;AAA3B;;AA7hBZ;;;AAEe;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AAEwB;;;AACR;AAAT;AAAP;AAGI;;;AACG;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AADA;AADH;;;;;;;;AADJ;;AAkDR;;;;AAEW;;AAAY;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAGd;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;AADW;;;AAAA;;AAGZ;;AAAS;AAAT;AAAP;AACA;AAAA;AAER;;;;AAEW;;AAAY;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAGd;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAGZ;;AAAS;AAAT;AAAP;AACA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.approval_program",
      "params": {},
      "block": "smart_contracts.proposal.contract.Proposal.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 10 20"
    },
    "7": {
      "op": "bytecblock 0x0000 0x737461747573 0x 0x63617465676f7279 0x70726f706f736572 0x6c6f636b65645f616d6f756e74 0x636f6d6d69747465655f6d656d62657273 0x72656769737472795f6170705f6964 0x636f6d6d69747465655f766f746573 0x766f7465645f6d656d62657273 0x617070726f76616c73 0x72656a656374696f6e73 0x7469746c65 0x636964 0x7375626d697373696f6e5f74696d657374616d70 0x6e756c6c73 \"voters_count\" \"assigned_votes\" \"V\" 0x766f74655f6f70656e696e675f74696d657374616d70 0x66756e64696e675f74797065 0x7265717565737465645f616d6f756e74 0x636f6d6d69747465655f6964 0x00 0x66696e616c697a6174696f6e5f74696d657374616d70 0x636f6d6d69747465655f7075626c6973686572"
    },
    "315": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "317": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "320": {
      "callsub": "smart_contracts.proposal.contract.Proposal.__init__",
      "op": "callsub __init__"
    },
    "323": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.proposal.contract.Proposal.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "326": {
      "op": "return",
      "stack_out": []
    },
    "327": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "330": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "332": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "5"
      ]
    },
    "334": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "335": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "336": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "338": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "20"
      ]
    },
    "339": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "340": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "341": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "343": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "344": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "345": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "347": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "348": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "349": {
      "op": "bytec 4 // 0x70726f706f736572"
    },
    "351": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x70726f706f736572",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "new_state_value%0#0"
      ]
    },
    "353": {
      "op": "app_global_put",
      "stack_out": []
    },
    "354": {
      "op": "bytec 7 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "356": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "0"
      ]
    },
    "357": {
      "op": "app_global_put",
      "stack_out": []
    },
    "358": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "360": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "361": {
      "op": "app_global_put",
      "stack_out": []
    },
    "362": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "364": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "365": {
      "op": "app_global_put",
      "stack_out": []
    },
    "366": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "368": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "369": {
      "op": "app_global_put",
      "stack_out": []
    },
    "370": {
      "op": "bytec 24 // 0x66696e616c697a6174696f6e5f74696d657374616d70",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ]
    },
    "372": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "373": {
      "op": "app_global_put",
      "stack_out": []
    },
    "374": {
      "op": "bytec 19 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "376": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "0"
      ]
    },
    "377": {
      "op": "app_global_put",
      "stack_out": []
    },
    "378": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "380": {
      "op": "app_global_put",
      "stack_out": []
    },
    "381": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279"
      ],
      "stack_out": [
        "0x63617465676f7279"
      ]
    },
    "382": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x63617465676f7279",
        "0"
      ]
    },
    "383": {
      "op": "app_global_put",
      "stack_out": []
    },
    "384": {
      "op": "bytec 20 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "387": {
      "op": "app_global_put",
      "stack_out": []
    },
    "388": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "390": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "391": {
      "op": "app_global_put",
      "stack_out": []
    },
    "392": {
      "op": "bytec 5 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "394": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "395": {
      "op": "app_global_put",
      "stack_out": []
    },
    "396": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "398": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "399": {
      "op": "app_global_put",
      "stack_out": []
    },
    "400": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "403": {
      "op": "app_global_put",
      "stack_out": []
    },
    "404": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "406": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "407": {
      "op": "app_global_put",
      "stack_out": []
    },
    "408": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0x766f7465645f6d656d62657273"
      ],
      "stack_out": [
        "0x766f7465645f6d656d62657273"
      ]
    },
    "410": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f7465645f6d656d62657273",
        "0"
      ]
    },
    "411": {
      "op": "app_global_put",
      "stack_out": []
    },
    "412": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0x617070726f76616c73"
      ],
      "stack_out": [
        "0x617070726f76616c73"
      ]
    },
    "414": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x617070726f76616c73",
        "0"
      ]
    },
    "415": {
      "op": "app_global_put",
      "stack_out": []
    },
    "416": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0x72656a656374696f6e73"
      ],
      "stack_out": [
        "0x72656a656374696f6e73"
      ]
    },
    "418": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x72656a656374696f6e73",
        "0"
      ]
    },
    "419": {
      "op": "app_global_put",
      "stack_out": []
    },
    "420": {
      "op": "bytec 15 // 0x6e756c6c73",
      "defined_out": [
        "0x6e756c6c73"
      ],
      "stack_out": [
        "0x6e756c6c73"
      ]
    },
    "422": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6e756c6c73",
        "0"
      ]
    },
    "423": {
      "op": "app_global_put",
      "stack_out": []
    },
    "424": {
      "op": "pushbytes 0x6d696c6573746f6e655f617070726f766564",
      "defined_out": [
        "0x6d696c6573746f6e655f617070726f766564"
      ],
      "stack_out": [
        "0x6d696c6573746f6e655f617070726f766564"
      ]
    },
    "444": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696c6573746f6e655f617070726f766564",
        "0"
      ]
    },
    "445": {
      "op": "app_global_put",
      "stack_out": []
    },
    "446": {
      "op": "bytec 16 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\""
      ],
      "stack_out": [
        "\"voters_count\""
      ]
    },
    "448": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"voters_count\"",
        "0"
      ]
    },
    "449": {
      "op": "app_global_put",
      "stack_out": []
    },
    "450": {
      "op": "bytec 17 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\""
      ],
      "stack_out": [
        "\"assigned_votes\""
      ]
    },
    "452": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"assigned_votes\"",
        "0"
      ]
    },
    "453": {
      "op": "app_global_put",
      "stack_out": []
    },
    "454": {
      "retsub": true,
      "op": "retsub"
    },
    "455": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "458": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "460": {
      "op": "bz __puya_arc4_router___after_if_else@13",
      "stack_out": []
    },
    "463": {
      "op": "pushbytess 0xcc694eaa 0x6ecbb813 0x43f37dfa 0x5fcdfdee 0x23d8b7ce 0x74e6557e 0x1841a0d2 0x734dbecc // method \"create(address)void\", method \"submit(pay,string,byte[59],uint64,uint64)void\", method \"update(string,byte[59])void\", method \"drop()void\", method \"finalize()void\", method \"assign_voter(address,uint64)void\", method \"vote(address,uint64,uint64)string\", method \"scrutiny()void\""
    },
    "505": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(assign_voter(address,uint64)void)",
        "Method(create(address)void)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(scrutiny()void)",
        "Method(submit(pay,string,byte[59],uint64,uint64)void)",
        "Method(update(string,byte[59])void)",
        "Method(vote(address,uint64,uint64)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "Method(submit(pay,string,byte[59],uint64,uint64)void)",
        "Method(update(string,byte[59])void)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(assign_voter(address,uint64)void)",
        "Method(vote(address,uint64,uint64)string)",
        "Method(scrutiny()void)",
        "tmp%2#0"
      ]
    },
    "508": {
      "op": "match __puya_arc4_router___create_route@2 __puya_arc4_router___submit_route@3 __puya_arc4_router___update_route@4 __puya_arc4_router___drop_route@5 __puya_arc4_router___finalize_route@6 __puya_arc4_router___assign_voter_route@7 __puya_arc4_router___vote_route@8 __puya_arc4_router___scrutiny_route@9",
      "stack_out": []
    },
    "526": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "527": {
      "retsub": true,
      "op": "retsub"
    },
    "528": {
      "block": "__puya_arc4_router___create_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "530": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "531": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "532": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "534": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "535": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "536": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "539": {
      "callsub": "smart_contracts.proposal.contract.Proposal.create",
      "op": "callsub create",
      "stack_out": []
    },
    "542": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "543": {
      "retsub": true,
      "op": "retsub"
    },
    "544": {
      "block": "__puya_arc4_router___submit_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "546": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "547": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "548": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "550": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "551": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "553": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "1"
      ]
    },
    "554": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "555": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "556": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "558": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "559": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "560": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "561": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0"
      ]
    },
    "564": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "567": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "570": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "573": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit",
      "op": "callsub submit",
      "stack_out": []
    },
    "576": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "577": {
      "retsub": true,
      "op": "retsub"
    },
    "578": {
      "block": "__puya_arc4_router___update_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "580": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "581": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "582": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "584": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "585": {
      "op": "txna ApplicationArgs 1"
    },
    "588": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "591": {
      "callsub": "smart_contracts.proposal.contract.Proposal.update",
      "op": "callsub update",
      "stack_out": []
    },
    "594": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "595": {
      "retsub": true,
      "op": "retsub"
    },
    "596": {
      "block": "__puya_arc4_router___drop_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "598": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "599": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "600": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "602": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "603": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop",
      "op": "callsub drop"
    },
    "606": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "607": {
      "retsub": true,
      "op": "retsub"
    },
    "608": {
      "block": "__puya_arc4_router___finalize_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "610": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "611": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "612": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "614": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "615": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize",
      "op": "callsub finalize"
    },
    "618": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "619": {
      "retsub": true,
      "op": "retsub"
    },
    "620": {
      "block": "__puya_arc4_router___assign_voter_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "622": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "623": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "624": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "626": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "627": {
      "op": "txna ApplicationArgs 1"
    },
    "630": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "633": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "op": "callsub assign_voter",
      "stack_out": []
    },
    "636": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "637": {
      "retsub": true,
      "op": "retsub"
    },
    "638": {
      "block": "__puya_arc4_router___vote_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "640": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "641": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "642": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "644": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "645": {
      "op": "txna ApplicationArgs 1"
    },
    "648": {
      "op": "txna ApplicationArgs 2"
    },
    "651": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%41#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "654": {
      "callsub": "smart_contracts.proposal.contract.Proposal.vote",
      "op": "callsub vote",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "657": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "0x151f7c75"
      ]
    },
    "663": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%44#0"
      ]
    },
    "664": {
      "op": "concat",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "665": {
      "op": "log",
      "stack_out": []
    },
    "666": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "667": {
      "retsub": true,
      "op": "retsub"
    },
    "668": {
      "block": "__puya_arc4_router___scrutiny_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "670": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "671": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "672": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "674": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "675": {
      "callsub": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "op": "callsub scrutiny"
    },
    "678": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "679": {
      "retsub": true,
      "op": "retsub"
    },
    "680": {
      "block": "__puya_arc4_router___after_if_else@13",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "681": {
      "retsub": true,
      "op": "retsub"
    },
    "682": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.create",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "685": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "687": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "688": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "690": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ]
    },
    "692": {
      "op": "app_global_put",
      "stack_out": []
    },
    "693": {
      "op": "bytec 7 // 0x72656769737472795f6170705f6964"
    },
    "695": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ]
    },
    "697": {
      "op": "app_global_put",
      "stack_out": []
    },
    "698": {
      "retsub": true,
      "op": "retsub"
    },
    "699": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit",
      "params": {
        "payment#0": "uint64",
        "title#0": "bytes",
        "cid#0": "bytes",
        "funding_type#0": "bytes",
        "requested_amount#0": "bytes"
      },
      "block": "submit",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "702": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit_check_authorization",
      "op": "callsub submit_check_authorization"
    },
    "705": {
      "op": "frame_dig -4",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "707": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "710": {
      "op": "frame_dig -2",
      "defined_out": [
        "funding_type#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "funding_type#0 (copy)"
      ]
    },
    "712": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "713": {
      "op": "frame_dig -1",
      "defined_out": [
        "requested_amount#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "requested_amount#0 (copy)"
      ]
    },
    "715": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "716": {
      "op": "dig 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0 (copy)"
      ]
    },
    "718": {
      "op": "frame_dig -3",
      "defined_out": [
        "cid#0 (copy)",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "720": {
      "op": "dig 3",
      "defined_out": [
        "cid#0 (copy)",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0 (copy)",
        "cid#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "722": {
      "op": "dig 3",
      "defined_out": [
        "cid#0 (copy)",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0 (copy)",
        "cid#0 (copy)",
        "tmp%1#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "724": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit_input_validation",
      "op": "callsub submit_input_validation",
      "defined_out": [
        "cid#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "cid#0"
      ]
    },
    "727": {
      "op": "frame_bury -3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "729": {
      "op": "frame_dig -5",
      "defined_out": [
        "payment#0 (copy)",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "payment#0 (copy)"
      ]
    },
    "731": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "payment#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "733": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit_payment_validation",
      "op": "callsub submit_payment_validation",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "736": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x7469746c65"
      ]
    },
    "738": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x7469746c65",
        "tmp%0#0"
      ]
    },
    "740": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "741": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x636964"
      ]
    },
    "743": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "745": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "746": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "747": {
      "callsub": "smart_contracts.proposal.contract.Proposal.set_category",
      "op": "callsub set_category",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "750": {
      "op": "bytec 20 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x66756e64696e675f74797065"
      ]
    },
    "752": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "0x66756e64696e675f74797065",
        "tmp%1#0"
      ]
    },
    "754": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "755": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "757": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "0x7265717565737465645f616d6f756e74",
        "tmp%2#0 (copy)"
      ]
    },
    "759": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "760": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0"
      ]
    },
    "763": {
      "op": "bytec 5 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74",
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "765": {
      "op": "swap",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "new_state_value%3#0"
      ]
    },
    "766": {
      "op": "app_global_put",
      "stack_out": []
    },
    "767": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70"
    },
    "769": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "new_state_value%4#0"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "new_state_value%4#0"
      ]
    },
    "771": {
      "op": "app_global_put",
      "stack_out": []
    },
    "772": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "773": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x737461747573",
        "10"
      ],
      "stack_out": [
        "0x737461747573",
        "10"
      ]
    },
    "774": {
      "op": "app_global_put",
      "stack_out": []
    },
    "775": {
      "retsub": true,
      "op": "retsub"
    },
    "776": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit_check_authorization",
      "params": {},
      "block": "submit_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "779": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "782": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "783": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "784": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "785": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "786": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "787": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "788": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "789": {
      "retsub": true,
      "op": "retsub"
    },
    "790": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "params": {},
      "block": "is_proposer",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "793": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "795": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "796": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "798": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "799": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "800": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "801": {
      "retsub": true,
      "op": "retsub"
    },
    "802": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit_input_validation",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes",
        "funding_type#0": "uint64",
        "requested_amount#0": "uint64"
      },
      "block": "submit_input_validation",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "805": {
      "op": "frame_dig -4",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "807": {
      "op": "frame_dig -3",
      "defined_out": [
        "cid#0 (copy)",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "809": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0"
      ],
      "stack_out": [
        "cid#0"
      ]
    },
    "812": {
      "op": "frame_bury -3",
      "stack_out": []
    },
    "814": {
      "op": "frame_dig -2",
      "defined_out": [
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#0 (copy)"
      ]
    },
    "816": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#0 (copy)",
        "10"
      ]
    },
    "817": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "818": {
      "op": "bnz submit_input_validation_bool_true@4",
      "stack_out": []
    },
    "821": {
      "op": "frame_dig -2",
      "stack_out": [
        "funding_type#0 (copy)"
      ]
    },
    "823": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#0 (copy)",
        "20"
      ]
    },
    "824": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "825": {
      "op": "bz submit_input_validation_bool_false@5",
      "stack_out": []
    },
    "828": {
      "block": "submit_input_validation_bool_true@4",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "829": {
      "op": "b submit_input_validation_bool_merge@6"
    },
    "832": {
      "block": "submit_input_validation_bool_false@5",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "833": {
      "block": "submit_input_validation_bool_merge@6",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Wrong Funding Type",
      "op": "assert // Wrong Funding Type",
      "defined_out": [],
      "stack_out": []
    },
    "834": {
      "op": "pushbytes 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "856": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "error#0"
      ]
    },
    "859": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "error#0",
        "0x0000"
      ]
    },
    "860": {
      "op": "==",
      "defined_out": [
        "min_requested_amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "tmp%2#0"
      ]
    },
    "861": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "min_requested_amount#0"
      ]
    },
    "862": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "890": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_large#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0"
      ]
    },
    "893": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0",
        "0x0000"
      ]
    },
    "894": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "tmp%3#0"
      ]
    },
    "895": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0"
      ]
    },
    "896": {
      "op": "frame_dig -1",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#0 (copy)"
      ]
    },
    "898": {
      "op": "uncover 2",
      "stack_out": [
        "max_requested_amount_large#0",
        "requested_amount#0 (copy)",
        "min_requested_amount#0"
      ]
    },
    "900": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_large#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "max_requested_amount_large#0",
        "tmp%4#0"
      ]
    },
    "901": {
      "error": "Requested amount is less than the minimum requested amount",
      "op": "assert // Requested amount is less than the minimum requested amount",
      "stack_out": [
        "max_requested_amount_large#0"
      ]
    },
    "902": {
      "op": "frame_dig -1",
      "stack_out": [
        "max_requested_amount_large#0",
        "requested_amount#0 (copy)"
      ]
    },
    "904": {
      "op": ">=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "905": {
      "error": "Requested amount is more than the maximum requested amount",
      "op": "assert // Requested amount is more than the maximum requested amount",
      "stack_out": []
    },
    "906": {
      "op": "frame_dig -3",
      "defined_out": [
        "cid#0 (copy)"
      ],
      "stack_out": [
        "cid#0 (copy)"
      ]
    },
    "908": {
      "retsub": true,
      "op": "retsub"
    },
    "909": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "updateable_input_validation",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "912": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "914": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "915": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "123"
      ]
    },
    "917": {
      "op": "<=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "918": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "919": {
      "op": "frame_dig -2",
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "921": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "\"\""
      ]
    },
    "922": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "923": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "924": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)"
      ],
      "stack_out": [
        "cid#0 (copy)"
      ]
    },
    "926": {
      "retsub": true,
      "op": "retsub"
    },
    "927": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_uint_from_registry_config",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "930": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "931": {
      "op": "bytec 7 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "933": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "934": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "935": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "937": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "938": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0",
        "error#0"
      ]
    },
    "939": {
      "op": "swap",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "exists#0"
      ]
    },
    "940": {
      "op": "bnz get_uint_from_registry_config_after_if_else@2",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "943": {
      "op": "pushbytes 0x00124552523a4d697373696e6720436f6e666967",
      "stack_out": [
        "value#0",
        "error#0",
        "error#0"
      ]
    },
    "965": {
      "op": "frame_bury 1",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "967": {
      "block": "get_uint_from_registry_config_after_if_else@2",
      "stack_in": [
        "value#0",
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0"
      ]
    },
    "969": {
      "op": "frame_dig 1",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "971": {
      "op": "uncover 3"
    },
    "973": {
      "op": "uncover 3"
    },
    "975": {
      "retsub": true,
      "op": "retsub"
    },
    "976": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit_payment_validation",
      "params": {
        "payment#0": "uint64",
        "requested_amount#0": "uint64"
      },
      "block": "submit_payment_validation",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "979": {
      "op": "frame_dig -1",
      "defined_out": [
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "requested_amount#0 (copy)"
      ]
    },
    "981": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "expected_lock_amount#0"
      ],
      "stack_out": [
        "expected_lock_amount#0"
      ]
    },
    "984": {
      "op": "frame_dig -2",
      "defined_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "986": {
      "op": "gtxns Sender",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%0#0"
      ]
    },
    "988": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expected_lock_amount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%0#0",
        "0"
      ]
    },
    "989": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "expected_lock_amount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%0#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "991": {
      "op": "app_global_get_ex",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "992": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "993": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%1#0"
      ]
    },
    "994": {
      "error": "Wrong Sender",
      "op": "assert // Wrong Sender",
      "stack_out": [
        "expected_lock_amount#0"
      ]
    },
    "995": {
      "op": "frame_dig -2",
      "stack_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "997": {
      "op": "gtxns Receiver",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%2#0"
      ]
    },
    "999": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1001": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%4#0"
      ]
    },
    "1002": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "expected_lock_amount#0"
      ]
    },
    "1003": {
      "op": "frame_dig -2",
      "stack_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1005": {
      "op": "gtxns Amount",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%5#0"
      ]
    },
    "1007": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1008": {
      "error": "Locked amount is incorrect",
      "op": "assert // Locked amount is incorrect",
      "stack_out": []
    },
    "1009": {
      "retsub": true,
      "op": "retsub"
    },
    "1010": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "get_expected_locked_amount",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1013": {
      "op": "pushbytes 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1038": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0"
      ]
    },
    "1041": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1042": {
      "op": "==",
      "defined_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ]
    },
    "1043": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "proposal_commitment_bps#0"
      ]
    },
    "1044": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1046": {
      "op": "swap",
      "stack_out": [
        "requested_amount#0 (copy)",
        "proposal_commitment_bps#0"
      ]
    },
    "1047": {
      "callsub": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "op": "callsub relative_to_absolute_amount",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1050": {
      "retsub": true,
      "op": "retsub"
    },
    "1051": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "params": {
        "amount#0": "uint64",
        "fraction_in_bps#0": "uint64"
      },
      "block": "relative_to_absolute_amount",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1054": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "1056": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "fraction_in_bps#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)",
        "fraction_in_bps#0 (copy)"
      ]
    },
    "1058": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1059": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "10000"
      ]
    },
    "1062": {
      "op": "/",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1063": {
      "retsub": true,
      "op": "retsub"
    },
    "1064": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.set_category",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "set_category",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1067": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1095": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1098": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1099": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_small#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "tmp%0#0"
      ]
    },
    "1100": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_small#0"
      ]
    },
    "1101": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1130": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "max_requested_amount_medium#0",
        "error#0"
      ]
    },
    "1133": {
      "op": "swap",
      "stack_out": [
        "max_requested_amount_small#0",
        "error#0",
        "max_requested_amount_medium#0"
      ]
    },
    "1134": {
      "op": "cover 2",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1136": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1137": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "tmp%1#0"
      ]
    },
    "1138": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0"
      ]
    },
    "1139": {
      "op": "frame_dig -1",
      "defined_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1141": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%2#0"
      ]
    },
    "1142": {
      "op": "bz set_category_else_body@2",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1145": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279"
      ]
    },
    "1146": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x63617465676f7279",
        "10",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279",
        "10"
      ]
    },
    "1147": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1148": {
      "op": "b set_category_after_if_else@6"
    },
    "1151": {
      "block": "set_category_else_body@2",
      "stack_in": [
        "max_requested_amount_medium#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1153": {
      "op": "frame_dig 0",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "requested_amount#0 (copy)",
        "max_requested_amount_medium#0"
      ]
    },
    "1155": {
      "op": "<=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%3#0"
      ]
    },
    "1156": {
      "op": "bz set_category_else_body@4",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1159": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279"
      ]
    },
    "1160": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x63617465676f7279",
        "20",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279",
        "20"
      ]
    },
    "1161": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1162": {
      "op": "b set_category_after_if_else@6"
    },
    "1165": {
      "block": "set_category_else_body@4",
      "stack_in": [
        "max_requested_amount_medium#0"
      ],
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279"
      ]
    },
    "1166": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "0x63617465676f7279",
        "33"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279",
        "33"
      ]
    },
    "1168": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1169": {
      "block": "set_category_after_if_else@6",
      "stack_in": [
        "max_requested_amount_medium#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1170": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.update",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "update",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1173": {
      "callsub": "smart_contracts.proposal.contract.Proposal.update_check_authorization",
      "op": "callsub update_check_authorization"
    },
    "1176": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1178": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1181": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1182": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "1184": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "cid#0"
      ]
    },
    "1187": {
      "op": "frame_bury -1",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1189": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x7469746c65"
      ]
    },
    "1191": {
      "op": "swap",
      "stack_out": [
        "0x7469746c65",
        "tmp%0#0"
      ]
    },
    "1192": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1193": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1195": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "1197": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1198": {
      "retsub": true,
      "op": "retsub"
    },
    "1199": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.update_check_authorization",
      "params": {},
      "block": "update_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1202": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1205": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1206": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1207": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1208": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1209": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1210": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1211": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1212": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1213": {
      "retsub": true,
      "op": "retsub"
    },
    "1214": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop",
      "params": {},
      "block": "drop",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1217": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop_check_authorization",
      "op": "callsub drop_check_authorization"
    },
    "1220": {
      "op": "itxn_begin"
    },
    "1221": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1222": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "1224": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1225": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1226": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "1227": {
      "op": "bytec 5 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1229": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1230": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "1231": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1233": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1235": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1236": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1238": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1239": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1241": {
      "op": "itxn_submit"
    },
    "1242": {
      "op": "bytec 12 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "1244": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "1245": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1246": {
      "op": "bytec 13 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1248": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "1249": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1250": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279"
      ],
      "stack_out": [
        "0x63617465676f7279"
      ]
    },
    "1251": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x63617465676f7279",
        "0"
      ]
    },
    "1252": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1253": {
      "op": "bytec 20 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "1255": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "1256": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1257": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1259": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "1260": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1261": {
      "op": "bytec 5 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1263": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "1264": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1265": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "1268": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1269": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1270": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "1271": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1272": {
      "retsub": true,
      "op": "retsub"
    },
    "1273": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop_check_authorization",
      "params": {},
      "block": "drop_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1276": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1279": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1281": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1282": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1283": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1284": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1285": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1286": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1287": {
      "retsub": true,
      "op": "retsub"
    },
    "1288": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize",
      "params": {},
      "block": "finalize",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1291": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize_check_authorization",
      "op": "callsub finalize_check_authorization"
    },
    "1294": {
      "callsub": "smart_contracts.proposal.contract.Proposal.verify_and_set_committee",
      "op": "callsub verify_and_set_committee"
    },
    "1297": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1298": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x737461747573",
        "20"
      ],
      "stack_out": [
        "0x737461747573",
        "20"
      ]
    },
    "1299": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1300": {
      "op": "bytec 24 // 0x66696e616c697a6174696f6e5f74696d657374616d70"
    },
    "1302": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "new_state_value%0#0"
      ]
    },
    "1304": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1305": {
      "op": "pushbytes 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565"
      ]
    },
    "1319": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "proposal_fee#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "error#0"
      ]
    },
    "1322": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "proposal_fee#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "error#0",
        "0x0000"
      ]
    },
    "1323": {
      "op": "==",
      "defined_out": [
        "proposal_fee#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "tmp%0#0"
      ]
    },
    "1324": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "proposal_fee#0"
      ]
    },
    "1325": {
      "op": "pushbytes 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "proposal_fee#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "1350": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "error#0"
      ]
    },
    "1353": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1354": {
      "op": "==",
      "defined_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%1#0"
      ]
    },
    "1355": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1356": {
      "op": "itxn_begin"
    },
    "1357": {
      "op": "bytec 25 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1359": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1362": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1363": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1364": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "32"
      ]
    },
    "1366": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%3#0"
      ]
    },
    "1367": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1368": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1370": {
      "callsub": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "op": "callsub relative_to_absolute_amount",
      "defined_out": [
        "awst_tmp%0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "1373": {
      "op": "itxn_field Amount",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1375": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1377": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1378": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1380": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1381": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1383": {
      "op": "itxn_submit"
    },
    "1384": {
      "retsub": true,
      "op": "retsub"
    },
    "1385": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize_check_authorization",
      "params": {},
      "block": "finalize_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1388": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1391": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1392": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1393": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1394": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1395": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1396": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1397": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1398": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1399": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1401": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1402": {
      "op": "bytec 14 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1404": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1405": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1406": {
      "op": "-",
      "defined_out": [
        "discussion_duration#0"
      ],
      "stack_out": [
        "discussion_duration#0"
      ]
    },
    "1407": {
      "op": "intc_0 // 0",
      "stack_out": [
        "discussion_duration#0",
        "0"
      ]
    },
    "1408": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0",
        "0x63617465676f7279",
        "discussion_duration#0"
      ],
      "stack_out": [
        "discussion_duration#0",
        "0",
        "0x63617465676f7279"
      ]
    },
    "1409": {
      "op": "app_global_get_ex",
      "defined_out": [
        "discussion_duration#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "discussion_duration#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1410": {
      "error": "check self.category exists",
      "op": "assert // check self.category exists",
      "stack_out": [
        "discussion_duration#0",
        "maybe_value%2#0"
      ]
    },
    "1411": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_discussion_duration",
      "op": "callsub get_discussion_duration",
      "defined_out": [
        "discussion_duration#0",
        "minimum_discussion_duration#0"
      ],
      "stack_out": [
        "discussion_duration#0",
        "minimum_discussion_duration#0"
      ]
    },
    "1414": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1415": {
      "error": "Too early",
      "op": "assert // Too early",
      "stack_out": []
    },
    "1416": {
      "retsub": true,
      "op": "retsub"
    },
    "1417": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_discussion_duration",
      "params": {
        "category#0": "uint64"
      },
      "block": "get_discussion_duration",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1420": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1421": {
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)"
      ]
    },
    "1423": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)",
        "10"
      ]
    },
    "1424": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "1425": {
      "op": "bz get_discussion_duration_else_body@2",
      "stack_out": [
        "error#0"
      ]
    },
    "1428": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "error#0",
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1455": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1458": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "1460": {
      "op": "b get_discussion_duration_after_if_else@6"
    },
    "1463": {
      "block": "get_discussion_duration_else_body@2",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)"
      ]
    },
    "1465": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)",
        "20"
      ]
    },
    "1466": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "1467": {
      "op": "bz get_discussion_duration_else_body@4",
      "stack_out": [
        "error#0"
      ]
    },
    "1470": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "error#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1498": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1501": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "1503": {
      "op": "b get_discussion_duration_after_if_else@6"
    },
    "1506": {
      "block": "get_discussion_duration_else_body@4",
      "stack_in": [
        "error#0"
      ],
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1533": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1536": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "1538": {
      "block": "get_discussion_duration_after_if_else@6",
      "stack_in": [
        "error#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1540": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "1541": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "1542": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "1543": {
      "op": "swap"
    },
    "1544": {
      "retsub": true,
      "op": "retsub"
    },
    "1545": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.verify_and_set_committee",
      "params": {},
      "block": "verify_and_set_committee",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1548": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1550": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1553": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1554": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)",
        "0x"
      ]
    },
    "1555": {
      "op": "!=",
      "defined_out": [
        "committee_id#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "tmp%0#0"
      ]
    },
    "1556": {
      "error": "Empty Committee ID",
      "op": "assert // Empty Committee ID",
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1557": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1559": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ]
    },
    "1562": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "error#0",
        "0x0000"
      ]
    },
    "1563": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "tmp%1#0"
      ]
    },
    "1564": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1565": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ]
    },
    "1566": {
      "error": "Wrong Committee Members",
      "op": "assert // Wrong Committee Members",
      "stack_out": [
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1567": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_id#0",
        "committee_members#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1569": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0"
      ]
    },
    "1572": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0",
        "0x0000"
      ]
    },
    "1573": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "tmp%3#0"
      ]
    },
    "1574": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1575": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ]
    },
    "1576": {
      "error": "Wrong Committee Votes",
      "op": "assert // Wrong Committee Votes",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1577": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1579": {
      "op": "uncover 3",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1581": {
      "op": "app_global_put",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1582": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1584": {
      "op": "uncover 2",
      "stack_out": [
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0"
      ]
    },
    "1586": {
      "op": "app_global_put",
      "stack_out": [
        "committee_votes#0"
      ]
    },
    "1587": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "stack_out": [
        "committee_votes#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1589": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0"
      ]
    },
    "1590": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1591": {
      "retsub": true,
      "op": "retsub"
    },
    "1592": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_bytes_from_registry_config",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1595": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1596": {
      "op": "bytec 7 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1598": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1599": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1600": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1602": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1603": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "value#0"
      ]
    },
    "1604": {
      "retsub": true,
      "op": "retsub"
    },
    "1605": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "params": {
        "voter#0": "bytes",
        "voting_power#0": "bytes"
      },
      "block": "assign_voter",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1608": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter_check_authorization",
      "op": "callsub assign_voter_check_authorization"
    },
    "1611": {
      "op": "frame_dig -1",
      "defined_out": [
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "voting_power#0 (copy)"
      ]
    },
    "1613": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1614": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%0#0",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "voter#0 (copy)"
      ]
    },
    "1616": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "voter#0 (copy)",
        "tmp%0#0 (copy)"
      ]
    },
    "1618": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter_input_validation",
      "op": "callsub assign_voter_input_validation",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1621": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "voting_power#0 (copy)"
      ]
    },
    "1623": {
      "op": "bytec 23 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#0",
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "voting_power#0 (copy)",
        "0x00"
      ]
    },
    "1625": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1626": {
      "op": "bytec 18 // \"V\"",
      "defined_out": [
        "\"V\"",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "\"V\""
      ]
    },
    "1628": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1630": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0"
      ]
    },
    "1631": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1632": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1633": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1634": {
      "op": "bytec 16 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"voters_count\""
      ]
    },
    "1636": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1637": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1638": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1639": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "new_state_value%0#0"
      ]
    },
    "1640": {
      "op": "bytec 16 // \"voters_count\"",
      "stack_out": [
        "tmp%0#0",
        "new_state_value%0#0",
        "\"voters_count\""
      ]
    },
    "1642": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "\"voters_count\"",
        "new_state_value%0#0"
      ]
    },
    "1643": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1644": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1645": {
      "op": "bytec 17 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"assigned_votes\""
      ]
    },
    "1647": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1648": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "1649": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "1650": {
      "op": "bytec 17 // \"assigned_votes\"",
      "stack_out": [
        "new_state_value%1#0",
        "\"assigned_votes\""
      ]
    },
    "1652": {
      "op": "swap",
      "stack_out": [
        "\"assigned_votes\"",
        "new_state_value%1#0"
      ]
    },
    "1653": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1654": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1655": {
      "op": "bytec 16 // \"voters_count\"",
      "stack_out": [
        "0",
        "\"voters_count\""
      ]
    },
    "1657": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1658": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1659": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "0"
      ]
    },
    "1660": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1662": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1663": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "1664": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1665": {
      "op": "bz assign_voter_after_if_else@2",
      "stack_out": []
    },
    "1668": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1669": {
      "op": "bytec 17 // \"assigned_votes\"",
      "stack_out": [
        "0",
        "\"assigned_votes\""
      ]
    },
    "1671": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1672": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "1673": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%4#0",
        "0"
      ]
    },
    "1674": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1676": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1677": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "1678": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1679": {
      "error": "Voting Power Mismatch",
      "op": "assert // Voting Power Mismatch",
      "stack_out": []
    },
    "1680": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1681": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "0x737461747573",
        "25"
      ],
      "stack_out": [
        "0x737461747573",
        "25"
      ]
    },
    "1683": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1684": {
      "op": "bytec 19 // 0x766f74655f6f70656e696e675f74696d657374616d70"
    },
    "1686": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "new_state_value%2#0"
      ]
    },
    "1688": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1689": {
      "block": "assign_voter_after_if_else@2",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1690": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter_check_authorization",
      "params": {},
      "block": "assign_voter_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1693": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "op": "callsub is_committee_publisher",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1696": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1697": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1698": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1699": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1700": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1701": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "20"
      ]
    },
    "1702": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1703": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1704": {
      "retsub": true,
      "op": "retsub"
    },
    "1705": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "params": {},
      "block": "is_committee_publisher",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1708": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1710": {
      "op": "bytec 25 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1712": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1715": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1716": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1717": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "32"
      ]
    },
    "1719": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1720": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1721": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1722": {
      "retsub": true,
      "op": "retsub"
    },
    "1723": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter_input_validation",
      "params": {
        "voter#0": "bytes",
        "voting_power#0": "uint64"
      },
      "block": "assign_voter_input_validation",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1726": {
      "op": "bytec 18 // \"V\"",
      "defined_out": [
        "\"V\""
      ],
      "stack_out": [
        "\"V\""
      ]
    },
    "1728": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"V\"",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1730": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1731": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1732": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1734": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1735": {
      "error": "Voter Already Assigned",
      "op": "assert // Voter Already Assigned",
      "stack_out": []
    },
    "1736": {
      "op": "frame_dig -1",
      "defined_out": [
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "voting_power#0 (copy)"
      ]
    },
    "1738": {
      "error": "Invalid Voting Power",
      "op": "assert // Invalid Voting Power",
      "stack_out": []
    },
    "1739": {
      "retsub": true,
      "op": "retsub"
    },
    "1740": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.vote",
      "params": {
        "voter#0": "bytes",
        "approvals#0": "bytes",
        "rejections#0": "bytes"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1743": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1744": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1745": {
      "callsub": "smart_contracts.proposal.contract.Proposal.vote_check_authorization",
      "op": "callsub vote_check_authorization",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0"
      ]
    },
    "1748": {
      "op": "dup",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0"
      ]
    },
    "1749": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "1750": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%0#0"
      ]
    },
    "1751": {
      "op": "bz vote_after_if_else@2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0"
      ]
    },
    "1754": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0"
      ]
    },
    "1756": {
      "op": "frame_bury 0"
    },
    "1758": {
      "retsub": true,
      "op": "retsub"
    },
    "1759": {
      "block": "vote_after_if_else@2",
      "stack_in": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "approvals#0 (copy)"
      ]
    },
    "1761": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0"
      ]
    },
    "1762": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1763": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0"
      ]
    },
    "1765": {
      "op": "frame_dig -1",
      "defined_out": [
        "rejections#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "rejections#0 (copy)"
      ]
    },
    "1767": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1768": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "1769": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1771": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%2#0",
        "voter#0 (copy)"
      ]
    },
    "1773": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "voter#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1775": {
      "callsub": "smart_contracts.proposal.contract.Proposal.vote_input_validation",
      "op": "callsub vote_input_validation",
      "defined_out": [
        "error#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0"
      ]
    },
    "1778": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0",
        "error#0"
      ]
    },
    "1779": {
      "op": "frame_bury 2",
      "defined_out": [
        "error#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0"
      ]
    },
    "1781": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "1782": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%3#0"
      ]
    },
    "1783": {
      "op": "bz vote_after_if_else@4",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0"
      ]
    },
    "1786": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "error#0"
      ]
    },
    "1788": {
      "op": "frame_bury 0"
    },
    "1790": {
      "retsub": true,
      "op": "retsub"
    },
    "1791": {
      "block": "vote_after_if_else@4",
      "stack_in": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0"
      ],
      "op": "bytec 18 // \"V\"",
      "defined_out": [
        "\"V\""
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "\"V\""
      ]
    },
    "1793": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"V\"",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1795": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0"
      ]
    },
    "1796": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1797": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "tmp%4#0",
        "voter_box#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "voter_box#0",
        "maybe_exists%0#0"
      ]
    },
    "1798": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "voter_box#0"
      ]
    },
    "1799": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1802": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "1803": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "0x80"
      ]
    },
    "1806": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%4#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1807": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "tmp%4#0"
      ]
    },
    "1809": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "tmp%4#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1810": {
      "op": "box_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0"
      ]
    },
    "1811": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "0"
      ]
    },
    "1812": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "1814": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1815": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "1816": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "1817": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "new_state_value%0#0"
      ]
    },
    "1818": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "new_state_value%0#0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "1820": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0",
        "0x766f7465645f6d656d62657273",
        "new_state_value%0#0"
      ]
    },
    "1821": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%5#0"
      ]
    },
    "1822": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%8#0"
      ]
    },
    "1823": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%8#0",
        "tmp%1#0"
      ]
    },
    "1825": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%8#0",
        "tmp%1#0 (copy)",
        "tmp%1#0 (copy)"
      ]
    },
    "1826": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%8#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1828": {
      "op": "-",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%10#0"
      ]
    },
    "1829": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0"
      ]
    },
    "1831": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "1832": {
      "op": "cover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1834": {
      "op": "-",
      "defined_out": [
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "tmp%1#0",
        "nulls#0"
      ]
    },
    "1835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "tmp%1#0",
        "nulls#0",
        "0"
      ]
    },
    "1836": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "tmp%1#0",
        "nulls#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "1838": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "tmp%1#0",
        "nulls#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1839": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "tmp%1#0",
        "nulls#0",
        "maybe_value%2#0"
      ]
    },
    "1840": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ]
    },
    "1842": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "new_state_value%1#0"
      ]
    },
    "1843": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "new_state_value%1#0",
        "0x617070726f76616c73"
      ]
    },
    "1845": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "0x617070726f76616c73",
        "new_state_value%1#0"
      ]
    },
    "1846": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0"
      ]
    },
    "1847": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "0"
      ]
    },
    "1848": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "1850": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1851": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "tmp%2#0",
        "nulls#0",
        "maybe_value%3#0"
      ]
    },
    "1852": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "maybe_value%3#0",
        "tmp%2#0"
      ]
    },
    "1854": {
      "op": "+",
      "defined_out": [
        "new_state_value%2#0",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "new_state_value%2#0"
      ]
    },
    "1855": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "new_state_value%2#0",
        "0x72656a656374696f6e73"
      ]
    },
    "1857": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "0x72656a656374696f6e73",
        "new_state_value%2#0"
      ]
    },
    "1858": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0"
      ]
    },
    "1859": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "0"
      ]
    },
    "1860": {
      "op": "bytec 15 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "1862": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "nulls#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1863": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "nulls#0",
        "maybe_value%4#0"
      ]
    },
    "1864": {
      "op": "+",
      "defined_out": [
        "new_state_value%3#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "new_state_value%3#0"
      ]
    },
    "1865": {
      "op": "bytec 15 // 0x6e756c6c73",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "new_state_value%3#0",
        "0x6e756c6c73"
      ]
    },
    "1867": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "0x6e756c6c73",
        "new_state_value%3#0"
      ]
    },
    "1868": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0"
      ]
    },
    "1869": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "error#0",
        "0x0000"
      ]
    },
    "1870": {
      "op": "frame_bury 0"
    },
    "1872": {
      "retsub": true,
      "op": "retsub"
    },
    "1873": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.vote_check_authorization",
      "params": {},
      "block": "vote_check_authorization",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1876": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1877": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "is_voting_open#0"
      ]
    },
    "1878": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%0#0"
      ]
    },
    "1881": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0",
        "is_voting_open#0"
      ]
    },
    "1882": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "0"
      ]
    },
    "1883": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "0",
        "0x737461747573"
      ]
    },
    "1884": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1885": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "maybe_value%0#0"
      ]
    },
    "1886": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "maybe_value%0#0",
        "25"
      ]
    },
    "1888": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%1#0"
      ]
    },
    "1889": {
      "op": "bz vote_check_authorization_after_if_else@2",
      "stack_out": [
        "error#0",
        "is_voting_open#0"
      ]
    },
    "1892": {
      "op": "pushbytes 0x00194552523a57726f6e672050726f706f73616c20537461747573",
      "defined_out": [
        "0x00194552523a57726f6e672050726f706f73616c20537461747573"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "0x00194552523a57726f6e672050726f706f73616c20537461747573"
      ]
    },
    "1921": {
      "op": "frame_bury 0"
    },
    "1923": {
      "retsub": true,
      "op": "retsub"
    },
    "1924": {
      "block": "vote_check_authorization_after_if_else@2",
      "stack_in": [
        "error#0",
        "is_voting_open#0"
      ],
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "1927": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "is_voting_open#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "1928": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "error#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "1930": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "error#0",
        "is_voting_open#0"
      ]
    },
    "1932": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "1934": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "error#0",
        "0x0000"
      ]
    },
    "1935": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%2#0"
      ]
    },
    "1936": {
      "op": "bz vote_check_authorization_after_if_else@4",
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "1939": {
      "retsub": true,
      "op": "retsub"
    },
    "1940": {
      "block": "vote_check_authorization_after_if_else@4",
      "stack_in": [
        "error#0",
        "is_voting_open#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "is_voting_open#0"
      ]
    },
    "1942": {
      "op": "bnz vote_check_authorization_after_if_else@6",
      "stack_out": [
        "error#0",
        "is_voting_open#0"
      ]
    },
    "1945": {
      "op": "pushbytes 0x00194552523a566f74696e6720506572696f642045787069726564",
      "defined_out": [
        "0x00194552523a566f74696e6720506572696f642045787069726564",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "0x00194552523a566f74696e6720506572696f642045787069726564"
      ]
    },
    "1974": {
      "op": "frame_bury 0"
    },
    "1976": {
      "retsub": true,
      "op": "retsub"
    },
    "1977": {
      "block": "vote_check_authorization_after_if_else@6",
      "stack_in": [
        "error#0",
        "is_voting_open#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "is_voting_open#0",
        "0x0000"
      ]
    },
    "1978": {
      "op": "frame_bury 0"
    },
    "1980": {
      "retsub": true,
      "op": "retsub"
    },
    "1981": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "params": {},
      "block": "is_registry_call",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1984": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1986": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1987": {
      "op": "bytec 7 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1989": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1990": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1991": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1992": {
      "retsub": true,
      "op": "retsub"
    },
    "1993": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "params": {},
      "block": "is_voting_open",
      "stack_in": [],
      "op": "proto 0 2"
    },
    "1996": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1998": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1999": {
      "op": "bytec 19 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "2001": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2002": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2003": {
      "op": "-",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0"
      ]
    },
    "2004": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voting_duration#0",
        "0"
      ]
    },
    "2005": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0",
        "0x63617465676f7279",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "0",
        "0x63617465676f7279"
      ]
    },
    "2006": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2007": {
      "error": "check self.category exists",
      "op": "assert // check self.category exists",
      "stack_out": [
        "voting_duration#0",
        "maybe_value%1#0"
      ]
    },
    "2008": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_voting_duration",
      "op": "callsub get_voting_duration",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "maximum_voting_duration#0",
        "error#0"
      ]
    },
    "2011": {
      "op": "dup",
      "stack_out": [
        "voting_duration#0",
        "maximum_voting_duration#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2012": {
      "op": "uncover 2",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "error#0",
        "maximum_voting_duration#0"
      ]
    },
    "2014": {
      "op": "swap",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "error#0"
      ]
    },
    "2015": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "error#0",
        "0x0000"
      ]
    },
    "2016": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "tmp%1#0"
      ]
    },
    "2017": {
      "op": "bz is_voting_open_after_if_else@2",
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0"
      ]
    },
    "2020": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "0",
        "error#0"
      ]
    },
    "2021": {
      "op": "frame_bury 0"
    },
    "2023": {
      "retsub": true,
      "op": "retsub"
    },
    "2024": {
      "block": "is_voting_open_after_if_else@2",
      "stack_in": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ]
    },
    "2026": {
      "op": "frame_dig 2",
      "defined_out": [
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maximum_voting_duration#0"
      ]
    },
    "2028": {
      "op": "<=",
      "defined_out": [
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "tmp%2#0"
      ]
    },
    "2029": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "voting_duration#0",
        "error#0",
        "maximum_voting_duration#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "2030": {
      "op": "frame_bury 1"
    },
    "2032": {
      "op": "frame_bury 0"
    },
    "2034": {
      "retsub": true,
      "op": "retsub"
    },
    "2035": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_voting_duration",
      "params": {
        "category#0": "uint64"
      },
      "block": "get_voting_duration",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "2038": {
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)"
      ]
    },
    "2040": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)",
        "10"
      ]
    },
    "2041": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2042": {
      "op": "bz get_voting_duration_else_body@2",
      "stack_out": []
    },
    "2045": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f736d616c6c"
      ]
    },
    "2068": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2071": {
      "retsub": true,
      "op": "retsub"
    },
    "2072": {
      "block": "get_voting_duration_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)"
      ]
    },
    "2074": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)",
        "20"
      ]
    },
    "2075": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2076": {
      "op": "bz get_voting_duration_else_body@4",
      "stack_out": []
    },
    "2079": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6d656469756d"
      ]
    },
    "2103": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2106": {
      "retsub": true,
      "op": "retsub"
    },
    "2107": {
      "block": "get_voting_duration_else_body@4",
      "stack_in": [],
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "2130": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2133": {
      "retsub": true,
      "op": "retsub"
    },
    "2134": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.vote_input_validation",
      "params": {
        "voter#0": "bytes",
        "approvals#0": "uint64",
        "rejections#0": "uint64"
      },
      "block": "vote_input_validation",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voter_box#0"
      ]
    },
    "2138": {
      "op": "bytec 18 // \"V\"",
      "defined_out": [
        "\"V\""
      ],
      "stack_out": [
        "voter_box#0",
        "\"V\""
      ]
    },
    "2140": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"V\"",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "voter_box#0",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "2142": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0"
      ]
    },
    "2143": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2144": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2145": {
      "op": "bury 1",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2147": {
      "op": "bnz vote_input_validation_after_if_else@2",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0"
      ]
    },
    "2150": {
      "op": "pushbytes 0x00134552523a566f746572206e6f7420666f756e64",
      "defined_out": [
        "0x00134552523a566f746572206e6f7420666f756e64",
        "tmp%0#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "0x00134552523a566f746572206e6f7420666f756e64"
      ]
    },
    "2173": {
      "op": "frame_bury 0"
    },
    "2175": {
      "retsub": true,
      "op": "retsub"
    },
    "2176": {
      "block": "vote_input_validation_after_if_else@2",
      "stack_in": [
        "voter_box#0",
        "tmp%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2178": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2179": {
      "op": "swap",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2180": {
      "op": "dup",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "voter_box#0",
        "voter_box#0 (copy)"
      ]
    },
    "2181": {
      "op": "cover 2",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "voter_box#0",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2183": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2185": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "voter_box#0"
      ]
    },
    "2186": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "voter_box#0",
        "64"
      ]
    },
    "2188": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "is_true%0#0"
      ]
    },
    "2189": {
      "op": "bytec 23 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2192": {
      "op": "uncover 2",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2194": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "encoded_bool%0#0"
      ]
    },
    "2195": {
      "op": "bytec 23 // 0x00",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "2197": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2198": {
      "op": "bz vote_input_validation_after_if_else@4",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0"
      ]
    },
    "2201": {
      "op": "pushbytes 0x00174552523a566f74657220616c726561647920766f746564",
      "defined_out": [
        "0x00174552523a566f74657220616c726561647920766f746564",
        "tmp%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "0x00174552523a566f74657220616c726561647920766f746564"
      ]
    },
    "2228": {
      "op": "frame_bury 0"
    },
    "2230": {
      "retsub": true,
      "op": "retsub"
    },
    "2231": {
      "block": "vote_input_validation_after_if_else@4",
      "stack_in": [
        "voter_box#0",
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "voter_box#0"
      ]
    },
    "2233": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2236": {
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)",
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0",
        "approvals#0 (copy)"
      ]
    },
    "2238": {
      "op": "frame_dig -1",
      "defined_out": [
        "approvals#0 (copy)",
        "reinterpret_biguint%0#0",
        "rejections#0 (copy)",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0",
        "approvals#0 (copy)",
        "rejections#0 (copy)"
      ]
    },
    "2240": {
      "op": "+",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%3#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0",
        "tmp%3#0"
      ]
    },
    "2241": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%4#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ]
    },
    "2242": {
      "op": "b<",
      "defined_out": [
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "2243": {
      "op": "bz vote_input_validation_after_if_else@6",
      "stack_out": [
        "voter_box#0",
        "tmp%0#0"
      ]
    },
    "2246": {
      "op": "pushbytes 0x00124552523a566f746573206578636565646564",
      "defined_out": [
        "0x00124552523a566f746573206578636565646564",
        "voter_box#0"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "0x00124552523a566f746573206578636565646564"
      ]
    },
    "2268": {
      "op": "frame_bury 0"
    },
    "2270": {
      "retsub": true,
      "op": "retsub"
    },
    "2271": {
      "block": "vote_input_validation_after_if_else@6",
      "stack_in": [
        "voter_box#0",
        "tmp%0#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "voter_box#0",
        "tmp%0#0",
        "0x0000"
      ]
    },
    "2272": {
      "op": "frame_bury 0"
    },
    "2274": {
      "retsub": true,
      "op": "retsub"
    },
    "2275": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "params": {},
      "block": "scrutiny",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2278": {
      "callsub": "smart_contracts.proposal.contract.Proposal.scrutiny_check_authorization",
      "op": "callsub scrutiny_check_authorization"
    },
    "2281": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2282": {
      "op": "bytec_3 // 0x63617465676f7279",
      "defined_out": [
        "0",
        "0x63617465676f7279"
      ],
      "stack_out": [
        "0",
        "0x63617465676f7279"
      ]
    },
    "2283": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2284": {
      "error": "check self.category exists",
      "op": "assert // check self.category exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2285": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_quorum",
      "op": "callsub get_quorum",
      "defined_out": [
        "quorum_bps#0"
      ],
      "stack_out": [
        "quorum_bps#0"
      ]
    },
    "2288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "quorum_bps#0",
        "0"
      ]
    },
    "2289": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "quorum_bps#0"
      ],
      "stack_out": [
        "quorum_bps#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2291": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "quorum_bps#0"
      ],
      "stack_out": [
        "quorum_bps#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2292": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "quorum_bps#0",
        "maybe_value%1#0"
      ]
    },
    "2293": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "quorum_bps#0"
      ]
    },
    "2294": {
      "callsub": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "op": "callsub relative_to_absolute_amount",
      "defined_out": [
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "minimum_voters_required#0"
      ]
    },
    "2297": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minimum_voters_required#0",
        "0"
      ]
    },
    "2298": {
      "op": "bytec_3 // 0x63617465676f7279",
      "stack_out": [
        "minimum_voters_required#0",
        "0",
        "0x63617465676f7279"
      ]
    },
    "2299": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2300": {
      "error": "check self.category exists",
      "op": "assert // check self.category exists",
      "stack_out": [
        "minimum_voters_required#0",
        "maybe_value%2#0"
      ]
    },
    "2301": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_weighted_quorum",
      "op": "callsub get_weighted_quorum",
      "defined_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ]
    },
    "2304": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "0"
      ]
    },
    "2305": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2307": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2308": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%3#0"
      ]
    },
    "2309": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2310": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "maybe_value%3#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%3#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2312": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2313": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "2314": {
      "op": "+",
      "defined_out": [
        "minimum_voters_required#0",
        "tmp%0#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "tmp%0#0"
      ]
    },
    "2315": {
      "op": "intc_0 // 0",
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2316": {
      "op": "bytec 15 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "minimum_voters_required#0",
        "tmp%0#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "tmp%0#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2318": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "minimum_voters_required#0",
        "tmp%0#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2319": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "tmp%0#0",
        "maybe_value%5#0"
      ]
    },
    "2320": {
      "op": "+",
      "defined_out": [
        "minimum_voters_required#0",
        "total_votes#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "total_votes#0"
      ]
    },
    "2321": {
      "op": "cover 2",
      "defined_out": [
        "minimum_voters_required#0",
        "total_votes#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0"
      ]
    },
    "2323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "0"
      ]
    },
    "2324": {
      "op": "bytec 8 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "minimum_voters_required#0",
        "total_votes#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2326": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "minimum_voters_required#0",
        "total_votes#0",
        "weighted_quorum_bps#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2327": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "weighted_quorum_bps#0",
        "maybe_value%6#0"
      ]
    },
    "2328": {
      "op": "swap",
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "maybe_value%6#0",
        "weighted_quorum_bps#0"
      ]
    },
    "2329": {
      "callsub": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "op": "callsub relative_to_absolute_amount",
      "defined_out": [
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0"
      ]
    },
    "2332": {
      "op": "swap",
      "defined_out": [
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "minimum_voters_required#0"
      ]
    },
    "2333": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "minimum_voters_required#0",
        "0"
      ]
    },
    "2334": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "minimum_voters_required#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2336": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "minimum_voters_required#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2337": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "minimum_voters_required#0",
        "maybe_value%7#0"
      ]
    },
    "2338": {
      "op": "<=",
      "defined_out": [
        "minimum_votes_required#0",
        "tmp%1#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "tmp%1#0"
      ]
    },
    "2339": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2342": {
      "op": "frame_dig 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2344": {
      "op": "frame_dig 1",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2346": {
      "op": ">=",
      "defined_out": [
        "minimum_votes_required#0",
        "tmp%2#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "tmp%2#0"
      ]
    },
    "2347": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2350": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0"
      ]
    },
    "2351": {
      "op": "bytec 10 // 0x617070726f76616c73",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2353": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2354": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%8#0"
      ]
    },
    "2355": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%8#0",
        "0"
      ]
    },
    "2356": {
      "op": "bytec 11 // 0x72656a656374696f6e73",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%8#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2358": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%8#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2359": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%8#0",
        "maybe_value%9#0"
      ]
    },
    "2360": {
      "op": ">",
      "defined_out": [
        "minimum_votes_required#0",
        "tmp%3#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "tmp%3#0"
      ]
    },
    "2361": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2364": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0x737461747573"
      ]
    },
    "2365": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "0x737461747573",
        "30",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0x737461747573",
        "30"
      ]
    },
    "2367": {
      "op": "app_global_put",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2368": {
      "op": "b scrutiny_after_if_else@6"
    },
    "2371": {
      "block": "scrutiny_else_body@4",
      "stack_in": [
        "total_votes#0",
        "minimum_votes_required#0"
      ],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0x737461747573"
      ]
    },
    "2372": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "0x737461747573",
        "40"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0x737461747573",
        "40"
      ]
    },
    "2374": {
      "op": "app_global_put",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2375": {
      "op": "itxn_begin"
    },
    "2376": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0"
      ]
    },
    "2377": {
      "op": "bytec 4 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "2379": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2380": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0"
      ]
    },
    "2381": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0",
        "0"
      ]
    },
    "2382": {
      "op": "bytec 5 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "2384": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%10#0",
        "maybe_value%11#0"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "2385": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0",
        "maybe_value%11#0"
      ]
    },
    "2386": {
      "op": "itxn_field Amount",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "maybe_value%10#0"
      ]
    },
    "2388": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2390": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "pay"
      ]
    },
    "2391": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0"
      ]
    },
    "2394": {
      "op": "itxn_field Fee",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2396": {
      "op": "itxn_submit"
    },
    "2397": {
      "op": "bytec 5 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "2399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0",
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "2400": {
      "op": "app_global_put",
      "stack_out": [
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2401": {
      "block": "scrutiny_after_if_else@6",
      "stack_in": [
        "total_votes#0",
        "minimum_votes_required#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2402": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.scrutiny_check_authorization",
      "params": {},
      "block": "scrutiny_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2405": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2406": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "2407": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2408": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2409": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "25"
      ]
    },
    "2411": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2412": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "2413": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2416": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "is_voting_open#0",
        "error#0",
        "0x0000"
      ]
    },
    "2417": {
      "op": "==",
      "defined_out": [
        "is_voting_open#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "is_voting_open#0",
        "tmp%1#0"
      ]
    },
    "2418": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "is_voting_open#0"
      ]
    },
    "2419": {
      "op": "bz scrutiny_check_authorization_bool_true@2",
      "stack_out": []
    },
    "2422": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2423": {
      "op": "bytec 9 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273"
      ],
      "stack_out": [
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2425": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2426": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2427": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "2428": {
      "op": "bytec 6 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2430": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2431": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "2432": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2433": {
      "op": "bz scrutiny_check_authorization_bool_false@3",
      "stack_out": []
    },
    "2436": {
      "block": "scrutiny_check_authorization_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "2437": {
      "op": "b scrutiny_check_authorization_bool_merge@4"
    },
    "2440": {
      "block": "scrutiny_check_authorization_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "2441": {
      "block": "scrutiny_check_authorization_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Voting Ongoing",
      "op": "assert // Voting Ongoing",
      "defined_out": [],
      "stack_out": []
    },
    "2442": {
      "retsub": true,
      "op": "retsub"
    },
    "2443": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_quorum",
      "params": {
        "category#0": "uint64"
      },
      "block": "get_quorum",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2446": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2447": {
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)"
      ]
    },
    "2449": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)",
        "10"
      ]
    },
    "2450": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2451": {
      "op": "bz get_quorum_else_body@2",
      "stack_out": [
        "error#0"
      ]
    },
    "2454": {
      "op": "pushbytes 0x71756f72756d5f736d616c6c",
      "defined_out": [
        "0x71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "error#0",
        "0x71756f72756d5f736d616c6c"
      ]
    },
    "2468": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2471": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2473": {
      "op": "b get_quorum_after_if_else@6"
    },
    "2476": {
      "block": "get_quorum_else_body@2",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)"
      ]
    },
    "2478": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)",
        "20"
      ]
    },
    "2479": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "2480": {
      "op": "bz get_quorum_else_body@4",
      "stack_out": [
        "error#0"
      ]
    },
    "2483": {
      "op": "pushbytes 0x71756f72756d5f6d656469756d",
      "defined_out": [
        "0x71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "error#0",
        "0x71756f72756d5f6d656469756d"
      ]
    },
    "2498": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2501": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2503": {
      "op": "b get_quorum_after_if_else@6"
    },
    "2506": {
      "block": "get_quorum_else_body@4",
      "stack_in": [
        "error#0"
      ],
      "op": "pushbytes 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "2520": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2523": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2525": {
      "block": "get_quorum_after_if_else@6",
      "stack_in": [
        "error#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2527": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2528": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2529": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2530": {
      "op": "swap"
    },
    "2531": {
      "retsub": true,
      "op": "retsub"
    },
    "2532": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_weighted_quorum",
      "params": {
        "category#0": "uint64"
      },
      "block": "get_weighted_quorum",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2535": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2536": {
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)"
      ]
    },
    "2538": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)",
        "10"
      ]
    },
    "2539": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2540": {
      "op": "bz get_weighted_quorum_else_body@2",
      "stack_out": [
        "error#0"
      ]
    },
    "2543": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f736d616c6c",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ],
      "stack_out": [
        "error#0",
        "0x77656967687465645f71756f72756d5f736d616c6c"
      ]
    },
    "2566": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2569": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2571": {
      "op": "b get_weighted_quorum_after_if_else@6"
    },
    "2574": {
      "block": "get_weighted_quorum_else_body@2",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)"
      ]
    },
    "2576": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "category#0 (copy)",
        "20"
      ]
    },
    "2577": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "2578": {
      "op": "bz get_weighted_quorum_else_body@4",
      "stack_out": [
        "error#0"
      ]
    },
    "2581": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6d656469756d",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ],
      "stack_out": [
        "error#0",
        "0x77656967687465645f71756f72756d5f6d656469756d"
      ]
    },
    "2605": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2608": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2610": {
      "op": "b get_weighted_quorum_after_if_else@6"
    },
    "2613": {
      "block": "get_weighted_quorum_else_body@4",
      "stack_in": [
        "error#0"
      ],
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "2636": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2639": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2641": {
      "block": "get_weighted_quorum_after_if_else@6",
      "stack_in": [
        "error#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "2643": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2644": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2645": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "value#0"
      ]
    },
    "2646": {
      "op": "swap"
    },
    "2647": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
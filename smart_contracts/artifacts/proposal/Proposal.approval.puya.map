{
  "version": 3,
  "sources": [
    "../../proposal/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CY;;AAA6B;;AAA7B;AADJ;AAGO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAIQ;;AADJ;;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADe;AADvB;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;AADuB;AAD/B;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAQA;;AAAoB;AAApB;AACA;;AAAsB;AAAtB;AA3GR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA61BK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAfA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA9BA;;AAAA;AAAA;AAAA;;AAAA;AAhzBL;;;AAgzBK;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AA7BA;;AAAA;AAAA;AAAA;;AAAA;AA1vBL;;;;AAAA;AA0vBK;;;AAAA;;AA3CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA/CA;;AAAA;AAAA;AAAA;;AAAA;AAhqBL;;;AAAA;;;AAAA;;;AAgqBK;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AA5nBL;;;AAAA;;;AA4nBK;;;AAAA;;AAxCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AApiBL;;;AAAA;;;AAoiBK;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AA/eL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AA+eK;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjeL;;;AAieK;;;AAAA;;AApXL;;;;;AAE0B;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAEd;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AA4HW;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AA3HR;;AAAS;AAAT;AAAX;;;AACmB;AAAP;;AAAA;;AAAA;;AAAA;AAEG;;AAAA;;AAAA;AAA4C;AAAnD;;AAAA;;AAAA;AA2HK;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AAlIsB;;;AAuIzB;;;;;;;;;;;;;;;;;;;;;;;AADG;;;;;;;AAtIsB;;;AAsNzC;;;AAEe;;AAAA;AAAsB;;AAAtB;AAAP;AACO;;AAAS;AAAT;AAAP;;;;AAoDR;;;AAGY;;;;;;;;;;;;;;;;;;;;;;;;;AAD6B;;;AAGjB;AAAT;AAAP;AAPO;;AAAA;AAA4B;;AAA5B;AAQP;AAoCR;;;AAKY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGR;AAAR;AACG;;;AACS;;;;;;;;;;;;;;;;;;;;;;AAAR;;AACJ;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;AAGY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGhB;AACA;AAMR;;;AAEe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAQR;;;AAEe;;AAEC;;AADJ;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AAAP;AAMR;;;AAEe;;AAAgC;AAAA;;AAAA;AAAA;AAAhC;AAAP;AAER;;;AAEQ;;;;;;;;;AAAA;;;AAGQ;;;AAHR;;AAUR;;;AAQY;;AADJ;AAIA;;AAAA;;AAAA;AACA;;AAA6B;;AAA7B;;AAER;;;;AA1Je;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;AA8LI;;AAAA;;;AAAA;;AAAmB;;AAAA;AAAA;AAAqB;;AAAA;AAAA;AAnL5C;;AAAA;;AAAA;;;AAAA;;AAGoB;AAAhB;AAAA;;;AACG;;AAAgB;AAAhB;AADH;;;;AADJ;AAMI;;;;;;;;;;;;;;;;;;;;;;AAD0B;;;AAGd;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAEO;;AAAA;AAAA;;AAAA;AAAP;AAEI;AAAA;;AAAA;AADJ;AAyBA;AAAuB;;;AAEhB;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AAEI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAA;AAAP;AAsIA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAlII;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADgC;;;AAGpB;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADiC;;;AAAA;AAAA;;AAGrB;AAAT;AAAP;AAEG;AAAX;;;AACY;;AAA8B;AAA9B;AA0HJ;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAC2B;;;AAA3B;AAAA;AAAA;AAGA;;AAA2B;;AAA3B;AACA;AAAoB;AAApB;;AAhIK;;AAAA;;AAAA;AAAb;;;AACY;;AAA8B;AAA9B;;;;AAEA;;AAA8B;;AAA9B;;;;;;;;AA+HZ;;;AApNe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAoOiC;;AAAA;;;AAAjC;AAAA;;AAAA;;;AAAA;;AAEA;;AAAA;AAAA;AACA;;AAAA;;AAAA;;AAER;;;AAvPe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAkQa;AAAA;;AAAA;AAAA;AAvGM;AAAA;AAAA;AAAA;AAAnB;;;AA2GA;;AAAmB;AAAnB;AACA;;AAAoC;AAApC;AACA;;AAA8B;AAA9B;AACA;;AAAmB;;AAAnB;AACA;;AAA0B;AAA1B;AACA;;AAA8B;AAA9B;AACA;AAA2B;AAA3B;AACA;;AAA2B;AAA3B;AACA;AAAoB;AAApB;;AAER;;;;AA7Re;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAEsB;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAElB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAhGW;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AAuFO;;AAAA;AAAP;AA/BwC;;AAApC;;;AAEG;AAA2C;AAA3C;AAAP;AAGI;;AADuB;;;AAGX;AAAT;AAAP;AACA;AAAA;AAGI;;AADqB;;;AAGT;AAAT;AAAP;AACA;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAoTA;AAAoB;AAApB;AACA;;AAA6B;;AAA7B;AAGI;;;;;;;;;;;;;;AADkB;;;AAGN;AAAT;AAAP;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;AADwB;;;AAGZ;AAAT;AAAP;AAKY;;AADJ;;;AADK;AAAA;AAAA;;AAAA;AAAA;AAzPN;;AAAA;AAA4B;;AAA5B;AAwPP;;;;AAnZK;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAuZ3B;;;AA5ae;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AA8biD;;AAAA;AAxb7B;;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;;AAAA;AAyb4B;;AAElB;;AAFkB;AAA5B;AAKA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEG;AAAA;;AAAA;AAAA;AAAqB;AAAA;;AAAA;AAAA;AAArB;AAAX;;;AAEgB;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AADJ;AAGA;AAAoB;;AAApB;AACA;;AAA0B;;AAA1B;;AAEZ;;;;;;;;;AA7fe;;;AAAP;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AAghBR;;AAAS;AAAT;AAAX;;;AACY;AAGc;;AAAA;AAAA;;AAAkB;;AAAA;AAAA;;AArgBpB;;AAAb;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;AAsgBR;;AAAS;AAAT;AAAX;;;AACY;AAEQ;;AAAA;AAAA;AAAA;AAEF;;;AADkB;AAElB;;;AAFkB;AAA5B;;AAAA;AAAA;AAKA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AAEQ;AAAA;;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAA;;AAAQ;AAER;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEO;AAAP;;AAAA;AArhBY;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACT;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+fH;;;AA7foB;;AAAA;;;AAAzB;;AAAA;;AAAA;AAAA;AAAA;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;AA4fH;;;AA1fD;;;AA0fC;;;AAjhBgB;;;AAAA;AAAA;;AAAA;;AAAA;;AACZ;AAAT;AAAX;;;AAGW;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwgBH;;;AAtgBD;;;AAsgBC;;;AA0BhB;;;;;;;AA5gBe;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AAEwB;;;AACR;AAAT;AAAP;AAGI;;;AACG;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AADA;AADH;;;;AADJ;AAqhB6B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAjed;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AAudI;AAAA;;AAAA;AAAA;AApWG;AAA4B;;AAA5B;AAAA;;AAyWwC;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAvdhC;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;AAWZ;;AAAS;AAAT;AAAP;AA4cc;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAA+C;AAAA;;AAAA;AAAA;AAA/C;AAAd;;AAEI;AAAA;;AAAA;AAAA;AA5WG;AAA4B;;AAA5B;AAAA;;AAgXH;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AACI;;AAAA;;AAAA;AADJ;;;AAII;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AAJJ;;;AAMA;AAAoB;;AAApB;;AAEA;AAAoB;;AAApB;AAEa;AAAA;;AAAA;AAAA;AAtRE;AAAA;AAAA;AAAA;AAAnB;;;AAwRI;AAA2B;AAA3B;AACA;;AAAgC;;AAAhC;;AAveC;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAtBd;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;AADW;;;AAAA;;;;;AAKX;;;;;;;;;;;;;;AADW;;;AAAA;;;;;;;;;AAqf3B;;;AArTe;;AACiC;;;;;;;;;;;;;;;AAApC;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AA3UP;AACO;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAP;AA8oBR;;AAAA;;;AACY;AAAoB;;AAApB;AAGsB;AAAA;;AAAA;AAAA;AAET;;AAAA;AAhTE;AAAA;AAAA;AAAA;AAAnB;;;AAmTI;AAA2B;AAA3B;AACA;;AAAgC;;AAAhC;;AAEA;AAAoB;;AAApB;;AAEZ;;;;AAxpBe;;;AAAP;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AAgqBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAEJ;AAAoB;;AAApB;AAIa;AAAA;;AAAA;AAAA;AAzUM;AAAA;AAAA;AAAA;AAAnB;;;AA4UA;AAA2B;AAA3B;AACA;;AAAgC;;AAAhC;AAEO;AAAP;AAAA;AA3qBO;;;AA6pBC;;;AAgBhB;;;;;;;AAzqBe;;;AAAP;AAGI;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAA;;;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AADH;;;AAEG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAFH;;;;AAFJ;AAQI;;;;;;;;;;;;;;;;;;;;AADuB;;;AAAA;AAAA;;AAGX;AAAT;AAAP;AAEI;AAAA;;AAAA;AAAA;AAAA;;;AACI;;AACD;AAAA;;AAAA;AAAA;AAAA;;AAAA;AADC;AADJ;;;;AADJ;AA8qBR;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAC+B;;AAAhB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAf;;;AACgB;;AAAA;;;;;;;;;;;AAGL;;AAAA;;AAAA;AAAX;;;AACkC;AAAA;;AAAA;AAAA;AAET;;AAAA;AACF;;AAAA;;AAAA;AAFX;;;AAIA;AAAoB;;AAApB;;;;;;;;;;AAEZ;;;;AAnrBe;;;AAAP;AACG;AAAA;AAAA;AAAA;AAAqB;;AAArB;AAAX;;;AACmB;;;;AA2rBR;;AAAS;AAAT;AAAX;;;AACY;;AAAA;AAAA;AAEG;AAAP;AAAA;AA5rBO;;;AAwrBC;;;AAMhB;;;AASkC;AAAA;;AAAA;AAAA;AACM;AAAA;;AAAA;AAAA;AAAZ;AACE;AAAA;;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;AACsB;AAAA;;AAAA;AAAA;AAAZ;AACc;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;;AAAA;AAAA;AAAZ;AACM;AAAA;AAAA;AAAA;AAAZ;AACsB;AAAA;;AAAA;AAAA;AAAZ;AACX;AAAA;;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAA;AAAZ;AACgB;AAAA;;AAAA;AAAA;AAAZ;AACS;AAAA;AAAA;AAAA;AAAZ;AACD;AAAA;;AAAA;AAAA;AACiB;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AACU;AAAA;;AAAA;AAAA;AAAZ;AACQ;AAAA;;AAAA;AAAA;AAAZ;AACa;AAAA;;AAAA;AAAA;AAAZ;AACO;AAAA;;AAAA;AAAA;AAAZ;AACyB;AAAA;;AAAA;AAAA;AAAZ;AArBhB;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 10 20 10000"
    },
    "9": {
      "op": "bytecblock 0x0000 0x737461747573 0x 0x6c6f636b65645f616d6f756e74 0x66756e64696e675f63617465676f7279 0x70726f706f736572 0x72656769737472795f6170705f6964 0x636f6d6d69747465655f6d656d62657273 0x636f6f6c5f646f776e5f73746172745f7473 0x636f6d6d69747465655f766f746573 0x766f7465645f6d656d62657273 0x617070726f76616c73 0x72656a656374696f6e73 0x7469746c65 0x636964 0x7375626d697373696f6e5f74696d657374616d70 0x00 0x6e756c6c73 0x766f74655f6f70656e696e675f74696d657374616d70 0x666f637573 0x66756e64696e675f74797065 0x7265717565737465645f616d6f756e74 0x636f6d6d69747465655f6964 \"voters_count\" \"assigned_votes\" 0x151f7c75 0x66696e616c697a6174696f6e5f74696d657374616d70 \"V\" 0x00194552523a57726f6e672050726f706f73616c20537461747573 0x636f6d6d69747465655f7075626c6973686572"
    },
    "383": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "385": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "388": {
      "op": "txn GlobalNumByteSlice"
    },
    "390": {
      "op": "pushint 5 // 5"
    },
    "392": {
      "op": "=="
    },
    "393": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation"
    },
    "394": {
      "op": "txn GlobalNumUint"
    },
    "396": {
      "op": "pushint 18 // 18"
    },
    "398": {
      "op": "=="
    },
    "399": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation"
    },
    "400": {
      "op": "txn LocalNumByteSlice"
    },
    "402": {
      "op": "!"
    },
    "403": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation"
    },
    "404": {
      "op": "txn LocalNumUint"
    },
    "406": {
      "op": "!"
    },
    "407": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation"
    },
    "408": {
      "op": "bytec 5 // 0x70726f706f736572"
    },
    "410": {
      "op": "global ZeroAddress"
    },
    "412": {
      "op": "app_global_put"
    },
    "413": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964"
    },
    "415": {
      "op": "intc_0 // 0"
    },
    "416": {
      "op": "app_global_put"
    },
    "417": {
      "op": "bytec 13 // 0x7469746c65"
    },
    "419": {
      "op": "bytec_2 // \"\""
    },
    "420": {
      "op": "app_global_put"
    },
    "421": {
      "op": "bytec 14 // 0x636964"
    },
    "423": {
      "op": "bytec_2 // 0x"
    },
    "424": {
      "op": "app_global_put"
    },
    "425": {
      "op": "bytec 15 // 0x7375626d697373696f6e5f74696d657374616d70"
    },
    "427": {
      "op": "intc_0 // 0"
    },
    "428": {
      "op": "app_global_put"
    },
    "429": {
      "op": "bytec 26 // 0x66696e616c697a6174696f6e5f74696d657374616d70"
    },
    "431": {
      "op": "intc_0 // 0"
    },
    "432": {
      "op": "app_global_put"
    },
    "433": {
      "op": "bytec 18 // 0x766f74655f6f70656e696e675f74696d657374616d70"
    },
    "435": {
      "op": "intc_0 // 0"
    },
    "436": {
      "op": "app_global_put"
    },
    "437": {
      "op": "bytec_1 // 0x737461747573"
    },
    "438": {
      "op": "intc_0 // 0"
    },
    "439": {
      "op": "app_global_put"
    },
    "440": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279"
    },
    "442": {
      "op": "intc_0 // 0"
    },
    "443": {
      "op": "app_global_put"
    },
    "444": {
      "op": "bytec 19 // 0x666f637573"
    },
    "446": {
      "op": "bytec 16 // 0x00"
    },
    "448": {
      "op": "app_global_put"
    },
    "449": {
      "op": "bytec 20 // 0x66756e64696e675f74797065"
    },
    "451": {
      "op": "intc_0 // 0"
    },
    "452": {
      "op": "app_global_put"
    },
    "453": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74"
    },
    "455": {
      "op": "intc_0 // 0"
    },
    "456": {
      "op": "app_global_put"
    },
    "457": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74"
    },
    "458": {
      "op": "intc_0 // 0"
    },
    "459": {
      "op": "app_global_put"
    },
    "460": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964"
    },
    "462": {
      "op": "bytec_2 // 0x"
    },
    "463": {
      "op": "app_global_put"
    },
    "464": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273"
    },
    "466": {
      "op": "intc_0 // 0"
    },
    "467": {
      "op": "app_global_put"
    },
    "468": {
      "op": "bytec 9 // 0x636f6d6d69747465655f766f746573"
    },
    "470": {
      "op": "intc_0 // 0"
    },
    "471": {
      "op": "app_global_put"
    },
    "472": {
      "op": "bytec 10 // 0x766f7465645f6d656d62657273"
    },
    "474": {
      "op": "intc_0 // 0"
    },
    "475": {
      "op": "app_global_put"
    },
    "476": {
      "op": "bytec 11 // 0x617070726f76616c73"
    },
    "478": {
      "op": "intc_0 // 0"
    },
    "479": {
      "op": "app_global_put"
    },
    "480": {
      "op": "bytec 12 // 0x72656a656374696f6e73"
    },
    "482": {
      "op": "intc_0 // 0"
    },
    "483": {
      "op": "app_global_put"
    },
    "484": {
      "op": "bytec 17 // 0x6e756c6c73"
    },
    "486": {
      "op": "intc_0 // 0"
    },
    "487": {
      "op": "app_global_put"
    },
    "488": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473"
    },
    "490": {
      "op": "intc_0 // 0"
    },
    "491": {
      "op": "app_global_put"
    },
    "492": {
      "op": "bytec 23 // \"voters_count\""
    },
    "494": {
      "op": "intc_0 // 0"
    },
    "495": {
      "op": "app_global_put"
    },
    "496": {
      "op": "bytec 24 // \"assigned_votes\""
    },
    "498": {
      "op": "intc_0 // 0"
    },
    "499": {
      "op": "app_global_put"
    },
    "500": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "502": {
      "op": "bz main_after_if_else@18",
      "stack_out": []
    },
    "505": {
      "op": "pushbytess 0xcc694eaa 0x0f277635 0x43f37dfa 0x5fcdfdee 0x23d8b7ce 0x74e6557e 0x1841a0d2 0x734dbecc 0x212d9f07 0x8a5e4c80 0x461b5751 0x1feb95da 0xe0ad5df2 // method \"create(address)void\", method \"submit(pay,string,byte[59],uint64,uint64,uint8)void\", method \"update(string,byte[59])void\", method \"drop()void\", method \"finalize()void\", method \"assign_voter(address,uint64)void\", method \"vote(address,uint64,uint64)string\", method \"scrutiny()void\", method \"review(bool)void\", method \"fund()string\", method \"decommission(address[])void\", method \"delete()string\", method \"get_state()(address,uint64,string,byte[59],uint64,uint64,uint64,uint64,uint64,uint8,uint64,uint64,uint64,byte[32],uint64,uint64,uint64,uint64,uint64,uint64,uint64)\""
    },
    "572": {
      "op": "txna ApplicationArgs 0"
    },
    "575": {
      "op": "match main_create_route@5 main_submit_route@6 main_update_route@7 main_drop_route@8 main_finalize_route@9 main_assign_voter_route@10 main_vote_route@11 main_scrutiny_route@12 main_review_route@13 main_fund_route@14 main_decommission_route@15 main_delete_route@16 main_get_state_route@17"
    },
    "603": {
      "block": "main_after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "604": {
      "op": "return"
    },
    "605": {
      "block": "main_get_state_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "607": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "608": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "609": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "611": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "612": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "615": {
      "op": "bytec 25 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "0x151f7c75"
      ]
    },
    "617": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%78#0"
      ]
    },
    "618": {
      "op": "concat",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "619": {
      "op": "log",
      "stack_out": []
    },
    "620": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "621": {
      "op": "return"
    },
    "622": {
      "block": "main_delete_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "624": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "DeleteApplication"
      ]
    },
    "626": {
      "op": "==",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "627": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "628": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "630": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "631": {
      "callsub": "smart_contracts.proposal.contract.Proposal.delete",
      "op": "callsub delete",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "634": {
      "op": "bytec 25 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0",
        "0x151f7c75"
      ]
    },
    "636": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%72#0"
      ]
    },
    "637": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "638": {
      "op": "log",
      "stack_out": []
    },
    "639": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "640": {
      "op": "return"
    },
    "641": {
      "block": "main_decommission_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "643": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "644": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "645": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "647": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "648": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "651": {
      "callsub": "smart_contracts.proposal.contract.Proposal.decommission",
      "op": "callsub decommission",
      "stack_out": []
    },
    "654": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "655": {
      "op": "return"
    },
    "656": {
      "block": "main_fund_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "658": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "659": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "660": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "662": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "663": {
      "callsub": "smart_contracts.proposal.contract.Proposal.fund",
      "op": "callsub fund",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "666": {
      "op": "bytec 25 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "0x151f7c75"
      ]
    },
    "668": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%61#0"
      ]
    },
    "669": {
      "op": "concat",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "670": {
      "op": "log",
      "stack_out": []
    },
    "671": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "672": {
      "op": "return"
    },
    "673": {
      "block": "main_review_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "675": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "676": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "677": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "679": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "680": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "683": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "0"
      ]
    },
    "684": {
      "op": "getbit",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "685": {
      "callsub": "smart_contracts.proposal.contract.Proposal.review",
      "op": "callsub review",
      "stack_out": []
    },
    "688": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "689": {
      "op": "return"
    },
    "690": {
      "block": "main_scrutiny_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "692": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "693": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "694": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "696": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "697": {
      "callsub": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "op": "callsub scrutiny"
    },
    "700": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "701": {
      "op": "return"
    },
    "702": {
      "block": "main_vote_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "704": {
      "op": "!",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "705": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "706": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "708": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "709": {
      "op": "txna ApplicationArgs 1"
    },
    "712": {
      "op": "txna ApplicationArgs 2"
    },
    "715": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%42#0",
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "tmp%43#0",
        "tmp%44#0"
      ]
    },
    "718": {
      "callsub": "smart_contracts.proposal.contract.Proposal.vote",
      "op": "callsub vote",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "721": {
      "op": "bytec 25 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "0x151f7c75"
      ]
    },
    "723": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%45#0"
      ]
    },
    "724": {
      "op": "concat",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "725": {
      "op": "log",
      "stack_out": []
    },
    "726": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "727": {
      "op": "return"
    },
    "728": {
      "block": "main_assign_voter_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "730": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "731": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "732": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "734": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "735": {
      "op": "txna ApplicationArgs 1"
    },
    "738": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "741": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "op": "callsub assign_voter",
      "stack_out": []
    },
    "744": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "745": {
      "op": "return"
    },
    "746": {
      "block": "main_finalize_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "748": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "749": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "750": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "752": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "753": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize",
      "op": "callsub finalize"
    },
    "756": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "757": {
      "op": "return"
    },
    "758": {
      "block": "main_drop_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "760": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "761": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "762": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "764": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "765": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop",
      "op": "callsub drop"
    },
    "768": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "769": {
      "op": "return"
    },
    "770": {
      "block": "main_update_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "772": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "773": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "774": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "776": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "777": {
      "op": "txna ApplicationArgs 1"
    },
    "780": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "783": {
      "callsub": "smart_contracts.proposal.contract.Proposal.update",
      "op": "callsub update",
      "stack_out": []
    },
    "786": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "787": {
      "op": "return"
    },
    "788": {
      "block": "main_submit_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "790": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "791": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "792": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "794": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "795": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "797": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "1"
      ]
    },
    "798": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "799": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "800": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "802": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "803": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "804": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "805": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0"
      ]
    },
    "808": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "811": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "814": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "817": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "820": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit",
      "op": "callsub submit",
      "stack_out": []
    },
    "823": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "824": {
      "op": "return"
    },
    "825": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "827": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "828": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "829": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "831": {
      "op": "!",
      "defined_out": [
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "832": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "833": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "836": {
      "callsub": "smart_contracts.proposal.contract.Proposal.create",
      "op": "callsub create",
      "stack_out": []
    },
    "839": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "840": {
      "op": "return"
    },
    "841": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "params": {},
      "block": "is_voting_open",
      "stack_in": [],
      "op": "proto 0 2"
    },
    "844": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "845": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0"
      ]
    },
    "846": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0"
      ]
    },
    "848": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "0"
      ]
    },
    "849": {
      "op": "bytec 18 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "851": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "852": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "853": {
      "op": "-",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0"
      ]
    },
    "854": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "0"
      ]
    },
    "855": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "857": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "maybe_exists%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "858": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maybe_exists%1#0",
        "category#0"
      ]
    },
    "859": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "maybe_exists%1#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "860": {
      "op": "uncover 2",
      "defined_out": [
        "category#0",
        "maybe_exists%1#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "maybe_exists%1#0"
      ]
    },
    "862": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "863": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "10"
      ]
    },
    "864": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%0#1",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%0#1"
      ]
    },
    "865": {
      "op": "bz is_voting_open_else_body@5",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "868": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f736d616c6c"
    },
    "891": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "894": {
      "op": "frame_bury 0"
    },
    "896": {
      "op": "frame_bury 1"
    },
    "898": {
      "block": "is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "error#0"
      ]
    },
    "900": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "error#0",
        "0x0000"
      ]
    },
    "901": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "902": {
      "op": "bz is_voting_open_after_if_else@2",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "905": {
      "op": "intc_0 // 0"
    },
    "906": {
      "op": "frame_dig 0"
    },
    "908": {
      "op": "frame_bury 1"
    },
    "910": {
      "op": "frame_bury 0"
    },
    "912": {
      "retsub": true,
      "op": "retsub"
    },
    "913": {
      "block": "is_voting_open_after_if_else@2",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "voting_duration#0"
      ]
    },
    "915": {
      "op": "frame_dig 1",
      "defined_out": [
        "maximum_voting_duration#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "voting_duration#0",
        "maximum_voting_duration#0"
      ]
    },
    "917": {
      "op": "<=",
      "defined_out": [
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%2#0"
      ]
    },
    "918": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "maximum_voting_duration#0",
        "tmp%2#0",
        "voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%2#0",
        "0x0000"
      ]
    },
    "919": {
      "op": "frame_bury 1"
    },
    "921": {
      "op": "frame_bury 0"
    },
    "923": {
      "retsub": true,
      "op": "retsub"
    },
    "924": {
      "block": "is_voting_open_else_body@5",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "926": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "category#0",
        "20"
      ]
    },
    "927": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%3#0"
      ]
    },
    "928": {
      "op": "bz is_voting_open_else_body@7",
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "931": {
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6d656469756d"
    },
    "955": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "958": {
      "op": "frame_bury 0"
    },
    "960": {
      "op": "frame_bury 1"
    },
    "962": {
      "op": "b is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8"
    },
    "965": {
      "block": "is_voting_open_else_body@7",
      "stack_in": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ],
      "op": "pushbytes 0x766f74696e675f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "0x766f74696e675f6475726174696f6e5f6c61726765"
      ]
    },
    "988": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "tmp%6#0",
        "error#0"
      ]
    },
    "991": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0",
        "maximum_voting_duration#0"
      ]
    },
    "993": {
      "op": "frame_bury 1",
      "defined_out": [
        "error#0",
        "maximum_voting_duration#0"
      ],
      "stack_out": [
        "error#0",
        "maximum_voting_duration#0",
        "voting_duration#0",
        "category#0"
      ]
    },
    "995": {
      "op": "b is_voting_open_after_inlined_smart_contracts.proposal.contract.Proposal.get_voting_duration@8"
    },
    "998": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "updateable_input_validation",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1001": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1003": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1004": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "123"
      ]
    },
    "1006": {
      "op": "<=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1007": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "1008": {
      "op": "frame_dig -2",
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1010": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "\"\""
      ]
    },
    "1011": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1012": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "1013": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)"
      ],
      "stack_out": [
        "cid#0 (copy)"
      ]
    },
    "1015": {
      "retsub": true,
      "op": "retsub"
    },
    "1016": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "get_expected_locked_amount",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1019": {
      "op": "pushbytes 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "1044": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0"
      ]
    },
    "1047": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "proposal_commitment_bps#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1048": {
      "op": "==",
      "defined_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "tmp%0#0"
      ]
    },
    "1049": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "proposal_commitment_bps#0"
      ]
    },
    "1050": {
      "op": "frame_dig -1",
      "defined_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "proposal_commitment_bps#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1052": {
      "op": "*",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1053": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "10000"
      ]
    },
    "1055": {
      "op": "/",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1056": {
      "retsub": true,
      "op": "retsub"
    },
    "1057": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_uint_from_registry_config",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "1060": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1061": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1063": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1064": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1065": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1067": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1068": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0",
        "error#0"
      ]
    },
    "1069": {
      "op": "swap",
      "defined_out": [
        "error#0",
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "exists#0"
      ]
    },
    "1070": {
      "op": "bnz get_uint_from_registry_config_after_if_else@2",
      "stack_out": [
        "value#0",
        "error#0"
      ]
    },
    "1073": {
      "op": "pushbytes 0x00124552523a4d697373696e6720436f6e666967"
    },
    "1095": {
      "op": "frame_bury 1"
    },
    "1097": {
      "block": "get_uint_from_registry_config_after_if_else@2",
      "stack_in": [
        "value#0",
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0"
      ]
    },
    "1099": {
      "op": "frame_dig 1",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "error#0",
        "value#0",
        "error#0"
      ]
    },
    "1101": {
      "op": "uncover 3"
    },
    "1103": {
      "op": "uncover 3"
    },
    "1105": {
      "retsub": true,
      "op": "retsub"
    },
    "1106": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_bytes_from_registry_config",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1109": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1110": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1112": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1113": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1114": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1116": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1117": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "value#0"
      ]
    },
    "1118": {
      "retsub": true,
      "op": "retsub"
    },
    "1119": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "params": {},
      "block": "is_proposer",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1122": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1124": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1125": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1127": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1128": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1129": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1130": {
      "retsub": true,
      "op": "retsub"
    },
    "1131": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "params": {},
      "block": "is_committee_publisher",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1134": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1136": {
      "op": "bytec 29 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1138": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1141": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1142": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1143": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "32"
      ]
    },
    "1145": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1146": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1147": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1148": {
      "retsub": true,
      "op": "retsub"
    },
    "1149": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "params": {},
      "block": "is_registry_call",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1152": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1154": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1155": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1157": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1158": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1159": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1160": {
      "retsub": true,
      "op": "retsub"
    },
    "1161": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.pay",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "pay",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1164": {
      "op": "itxn_begin"
    },
    "1165": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "1167": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "1169": {
      "op": "frame_dig -2",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "1171": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1173": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1174": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1176": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1177": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1179": {
      "op": "itxn_submit"
    },
    "1180": {
      "retsub": true,
      "op": "retsub"
    },
    "1181": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.create",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1184": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1186": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1187": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "1189": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ]
    },
    "1191": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1192": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964"
    },
    "1194": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ]
    },
    "1196": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1197": {
      "retsub": true,
      "op": "retsub"
    },
    "1198": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit",
      "params": {
        "payment#0": "uint64",
        "title#0": "bytes",
        "cid#0": "bytes",
        "funding_type#0": "bytes",
        "requested_amount#0": "bytes",
        "focus#0": "bytes"
      },
      "block": "submit",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "1201": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1202": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%0#1"
      ]
    },
    "1205": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1206": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0"
      ]
    },
    "1207": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0",
        "0x737461747573"
      ]
    },
    "1208": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1209": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "max_requested_amount_medium#0",
        "maybe_value%0#0"
      ]
    },
    "1210": {
      "op": "!",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%1#1"
      ]
    },
    "1211": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1212": {
      "op": "frame_dig -5",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "title#0 (copy)"
      ]
    },
    "1214": {
      "op": "extract 2 0",
      "defined_out": [
        "title#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "title#0"
      ]
    },
    "1217": {
      "op": "frame_bury -5",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1219": {
      "op": "frame_dig -3",
      "defined_out": [
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#0 (copy)"
      ]
    },
    "1221": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1"
      ]
    },
    "1222": {
      "op": "dup",
      "defined_out": [
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "funding_type#1"
      ]
    },
    "1223": {
      "op": "frame_dig -2",
      "defined_out": [
        "funding_type#1",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "funding_type#1",
        "requested_amount#0 (copy)"
      ]
    },
    "1225": {
      "op": "btoi",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1226": {
      "op": "swap",
      "defined_out": [
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1227": {
      "op": "frame_dig -5",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)"
      ]
    },
    "1229": {
      "op": "frame_dig -4",
      "defined_out": [
        "cid#0 (copy)",
        "funding_type#1",
        "requested_amount#1",
        "title#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "title#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "1231": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "cid#0"
      ]
    },
    "1234": {
      "op": "frame_bury -4",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1"
      ]
    },
    "1236": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "funding_type#1",
        "10"
      ]
    },
    "1237": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%0#1"
      ]
    },
    "1238": {
      "op": "bnz submit_bool_true@5",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1241": {
      "op": "frame_dig 1"
    },
    "1243": {
      "op": "intc_3 // 20"
    },
    "1244": {
      "op": "=="
    },
    "1245": {
      "op": "bz submit_bool_false@6"
    },
    "1248": {
      "block": "submit_bool_true@5",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "or_result%0#0"
      ]
    },
    "1249": {
      "block": "submit_bool_merge@7",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "or_result%0#0"
      ],
      "error": "Wrong Funding Type",
      "op": "assert // Wrong Funding Type",
      "defined_out": [],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1250": {
      "op": "pushbytes 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "1272": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "error#0"
      ]
    },
    "1275": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "error#0",
        "0x0000"
      ]
    },
    "1276": {
      "op": "==",
      "defined_out": [
        "min_requested_amount#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "tmp%2#1"
      ]
    },
    "1277": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0"
      ]
    },
    "1278": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "1306": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_large#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0"
      ]
    },
    "1309": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "error#0",
        "0x0000"
      ]
    },
    "1310": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "tmp%3#1"
      ]
    },
    "1311": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0"
      ]
    },
    "1312": {
      "op": "frame_dig 2",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#1"
      ]
    },
    "1314": {
      "op": "dup",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1315": {
      "op": "uncover 3",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)",
        "min_requested_amount#0"
      ]
    },
    "1317": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_large#0",
        "requested_amount#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "tmp%4#1"
      ]
    },
    "1318": {
      "error": "Requested amount is less than the minimum requested amount",
      "op": "assert // Requested amount is less than the minimum requested amount",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1"
      ]
    },
    "1319": {
      "op": "dup",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "max_requested_amount_large#0",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1320": {
      "op": "uncover 2",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "requested_amount#1 (copy)",
        "max_requested_amount_large#0"
      ]
    },
    "1322": {
      "op": "<=",
      "defined_out": [
        "requested_amount#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "tmp%5#1"
      ]
    },
    "1323": {
      "error": "Requested amount is more than the maximum requested amount",
      "op": "assert // Requested amount is more than the maximum requested amount",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1324": {
      "op": "dup",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ]
    },
    "1325": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1328": {
      "op": "frame_dig -6",
      "defined_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1330": {
      "op": "gtxns Sender",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3"
      ]
    },
    "1332": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "0"
      ]
    },
    "1333": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "0",
        "0x70726f706f736572"
      ]
    },
    "1335": {
      "op": "app_global_get_ex",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "requested_amount#1",
        "tmp%0#3"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1336": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%0#3",
        "maybe_value%0#1"
      ]
    },
    "1337": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%1#1"
      ]
    },
    "1338": {
      "error": "Wrong Sender",
      "op": "assert // Wrong Sender",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1339": {
      "op": "frame_dig -6",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1341": {
      "op": "gtxns Receiver",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%2#2"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%2#2"
      ]
    },
    "1343": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%2#2",
        "tmp%3#2"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%2#2",
        "tmp%3#2"
      ]
    },
    "1345": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%4#1"
      ]
    },
    "1346": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0"
      ]
    },
    "1347": {
      "op": "frame_dig -6",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "1349": {
      "op": "gtxns Amount",
      "defined_out": [
        "expected_lock_amount#0",
        "requested_amount#1",
        "tmp%5#2"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "expected_lock_amount#0",
        "tmp%5#2"
      ]
    },
    "1351": {
      "op": "==",
      "defined_out": [
        "requested_amount#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "tmp%6#0"
      ]
    },
    "1352": {
      "error": "Locked amount is incorrect",
      "op": "assert // Locked amount is incorrect",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1353": {
      "op": "bytec 13 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x7469746c65"
      ]
    },
    "1355": {
      "op": "frame_dig -5",
      "defined_out": [
        "0x7469746c65",
        "requested_amount#1",
        "title#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x7469746c65",
        "title#0 (copy)"
      ]
    },
    "1357": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1358": {
      "op": "bytec 14 // 0x636964",
      "defined_out": [
        "0x636964",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x636964"
      ]
    },
    "1360": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x636964",
        "cid#0 (copy)",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "1362": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1363": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "1391": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1394": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1395": {
      "op": "==",
      "defined_out": [
        "max_requested_amount_small#0",
        "requested_amount#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "tmp%0#1"
      ]
    },
    "1396": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0"
      ]
    },
    "1397": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1426": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "max_requested_amount_medium#0",
        "error#0"
      ]
    },
    "1429": {
      "op": "swap",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "max_requested_amount_medium#0"
      ]
    },
    "1430": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0"
      ]
    },
    "1432": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "error#0",
        "0x0000"
      ]
    },
    "1433": {
      "op": "==",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0",
        "tmp%1#1"
      ]
    },
    "1434": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_small#0"
      ]
    },
    "1435": {
      "op": "<=",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%2#1"
      ]
    },
    "1436": {
      "op": "bz submit_else_body@13",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1439": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279"
    },
    "1441": {
      "op": "intc_2 // 10"
    },
    "1442": {
      "op": "app_global_put"
    },
    "1443": {
      "block": "submit_after_if_else@16",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "bytec 20 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f74797065"
      ]
    },
    "1445": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x66756e64696e675f74797065",
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f74797065",
        "funding_type#1"
      ]
    },
    "1447": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1448": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1450": {
      "op": "frame_dig 2",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1"
      ]
    },
    "1452": {
      "op": "dup",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1 (copy)",
        "requested_amount#1 (copy)"
      ]
    },
    "1453": {
      "op": "cover 2",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#1 (copy)"
      ]
    },
    "1455": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1456": {
      "op": "bytec 19 // 0x666f637573",
      "defined_out": [
        "0x666f637573",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x666f637573"
      ]
    },
    "1458": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x666f637573",
        "focus#0 (copy)",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "0x666f637573",
        "focus#0 (copy)"
      ]
    },
    "1460": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1461": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "funding_type#1",
        "new_state_value%3#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "new_state_value%3#0"
      ]
    },
    "1464": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74",
        "funding_type#1",
        "new_state_value%3#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "new_state_value%3#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1465": {
      "op": "swap",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x6c6f636b65645f616d6f756e74",
        "new_state_value%3#0"
      ]
    },
    "1466": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1467": {
      "op": "bytec 15 // 0x7375626d697373696f6e5f74696d657374616d70"
    },
    "1469": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "funding_type#1",
        "new_state_value%4#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "new_state_value%4#0"
      ]
    },
    "1471": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1472": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x737461747573"
      ]
    },
    "1473": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x737461747573",
        "10",
        "funding_type#1",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x737461747573",
        "10"
      ]
    },
    "1474": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1475": {
      "retsub": true,
      "op": "retsub"
    },
    "1476": {
      "block": "submit_else_body@13",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1"
      ]
    },
    "1478": {
      "op": "frame_dig 0",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "requested_amount#1",
        "max_requested_amount_medium#0"
      ]
    },
    "1480": {
      "op": "<=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "tmp%3#1"
      ]
    },
    "1481": {
      "op": "bz submit_else_body@15",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1484": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279"
    },
    "1486": {
      "op": "intc_3 // 20"
    },
    "1487": {
      "op": "app_global_put"
    },
    "1488": {
      "op": "b submit_after_if_else@16"
    },
    "1491": {
      "block": "submit_else_body@15",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1493": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279",
        "33"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "0x66756e64696e675f63617465676f7279",
        "33"
      ]
    },
    "1495": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ]
    },
    "1496": {
      "op": "b submit_after_if_else@16"
    },
    "1499": {
      "block": "submit_bool_false@6",
      "stack_in": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "funding_type#1",
        "requested_amount#1",
        "or_result%0#0"
      ]
    },
    "1500": {
      "op": "b submit_bool_merge@7"
    },
    "1503": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.update",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "update",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1506": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1509": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1510": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1511": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1512": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1513": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1514": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1515": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1516": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1517": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1519": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1522": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1523": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "1525": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "cid#0"
      ]
    },
    "1528": {
      "op": "frame_bury -1",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1530": {
      "op": "bytec 13 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x7469746c65"
      ]
    },
    "1532": {
      "op": "swap",
      "stack_out": [
        "0x7469746c65",
        "tmp%0#0"
      ]
    },
    "1533": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1534": {
      "op": "bytec 14 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1536": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "1538": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1539": {
      "retsub": true,
      "op": "retsub"
    },
    "1540": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop",
      "params": {},
      "block": "drop",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1543": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1546": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1547": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1548": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1549": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1550": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#1"
      ]
    },
    "1551": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "10"
      ]
    },
    "1552": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1553": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1554": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1555": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "1557": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "maybe_exists%0#0"
      ]
    },
    "1558": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "receiver#0"
      ]
    },
    "1559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "receiver#0",
        "0"
      ]
    },
    "1560": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1561": {
      "op": "app_global_get_ex",
      "stack_out": [
        "receiver#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1562": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "receiver#0",
        "maybe_value%0#1"
      ]
    },
    "1563": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": []
    },
    "1566": {
      "op": "bytec 13 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "1568": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "1569": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1570": {
      "op": "bytec 14 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1572": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "1573": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1574": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1576": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f63617465676f7279",
        "0"
      ]
    },
    "1577": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1578": {
      "op": "bytec 19 // 0x666f637573",
      "defined_out": [
        "0x666f637573"
      ],
      "stack_out": [
        "0x666f637573"
      ]
    },
    "1580": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00",
        "0x666f637573"
      ],
      "stack_out": [
        "0x666f637573",
        "0x00"
      ]
    },
    "1582": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1583": {
      "op": "bytec 20 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "1585": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "1586": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1587": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1589": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "1590": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1591": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1592": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "1593": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1594": {
      "op": "bytec 15 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1596": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "1597": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1598": {
      "op": "bytec_1 // 0x737461747573",
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1599": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "1600": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1601": {
      "retsub": true,
      "op": "retsub"
    },
    "1602": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize",
      "params": {},
      "block": "finalize",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1605": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1606": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "1609": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "1610": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "1611": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "1612": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1613": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "1614": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "10"
      ]
    },
    "1615": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "1616": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": [
        "error#0"
      ]
    },
    "1617": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0"
      ]
    },
    "1619": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1620": {
      "op": "bytec 15 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1622": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1623": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "error#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1624": {
      "op": "-",
      "defined_out": [
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0"
      ]
    },
    "1625": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "0"
      ]
    },
    "1626": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "discussion_duration#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "1628": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "1629": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "1630": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "maybe_exists%2#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "1631": {
      "op": "uncover 2",
      "defined_out": [
        "category#0",
        "discussion_duration#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "1633": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "1634": {
      "op": "intc_2 // 10",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "10"
      ]
    },
    "1635": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%0#0"
      ]
    },
    "1636": {
      "op": "bz finalize_else_body@3",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1639": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
    },
    "1666": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "1669": {
      "op": "frame_bury 0"
    },
    "1671": {
      "block": "finalize_after_if_else@7",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1673": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "1674": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#2"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "tmp%2#2"
      ]
    },
    "1675": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1676": {
      "op": "frame_dig 1",
      "defined_out": [
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "discussion_duration#0"
      ]
    },
    "1678": {
      "op": "<=",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%3#0"
      ]
    },
    "1679": {
      "error": "Too early",
      "op": "assert // Too early",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1680": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1682": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0"
      ]
    },
    "1685": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1686": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "committee_id#0",
        "committee_id#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_id#0 (copy)",
        "0x"
      ]
    },
    "1687": {
      "op": "!=",
      "defined_out": [
        "committee_id#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "tmp%0#0"
      ]
    },
    "1688": {
      "error": "Empty Committee ID",
      "op": "assert // Empty Committee ID",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0"
      ]
    },
    "1689": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_id#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1691": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "error#0"
      ]
    },
    "1694": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "error#0",
        "0x0000"
      ]
    },
    "1695": {
      "op": "==",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "discussion_duration#0",
        "error#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "tmp%1#0"
      ]
    },
    "1696": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1697": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ]
    },
    "1698": {
      "error": "Wrong Committee Members",
      "op": "assert // Wrong Committee Members",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1699": {
      "op": "bytec 9 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_id#0",
        "committee_members#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1701": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0"
      ]
    },
    "1704": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "error#0",
        "0x0000"
      ]
    },
    "1705": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "tmp%3#0"
      ]
    },
    "1706": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1707": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ]
    },
    "1708": {
      "error": "Wrong Committee Votes",
      "op": "assert // Wrong Committee Votes",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1709": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1711": {
      "op": "uncover 3",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1713": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1714": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1716": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0"
      ]
    },
    "1718": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_votes#0"
      ]
    },
    "1719": {
      "op": "bytec 9 // 0x636f6d6d69747465655f766f746573",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1721": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0"
      ]
    },
    "1722": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1723": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x737461747573"
      ]
    },
    "1724": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x737461747573",
        "20",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x737461747573",
        "20"
      ]
    },
    "1725": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1726": {
      "op": "bytec 26 // 0x66696e616c697a6174696f6e5f74696d657374616d70"
    },
    "1728": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "discussion_duration#0",
        "error#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "new_state_value%0#0"
      ]
    },
    "1730": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1731": {
      "op": "pushbytes 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565",
        "discussion_duration#0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x70726f706f73616c5f666565"
      ]
    },
    "1745": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "error#0"
      ]
    },
    "1748": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "error#0",
        "0x0000"
      ]
    },
    "1749": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "tmp%0#0"
      ]
    },
    "1750": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0"
      ]
    },
    "1751": {
      "op": "pushbytes 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "1776": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "error#0"
      ]
    },
    "1779": {
      "op": "bytec_0 // 0x0000",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "error#0",
        "0x0000"
      ]
    },
    "1780": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%1#0"
      ]
    },
    "1781": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1782": {
      "op": "bytec 29 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1784": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1787": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1788": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1789": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "32"
      ]
    },
    "1791": {
      "op": "==",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%3#0"
      ]
    },
    "1792": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1793": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1795": {
      "op": "*",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1796": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "10000"
      ]
    },
    "1798": {
      "op": "/",
      "defined_out": [
        "awst_tmp%0#0",
        "discussion_duration#0",
        "error#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "awst_tmp%0#0",
        "tmp%1#4"
      ]
    },
    "1799": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1802": {
      "retsub": true,
      "op": "retsub"
    },
    "1803": {
      "block": "finalize_else_body@3",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0"
      ]
    },
    "1805": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "category#0",
        "20"
      ]
    },
    "1806": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "tmp%1#0"
      ]
    },
    "1807": {
      "op": "bz finalize_else_body@5",
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ]
    },
    "1810": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
    },
    "1838": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "1841": {
      "op": "frame_bury 0"
    },
    "1843": {
      "op": "b finalize_after_if_else@7"
    },
    "1846": {
      "block": "finalize_else_body@5",
      "stack_in": [
        "error#0",
        "discussion_duration#0",
        "category#0"
      ],
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1873": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0",
        "error#0"
      ]
    },
    "1876": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "discussion_duration#0",
        "category#0",
        "value#0"
      ]
    },
    "1878": {
      "op": "b finalize_after_if_else@7"
    },
    "1881": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "params": {
        "voter#0": "bytes",
        "voting_power#0": "bytes"
      },
      "block": "assign_voter",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1884": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "op": "callsub is_committee_publisher",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1887": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1888": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1889": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1890": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1891": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1892": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "20"
      ]
    },
    "1893": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1894": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1895": {
      "op": "frame_dig -1",
      "defined_out": [
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "voting_power#0 (copy)"
      ]
    },
    "1897": {
      "op": "btoi",
      "defined_out": [
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1"
      ]
    },
    "1898": {
      "op": "bytec 27 // \"V\"",
      "defined_out": [
        "\"V\"",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "\"V\""
      ]
    },
    "1900": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"V\"",
        "voter#0 (copy)",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1902": {
      "op": "concat",
      "defined_out": [
        "tmp%0#2",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2"
      ]
    },
    "1903": {
      "op": "dup",
      "defined_out": [
        "tmp%0#2",
        "tmp%0#2 (copy)",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ]
    },
    "1904": {
      "op": "box_len",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1905": {
      "op": "bury 1",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "maybe_exists%0#0"
      ]
    },
    "1907": {
      "op": "!",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "1908": {
      "error": "Voter Already Assigned",
      "op": "assert // Voter Already Assigned",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2"
      ]
    },
    "1909": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#2",
        "voting_power#1",
        "voting_power#1 (copy)"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "voting_power#1 (copy)"
      ]
    },
    "1911": {
      "error": "Invalid Voting Power",
      "op": "assert // Invalid Voting Power",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2"
      ]
    },
    "1912": {
      "op": "frame_dig -1",
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "voting_power#0 (copy)"
      ]
    },
    "1914": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#2",
        "voting_power#0 (copy)",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "voting_power#0 (copy)",
        "0x00"
      ]
    },
    "1916": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#2",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "tmp%0#2",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1917": {
      "op": "box_put",
      "stack_out": [
        "voting_power#1"
      ]
    },
    "1918": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voting_power#1",
        "0"
      ]
    },
    "1919": {
      "op": "bytec 23 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "0",
        "\"voters_count\""
      ]
    },
    "1921": {
      "op": "app_global_get_ex",
      "stack_out": [
        "voting_power#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1922": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "voting_power#1",
        "maybe_value%0#0"
      ]
    },
    "1923": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1924": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "new_state_value%0#0"
      ]
    },
    "1925": {
      "op": "bytec 23 // \"voters_count\"",
      "stack_out": [
        "voting_power#1",
        "new_state_value%0#0",
        "\"voters_count\""
      ]
    },
    "1927": {
      "op": "swap",
      "stack_out": [
        "voting_power#1",
        "\"voters_count\"",
        "new_state_value%0#0"
      ]
    },
    "1928": {
      "op": "app_global_put",
      "stack_out": [
        "voting_power#1"
      ]
    },
    "1929": {
      "op": "intc_0 // 0",
      "stack_out": [
        "voting_power#1",
        "0"
      ]
    },
    "1930": {
      "op": "bytec 24 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "0",
        "\"assigned_votes\""
      ]
    },
    "1932": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "voting_power#1"
      ],
      "stack_out": [
        "voting_power#1",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1933": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "voting_power#1",
        "maybe_value%1#0"
      ]
    },
    "1934": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "1935": {
      "op": "bytec 24 // \"assigned_votes\"",
      "stack_out": [
        "new_state_value%1#0",
        "\"assigned_votes\""
      ]
    },
    "1937": {
      "op": "swap",
      "stack_out": [
        "\"assigned_votes\"",
        "new_state_value%1#0"
      ]
    },
    "1938": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1939": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1940": {
      "op": "bytec 23 // \"voters_count\"",
      "stack_out": [
        "0",
        "\"voters_count\""
      ]
    },
    "1942": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1943": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1944": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "0"
      ]
    },
    "1945": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1947": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1948": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "1949": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1950": {
      "op": "bz assign_voter_after_if_else@2",
      "stack_out": []
    },
    "1953": {
      "op": "intc_0 // 0"
    },
    "1954": {
      "op": "bytec 24 // \"assigned_votes\""
    },
    "1956": {
      "op": "app_global_get_ex"
    },
    "1957": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists"
    },
    "1958": {
      "op": "intc_0 // 0"
    },
    "1959": {
      "op": "bytec 9 // 0x636f6d6d69747465655f766f746573"
    },
    "1961": {
      "op": "app_global_get_ex"
    },
    "1962": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists"
    },
    "1963": {
      "op": "=="
    },
    "1964": {
      "error": "Voting Power Mismatch",
      "op": "assert // Voting Power Mismatch"
    },
    "1965": {
      "op": "bytec_1 // 0x737461747573"
    },
    "1966": {
      "op": "pushint 25 // 25"
    },
    "1968": {
      "op": "app_global_put"
    },
    "1969": {
      "op": "bytec 18 // 0x766f74655f6f70656e696e675f74696d657374616d70"
    },
    "1971": {
      "op": "global LatestTimestamp"
    },
    "1973": {
      "op": "app_global_put"
    },
    "1974": {
      "block": "assign_voter_after_if_else@2",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1975": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.vote",
      "params": {
        "voter#0": "bytes",
        "approvals#0": "bytes",
        "rejections#0": "bytes"
      },
      "block": "vote",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1978": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "1979": {
      "op": "dupn 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0"
      ]
    },
    "1981": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1"
      ]
    },
    "1982": {
      "op": "dupn 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "1984": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "1987": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "1988": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0"
      ]
    },
    "1989": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0",
        "0x737461747573"
      ]
    },
    "1990": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1991": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1"
      ]
    },
    "1992": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "25"
      ]
    },
    "1994": {
      "op": "!=",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%1#1"
      ]
    },
    "1995": {
      "op": "bz vote_after_if_else@15",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "1998": {
      "op": "bytec 28 // 0x00194552523a57726f6e672050726f706f73616c20537461747573"
    },
    "2000": {
      "op": "frame_bury 0"
    },
    "2002": {
      "block": "vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2004": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2005": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#0"
      ]
    },
    "2006": {
      "op": "bz vote_after_if_else@2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2009": {
      "retsub": true,
      "op": "retsub"
    },
    "2010": {
      "block": "vote_after_if_else@2",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "approvals#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#0 (copy)"
      ]
    },
    "2012": {
      "op": "btoi",
      "defined_out": [
        "approvals#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1"
      ]
    },
    "2013": {
      "op": "frame_bury 3",
      "defined_out": [
        "approvals#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2015": {
      "op": "frame_dig -1",
      "defined_out": [
        "approvals#1",
        "rejections#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#0 (copy)"
      ]
    },
    "2017": {
      "op": "btoi",
      "defined_out": [
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1"
      ]
    },
    "2018": {
      "op": "frame_bury 5",
      "defined_out": [
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2020": {
      "op": "bytec 27 // \"V\"",
      "defined_out": [
        "\"V\"",
        "approvals#1",
        "rejections#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "\"V\""
      ]
    },
    "2022": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"V\"",
        "approvals#1",
        "rejections#1",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "2024": {
      "op": "concat",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2025": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%0#1"
      ]
    },
    "2026": {
      "op": "frame_bury 1",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2028": {
      "op": "box_len",
      "defined_out": [
        "approvals#1",
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "rejections#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2029": {
      "op": "bury 1",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%0#0"
      ]
    },
    "2031": {
      "op": "bnz vote_after_if_else@7",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2034": {
      "op": "pushbytes 0x00134552523a566f746572206e6f7420666f756e64"
    },
    "2057": {
      "op": "frame_bury 0"
    },
    "2059": {
      "block": "vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2061": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2062": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%3#0"
      ]
    },
    "2063": {
      "op": "bz vote_after_if_else@4",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2066": {
      "retsub": true,
      "op": "retsub"
    },
    "2067": {
      "block": "vote_after_if_else@4",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2069": {
      "op": "dup",
      "defined_out": [
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ]
    },
    "2070": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0",
        "maybe_exists%0#0"
      ]
    },
    "2071": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ]
    },
    "2072": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%5#0"
      ]
    },
    "2075": {
      "op": "dup",
      "defined_out": [
        "tmp%0#1",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "2076": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80",
        "tmp%0#1",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "0x80"
      ]
    },
    "2079": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2080": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#1"
      ]
    },
    "2082": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "tmp%0#1",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2083": {
      "op": "box_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0"
      ]
    },
    "2084": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "0"
      ]
    },
    "2085": {
      "op": "bytec 10 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2087": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2088": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "2089": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "2090": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#1",
        "tmp%5#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "new_state_value%0#0"
      ]
    },
    "2091": {
      "op": "bytec 10 // 0x766f7465645f6d656d62657273",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "new_state_value%0#0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2093": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0",
        "0x766f7465645f6d656d62657273",
        "new_state_value%0#0"
      ]
    },
    "2094": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#0"
      ]
    },
    "2095": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%8#0"
      ]
    },
    "2096": {
      "op": "frame_dig 3",
      "defined_out": [
        "approvals#1",
        "tmp%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%8#0",
        "approvals#1"
      ]
    },
    "2098": {
      "op": "dup",
      "defined_out": [
        "approvals#1",
        "approvals#1 (copy)",
        "tmp%0#1",
        "tmp%8#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%8#0",
        "approvals#1 (copy)",
        "approvals#1 (copy)"
      ]
    },
    "2099": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%8#0",
        "approvals#1 (copy)"
      ]
    },
    "2101": {
      "op": "-",
      "defined_out": [
        "approvals#1",
        "tmp%0#1",
        "tmp%10#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%10#0"
      ]
    },
    "2102": {
      "op": "frame_dig 5",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%0#1",
        "tmp%10#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%10#0",
        "rejections#1"
      ]
    },
    "2104": {
      "op": "dup",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "rejections#1 (copy)",
        "tmp%0#1",
        "tmp%10#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "approvals#1",
        "tmp%10#0",
        "rejections#1 (copy)",
        "rejections#1 (copy)"
      ]
    },
    "2105": {
      "op": "cover 3",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "tmp%10#0",
        "rejections#1 (copy)"
      ]
    },
    "2107": {
      "op": "-",
      "defined_out": [
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0"
      ]
    },
    "2108": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "0"
      ]
    },
    "2109": {
      "op": "bytec 11 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2111": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2112": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "approvals#1",
        "nulls#0",
        "maybe_value%2#0"
      ]
    },
    "2113": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%2#0",
        "approvals#1"
      ]
    },
    "2115": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "new_state_value%1#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "new_state_value%1#0"
      ]
    },
    "2116": {
      "op": "bytec 11 // 0x617070726f76616c73",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "new_state_value%1#0",
        "0x617070726f76616c73"
      ]
    },
    "2118": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0x617070726f76616c73",
        "new_state_value%1#0"
      ]
    },
    "2119": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0"
      ]
    },
    "2120": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0"
      ]
    },
    "2121": {
      "op": "bytec 12 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2123": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2124": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0"
      ]
    },
    "2125": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%3#0",
        "rejections#1"
      ]
    },
    "2127": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "new_state_value%2#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "new_state_value%2#0"
      ]
    },
    "2128": {
      "op": "bytec 12 // 0x72656a656374696f6e73",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "new_state_value%2#0",
        "0x72656a656374696f6e73"
      ]
    },
    "2130": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0x72656a656374696f6e73",
        "new_state_value%2#0"
      ]
    },
    "2131": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0"
      ]
    },
    "2132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0"
      ]
    },
    "2133": {
      "op": "bytec 17 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "approvals#1",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2135": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approvals#1",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "nulls#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2136": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "nulls#0",
        "maybe_value%4#0"
      ]
    },
    "2137": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "new_state_value%3#0",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "new_state_value%3#0"
      ]
    },
    "2138": {
      "op": "bytec 17 // 0x6e756c6c73",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "new_state_value%3#0",
        "0x6e756c6c73"
      ]
    },
    "2140": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x6e756c6c73",
        "new_state_value%3#0"
      ]
    },
    "2141": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2142": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "approvals#1",
        "rejections#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x0000"
      ]
    },
    "2143": {
      "op": "frame_bury 0"
    },
    "2145": {
      "retsub": true,
      "op": "retsub"
    },
    "2146": {
      "block": "vote_after_if_else@7",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%0#1"
      ]
    },
    "2148": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2149": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2150": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "maybe_exists%1#0",
        "voter_box#0",
        "voter_box#0 (copy)"
      ]
    },
    "2151": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0",
        "voter_box#0"
      ]
    },
    "2153": {
      "op": "frame_bury 2",
      "defined_out": [
        "maybe_exists%1#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "maybe_exists%1#0"
      ]
    },
    "2155": {
      "error": "check self.voters entry exists",
      "op": "assert // check self.voters entry exists",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2156": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0",
        "64"
      ]
    },
    "2158": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0"
      ]
    },
    "2159": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2162": {
      "op": "uncover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2164": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#1",
        "tmp%0#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "encoded_bool%0#1"
      ]
    },
    "2165": {
      "op": "bytec 16 // 0x00",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "encoded_bool%0#1",
        "0x00"
      ]
    },
    "2167": {
      "op": "!=",
      "defined_out": [
        "tmp%0#1",
        "tmp%2#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%2#1"
      ]
    },
    "2168": {
      "op": "bz vote_after_if_else@9",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2171": {
      "op": "pushbytes 0x00174552523a566f74657220616c726561647920766f746564"
    },
    "2198": {
      "op": "frame_bury 0"
    },
    "2200": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2203": {
      "block": "vote_after_if_else@9",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "voter_box#0"
      ]
    },
    "2205": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "2208": {
      "op": "frame_dig 3",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "approvals#1"
      ]
    },
    "2210": {
      "op": "frame_dig 5",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "approvals#1",
        "rejections#1"
      ]
    },
    "2212": {
      "op": "+",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "tmp%3#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "tmp%3#1"
      ]
    },
    "2213": {
      "op": "itob",
      "defined_out": [
        "approvals#1",
        "reinterpret_biguint%0#0",
        "rejections#1",
        "tmp%4#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "reinterpret_biguint%0#0",
        "tmp%4#1"
      ]
    },
    "2214": {
      "op": "b<",
      "defined_out": [
        "approvals#1",
        "rejections#1",
        "tmp%5#1",
        "voter_box#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%5#1"
      ]
    },
    "2215": {
      "op": "bz vote_after_if_else@11",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2218": {
      "op": "pushbytes 0x00124552523a566f746573206578636565646564"
    },
    "2240": {
      "op": "frame_bury 0"
    },
    "2242": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2245": {
      "block": "vote_after_if_else@11",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2246": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2248": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_input_validation@12"
    },
    "2251": {
      "block": "vote_after_if_else@15",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2254": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "is_voting_open#0",
        "error#0",
        "error#0 (copy)"
      ]
    },
    "2255": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2257": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "is_voting_open#0"
      ]
    },
    "2259": {
      "op": "frame_bury 4",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2261": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0",
        "0x0000"
      ]
    },
    "2262": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "tmp%2#1"
      ]
    },
    "2263": {
      "op": "bnz vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20",
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2266": {
      "op": "frame_dig 4"
    },
    "2268": {
      "op": "bnz vote_after_if_else@19"
    },
    "2271": {
      "op": "pushbytes 0x00194552523a566f74696e6720506572696f642045787069726564"
    },
    "2300": {
      "op": "frame_bury 0"
    },
    "2302": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20"
    },
    "2305": {
      "block": "vote_after_if_else@19",
      "stack_in": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1",
        "error#0"
      ]
    },
    "2306": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#1",
        "voter_box#0",
        "approvals#1",
        "is_voting_open#0",
        "rejections#1"
      ]
    },
    "2308": {
      "op": "b vote_after_inlined_smart_contracts.proposal.contract.Proposal.vote_check_authorization@20"
    },
    "2311": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.scrutiny",
      "params": {},
      "block": "scrutiny",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2314": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2315": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "error#0",
        "category#0"
      ]
    },
    "2316": {
      "op": "dupn 3",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2318": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2319": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x737461747573"
      ]
    },
    "2320": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2321": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1"
      ]
    },
    "2322": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%0#1",
        "25"
      ]
    },
    "2324": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2325": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2326": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_voting_open",
      "op": "callsub is_voting_open",
      "defined_out": [
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "error#0"
      ]
    },
    "2329": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0",
        "is_voting_open#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "error#0",
        "0x0000"
      ]
    },
    "2330": {
      "op": "==",
      "defined_out": [
        "error#0",
        "is_voting_open#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0",
        "tmp%1#0"
      ]
    },
    "2331": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "is_voting_open#0"
      ]
    },
    "2332": {
      "op": "bz scrutiny_bool_true@8",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2335": {
      "op": "intc_0 // 0"
    },
    "2336": {
      "op": "bytec 10 // 0x766f7465645f6d656d62657273"
    },
    "2338": {
      "op": "app_global_get_ex"
    },
    "2339": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists"
    },
    "2340": {
      "op": "intc_0 // 0"
    },
    "2341": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273"
    },
    "2343": {
      "op": "app_global_get_ex"
    },
    "2344": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists"
    },
    "2345": {
      "op": "=="
    },
    "2346": {
      "op": "bz scrutiny_bool_false@9"
    },
    "2349": {
      "block": "scrutiny_bool_true@8",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ]
    },
    "2350": {
      "block": "scrutiny_bool_merge@10",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ],
      "error": "Voting Ongoing",
      "op": "assert // Voting Ongoing",
      "defined_out": [],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2351": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2352": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "2354": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0"
      ]
    },
    "2355": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%0#0",
        "category#0"
      ]
    },
    "2356": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%0#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "2357": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0",
        "category#0"
      ]
    },
    "2359": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%0#0"
      ]
    },
    "2361": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2362": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "10"
      ]
    },
    "2363": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2364": {
      "op": "bz scrutiny_else_body@14",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2367": {
      "op": "pushbytes 0x71756f72756d5f736d616c6c"
    },
    "2381": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "2384": {
      "op": "frame_bury 0"
    },
    "2386": {
      "block": "scrutiny_after_if_else@18",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2388": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2389": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2390": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2391": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2392": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "2394": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "error#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0",
        "maybe_exists%1#0"
      ]
    },
    "2395": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0"
      ]
    },
    "2396": {
      "op": "*",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0"
      ]
    },
    "2397": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0",
        "10000"
      ]
    },
    "2399": {
      "op": "/",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_voters_required#0"
      ]
    },
    "2400": {
      "op": "frame_bury 2",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2403": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "2405": {
      "op": "app_global_get_ex",
      "defined_out": [
        "category#0",
        "error#0",
        "maybe_exists%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "2406": {
      "op": "swap",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "2407": {
      "op": "dup",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_exists%2#0",
        "category#0",
        "category#0 (copy)"
      ]
    },
    "2408": {
      "op": "cover 2",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0",
        "category#0"
      ]
    },
    "2410": {
      "op": "frame_bury 1",
      "defined_out": [
        "category#0",
        "error#0",
        "maybe_exists%2#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "maybe_exists%2#0"
      ]
    },
    "2412": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2413": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0",
        "error#0",
        "minimum_voters_required#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "10"
      ]
    },
    "2414": {
      "op": "==",
      "defined_out": [
        "category#0",
        "error#0",
        "minimum_voters_required#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#1"
      ]
    },
    "2415": {
      "op": "bz scrutiny_else_body@22",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2418": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f736d616c6c"
    },
    "2441": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "2444": {
      "op": "frame_bury 0"
    },
    "2446": {
      "block": "scrutiny_after_if_else@26",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2448": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0",
        "0x0000"
      ]
    },
    "2449": {
      "op": "==",
      "defined_out": [
        "error#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "2450": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2451": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2452": {
      "op": "bytec 11 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "2454": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2455": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0"
      ]
    },
    "2456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2457": {
      "op": "bytec 12 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "error#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "2459": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%4#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2460": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "2461": {
      "op": "+",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0"
      ]
    },
    "2462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "0"
      ]
    },
    "2463": {
      "op": "bytec 17 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "2465": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2466": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "tmp%0#0",
        "maybe_value%5#0"
      ]
    },
    "2467": {
      "op": "+",
      "defined_out": [
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "total_votes#0"
      ]
    },
    "2468": {
      "op": "frame_bury 4",
      "defined_out": [
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0"
      ]
    },
    "2471": {
      "op": "bytec 9 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "error#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "2473": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "error#0",
        "maybe_exists%6#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0",
        "maybe_exists%6#0"
      ]
    },
    "2474": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "amount#0"
      ]
    },
    "2475": {
      "op": "*",
      "defined_out": [
        "error#0",
        "tmp%0#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0"
      ]
    },
    "2476": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "error#0",
        "tmp%0#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%0#0",
        "10000"
      ]
    },
    "2478": {
      "op": "/",
      "defined_out": [
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "minimum_votes_required#0"
      ]
    },
    "2479": {
      "op": "frame_bury 3",
      "defined_out": [
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2481": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2482": {
      "op": "bytec 10 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "error#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "2484": {
      "op": "app_global_get_ex",
      "defined_out": [
        "error#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2485": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0"
      ]
    },
    "2486": {
      "op": "frame_dig 2",
      "defined_out": [
        "error#0",
        "maybe_value%7#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "maybe_value%7#0",
        "minimum_voters_required#0"
      ]
    },
    "2488": {
      "op": ">=",
      "defined_out": [
        "error#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "tmp%1#0",
        "total_votes#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2489": {
      "op": "bz scrutiny_else_body@4",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2492": {
      "op": "frame_dig 4"
    },
    "2494": {
      "op": "frame_dig 3"
    },
    "2496": {
      "op": ">="
    },
    "2497": {
      "op": "bz scrutiny_else_body@4"
    },
    "2500": {
      "op": "intc_0 // 0"
    },
    "2501": {
      "op": "bytec 11 // 0x617070726f76616c73"
    },
    "2503": {
      "op": "app_global_get_ex"
    },
    "2504": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists"
    },
    "2505": {
      "op": "intc_0 // 0"
    },
    "2506": {
      "op": "bytec 12 // 0x72656a656374696f6e73"
    },
    "2508": {
      "op": "app_global_get_ex"
    },
    "2509": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists"
    },
    "2510": {
      "op": ">"
    },
    "2511": {
      "op": "bz scrutiny_else_body@4"
    },
    "2514": {
      "op": "bytec_1 // 0x737461747573"
    },
    "2515": {
      "op": "pushint 30 // 30"
    },
    "2517": {
      "op": "app_global_put"
    },
    "2518": {
      "retsub": true,
      "op": "retsub"
    },
    "2519": {
      "block": "scrutiny_else_body@4",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573"
      ]
    },
    "2520": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "0x737461747573",
        "40"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x737461747573",
        "40"
      ]
    },
    "2522": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2523": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0"
      ]
    },
    "2524": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "2526": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "receiver#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "receiver#0",
        "maybe_exists%10#0"
      ]
    },
    "2527": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "receiver#0"
      ]
    },
    "2528": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "receiver#0",
        "0"
      ]
    },
    "2529": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "receiver#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "receiver#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "2530": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "receiver#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "receiver#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2531": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "receiver#0",
        "maybe_value%0#1"
      ]
    },
    "2532": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2535": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "2536": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "2537": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2538": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473"
    },
    "2540": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ]
    },
    "2542": {
      "op": "app_global_put",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2543": {
      "retsub": true,
      "op": "retsub"
    },
    "2544": {
      "block": "scrutiny_else_body@22",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2546": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "20"
      ]
    },
    "2547": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2548": {
      "op": "bz scrutiny_else_body@24",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2551": {
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6d656469756d"
    },
    "2575": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "2578": {
      "op": "frame_bury 0"
    },
    "2580": {
      "op": "b scrutiny_after_if_else@26"
    },
    "2583": {
      "block": "scrutiny_else_body@24",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "pushbytes 0x77656967687465645f71756f72756d5f6c61726765",
      "defined_out": [
        "0x77656967687465645f71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x77656967687465645f71756f72756d5f6c61726765"
      ]
    },
    "2606": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2609": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2611": {
      "op": "b scrutiny_after_if_else@26"
    },
    "2614": {
      "block": "scrutiny_else_body@14",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0"
      ]
    },
    "2616": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "category#0",
        "20"
      ]
    },
    "2617": {
      "op": "==",
      "defined_out": [
        "category#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "tmp%1#0"
      ]
    },
    "2618": {
      "op": "bz scrutiny_else_body@16",
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ]
    },
    "2621": {
      "op": "pushbytes 0x71756f72756d5f6d656469756d"
    },
    "2636": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config"
    },
    "2639": {
      "op": "frame_bury 0"
    },
    "2641": {
      "op": "b scrutiny_after_if_else@18"
    },
    "2644": {
      "block": "scrutiny_else_body@16",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "pushbytes 0x71756f72756d5f6c61726765",
      "defined_out": [
        "0x71756f72756d5f6c61726765"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "0x71756f72756d5f6c61726765"
      ]
    },
    "2658": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0",
        "error#0"
      ]
    },
    "2661": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0",
        "value#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "value#0"
      ]
    },
    "2663": {
      "op": "b scrutiny_after_if_else@18"
    },
    "2666": {
      "block": "scrutiny_bool_false@9",
      "stack_in": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "error#0",
        "category#0",
        "minimum_voters_required#0",
        "minimum_votes_required#0",
        "total_votes#0",
        "or_result%0#0"
      ]
    },
    "2667": {
      "op": "b scrutiny_bool_merge@10"
    },
    "2670": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.review",
      "params": {
        "block#0": "uint64"
      },
      "block": "review",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2673": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "2675": {
      "op": "pushbytes 0x78676f765f7265766965776572",
      "defined_out": [
        "0x78676f765f7265766965776572",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0x78676f765f7265766965776572"
      ]
    },
    "2690": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2693": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2694": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2695": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%1#1",
        "32"
      ]
    },
    "2697": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2698": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "2699": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2700": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "2701": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2702": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "2703": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2704": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#1"
      ]
    },
    "2705": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "maybe_value%0#1",
        "30"
      ]
    },
    "2707": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2708": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "2709": {
      "op": "frame_dig -1",
      "defined_out": [
        "block#0 (copy)"
      ],
      "stack_out": [
        "block#0 (copy)"
      ]
    },
    "2711": {
      "op": "bz review_else_body@2",
      "stack_out": []
    },
    "2714": {
      "op": "bytec_1 // 0x737461747573"
    },
    "2715": {
      "op": "pushint 60 // 60"
    },
    "2717": {
      "op": "app_global_put"
    },
    "2718": {
      "op": "intc_0 // 0"
    },
    "2719": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964"
    },
    "2721": {
      "op": "app_global_get_ex"
    },
    "2722": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists"
    },
    "2723": {
      "op": "app_params_get AppAddress"
    },
    "2725": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "2726": {
      "op": "intc_0 // 0"
    },
    "2727": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74"
    },
    "2728": {
      "op": "app_global_get_ex"
    },
    "2729": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists"
    },
    "2730": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay"
    },
    "2733": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74"
    },
    "2734": {
      "op": "intc_0 // 0"
    },
    "2735": {
      "op": "app_global_put"
    },
    "2736": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473"
    },
    "2738": {
      "op": "global LatestTimestamp"
    },
    "2740": {
      "op": "app_global_put"
    },
    "2741": {
      "retsub": true,
      "op": "retsub"
    },
    "2742": {
      "block": "review_else_body@2",
      "stack_in": [],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "2743": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "0x737461747573",
        "45"
      ],
      "stack_out": [
        "0x737461747573",
        "45"
      ]
    },
    "2745": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2746": {
      "retsub": true,
      "op": "retsub"
    },
    "2747": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.fund",
      "params": {},
      "block": "fund",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2750": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "2751": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2754": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "2755": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "2756": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "2757": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2758": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#1"
      ]
    },
    "2759": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#1",
        "45"
      ]
    },
    "2761": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "2762": {
      "op": "bz fund_after_if_else@5",
      "stack_out": [
        "error#0"
      ]
    },
    "2765": {
      "op": "bytec 28 // 0x00194552523a57726f6e672050726f706f73616c20537461747573"
    },
    "2767": {
      "op": "frame_bury 0"
    },
    "2769": {
      "block": "fund_after_inlined_smart_contracts.proposal.contract.Proposal.fund_check_authorization@6",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "2771": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "2772": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "2773": {
      "op": "bz fund_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "2776": {
      "op": "frame_dig 0"
    },
    "2778": {
      "op": "swap"
    },
    "2779": {
      "retsub": true,
      "op": "retsub"
    },
    "2780": {
      "block": "fund_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0x737461747573"
      ]
    },
    "2781": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "0x737461747573",
        "50"
      ],
      "stack_out": [
        "error#0",
        "0x737461747573",
        "50"
      ]
    },
    "2783": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "2784": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "2785": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "2787": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "receiver#0"
      ],
      "stack_out": [
        "error#0",
        "receiver#0",
        "maybe_exists%0#0"
      ]
    },
    "2788": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "error#0",
        "receiver#0"
      ]
    },
    "2789": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "receiver#0",
        "0"
      ]
    },
    "2790": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "receiver#0"
      ],
      "stack_out": [
        "error#0",
        "receiver#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "2791": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "receiver#0"
      ],
      "stack_out": [
        "error#0",
        "receiver#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "2792": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "error#0",
        "receiver#0",
        "maybe_value%0#1"
      ]
    },
    "2793": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay",
      "stack_out": [
        "error#0"
      ]
    },
    "2796": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "error#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "2797": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0",
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "2798": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "2799": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473"
    },
    "2801": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "new_state_value%0#0"
      ]
    },
    "2803": {
      "op": "app_global_put",
      "stack_out": [
        "error#0"
      ]
    },
    "2804": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "2805": {
      "op": "swap"
    },
    "2806": {
      "retsub": true,
      "op": "retsub"
    },
    "2807": {
      "block": "fund_after_if_else@5",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "2808": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "2810": {
      "op": "b fund_after_inlined_smart_contracts.proposal.contract.Proposal.fund_check_authorization@6"
    },
    "2813": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.decommission",
      "params": {
        "voters#0": "bytes"
      },
      "block": "decommission",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2817": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0"
      ]
    },
    "2818": {
      "op": "dupn 2",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2820": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "op": "callsub is_committee_publisher",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%0#1"
      ]
    },
    "2823": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2824": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2825": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x737461747573"
      ]
    },
    "2826": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2827": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%0#0"
      ]
    },
    "2828": {
      "op": "pushint 50 // 50",
      "defined_out": [
        "50",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%0#0",
        "50"
      ]
    },
    "2830": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%1#1"
      ]
    },
    "2831": {
      "op": "bnz decommission_bool_true@12",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2834": {
      "op": "intc_0 // 0"
    },
    "2835": {
      "op": "bytec_1 // 0x737461747573"
    },
    "2836": {
      "op": "app_global_get_ex"
    },
    "2837": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists"
    },
    "2838": {
      "op": "pushint 60 // 60"
    },
    "2840": {
      "op": "=="
    },
    "2841": {
      "op": "bnz decommission_bool_true@12"
    },
    "2844": {
      "op": "intc_0 // 0"
    },
    "2845": {
      "op": "bytec_1 // 0x737461747573"
    },
    "2846": {
      "op": "app_global_get_ex"
    },
    "2847": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists"
    },
    "2848": {
      "op": "pushint 40 // 40"
    },
    "2850": {
      "op": "=="
    },
    "2851": {
      "op": "bz decommission_bool_false@13"
    },
    "2854": {
      "block": "decommission_bool_true@12",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "or_result%0#0"
      ]
    },
    "2855": {
      "block": "decommission_bool_merge@14",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "or_result%0#0"
      ],
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2856": {
      "op": "pushbytes 0x636f6f6c5f646f776e5f6475726174696f6e",
      "defined_out": [
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0x636f6f6c5f646f776e5f6475726174696f6e"
      ]
    },
    "2876": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "cooldown_duration#0",
        "error#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "cooldown_duration#0",
        "error#0"
      ]
    },
    "2879": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "error#0",
        "cooldown_duration#0"
      ]
    },
    "2880": {
      "op": "frame_bury 2",
      "defined_out": [
        "cooldown_duration#0",
        "error#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "error#0"
      ]
    },
    "2882": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "cooldown_duration#0",
        "error#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "error#0",
        "0x0000"
      ]
    },
    "2883": {
      "op": "==",
      "defined_out": [
        "cooldown_duration#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%4#1"
      ]
    },
    "2884": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2885": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "2886": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "cooldown_duration#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "2888": {
      "op": "app_global_get_ex",
      "defined_out": [
        "cooldown_duration#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2889": {
      "error": "check self.cool_down_start_ts exists",
      "op": "assert // check self.cool_down_start_ts exists",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "maybe_value%3#0"
      ]
    },
    "2890": {
      "op": "bz decommission_bool_false@17",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2893": {
      "op": "global LatestTimestamp"
    },
    "2895": {
      "op": "intc_0 // 0"
    },
    "2896": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473"
    },
    "2898": {
      "op": "app_global_get_ex"
    },
    "2899": {
      "error": "check self.cool_down_start_ts exists",
      "op": "assert // check self.cool_down_start_ts exists"
    },
    "2900": {
      "op": "frame_dig 2"
    },
    "2902": {
      "op": "+"
    },
    "2903": {
      "op": ">="
    },
    "2904": {
      "op": "bz decommission_bool_false@17"
    },
    "2907": {
      "op": "intc_1 // 1"
    },
    "2908": {
      "block": "decommission_bool_merge@18",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "and_result%0#0"
      ],
      "error": "Too early",
      "op": "assert // Too early",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2909": {
      "op": "frame_dig -1",
      "defined_out": [
        "voters#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voters#0 (copy)"
      ]
    },
    "2911": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "voters#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "voters#0 (copy)",
        "0"
      ]
    },
    "2912": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "2913": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2915": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2916": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2918": {
      "block": "decommission_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2920": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "2922": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "2923": {
      "op": "bz decommission_after_for@6",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2926": {
      "op": "frame_dig -1"
    },
    "2928": {
      "op": "extract 2 0"
    },
    "2931": {
      "op": "frame_dig 3"
    },
    "2933": {
      "op": "pushint 32 // 32"
    },
    "2935": {
      "op": "*"
    },
    "2936": {
      "op": "pushint 32 // 32"
    },
    "2938": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds"
    },
    "2939": {
      "op": "bytec 27 // \"V\""
    },
    "2941": {
      "op": "swap"
    },
    "2942": {
      "op": "concat"
    },
    "2943": {
      "op": "dup"
    },
    "2944": {
      "op": "frame_bury 0"
    },
    "2946": {
      "op": "box_len"
    },
    "2947": {
      "op": "bury 1"
    },
    "2949": {
      "op": "bz decommission_after_if_else@4"
    },
    "2952": {
      "op": "frame_dig 0"
    },
    "2954": {
      "op": "box_del"
    },
    "2955": {
      "op": "pop"
    },
    "2956": {
      "block": "decommission_after_if_else@4",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2958": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "2959": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2960": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2962": {
      "op": "b decommission_for_header@1"
    },
    "2965": {
      "block": "decommission_after_for@6",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "2967": {
      "op": "acct_params_get AcctTotalBoxes",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2969": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "value%0#0"
      ]
    },
    "2970": {
      "op": "bnz decommission_after_if_else@8",
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ]
    },
    "2973": {
      "op": "intc_0 // 0"
    },
    "2974": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964"
    },
    "2976": {
      "op": "app_global_get_ex"
    },
    "2977": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists"
    },
    "2978": {
      "op": "app_params_get AppAddress"
    },
    "2980": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "2981": {
      "op": "global CurrentApplicationAddress"
    },
    "2983": {
      "op": "acct_params_get AcctBalance"
    },
    "2985": {
      "error": "account funded",
      "op": "assert // account funded"
    },
    "2986": {
      "callsub": "smart_contracts.proposal.contract.Proposal.pay",
      "op": "callsub pay"
    },
    "2989": {
      "op": "bytec_1 // 0x737461747573"
    },
    "2990": {
      "op": "pushint 70 // 70"
    },
    "2992": {
      "op": "app_global_put"
    },
    "2993": {
      "block": "decommission_after_if_else@8",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2994": {
      "block": "decommission_bool_false@17",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "and_result%0#0"
      ]
    },
    "2995": {
      "op": "b decommission_bool_merge@18"
    },
    "2998": {
      "block": "decommission_bool_false@13",
      "stack_in": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_length%0#0",
        "cooldown_duration#0",
        "item_index_internal%0#0",
        "or_result%0#0"
      ]
    },
    "2999": {
      "op": "b decommission_bool_merge@14"
    },
    "3002": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.delete",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "3005": {
      "op": "intc_0 // 0",
      "stack_out": [
        "error#0"
      ]
    },
    "3006": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_registry_call",
      "op": "callsub is_registry_call",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3009": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": [
        "error#0"
      ]
    },
    "3010": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "error#0",
        "0"
      ]
    },
    "3011": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "error#0",
        "0",
        "0x737461747573"
      ]
    },
    "3012": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3013": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "error#0",
        "maybe_value%0#0"
      ]
    },
    "3014": {
      "op": "pushint 70 // 70",
      "defined_out": [
        "70",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "error#0",
        "maybe_value%0#0",
        "70"
      ]
    },
    "3016": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%1#0"
      ]
    },
    "3017": {
      "op": "bz delete_after_if_else@5",
      "stack_out": [
        "error#0"
      ]
    },
    "3020": {
      "op": "bytec 28 // 0x00194552523a57726f6e672050726f706f73616c20537461747573"
    },
    "3022": {
      "op": "frame_bury 0"
    },
    "3024": {
      "block": "delete_after_inlined_smart_contracts.proposal.contract.Proposal.delete_check_authorization@6",
      "stack_in": [
        "error#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3026": {
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000",
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0",
        "0x0000"
      ]
    },
    "3027": {
      "op": "!=",
      "defined_out": [
        "error#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "error#0",
        "tmp%0#0"
      ]
    },
    "3028": {
      "op": "bz delete_after_if_else@2",
      "stack_out": [
        "error#0"
      ]
    },
    "3031": {
      "op": "frame_dig 0"
    },
    "3033": {
      "op": "swap"
    },
    "3034": {
      "retsub": true,
      "op": "retsub"
    },
    "3035": {
      "block": "delete_after_if_else@2",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "error#0",
        "0x0000"
      ]
    },
    "3036": {
      "op": "swap"
    },
    "3037": {
      "retsub": true,
      "op": "retsub"
    },
    "3038": {
      "block": "delete_after_if_else@5",
      "stack_in": [
        "error#0"
      ],
      "op": "bytec_0 // 0x0000",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0",
        "error#0"
      ]
    },
    "3039": {
      "op": "frame_bury 0",
      "defined_out": [
        "error#0"
      ],
      "stack_out": [
        "error#0"
      ]
    },
    "3041": {
      "op": "b delete_after_inlined_smart_contracts.proposal.contract.Proposal.delete_check_authorization@6"
    },
    "3044": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_state",
      "params": {},
      "block": "get_state",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "3047": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3048": {
      "op": "bytec 5 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "3050": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3051": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3052": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3053": {
      "op": "bytec 6 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "3055": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3056": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "3057": {
      "op": "itob",
      "defined_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3058": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3059": {
      "op": "bytec 13 // 0x7469746c65",
      "defined_out": [
        "0",
        "0x7469746c65",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "0",
        "0x7469746c65"
      ]
    },
    "3061": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3062": {
      "error": "check self.title exists",
      "op": "assert // check self.title exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0"
      ]
    },
    "3063": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "3064": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "length%0#0"
      ]
    },
    "3065": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "as_bytes%0#0"
      ]
    },
    "3066": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "length_uint16%0#0"
      ]
    },
    "3069": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "length_uint16%0#0",
        "maybe_value%2#0"
      ]
    },
    "3070": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0"
      ]
    },
    "3071": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "0"
      ]
    },
    "3072": {
      "op": "bytec 14 // 0x636964",
      "defined_out": [
        "0",
        "0x636964",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "0",
        "0x636964"
      ]
    },
    "3074": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3075": {
      "error": "check self.cid exists",
      "op": "assert // check self.cid exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0"
      ]
    },
    "3076": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "3077": {
      "op": "bytec 15 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "3079": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3080": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "3081": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "3082": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "0"
      ]
    },
    "3083": {
      "op": "bytec 26 // 0x66696e616c697a6174696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "0",
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ]
    },
    "3085": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3086": {
      "error": "check self.finalization_ts exists",
      "op": "assert // check self.finalization_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "maybe_value%5#0"
      ]
    },
    "3087": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "3088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0"
      ]
    },
    "3089": {
      "op": "bytec 18 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "0",
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "3091": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%6#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3092": {
      "error": "check self.vote_open_ts exists",
      "op": "assert // check self.vote_open_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "maybe_value%6#0"
      ]
    },
    "3093": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "3094": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "3095": {
      "op": "bytec_1 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "0x737461747573"
      ]
    },
    "3096": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%7#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "3097": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%7#0"
      ]
    },
    "3098": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "3099": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0"
      ]
    },
    "3100": {
      "op": "bytec 4 // 0x66756e64696e675f63617465676f7279",
      "defined_out": [
        "0",
        "0x66756e64696e675f63617465676f7279",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "0",
        "0x66756e64696e675f63617465676f7279"
      ]
    },
    "3102": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%8#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "3103": {
      "error": "check self.funding_category exists",
      "op": "assert // check self.funding_category exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "maybe_value%8#0"
      ]
    },
    "3104": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "3105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0"
      ]
    },
    "3106": {
      "op": "bytec 19 // 0x666f637573",
      "defined_out": [
        "0",
        "0x666f637573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "0",
        "0x666f637573"
      ]
    },
    "3108": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%9#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "3109": {
      "error": "check self.focus exists",
      "op": "assert // check self.focus exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0"
      ]
    },
    "3110": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "0"
      ]
    },
    "3111": {
      "op": "bytec 20 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0",
        "0x66756e64696e675f74797065",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "0",
        "0x66756e64696e675f74797065"
      ]
    },
    "3113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%10#0",
        "maybe_value%0#0",
        "maybe_value%10#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "3114": {
      "error": "check self.funding_type exists",
      "op": "assert // check self.funding_type exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "maybe_value%10#0"
      ]
    },
    "3115": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0"
      ]
    },
    "3116": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "0"
      ]
    },
    "3117": {
      "op": "bytec 21 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0",
        "0x7265717565737465645f616d6f756e74",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "0",
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "3119": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%11#0",
        "maybe_value%0#0",
        "maybe_value%11#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "3120": {
      "error": "check self.requested_amount exists",
      "op": "assert // check self.requested_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "maybe_value%11#0"
      ]
    },
    "3121": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "3122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "3123": {
      "op": "bytec_3 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "3124": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%12#0",
        "maybe_value%0#0",
        "maybe_value%12#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "3125": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%12#0"
      ]
    },
    "3126": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "3127": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0"
      ]
    },
    "3128": {
      "op": "bytec 22 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6964",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "3130": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%13#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "3131": {
      "error": "check self.committee_id exists",
      "op": "assert // check self.committee_id exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0"
      ]
    },
    "3132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "0"
      ]
    },
    "3133": {
      "op": "bytec 7 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "3135": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%14#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%14#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "maybe_value%14#0",
        "maybe_exists%14#0"
      ]
    },
    "3136": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "maybe_value%14#0"
      ]
    },
    "3137": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0"
      ]
    },
    "3138": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "3139": {
      "op": "bytec 9 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "3141": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%15#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%15#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "maybe_value%15#0",
        "maybe_exists%15#0"
      ]
    },
    "3142": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "maybe_value%15#0"
      ]
    },
    "3143": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "3144": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "3145": {
      "op": "bytec 10 // 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0",
        "0x766f7465645f6d656d62657273",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0",
        "0x766f7465645f6d656d62657273"
      ]
    },
    "3147": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%16#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%16#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%16#0",
        "maybe_exists%16#0"
      ]
    },
    "3148": {
      "error": "check self.voted_members exists",
      "op": "assert // check self.voted_members exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%16#0"
      ]
    },
    "3149": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "3150": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "3151": {
      "op": "bytec 11 // 0x617070726f76616c73",
      "defined_out": [
        "0",
        "0x617070726f76616c73",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "0x617070726f76616c73"
      ]
    },
    "3153": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%17#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%17#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%17#0",
        "maybe_exists%17#0"
      ]
    },
    "3154": {
      "error": "check self.approvals exists",
      "op": "assert // check self.approvals exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%17#0"
      ]
    },
    "3155": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "3156": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0"
      ]
    },
    "3157": {
      "op": "bytec 12 // 0x72656a656374696f6e73",
      "defined_out": [
        "0",
        "0x72656a656374696f6e73",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0",
        "0x72656a656374696f6e73"
      ]
    },
    "3159": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%18#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%18#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "maybe_value%18#0",
        "maybe_exists%18#0"
      ]
    },
    "3160": {
      "error": "check self.rejections exists",
      "op": "assert // check self.rejections exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "maybe_value%18#0"
      ]
    },
    "3161": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0"
      ]
    },
    "3162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "0"
      ]
    },
    "3163": {
      "op": "bytec 17 // 0x6e756c6c73",
      "defined_out": [
        "0",
        "0x6e756c6c73",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "0",
        "0x6e756c6c73"
      ]
    },
    "3165": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%19#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%19#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "maybe_value%19#0",
        "maybe_exists%19#0"
      ]
    },
    "3166": {
      "error": "check self.nulls exists",
      "op": "assert // check self.nulls exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "maybe_value%19#0"
      ]
    },
    "3167": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0"
      ]
    },
    "3168": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0"
      ]
    },
    "3169": {
      "op": "bytec 8 // 0x636f6f6c5f646f776e5f73746172745f7473",
      "defined_out": [
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "0",
        "0x636f6f6c5f646f776e5f73746172745f7473"
      ]
    },
    "3171": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_exists%20#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%20#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%20#0",
        "maybe_exists%20#0"
      ]
    },
    "3172": {
      "error": "check self.cool_down_start_ts exists",
      "op": "assert // check self.cool_down_start_ts exists",
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "maybe_value%20#0"
      ]
    },
    "3173": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "val_as_bytes%0#0",
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ]
    },
    "3174": {
      "op": "uncover 20"
    },
    "3176": {
      "op": "uncover 20",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3178": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "3179": {
      "op": "pushbytes 0x00fe",
      "defined_out": [
        "0x00fe",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%2#0",
        "0x00fe"
      ]
    },
    "3183": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%3#0",
        "maybe_value%9#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "3184": {
      "op": "uncover 18",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%3#0",
        "maybe_value%3#0"
      ]
    },
    "3186": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%9#0",
        "val_as_bytes%1#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3187": {
      "op": "uncover 17",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%1#0"
      ]
    },
    "3189": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3190": {
      "op": "uncover 16",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%2#0"
      ]
    },
    "3192": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3193": {
      "op": "uncover 15",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%3#0"
      ]
    },
    "3195": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "3196": {
      "op": "uncover 14",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%4#0"
      ]
    },
    "3198": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%5#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3199": {
      "op": "uncover 13",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%5#0"
      ]
    },
    "3201": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "maybe_value%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%9#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3202": {
      "op": "uncover 12",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%9#0",
        "maybe_value%9#0"
      ]
    },
    "3204": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3205": {
      "op": "uncover 11",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%6#0"
      ]
    },
    "3207": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3208": {
      "op": "uncover 10",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%7#0"
      ]
    },
    "3210": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%8#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3211": {
      "op": "uncover 9",
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%12#0",
        "val_as_bytes%8#0"
      ]
    },
    "3213": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "maybe_value%13#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3214": {
      "op": "uncover 8",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%13#0",
        "maybe_value%13#0"
      ]
    },
    "3216": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3217": {
      "op": "uncover 7",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%14#0",
        "val_as_bytes%9#0"
      ]
    },
    "3219": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%15#0",
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3220": {
      "op": "uncover 6",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%15#0",
        "val_as_bytes%10#0"
      ]
    },
    "3222": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%16#0",
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3223": {
      "op": "uncover 5",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%11#0"
      ]
    },
    "3225": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%17#0",
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%12#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3226": {
      "op": "uncover 4",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%17#0",
        "val_as_bytes%12#0"
      ]
    },
    "3228": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%13#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3229": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%18#0",
        "val_as_bytes%13#0"
      ]
    },
    "3231": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%19#0",
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%14#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%19#0"
      ]
    },
    "3232": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%19#0",
        "val_as_bytes%14#0"
      ]
    },
    "3234": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%20#0",
        "encoded_value%0#0",
        "val_as_bytes%15#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%15#0",
        "encoded_tuple_buffer%20#0"
      ]
    },
    "3235": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%20#0",
        "val_as_bytes%15#0"
      ]
    },
    "3236": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%21#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%21#0"
      ]
    },
    "3237": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%21#0",
        "encoded_value%0#0"
      ]
    },
    "3238": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%22#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%22#0"
      ]
    },
    "3239": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
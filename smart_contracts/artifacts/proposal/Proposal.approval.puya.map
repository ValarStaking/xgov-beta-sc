{
  "version": 3,
  "sources": [
    "../../proposal/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;AAGY;;AAA6B;;AAA7B;AADJ;AAGO;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;AAAP;AACO;;AAAA;AAAP;AAIQ;AADJ;;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADe;AADvB;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;AADuB;AAD/B;AAMQ;;AADJ;AADJ;AAMQ;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;AADJ;AADJ;AAMQ;;;;;;;AADJ;AADJ;AAMQ;;;;;;;;;;;;;;;;;;;;AADJ;AADJ;AAQA;;AAAoB;AAApB;AACA;;AAAsB;AAAtB;;AAvGR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;AAAA;AAgSK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAhSL;;;AAgSK;;;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AA9SL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AA8SK;;;AAAA;AAAA;AA6CA;;AAAA;AAAA;AAAA;;AAAA;AA3VL;;;AAAA;;;AAAA;;;AA2VK;;;AAAA;AAAA;AAsBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AA2BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAqCA;;AAAA;AAAA;AAAA;;AAAA;AAjbL;;;AAAA;;;AAAA;AAibK;;;AAAA;AAAA;AAjbL;AAAA;AAgSA;;;AAQY;;AADJ;AAIA;AAAA;;AAAA;AACA;;AAA6B;;AAA7B;;AAER;;;AA+BQ;;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AACA;;AAAA;;AAAA;;;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAC2B;;AAAA;;;AAA3B;;AAAA;AAAA;AACA;;AAA2B;;AAA3B;AACA;AAAoB;AAApB;;AArKR;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;;AA6FR;;;AAE6B;AAAA;AAAA;AAAA;AAAd;;AAAA;AAAP;AA7FR;;;AASQ;;AAAA;;AAAA;;;AAAA;;AAGI;;AAAgB;AAAhB;AAAA;;;AACG;;AAAgB;AAAhB;AADH;;;;;;;;AADJ;AAMI;;;;;;;;;;;;;;;;;;;;;;AADmB;;;AAInB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADyB;;;AAItB;;AAAA;;AAAA;AAAP;AAEI;;AAAA;AADJ;;;;AA1CR;;;AAEe;;AAAA;AAAsB;;AAAtB;AAAP;AACO;;AAAS;AAAT;AAAP;;;;AAsFR;;;AAGY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGhB;AACA;AAlCR;;;AAIQ;;AAAuB;;;AAEE;AAAA;AAAA;AAAA;AAAlB;;AAAA;;AAAA;AAAP;AAEI;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAA;AAAP;;AAnBR;;;AAKgB;;;;;;;;;;;;;;;;;;;;;;;;;AADJ;;;AAFG;;AAAA;AAAA;;;AAAP;AARR;;;AAIe;;AAAA;;AAAA;AAA4B;;;AAA5B;AAAP;AAuBR;;;AAGY;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADyB;;;AAIzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAD0B;;;AAA9B;AAIG;;AAAA;AAAX;;;AACY;AAAsB;AAAtB;;;;AACC;;AAAA;;AAAA;AAAb;;;AACY;AAAsB;AAAtB;;;;AAEA;AAAsB;;AAAtB;;AA6FZ;;;AAeQ;;;AAEA;;AAAA;;AAAA;;;AAAA;;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;;AAhMR;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;;AA+LR;;;AASQ;;;AAEA;AACa;AAAA;AAAA;AAAA;AACF;AAAA;;AAAA;AAAA;;;;;AAFX;;;AAGQ;;;AAHR;AAOA;;AAAmB;AAAnB;AACA;;AAAoC;AAApC;AACA;AAAsB;AAAtB;AACA;;AAA0B;AAA1B;AACA;;AAA8B;AAA9B;AACA;;AAA2B;AAA3B;AACA;;AAA2B;AAA3B;AACA;AAAoB;AAApB;;AAxOR;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;;AAuOR;;;AAaQ;;;AAEA;;;AAEA;AAAoB;AAApB;AACA;;AAA6B;;AAA7B;AAGI;;;;;;;;;;;;;;AADW;;;AAIX;;;;;;;;;;;;;;;;;;;;;;;;;AADiB;;;AAIrB;AAGY;;AADJ;;;AADK;AAAA;AAAA;;AAAA;AAAA;AAKF;;AAAA;;;;;;;AANX;;;AAOQ;;;AAPR;;AAhRR;;;AAGe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;AAEsB;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AACqC;AAAA;AAAA;AAAA;AAA7B;;;AAEvB;AAAP;;AA9CR;;;AAEW;;AAAY;AAAZ;AAAX;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;AAAP;AAGC;;AAAY;AAAZ;AAAb;;;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;AAAP;AAKI;;;;;;;;;;;;;;;;;;;;;;;;;;;AADG;;;AAAP;AAIZ;;;AAIgD;;AAApC;;;AAEG;AAA2C;AAA3C;AAAP;AAGI;;AADgB;;;AAGpB;AAAA;AAGI;;AADc;;;AAGlB;AAAA;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAmHR;;;AAGY;AAAA;;AAAA;AAAA;AADY;;AAAA;AAGhB;AACA;AAmKR;;;AAeQ;;;AAEA;;AAAA;;;AAGU;;AAAA;AACA;;;AAFW;AAArB;;;AAAA;;AAAA;AAAA;AAAA;AAKA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAEG;AAAA;;AAAA;AAAA;AAAqB;AAAA;;AAAA;AAAA;AAArB;AAAX;;;AAEgB;AAAA;;AAAA;AAAA;AAAuB;AAAA;;AAAA;AAAA;AAAvB;AADJ;AAGA;AAAoB;;AAApB;AACA;;AAA0B;;AAA1B;;AAxWZ;;;AAEe;;;AAAP;AACO;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAP;;AA4KR;;;AAEe;;AAEC;;AADJ;;;AADiB;AAAA;AAAA;;AAAA;AAAA;AAAd;AAAP;AA5KR;;;AAE4B;;;AAAb;;AAAA;AAAA;AAAA;;AAAA;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.approval_program",
      "params": {},
      "block": "smart_contracts.proposal.contract.Proposal.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 10 20"
    },
    "7": {
      "op": "bytecblock 0x737461747573 0x 0x63617465676f7279 0x70726f706f736572 0x72656769737472795f6170705f6964 0x7469746c65 0x636964 0x7375626d697373696f6e5f74696d657374616d70 0x6c6f636b65645f616d6f756e74 0x636f6d6d69747465655f6d656d62657273 0x636f6d6d69747465655f766f746573 \"voters_count\" \"assigned_votes\" 0x66756e64696e675f74797065 0x7265717565737465645f616d6f756e74 0x636f6d6d69747465655f6964 0x66696e616c697a6174696f6e5f74696d657374616d70 0x766f74655f6f70656e696e675f74696d657374616d70 0x636f6d6d69747465655f7075626c6973686572"
    },
    "267": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "269": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "272": {
      "callsub": "smart_contracts.proposal.contract.Proposal.__init__",
      "op": "callsub __init__"
    },
    "275": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.proposal.contract.Proposal.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "278": {
      "op": "return",
      "stack_out": []
    },
    "279": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "282": {
      "op": "txn GlobalNumByteSlice",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "284": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "5"
      ]
    },
    "286": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "287": {
      "error": "Wrong Global Bytes allocation",
      "op": "assert // Wrong Global Bytes allocation",
      "stack_out": []
    },
    "288": {
      "op": "txn GlobalNumUint",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "290": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "18"
      ]
    },
    "292": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "293": {
      "error": "Wrong Global UInts allocation",
      "op": "assert // Wrong Global UInts allocation",
      "stack_out": []
    },
    "294": {
      "op": "txn LocalNumByteSlice",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "296": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "297": {
      "error": "Wrong Local Bytes allocation",
      "op": "assert // Wrong Local Bytes allocation",
      "stack_out": []
    },
    "298": {
      "op": "txn LocalNumUint",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "300": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "301": {
      "error": "Wrong Local UInts allocation",
      "op": "assert // Wrong Local UInts allocation",
      "stack_out": []
    },
    "302": {
      "op": "bytec_3 // 0x70726f706f736572"
    },
    "303": {
      "op": "global ZeroAddress",
      "defined_out": [
        "0x70726f706f736572",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "new_state_value%0#0"
      ]
    },
    "305": {
      "op": "app_global_put",
      "stack_out": []
    },
    "306": {
      "op": "bytec 4 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964"
      ]
    },
    "308": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "0"
      ]
    },
    "309": {
      "op": "app_global_put",
      "stack_out": []
    },
    "310": {
      "op": "bytec 5 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "312": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "313": {
      "op": "app_global_put",
      "stack_out": []
    },
    "314": {
      "op": "bytec 6 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "316": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "317": {
      "op": "app_global_put",
      "stack_out": []
    },
    "318": {
      "op": "bytec 7 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "321": {
      "op": "app_global_put",
      "stack_out": []
    },
    "322": {
      "op": "bytec 16 // 0x66696e616c697a6174696f6e5f74696d657374616d70",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70"
      ]
    },
    "324": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "325": {
      "op": "app_global_put",
      "stack_out": []
    },
    "326": {
      "op": "bytec 17 // 0x766f74655f6f70656e696e675f74696d657374616d70",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70"
      ]
    },
    "328": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "0"
      ]
    },
    "329": {
      "op": "app_global_put",
      "stack_out": []
    },
    "330": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "331": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "332": {
      "op": "app_global_put",
      "stack_out": []
    },
    "333": {
      "op": "bytec_2 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279"
      ],
      "stack_out": [
        "0x63617465676f7279"
      ]
    },
    "334": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x63617465676f7279",
        "0"
      ]
    },
    "335": {
      "op": "app_global_put",
      "stack_out": []
    },
    "336": {
      "op": "bytec 13 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "338": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "339": {
      "op": "app_global_put",
      "stack_out": []
    },
    "340": {
      "op": "bytec 14 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "342": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "343": {
      "op": "app_global_put",
      "stack_out": []
    },
    "344": {
      "op": "bytec 8 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74"
      ],
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "347": {
      "op": "app_global_put",
      "stack_out": []
    },
    "348": {
      "op": "bytec 15 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "350": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "0x636f6d6d69747465655f6964",
        "0x"
      ]
    },
    "351": {
      "op": "app_global_put",
      "stack_out": []
    },
    "352": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "354": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "0"
      ]
    },
    "355": {
      "op": "app_global_put",
      "stack_out": []
    },
    "356": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "358": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "0"
      ]
    },
    "359": {
      "op": "app_global_put",
      "stack_out": []
    },
    "360": {
      "op": "pushbytes 0x766f7465645f6d656d62657273",
      "defined_out": [
        "0x766f7465645f6d656d62657273"
      ],
      "stack_out": [
        "0x766f7465645f6d656d62657273"
      ]
    },
    "375": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x766f7465645f6d656d62657273",
        "0"
      ]
    },
    "376": {
      "op": "app_global_put",
      "stack_out": []
    },
    "377": {
      "op": "pushbytes 0x617070726f76616c73",
      "defined_out": [
        "0x617070726f76616c73"
      ],
      "stack_out": [
        "0x617070726f76616c73"
      ]
    },
    "388": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x617070726f76616c73",
        "0"
      ]
    },
    "389": {
      "op": "app_global_put",
      "stack_out": []
    },
    "390": {
      "op": "pushbytes 0x72656a656374696f6e73",
      "defined_out": [
        "0x72656a656374696f6e73"
      ],
      "stack_out": [
        "0x72656a656374696f6e73"
      ]
    },
    "402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x72656a656374696f6e73",
        "0"
      ]
    },
    "403": {
      "op": "app_global_put",
      "stack_out": []
    },
    "404": {
      "op": "pushbytes 0x6e756c6c73",
      "defined_out": [
        "0x6e756c6c73"
      ],
      "stack_out": [
        "0x6e756c6c73"
      ]
    },
    "411": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6e756c6c73",
        "0"
      ]
    },
    "412": {
      "op": "app_global_put",
      "stack_out": []
    },
    "413": {
      "op": "pushbytes 0x6d696c6573746f6e655f617070726f766564",
      "defined_out": [
        "0x6d696c6573746f6e655f617070726f766564"
      ],
      "stack_out": [
        "0x6d696c6573746f6e655f617070726f766564"
      ]
    },
    "433": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6d696c6573746f6e655f617070726f766564",
        "0"
      ]
    },
    "434": {
      "op": "app_global_put",
      "stack_out": []
    },
    "435": {
      "op": "bytec 11 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\""
      ],
      "stack_out": [
        "\"voters_count\""
      ]
    },
    "437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"voters_count\"",
        "0"
      ]
    },
    "438": {
      "op": "app_global_put",
      "stack_out": []
    },
    "439": {
      "op": "bytec 12 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\""
      ],
      "stack_out": [
        "\"assigned_votes\""
      ]
    },
    "441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"assigned_votes\"",
        "0"
      ]
    },
    "442": {
      "op": "app_global_put",
      "stack_out": []
    },
    "443": {
      "retsub": true,
      "op": "retsub"
    },
    "444": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "447": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "449": {
      "op": "bz __puya_arc4_router___after_if_else@11",
      "stack_out": []
    },
    "452": {
      "op": "pushbytess 0xcc694eaa 0x6ecbb813 0x43f37dfa 0x5fcdfdee 0x23d8b7ce 0x74e6557e // method \"create(address)void\", method \"submit(pay,string,byte[59],uint64,uint64)void\", method \"update(string,byte[59])void\", method \"drop()void\", method \"finalize()void\", method \"assign_voter(address,uint64)void\""
    },
    "484": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(assign_voter(address,uint64)void)",
        "Method(create(address)void)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(submit(pay,string,byte[59],uint64,uint64)void)",
        "Method(update(string,byte[59])void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create(address)void)",
        "Method(submit(pay,string,byte[59],uint64,uint64)void)",
        "Method(update(string,byte[59])void)",
        "Method(drop()void)",
        "Method(finalize()void)",
        "Method(assign_voter(address,uint64)void)",
        "tmp%2#0"
      ]
    },
    "487": {
      "op": "match __puya_arc4_router___create_route@2 __puya_arc4_router___submit_route@3 __puya_arc4_router___update_route@4 __puya_arc4_router___drop_route@5 __puya_arc4_router___finalize_route@6 __puya_arc4_router___assign_voter_route@7",
      "stack_out": []
    },
    "501": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "502": {
      "retsub": true,
      "op": "retsub"
    },
    "503": {
      "block": "__puya_arc4_router___create_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "505": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "506": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "507": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "509": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "510": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "511": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "514": {
      "callsub": "smart_contracts.proposal.contract.Proposal.create",
      "op": "callsub create",
      "stack_out": []
    },
    "517": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "518": {
      "retsub": true,
      "op": "retsub"
    },
    "519": {
      "block": "__puya_arc4_router___submit_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "521": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "522": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "523": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "525": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "526": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "528": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "1"
      ]
    },
    "529": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "530": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "531": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "533": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "534": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "535": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "536": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0"
      ]
    },
    "539": {
      "op": "extract 2 0",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%14#0"
      ]
    },
    "542": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "545": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "548": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "549": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "552": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "553": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit",
      "op": "callsub submit",
      "stack_out": []
    },
    "556": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "557": {
      "retsub": true,
      "op": "retsub"
    },
    "558": {
      "block": "__puya_arc4_router___update_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "560": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "561": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "562": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "564": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "565": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "568": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "571": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "574": {
      "callsub": "smart_contracts.proposal.contract.Proposal.update",
      "op": "callsub update",
      "stack_out": []
    },
    "577": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "578": {
      "retsub": true,
      "op": "retsub"
    },
    "579": {
      "block": "__puya_arc4_router___drop_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "581": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "582": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "583": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "585": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "586": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop",
      "op": "callsub drop"
    },
    "589": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "590": {
      "retsub": true,
      "op": "retsub"
    },
    "591": {
      "block": "__puya_arc4_router___finalize_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "593": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "594": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "595": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "597": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "598": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize",
      "op": "callsub finalize"
    },
    "601": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "602": {
      "retsub": true,
      "op": "retsub"
    },
    "603": {
      "block": "__puya_arc4_router___assign_voter_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "605": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "606": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "607": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "609": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "610": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "613": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "616": {
      "op": "btoi",
      "defined_out": [
        "tmp%39#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "tmp%41#0"
      ]
    },
    "617": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "op": "callsub assign_voter",
      "stack_out": []
    },
    "620": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "621": {
      "retsub": true,
      "op": "retsub"
    },
    "622": {
      "block": "__puya_arc4_router___after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "623": {
      "retsub": true,
      "op": "retsub"
    },
    "624": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.create",
      "params": {
        "proposer#0": "bytes"
      },
      "block": "create",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "627": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "629": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "630": {
      "op": "bytec_3 // 0x70726f706f736572",
      "defined_out": [
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0x70726f706f736572"
      ]
    },
    "631": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f736572",
        "proposer#0 (copy)"
      ]
    },
    "633": {
      "op": "app_global_put",
      "stack_out": []
    },
    "634": {
      "op": "bytec 4 // 0x72656769737472795f6170705f6964"
    },
    "636": {
      "op": "global CallerApplicationID",
      "defined_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x72656769737472795f6170705f6964",
        "new_state_value%0#0"
      ]
    },
    "638": {
      "op": "app_global_put",
      "stack_out": []
    },
    "639": {
      "retsub": true,
      "op": "retsub"
    },
    "640": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit",
      "params": {
        "payment#0": "uint64",
        "title#0": "bytes",
        "cid#0": "bytes",
        "funding_type#0": "uint64",
        "requested_amount#0": "uint64"
      },
      "block": "submit",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "643": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit_check_authorization",
      "op": "callsub submit_check_authorization"
    },
    "646": {
      "op": "frame_dig -4",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "648": {
      "op": "frame_dig -3",
      "defined_out": [
        "cid#0 (copy)",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "650": {
      "op": "frame_dig -2",
      "defined_out": [
        "cid#0 (copy)",
        "funding_type#0 (copy)",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "cid#0 (copy)",
        "funding_type#0 (copy)"
      ]
    },
    "652": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)",
        "funding_type#0 (copy)",
        "requested_amount#0 (copy)",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "cid#0 (copy)",
        "funding_type#0 (copy)",
        "requested_amount#0 (copy)"
      ]
    },
    "654": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit_input_validation",
      "op": "callsub submit_input_validation",
      "defined_out": [
        "cid#0"
      ],
      "stack_out": [
        "cid#0"
      ]
    },
    "657": {
      "op": "frame_bury -3",
      "stack_out": []
    },
    "659": {
      "op": "frame_dig -5",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "661": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)",
        "requested_amount#0 (copy)"
      ]
    },
    "663": {
      "callsub": "smart_contracts.proposal.contract.Proposal.submit_payment_validation",
      "op": "callsub submit_payment_validation",
      "stack_out": []
    },
    "666": {
      "op": "bytec 5 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "668": {
      "op": "frame_dig -4",
      "stack_out": [
        "0x7469746c65",
        "title#0 (copy)"
      ]
    },
    "670": {
      "op": "app_global_put",
      "stack_out": []
    },
    "671": {
      "op": "bytec 6 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "673": {
      "op": "frame_dig -3",
      "stack_out": [
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "675": {
      "op": "app_global_put",
      "stack_out": []
    },
    "676": {
      "op": "frame_dig -1",
      "stack_out": [
        "requested_amount#0 (copy)"
      ]
    },
    "678": {
      "callsub": "smart_contracts.proposal.contract.Proposal.set_category",
      "op": "callsub set_category",
      "stack_out": []
    },
    "681": {
      "op": "bytec 13 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "683": {
      "op": "frame_dig -2",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "funding_type#0 (copy)"
      ]
    },
    "685": {
      "op": "app_global_put",
      "stack_out": []
    },
    "686": {
      "op": "bytec 14 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "688": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "requested_amount#0 (copy)"
      ]
    },
    "690": {
      "op": "app_global_put",
      "stack_out": []
    },
    "691": {
      "op": "frame_dig -1",
      "stack_out": [
        "requested_amount#0 (copy)"
      ]
    },
    "693": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "696": {
      "op": "bytec 8 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0x6c6f636b65645f616d6f756e74",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "698": {
      "op": "swap",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "new_state_value%0#0"
      ]
    },
    "699": {
      "op": "app_global_put",
      "stack_out": []
    },
    "700": {
      "op": "bytec 7 // 0x7375626d697373696f6e5f74696d657374616d70"
    },
    "702": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "new_state_value%1#0"
      ]
    },
    "704": {
      "op": "app_global_put",
      "stack_out": []
    },
    "705": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "706": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x737461747573",
        "10"
      ],
      "stack_out": [
        "0x737461747573",
        "10"
      ]
    },
    "707": {
      "op": "app_global_put",
      "stack_out": []
    },
    "708": {
      "retsub": true,
      "op": "retsub"
    },
    "709": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit_check_authorization",
      "params": {},
      "block": "submit_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "712": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "715": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "716": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "717": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "718": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "719": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "720": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "721": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "722": {
      "retsub": true,
      "op": "retsub"
    },
    "723": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "params": {},
      "block": "is_proposer",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "726": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "727": {
      "op": "bytec_3 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "728": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "729": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "730": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "732": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "733": {
      "retsub": true,
      "op": "retsub"
    },
    "734": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit_input_validation",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes",
        "funding_type#0": "uint64",
        "requested_amount#0": "uint64"
      },
      "block": "submit_input_validation",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "737": {
      "op": "frame_dig -4",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "739": {
      "op": "frame_dig -3",
      "defined_out": [
        "cid#0 (copy)",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "741": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0"
      ],
      "stack_out": [
        "cid#0"
      ]
    },
    "744": {
      "op": "frame_bury -3",
      "stack_out": []
    },
    "746": {
      "op": "frame_dig -2",
      "defined_out": [
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#0 (copy)"
      ]
    },
    "748": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#0 (copy)",
        "10"
      ]
    },
    "749": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "750": {
      "op": "bnz submit_input_validation_bool_true@4",
      "stack_out": []
    },
    "753": {
      "op": "frame_dig -2",
      "stack_out": [
        "funding_type#0 (copy)"
      ]
    },
    "755": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "funding_type#0 (copy)"
      ],
      "stack_out": [
        "funding_type#0 (copy)",
        "20"
      ]
    },
    "756": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "757": {
      "op": "bz submit_input_validation_bool_false@5",
      "stack_out": []
    },
    "760": {
      "block": "submit_input_validation_bool_true@4",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "761": {
      "op": "b submit_input_validation_bool_merge@6"
    },
    "764": {
      "block": "submit_input_validation_bool_false@5",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "765": {
      "block": "submit_input_validation_bool_merge@6",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Wrong Funding Type",
      "op": "assert // Wrong Funding Type",
      "defined_out": [],
      "stack_out": []
    },
    "766": {
      "op": "pushbytes 0x6d696e5f7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x6d696e5f7265717565737465645f616d6f756e74"
      ]
    },
    "788": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0"
      ]
    },
    "791": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6c61726765"
      ]
    },
    "819": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0"
      ]
    },
    "822": {
      "op": "frame_dig -1",
      "defined_out": [
        "max_requested_amount_large#0",
        "min_requested_amount#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "min_requested_amount#0",
        "max_requested_amount_large#0",
        "requested_amount#0 (copy)"
      ]
    },
    "824": {
      "op": "uncover 2",
      "stack_out": [
        "max_requested_amount_large#0",
        "requested_amount#0 (copy)",
        "min_requested_amount#0"
      ]
    },
    "826": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_large#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "max_requested_amount_large#0",
        "tmp%2#0"
      ]
    },
    "827": {
      "error": "Requested amount is less than the minimum requested amount",
      "op": "assert // Requested amount is less than the minimum requested amount",
      "stack_out": [
        "max_requested_amount_large#0"
      ]
    },
    "828": {
      "op": "frame_dig -1",
      "stack_out": [
        "max_requested_amount_large#0",
        "requested_amount#0 (copy)"
      ]
    },
    "830": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "831": {
      "error": "Requested amount is more than the maximum requested amount",
      "op": "assert // Requested amount is more than the maximum requested amount",
      "stack_out": []
    },
    "832": {
      "op": "frame_dig -3",
      "defined_out": [
        "cid#0 (copy)"
      ],
      "stack_out": [
        "cid#0 (copy)"
      ]
    },
    "834": {
      "retsub": true,
      "op": "retsub"
    },
    "835": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "updateable_input_validation",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "838": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "840": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "841": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "123"
      ]
    },
    "843": {
      "op": "<=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "844": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "845": {
      "op": "frame_dig -2",
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "847": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "\"\""
      ]
    },
    "848": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "849": {
      "error": "Wrong Title length",
      "op": "assert // Wrong Title length",
      "stack_out": []
    },
    "850": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)"
      ],
      "stack_out": [
        "cid#0 (copy)"
      ]
    },
    "852": {
      "retsub": true,
      "op": "retsub"
    },
    "853": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_uint_from_registry_config",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "856": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "857": {
      "op": "bytec 4 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "859": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "860": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "861": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "863": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "864": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "value#0"
      ]
    },
    "865": {
      "retsub": true,
      "op": "retsub"
    },
    "866": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.submit_payment_validation",
      "params": {
        "payment#0": "uint64",
        "requested_amount#0": "uint64"
      },
      "block": "submit_payment_validation",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "869": {
      "op": "frame_dig -1",
      "defined_out": [
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "requested_amount#0 (copy)"
      ]
    },
    "871": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "op": "callsub get_expected_locked_amount",
      "defined_out": [
        "expected_lock_amount#0"
      ],
      "stack_out": [
        "expected_lock_amount#0"
      ]
    },
    "874": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expected_lock_amount#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "0"
      ]
    },
    "875": {
      "op": "bytec_3 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572",
        "expected_lock_amount#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "0",
        "0x70726f706f736572"
      ]
    },
    "876": {
      "op": "app_global_get_ex",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "877": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "expected_lock_amount#0",
        "maybe_value%0#0"
      ]
    },
    "878": {
      "op": "frame_dig -2",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_value%0#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "maybe_value%0#0",
        "payment#0 (copy)"
      ]
    },
    "880": {
      "op": "gtxns Sender",
      "defined_out": [
        "expected_lock_amount#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "882": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%1#0"
      ]
    },
    "883": {
      "error": "Wrong Sender",
      "op": "assert // Wrong Sender",
      "stack_out": [
        "expected_lock_amount#0"
      ]
    },
    "884": {
      "op": "frame_dig -2",
      "stack_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "886": {
      "op": "gtxns Receiver",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%2#0"
      ]
    },
    "888": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "890": {
      "op": "==",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%4#0"
      ]
    },
    "891": {
      "error": "Wrong Receiver",
      "op": "assert // Wrong Receiver",
      "stack_out": [
        "expected_lock_amount#0"
      ]
    },
    "892": {
      "op": "frame_dig -2",
      "stack_out": [
        "expected_lock_amount#0",
        "payment#0 (copy)"
      ]
    },
    "894": {
      "op": "gtxns Amount",
      "defined_out": [
        "expected_lock_amount#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "expected_lock_amount#0",
        "tmp%5#0"
      ]
    },
    "896": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "897": {
      "error": "Locked amount is incorrect",
      "op": "assert // Locked amount is incorrect",
      "stack_out": []
    },
    "898": {
      "retsub": true,
      "op": "retsub"
    },
    "899": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_expected_locked_amount",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "get_expected_locked_amount",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "902": {
      "op": "pushbytes 0x70726f706f73616c5f636f6d6d69746d656e745f627073",
      "defined_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ],
      "stack_out": [
        "0x70726f706f73616c5f636f6d6d69746d656e745f627073"
      ]
    },
    "927": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "930": {
      "op": "frame_dig -1",
      "defined_out": [
        "requested_amount#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "requested_amount#0 (copy)"
      ]
    },
    "932": {
      "op": "swap",
      "stack_out": [
        "requested_amount#0 (copy)",
        "tmp%0#0"
      ]
    },
    "933": {
      "callsub": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "op": "callsub relative_to_absolute_amount",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "936": {
      "retsub": true,
      "op": "retsub"
    },
    "937": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "params": {
        "amount#0": "uint64",
        "fraction_in_bps#0": "uint64"
      },
      "block": "relative_to_absolute_amount",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "940": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "942": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "fraction_in_bps#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)",
        "fraction_in_bps#0 (copy)"
      ]
    },
    "944": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "945": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "10000"
      ]
    },
    "948": {
      "op": "/",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "949": {
      "retsub": true,
      "op": "retsub"
    },
    "950": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.set_category",
      "params": {
        "requested_amount#0": "uint64"
      },
      "block": "set_category",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "953": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f736d616c6c",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ],
      "stack_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f736d616c6c"
      ]
    },
    "981": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0"
      ]
    },
    "984": {
      "op": "pushbytes 0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
      "defined_out": [
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "0x6d61785f7265717565737465645f616d6f756e745f6d656469756d"
      ]
    },
    "1013": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_small#0",
        "max_requested_amount_medium#0"
      ]
    },
    "1016": {
      "op": "swap",
      "defined_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0"
      ]
    },
    "1017": {
      "op": "frame_dig -1",
      "defined_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "max_requested_amount_small#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1019": {
      "op": ">=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%0#0"
      ]
    },
    "1020": {
      "op": "bz set_category_else_body@2",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1023": {
      "op": "bytec_2 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279"
      ]
    },
    "1024": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0x63617465676f7279",
        "10",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279",
        "10"
      ]
    },
    "1025": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1026": {
      "op": "b set_category_after_if_else@6"
    },
    "1029": {
      "block": "set_category_else_body@2",
      "stack_in": [
        "max_requested_amount_medium#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "requested_amount#0 (copy)"
      ]
    },
    "1031": {
      "op": "frame_dig 0",
      "defined_out": [
        "max_requested_amount_medium#0",
        "requested_amount#0 (copy)"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "requested_amount#0 (copy)",
        "max_requested_amount_medium#0"
      ]
    },
    "1033": {
      "op": "<=",
      "defined_out": [
        "max_requested_amount_medium#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "tmp%1#0"
      ]
    },
    "1034": {
      "op": "bz set_category_else_body@4",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1037": {
      "op": "bytec_2 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279"
      ]
    },
    "1038": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x63617465676f7279",
        "20",
        "max_requested_amount_medium#0"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279",
        "20"
      ]
    },
    "1039": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1040": {
      "op": "b set_category_after_if_else@6"
    },
    "1043": {
      "block": "set_category_else_body@4",
      "stack_in": [
        "max_requested_amount_medium#0"
      ],
      "op": "bytec_2 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279"
      ]
    },
    "1044": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "0x63617465676f7279",
        "33"
      ],
      "stack_out": [
        "max_requested_amount_medium#0",
        "0x63617465676f7279",
        "33"
      ]
    },
    "1046": {
      "op": "app_global_put",
      "stack_out": [
        "max_requested_amount_medium#0"
      ]
    },
    "1047": {
      "block": "set_category_after_if_else@6",
      "stack_in": [
        "max_requested_amount_medium#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1048": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.update",
      "params": {
        "title#0": "bytes",
        "cid#0": "bytes"
      },
      "block": "update",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1051": {
      "callsub": "smart_contracts.proposal.contract.Proposal.update_check_authorization",
      "op": "callsub update_check_authorization"
    },
    "1054": {
      "op": "frame_dig -2",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "1056": {
      "op": "frame_dig -1",
      "defined_out": [
        "cid#0 (copy)",
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)",
        "cid#0 (copy)"
      ]
    },
    "1058": {
      "callsub": "smart_contracts.proposal.contract.Proposal.updateable_input_validation",
      "op": "callsub updateable_input_validation",
      "defined_out": [
        "cid#0"
      ],
      "stack_out": [
        "cid#0"
      ]
    },
    "1061": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "1063": {
      "op": "bytec 5 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "1065": {
      "op": "frame_dig -2",
      "stack_out": [
        "0x7469746c65",
        "title#0 (copy)"
      ]
    },
    "1067": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1068": {
      "op": "bytec 6 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1070": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x636964",
        "cid#0 (copy)"
      ]
    },
    "1072": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1073": {
      "retsub": true,
      "op": "retsub"
    },
    "1074": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.update_check_authorization",
      "params": {},
      "block": "update_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1077": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1080": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1081": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1082": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1083": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1084": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1085": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1086": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1087": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1088": {
      "retsub": true,
      "op": "retsub"
    },
    "1089": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop",
      "params": {},
      "block": "drop",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1092": {
      "callsub": "smart_contracts.proposal.contract.Proposal.drop_check_authorization",
      "op": "callsub drop_check_authorization"
    },
    "1095": {
      "op": "itxn_begin"
    },
    "1096": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1097": {
      "op": "bytec_3 // 0x70726f706f736572",
      "defined_out": [
        "0",
        "0x70726f706f736572"
      ],
      "stack_out": [
        "0",
        "0x70726f706f736572"
      ]
    },
    "1098": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1099": {
      "error": "check self.proposer exists",
      "op": "assert // check self.proposer exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1100": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "1101": {
      "op": "bytec 8 // 0x6c6f636b65645f616d6f756e74",
      "defined_out": [
        "0",
        "0x6c6f636b65645f616d6f756e74",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1103": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1104": {
      "error": "check self.locked_amount exists",
      "op": "assert // check self.locked_amount exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "1105": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1107": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1109": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1110": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1112": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1113": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1115": {
      "op": "itxn_submit"
    },
    "1116": {
      "op": "bytec 5 // 0x7469746c65",
      "defined_out": [
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65"
      ]
    },
    "1118": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "0x7469746c65"
      ],
      "stack_out": [
        "0x7469746c65",
        "\"\""
      ]
    },
    "1119": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1120": {
      "op": "bytec 6 // 0x636964",
      "defined_out": [
        "0x636964"
      ],
      "stack_out": [
        "0x636964"
      ]
    },
    "1122": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "0x636964"
      ],
      "stack_out": [
        "0x636964",
        "0x"
      ]
    },
    "1123": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1124": {
      "op": "bytec_2 // 0x63617465676f7279",
      "defined_out": [
        "0x63617465676f7279"
      ],
      "stack_out": [
        "0x63617465676f7279"
      ]
    },
    "1125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x63617465676f7279",
        "0"
      ]
    },
    "1126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1127": {
      "op": "bytec 13 // 0x66756e64696e675f74797065",
      "defined_out": [
        "0x66756e64696e675f74797065"
      ],
      "stack_out": [
        "0x66756e64696e675f74797065"
      ]
    },
    "1129": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x66756e64696e675f74797065",
        "0"
      ]
    },
    "1130": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1131": {
      "op": "bytec 14 // 0x7265717565737465645f616d6f756e74",
      "defined_out": [
        "0x7265717565737465645f616d6f756e74"
      ],
      "stack_out": [
        "0x7265717565737465645f616d6f756e74"
      ]
    },
    "1133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7265717565737465645f616d6f756e74",
        "0"
      ]
    },
    "1134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1135": {
      "op": "bytec 8 // 0x6c6f636b65645f616d6f756e74",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74"
      ]
    },
    "1137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6c6f636b65645f616d6f756e74",
        "0"
      ]
    },
    "1138": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1139": {
      "op": "bytec 7 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ],
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x7375626d697373696f6e5f74696d657374616d70",
        "0"
      ]
    },
    "1142": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1143": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1144": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x737461747573",
        "0"
      ]
    },
    "1145": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1146": {
      "retsub": true,
      "op": "retsub"
    },
    "1147": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.drop_check_authorization",
      "params": {},
      "block": "drop_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1150": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1153": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1154": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1155": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1156": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1157": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1158": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1159": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1160": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1161": {
      "retsub": true,
      "op": "retsub"
    },
    "1162": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize",
      "params": {},
      "block": "finalize",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1165": {
      "callsub": "smart_contracts.proposal.contract.Proposal.finalize_check_authorization",
      "op": "callsub finalize_check_authorization"
    },
    "1168": {
      "callsub": "smart_contracts.proposal.contract.Proposal.verify_and_set_committee",
      "op": "callsub verify_and_set_committee"
    },
    "1171": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1172": {
      "op": "intc_3 // 20",
      "defined_out": [
        "0x737461747573",
        "20"
      ],
      "stack_out": [
        "0x737461747573",
        "20"
      ]
    },
    "1173": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1174": {
      "op": "bytec 16 // 0x66696e616c697a6174696f6e5f74696d657374616d70"
    },
    "1176": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "0x66696e616c697a6174696f6e5f74696d657374616d70",
        "new_state_value%0#0"
      ]
    },
    "1178": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1179": {
      "op": "pushbytes 0x70726f706f73616c5f666565",
      "defined_out": [
        "0x70726f706f73616c5f666565"
      ],
      "stack_out": [
        "0x70726f706f73616c5f666565"
      ]
    },
    "1193": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "proposal_fee#0"
      ],
      "stack_out": [
        "proposal_fee#0"
      ]
    },
    "1196": {
      "op": "pushbytes 0x70726f706f73616c5f7075626c697368696e675f627073",
      "defined_out": [
        "0x70726f706f73616c5f7075626c697368696e675f627073",
        "proposal_fee#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "0x70726f706f73616c5f7075626c697368696e675f627073"
      ]
    },
    "1221": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1224": {
      "op": "itxn_begin"
    },
    "1225": {
      "op": "bytec 18 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1227": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1230": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1231": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1232": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%0#0",
        "32"
      ]
    },
    "1234": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1235": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "proposal_fee#0",
        "publishing_fee_bps#0",
        "awst_tmp%0#0"
      ]
    },
    "1236": {
      "op": "cover 2",
      "stack_out": [
        "awst_tmp%0#0",
        "proposal_fee#0",
        "publishing_fee_bps#0"
      ]
    },
    "1238": {
      "callsub": "smart_contracts.proposal.contract.Proposal.relative_to_absolute_amount",
      "op": "callsub relative_to_absolute_amount",
      "defined_out": [
        "awst_tmp%0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "1241": {
      "op": "itxn_field Amount",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1243": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1245": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1246": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1248": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1249": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1251": {
      "op": "itxn_submit"
    },
    "1252": {
      "retsub": true,
      "op": "retsub"
    },
    "1253": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.finalize_check_authorization",
      "params": {},
      "block": "finalize_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1256": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_proposer",
      "op": "callsub is_proposer",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1259": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1260": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1261": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1262": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1263": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1264": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "10"
      ]
    },
    "1265": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1266": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1267": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1269": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1270": {
      "op": "bytec 7 // 0x7375626d697373696f6e5f74696d657374616d70",
      "defined_out": [
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "0x7375626d697373696f6e5f74696d657374616d70"
      ]
    },
    "1272": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1273": {
      "error": "check self.submission_ts exists",
      "op": "assert // check self.submission_ts exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1274": {
      "op": "-",
      "defined_out": [
        "discussion_duration#0"
      ],
      "stack_out": [
        "discussion_duration#0"
      ]
    },
    "1275": {
      "op": "intc_0 // 0",
      "stack_out": [
        "discussion_duration#0",
        "0"
      ]
    },
    "1276": {
      "op": "bytec_2 // 0x63617465676f7279",
      "defined_out": [
        "0",
        "0x63617465676f7279",
        "discussion_duration#0"
      ],
      "stack_out": [
        "discussion_duration#0",
        "0",
        "0x63617465676f7279"
      ]
    },
    "1277": {
      "op": "app_global_get_ex",
      "defined_out": [
        "discussion_duration#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "discussion_duration#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1278": {
      "error": "check self.category exists",
      "op": "assert // check self.category exists",
      "stack_out": [
        "discussion_duration#0",
        "maybe_value%2#0"
      ]
    },
    "1279": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_discussion_duration",
      "op": "callsub get_discussion_duration",
      "defined_out": [
        "discussion_duration#0",
        "minimum_discussion_duration#0"
      ],
      "stack_out": [
        "discussion_duration#0",
        "minimum_discussion_duration#0"
      ]
    },
    "1282": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1283": {
      "error": "Too early",
      "op": "assert // Too early",
      "stack_out": []
    },
    "1284": {
      "retsub": true,
      "op": "retsub"
    },
    "1285": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_discussion_duration",
      "params": {
        "category#0": "uint64"
      },
      "block": "get_discussion_duration",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1288": {
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)"
      ]
    },
    "1290": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)",
        "10"
      ]
    },
    "1291": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1292": {
      "op": "bz get_discussion_duration_else_body@2",
      "stack_out": []
    },
    "1295": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f736d616c6c",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f736d616c6c"
      ]
    },
    "1322": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1325": {
      "retsub": true,
      "op": "retsub"
    },
    "1326": {
      "block": "get_discussion_duration_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)"
      ]
    },
    "1328": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "category#0 (copy)"
      ],
      "stack_out": [
        "category#0 (copy)",
        "20"
      ]
    },
    "1329": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1330": {
      "op": "bz get_discussion_duration_else_body@4",
      "stack_out": []
    },
    "1333": {
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6d656469756d",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6d656469756d"
      ]
    },
    "1361": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1364": {
      "retsub": true,
      "op": "retsub"
    },
    "1365": {
      "block": "get_discussion_duration_else_body@4",
      "stack_in": [],
      "op": "pushbytes 0x64697363757373696f6e5f6475726174696f6e5f6c61726765",
      "defined_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ],
      "stack_out": [
        "0x64697363757373696f6e5f6475726174696f6e5f6c61726765"
      ]
    },
    "1392": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1395": {
      "retsub": true,
      "op": "retsub"
    },
    "1396": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.verify_and_set_committee",
      "params": {},
      "block": "verify_and_set_committee",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1399": {
      "op": "bytec 15 // 0x636f6d6d69747465655f6964",
      "defined_out": [
        "0x636f6d6d69747465655f6964"
      ],
      "stack_out": [
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1401": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1404": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)"
      ]
    },
    "1405": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "committee_id#0",
        "committee_id#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_id#0 (copy)",
        "0x"
      ]
    },
    "1406": {
      "op": "!=",
      "defined_out": [
        "committee_id#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "committee_id#0",
        "tmp%0#0"
      ]
    },
    "1407": {
      "error": "Empty Committee ID",
      "op": "assert // Empty Committee ID",
      "stack_out": [
        "committee_id#0"
      ]
    },
    "1408": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_id#0"
      ],
      "stack_out": [
        "committee_id#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1410": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1413": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_members#0 (copy)"
      ]
    },
    "1414": {
      "error": "Wrong Committee Members",
      "op": "assert // Wrong Committee Members",
      "stack_out": [
        "committee_id#0",
        "committee_members#0"
      ]
    },
    "1415": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_id#0",
        "committee_members#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1417": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_uint_from_registry_config",
      "op": "callsub get_uint_from_registry_config",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1420": {
      "op": "dup",
      "defined_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ],
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "committee_votes#0 (copy)"
      ]
    },
    "1421": {
      "error": "Wrong Committee Votes",
      "op": "assert // Wrong Committee Votes",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1422": {
      "op": "bytec 15 // 0x636f6d6d69747465655f6964",
      "stack_out": [
        "committee_id#0",
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964"
      ]
    },
    "1424": {
      "op": "uncover 3",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6964",
        "committee_id#0"
      ]
    },
    "1426": {
      "op": "app_global_put",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0"
      ]
    },
    "1427": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d656d62657273",
      "stack_out": [
        "committee_members#0",
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1429": {
      "op": "uncover 2",
      "stack_out": [
        "committee_votes#0",
        "0x636f6d6d69747465655f6d656d62657273",
        "committee_members#0"
      ]
    },
    "1431": {
      "op": "app_global_put",
      "stack_out": [
        "committee_votes#0"
      ]
    },
    "1432": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "stack_out": [
        "committee_votes#0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1434": {
      "op": "swap",
      "stack_out": [
        "0x636f6d6d69747465655f766f746573",
        "committee_votes#0"
      ]
    },
    "1435": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1436": {
      "retsub": true,
      "op": "retsub"
    },
    "1437": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "params": {
        "global_state_key#0": "bytes"
      },
      "block": "get_bytes_from_registry_config",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1440": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1441": {
      "op": "bytec 4 // 0x72656769737472795f6170705f6964",
      "defined_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ],
      "stack_out": [
        "0",
        "0x72656769737472795f6170705f6964"
      ]
    },
    "1443": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1444": {
      "error": "check self.registry_app_id exists",
      "op": "assert // check self.registry_app_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1445": {
      "op": "frame_dig -1",
      "defined_out": [
        "global_state_key#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "global_state_key#0 (copy)"
      ]
    },
    "1447": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "exists#0"
      ]
    },
    "1448": {
      "error": "Missing Config",
      "op": "assert // Missing Config",
      "stack_out": [
        "value#0"
      ]
    },
    "1449": {
      "retsub": true,
      "op": "retsub"
    },
    "1450": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter",
      "params": {
        "voter#0": "bytes",
        "voting_power#0": "uint64"
      },
      "block": "assign_voter",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1453": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter_check_authorization",
      "op": "callsub assign_voter_check_authorization"
    },
    "1456": {
      "op": "frame_dig -2",
      "defined_out": [
        "voter#0 (copy)"
      ],
      "stack_out": [
        "voter#0 (copy)"
      ]
    },
    "1458": {
      "callsub": "smart_contracts.proposal.contract.Proposal.assign_voter_input_validation",
      "op": "callsub assign_voter_input_validation",
      "stack_out": []
    },
    "1461": {
      "op": "frame_dig -1",
      "defined_out": [
        "voting_power#0 (copy)"
      ],
      "stack_out": [
        "voting_power#0 (copy)"
      ]
    },
    "1463": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1464": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x00"
      ]
    },
    "1467": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1468": {
      "op": "pushbytes \"V\"",
      "defined_out": [
        "\"V\"",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "\"V\""
      ]
    },
    "1471": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1473": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0"
      ]
    },
    "1474": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1475": {
      "op": "box_put",
      "stack_out": []
    },
    "1476": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1477": {
      "op": "bytec 11 // \"voters_count\"",
      "defined_out": [
        "\"voters_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"voters_count\""
      ]
    },
    "1479": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1480": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1481": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1482": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1483": {
      "op": "bytec 11 // \"voters_count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"voters_count\""
      ]
    },
    "1485": {
      "op": "swap",
      "stack_out": [
        "\"voters_count\"",
        "new_state_value%0#0"
      ]
    },
    "1486": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1487": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1488": {
      "op": "bytec 12 // \"assigned_votes\"",
      "defined_out": [
        "\"assigned_votes\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"assigned_votes\""
      ]
    },
    "1490": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1491": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1492": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%1#0",
        "voting_power#0 (copy)"
      ]
    },
    "1494": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "1495": {
      "op": "bytec 12 // \"assigned_votes\"",
      "stack_out": [
        "new_state_value%1#0",
        "\"assigned_votes\""
      ]
    },
    "1497": {
      "op": "swap",
      "stack_out": [
        "\"assigned_votes\"",
        "new_state_value%1#0"
      ]
    },
    "1498": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1499": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1500": {
      "op": "bytec 11 // \"voters_count\"",
      "stack_out": [
        "0",
        "\"voters_count\""
      ]
    },
    "1502": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1503": {
      "error": "check self.voters_count exists",
      "op": "assert // check self.voters_count exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "0"
      ]
    },
    "1505": {
      "op": "bytec 9 // 0x636f6d6d69747465655f6d656d62657273",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f6d656d62657273",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "0",
        "0x636f6d6d69747465655f6d656d62657273"
      ]
    },
    "1507": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1508": {
      "error": "check self.committee_members exists",
      "op": "assert // check self.committee_members exists",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "1509": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1510": {
      "op": "bz assign_voter_after_if_else@2",
      "stack_out": []
    },
    "1513": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1514": {
      "op": "bytec 12 // \"assigned_votes\"",
      "stack_out": [
        "0",
        "\"assigned_votes\""
      ]
    },
    "1516": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1517": {
      "error": "check self.assigned_votes exists",
      "op": "assert // check self.assigned_votes exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "1518": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%4#0",
        "0"
      ]
    },
    "1519": {
      "op": "bytec 10 // 0x636f6d6d69747465655f766f746573",
      "defined_out": [
        "0",
        "0x636f6d6d69747465655f766f746573",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "0",
        "0x636f6d6d69747465655f766f746573"
      ]
    },
    "1521": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1522": {
      "error": "check self.committee_votes exists",
      "op": "assert // check self.committee_votes exists",
      "stack_out": [
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "1523": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1524": {
      "error": "Voting Power Mismatch",
      "op": "assert // Voting Power Mismatch",
      "stack_out": []
    },
    "1525": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0x737461747573"
      ],
      "stack_out": [
        "0x737461747573"
      ]
    },
    "1526": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "0x737461747573",
        "25"
      ],
      "stack_out": [
        "0x737461747573",
        "25"
      ]
    },
    "1528": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1529": {
      "op": "bytec 17 // 0x766f74655f6f70656e696e675f74696d657374616d70"
    },
    "1531": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "0x766f74655f6f70656e696e675f74696d657374616d70",
        "new_state_value%2#0"
      ]
    },
    "1533": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1534": {
      "block": "assign_voter_after_if_else@2",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1535": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter_check_authorization",
      "params": {},
      "block": "assign_voter_check_authorization",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1538": {
      "callsub": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "op": "callsub is_committee_publisher",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1541": {
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "stack_out": []
    },
    "1542": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1543": {
      "op": "bytec_0 // 0x737461747573",
      "defined_out": [
        "0",
        "0x737461747573"
      ],
      "stack_out": [
        "0",
        "0x737461747573"
      ]
    },
    "1544": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1545": {
      "error": "check self.status exists",
      "op": "assert // check self.status exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1546": {
      "op": "intc_3 // 20",
      "defined_out": [
        "20",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "20"
      ]
    },
    "1547": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1548": {
      "error": "Wrong Proposal Status",
      "op": "assert // Wrong Proposal Status",
      "stack_out": []
    },
    "1549": {
      "retsub": true,
      "op": "retsub"
    },
    "1550": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.is_committee_publisher",
      "params": {},
      "block": "is_committee_publisher",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1553": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1555": {
      "op": "bytec 18 // 0x636f6d6d69747465655f7075626c6973686572",
      "defined_out": [
        "0x636f6d6d69747465655f7075626c6973686572",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x636f6d6d69747465655f7075626c6973686572"
      ]
    },
    "1557": {
      "callsub": "smart_contracts.proposal.contract.Proposal.get_bytes_from_registry_config",
      "op": "callsub get_bytes_from_registry_config",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1560": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1561": {
      "op": "len",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1562": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%1#0",
        "32"
      ]
    },
    "1564": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1565": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "1566": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1567": {
      "retsub": true,
      "op": "retsub"
    },
    "1568": {
      "subroutine": "smart_contracts.proposal.contract.Proposal.assign_voter_input_validation",
      "params": {
        "voter#0": "bytes"
      },
      "block": "assign_voter_input_validation",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1571": {
      "op": "pushbytes \"V\"",
      "defined_out": [
        "\"V\""
      ],
      "stack_out": [
        "\"V\""
      ]
    },
    "1574": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"V\"",
        "voter#0 (copy)"
      ],
      "stack_out": [
        "\"V\"",
        "voter#0 (copy)"
      ]
    },
    "1576": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1577": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1578": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1580": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1581": {
      "error": "Voter Already Assigned",
      "op": "assert // Voter Already Assigned",
      "stack_out": []
    },
    "1582": {
      "retsub": true,
      "op": "retsub"
    }
  }
}
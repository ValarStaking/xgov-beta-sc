{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "49: callsub create"
            ],
            [
              "133: create:",
              "137: proto 1 0",
              "140: byte \"proposer\"",
              "143: frame_dig -1",
              "144: app_global_put",
              "147: byte \"registry_app_id\"",
              "150: global CallerApplicationID",
              "151: app_global_put",
              "152: retsub"
            ],
            [
              "50: int 1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "92: main_update_proposal_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "110: txna ApplicationArgs 1",
              "111: extract 2 0",
              "112: txna ApplicationArgs 2",
              "115: callsub update_proposal"
            ],
            [
              "619: update_proposal:",
              "623: proto 2 0",
              "626: callsub update_check_authorization"
            ],
            [
              "651: update_check_authorization:",
              "655: proto 0 0",
              "658: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "659: assert",
              "662: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "663: assert",
              "666: int 0",
              "669: byte \"status\"",
              "672: app_global_get_ex",
              "673: assert",
              "674: int 10",
              "675: ==",
              "676: assert",
              "677: retsub"
            ],
            [
              "629: frame_dig -2",
              "630: frame_dig -1",
              "631: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "632: frame_bury -1",
              "635: byte \"title\"",
              "638: frame_dig -2",
              "639: app_global_put",
              "642: byte \"cid\"",
              "645: frame_dig -1",
              "646: app_global_put",
              "647: retsub"
            ],
            [
              "116: int 1",
              "117: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "119: main_drop_proposal_route@6:",
              "122: txn OnCompletion",
              "123: !",
              "124: assert",
              "125: txn ApplicationID",
              "126: assert",
              "127: callsub drop_proposal"
            ],
            [
              "681: drop_proposal:",
              "685: proto 0 0",
              "688: callsub drop_check_authorization"
            ],
            [
              "794: drop_check_authorization:",
              "798: proto 0 0",
              "801: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "802: assert",
              "805: int 0",
              "808: byte \"status\"",
              "811: app_global_get_ex",
              "812: assert",
              "813: int 10",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "695: itxn_begin",
              "698: int 0",
              "701: byte \"proposer\"",
              "704: app_global_get_ex",
              "705: assert",
              "708: int 0",
              "711: byte \"locked_amount\"",
              "714: app_global_get_ex",
              "715: assert",
              "716: itxn_field Amount",
              "717: itxn_field Receiver",
              "720: int pay",
              "721: itxn_field TypeEnum",
              "724: int 0",
              "725: itxn_field Fee",
              "732: itxn_submit",
              "735: byte \"title\"",
              "739: byte \"\"",
              "740: app_global_put",
              "743: byte \"cid\"",
              "746: byte 0x",
              "747: app_global_put",
              "750: byte \"category\"",
              "753: int 0",
              "754: app_global_put",
              "757: byte \"funding_type\"",
              "760: int 0",
              "761: app_global_put",
              "764: byte \"requested_amount\"",
              "767: int 0",
              "768: app_global_put",
              "771: byte \"locked_amount\"",
              "774: int 0",
              "775: app_global_put",
              "778: byte \"submission_ts\"",
              "781: int 0",
              "782: app_global_put",
              "785: byte \"status\"",
              "788: int 0",
              "789: app_global_put",
              "790: retsub"
            ],
            [
              "128: int 1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "49: callsub create"
            ],
            [
              "133: create:",
              "137: proto 1 0",
              "140: byte \"proposer\"",
              "143: frame_dig -1",
              "144: app_global_put",
              "147: byte \"registry_app_id\"",
              "150: global CallerApplicationID",
              "151: app_global_put",
              "152: retsub"
            ],
            [
              "50: int 1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "92: main_update_proposal_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "110: txna ApplicationArgs 1",
              "111: extract 2 0",
              "112: txna ApplicationArgs 2",
              "115: callsub update_proposal"
            ],
            [
              "619: update_proposal:",
              "623: proto 2 0",
              "626: callsub update_check_authorization"
            ],
            [
              "651: update_check_authorization:",
              "655: proto 0 0",
              "658: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "659: assert",
              "662: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "663: assert",
              "666: int 0",
              "669: byte \"status\"",
              "672: app_global_get_ex",
              "673: assert",
              "674: int 10",
              "675: ==",
              "676: assert",
              "677: retsub"
            ],
            [
              "629: frame_dig -2",
              "630: frame_dig -1",
              "631: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "632: frame_bury -1",
              "635: byte \"title\"",
              "638: frame_dig -2",
              "639: app_global_put",
              "642: byte \"cid\"",
              "645: frame_dig -1",
              "646: app_global_put",
              "647: retsub"
            ],
            [
              "116: int 1",
              "117: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "119: main_drop_proposal_route@6:",
              "122: txn OnCompletion",
              "123: !",
              "124: assert",
              "125: txn ApplicationID",
              "126: assert",
              "127: callsub drop_proposal"
            ],
            [
              "681: drop_proposal:",
              "685: proto 0 0",
              "688: callsub drop_check_authorization"
            ],
            [
              "794: drop_check_authorization:",
              "798: proto 0 0",
              "801: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "802: assert",
              "805: int 0",
              "808: byte \"status\"",
              "811: app_global_get_ex",
              "812: assert",
              "813: int 10",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "695: itxn_begin",
              "698: int 0",
              "701: byte \"proposer\"",
              "704: app_global_get_ex",
              "705: assert",
              "708: int 0",
              "711: byte \"locked_amount\"",
              "714: app_global_get_ex",
              "715: assert",
              "716: itxn_field Amount",
              "717: itxn_field Receiver",
              "720: int pay",
              "721: itxn_field TypeEnum",
              "724: int 0",
              "725: itxn_field Fee",
              "732: itxn_submit",
              "735: byte \"title\"",
              "739: byte \"\"",
              "740: app_global_put",
              "743: byte \"cid\"",
              "746: byte 0x",
              "747: app_global_put",
              "750: byte \"category\"",
              "753: int 0",
              "754: app_global_put",
              "757: byte \"funding_type\"",
              "760: int 0",
              "761: app_global_put",
              "764: byte \"requested_amount\"",
              "767: int 0",
              "768: app_global_put",
              "771: byte \"locked_amount\"",
              "774: int 0",
              "775: app_global_put",
              "778: byte \"submission_ts\"",
              "781: int 0",
              "782: app_global_put",
              "785: byte \"status\"",
              "788: int 0",
              "789: app_global_put",
              "790: retsub"
            ],
            [
              "128: int 1",
              "129: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "49: callsub create"
            ],
            [
              "133: create:",
              "137: proto 1 0",
              "140: byte \"proposer\"",
              "143: frame_dig -1",
              "144: app_global_put",
              "147: byte \"registry_app_id\"",
              "150: global CallerApplicationID",
              "151: app_global_put",
              "152: retsub"
            ],
            [
              "50: int 1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "92: main_update_proposal_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "110: txna ApplicationArgs 1",
              "111: extract 2 0",
              "112: txna ApplicationArgs 2",
              "115: callsub update_proposal"
            ],
            [
              "619: update_proposal:",
              "623: proto 2 0",
              "626: callsub update_check_authorization"
            ],
            [
              "651: update_check_authorization:",
              "655: proto 0 0",
              "658: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "659: assert",
              "662: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "663: assert",
              "666: int 0",
              "669: byte \"status\"",
              "672: app_global_get_ex",
              "673: assert",
              "674: int 10",
              "675: ==",
              "676: assert",
              "677: retsub"
            ],
            [
              "629: frame_dig -2",
              "630: frame_dig -1",
              "631: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "632: frame_bury -1",
              "635: byte \"title\"",
              "638: frame_dig -2",
              "639: app_global_put",
              "642: byte \"cid\"",
              "645: frame_dig -1",
              "646: app_global_put",
              "647: retsub"
            ],
            [
              "116: int 1",
              "117: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "820: __init__:",
              "823: proto 0 0",
              "827: txn GlobalNumByteSlice",
              "828: int 5",
              "829: ==",
              "830: assert",
              "833: txn GlobalNumUint",
              "834: int 13",
              "835: ==",
              "836: assert",
              "839: txn LocalNumByteSlice",
              "840: !",
              "841: assert",
              "844: txn LocalNumUint",
              "845: !",
              "846: assert",
              "849: byte \"committee_publisher\"",
              "852: global ZeroAddress",
              "857: app_global_put",
              "860: byte \"proposer\"",
              "861: global ZeroAddress",
              "862: app_global_put",
              "865: byte \"registry_app_id\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"title\"",
              "871: byte \"\"",
              "872: app_global_put",
              "875: byte \"cid\"",
              "878: byte 0x",
              "883: app_global_put",
              "886: byte \"submission_ts\"",
              "887: int 0",
              "888: app_global_put",
              "891: byte \"finalization_ts\"",
              "892: int 0",
              "893: app_global_put",
              "896: byte \"status\"",
              "897: int 0",
              "898: app_global_put",
              "901: byte \"category\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"funding_type\"",
              "915: int 0",
              "916: app_global_put",
              "919: byte \"requested_amount\"",
              "920: int 0",
              "921: app_global_put",
              "924: byte \"locked_amount\"",
              "927: int 0",
              "932: app_global_put",
              "935: byte \"committee_id\"",
              "936: byte 0x",
              "937: app_global_put",
              "940: byte \"committee_members\"",
              "941: int 0",
              "942: app_global_put",
              "945: byte \"committee_votes\"",
              "946: int 0",
              "947: app_global_put",
              "950: byte \"voted_members\"",
              "951: int 0",
              "952: app_global_put",
              "955: byte \"approvals\"",
              "958: int 0",
              "963: app_global_put",
              "966: byte \"rejections\"",
              "969: int 0",
              "974: app_global_put",
              "975: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "119: main_drop_proposal_route@6:",
              "122: txn OnCompletion",
              "123: !",
              "124: assert",
              "125: txn ApplicationID",
              "126: assert",
              "127: callsub drop_proposal"
            ],
            [
              "681: drop_proposal:",
              "685: proto 0 0",
              "688: callsub drop_check_authorization"
            ],
            [
              "794: drop_check_authorization:",
              "798: proto 0 0",
              "801: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "802: assert",
              "805: int 0",
              "808: byte \"status\"",
              "811: app_global_get_ex",
              "812: assert",
              "813: int 10",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "695: itxn_begin",
              "698: int 0",
              "701: byte \"proposer\"",
              "704: app_global_get_ex",
              "705: assert",
              "708: int 0",
              "711: byte \"locked_amount\"",
              "714: app_global_get_ex",
              "715: assert",
              "716: itxn_field Amount",
              "717: itxn_field Receiver",
              "720: int pay",
              "721: itxn_field TypeEnum",
              "724: int 0",
              "725: itxn_field Fee",
              "732: itxn_submit",
              "735: byte \"title\"",
              "739: byte \"\"",
              "740: app_global_put",
              "743: byte \"cid\"",
              "746: byte 0x",
              "747: app_global_put",
              "750: byte \"category\"",
              "753: int 0",
              "754: app_global_put",
              "757: byte \"funding_type\"",
              "760: int 0",
              "761: app_global_put",
              "764: byte \"requested_amount\"",
              "767: int 0",
              "768: app_global_put",
              "771: byte \"locked_amount\"",
              "774: int 0",
              "775: app_global_put",
              "778: byte \"submission_ts\"",
              "781: int 0",
              "782: app_global_put",
              "785: byte \"status\"",
              "788: int 0",
              "789: app_global_put",
              "790: retsub"
            ],
            [
              "128: int 1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "49: callsub create"
            ],
            [
              "133: create:",
              "137: proto 1 0",
              "140: byte \"proposer\"",
              "143: frame_dig -1",
              "144: app_global_put",
              "147: byte \"registry_app_id\"",
              "150: global CallerApplicationID",
              "151: app_global_put",
              "152: retsub"
            ],
            [
              "50: int 1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "338: frame_dig -2",
              "339: int 20",
              "340: ==",
              "344: bz submit_input_validation_bool_false@3"
            ],
            [
              "350: submit_input_validation_bool_false@3:",
              "351: int 0"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "558: byte \"category\"",
              "561: int 10",
              "562: app_global_put",
              "563: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "574: byte \"category\"",
              "577: int 20",
              "578: app_global_put",
              "579: b set_category_after_if_else@6"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "53: main_submit_proposal_route@4:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "71: txn GroupIndex",
              "72: int 1",
              "73: -",
              "74: dup",
              "75: Gtxns TypeEnum",
              "76: int pay",
              "77: ==",
              "78: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "81: txna ApplicationArgs 2",
              "82: txna ApplicationArgs 3",
              "83: btoi",
              "84: txna ApplicationArgs 4",
              "85: btoi",
              "88: callsub submit_proposal"
            ],
            [
              "156: submit_proposal:",
              "167: proto 5 0",
              "170: callsub submit_check_authorization"
            ],
            [
              "245: submit_check_authorization:",
              "249: proto 0 0",
              "252: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "253: assert",
              "256: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "257: assert",
              "260: int 0",
              "263: byte \"status\"",
              "266: app_global_get_ex",
              "267: assert",
              "268: !",
              "269: assert",
              "270: retsub"
            ],
            [
              "173: frame_dig -4",
              "174: frame_dig -3",
              "175: frame_dig -2",
              "176: frame_dig -1",
              "177: callsub submit_input_validation"
            ],
            [
              "310: submit_input_validation:",
              "320: proto 4 1",
              "323: frame_dig -4",
              "324: frame_dig -3",
              "325: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "326: frame_bury -3",
              "329: frame_dig -2",
              "330: int 10",
              "331: ==",
              "335: bnz submit_input_validation_bool_true@2"
            ],
            [
              "346: submit_input_validation_bool_true@2:",
              "347: int 1",
              "348: b submit_input_validation_bool_merge@4"
            ],
            [
              "353: submit_input_validation_bool_merge@4:",
              "359: assert",
              "362: callsub get_min_requested_amount"
            ],
            [
              "409: get_min_requested_amount:",
              "424: proto 0 1",
              "427: int 10000000000",
              "428: retsub"
            ],
            [
              "365: callsub get_max_requested_amount_large"
            ],
            [
              "432: get_max_requested_amount_large:",
              "436: proto 0 1",
              "439: int 500000000000",
              "440: retsub"
            ],
            [
              "366: swap",
              "369: frame_dig -1",
              "370: <=",
              "371: assert",
              "374: frame_dig -1",
              "375: >=",
              "380: assert",
              "381: frame_dig -3",
              "382: retsub"
            ],
            [
              "178: frame_bury -3",
              "181: frame_dig -5",
              "182: frame_dig -1",
              "183: callsub submit_payment_validation"
            ],
            [
              "444: submit_payment_validation:",
              "450: proto 2 0",
              "453: frame_dig -1",
              "454: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "457: int 0",
              "460: byte \"proposer\"",
              "463: app_global_get_ex",
              "464: assert",
              "465: frame_dig -2",
              "466: Gtxns Sender",
              "467: ==",
              "468: assert",
              "471: frame_dig -2",
              "472: Gtxns Receiver",
              "473: global CurrentApplicationAddress",
              "474: ==",
              "479: assert",
              "482: frame_dig -2",
              "483: Gtxns Amount",
              "484: ==",
              "485: assert",
              "486: retsub"
            ],
            [
              "186: byte \"title\"",
              "189: frame_dig -4",
              "190: app_global_put",
              "193: byte \"cid\"",
              "196: frame_dig -3",
              "197: app_global_put",
              "200: frame_dig -1",
              "201: callsub set_category"
            ],
            [
              "539: set_category:",
              "543: proto 1 0",
              "546: callsub get_max_requested_amount_small"
            ],
            [
              "595: get_max_requested_amount_small:",
              "599: proto 0 1",
              "602: int 50000000000",
              "603: retsub"
            ],
            [
              "549: callsub get_max_requested_amount_medium"
            ],
            [
              "607: get_max_requested_amount_medium:",
              "611: proto 0 1",
              "614: int 250000000000",
              "615: retsub"
            ],
            [
              "550: swap",
              "553: frame_dig -1",
              "554: >=",
              "555: bz set_category_else_body@2"
            ],
            [
              "565: set_category_else_body@2:",
              "568: frame_dig -1",
              "569: frame_dig 0",
              "570: <=",
              "571: bz set_category_else_body@4"
            ],
            [
              "581: set_category_else_body@4:",
              "584: byte \"category\"",
              "587: int 33",
              "588: app_global_put"
            ],
            [
              "590: set_category_after_if_else@6:",
              "591: retsub"
            ],
            [
              "204: byte \"funding_type\"",
              "207: frame_dig -2",
              "208: app_global_put",
              "211: byte \"requested_amount\"",
              "214: frame_dig -1",
              "215: app_global_put",
              "218: frame_dig -1",
              "219: callsub get_expected_locked_amount"
            ],
            [
              "490: get_expected_locked_amount:",
              "494: proto 1 1",
              "497: callsub get_proposal_commitment_bps"
            ],
            [
              "509: get_proposal_commitment_bps:",
              "513: proto 0 1",
              "516: int 100",
              "517: retsub"
            ],
            [
              "502: frame_dig -1",
              "503: swap",
              "504: callsub relative_to_absolute_amount"
            ],
            [
              "521: relative_to_absolute_amount:",
              "527: proto 2 1",
              "530: frame_dig -2",
              "531: frame_dig -1",
              "532: *",
              "533: int 10000",
              "534: /",
              "535: retsub"
            ],
            [
              "505: retsub"
            ],
            [
              "222: byte \"locked_amount\"",
              "225: swap",
              "226: app_global_put",
              "229: byte \"submission_ts\"",
              "232: global LatestTimestamp",
              "233: app_global_put",
              "236: byte \"status\"",
              "239: int 10",
              "240: app_global_put",
              "241: retsub"
            ],
            [
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "92: main_update_proposal_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "110: txna ApplicationArgs 1",
              "111: extract 2 0",
              "112: txna ApplicationArgs 2",
              "115: callsub update_proposal"
            ],
            [
              "619: update_proposal:",
              "623: proto 2 0",
              "626: callsub update_check_authorization"
            ],
            [
              "651: update_check_authorization:",
              "655: proto 0 0",
              "658: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "659: assert",
              "662: callsub is_kyc_verified"
            ],
            [
              "295: is_kyc_verified:",
              "302: proto 0 1",
              "305: int 1",
              "306: retsub"
            ],
            [
              "663: assert",
              "666: int 0",
              "669: byte \"status\"",
              "672: app_global_get_ex",
              "673: assert",
              "674: int 10",
              "675: ==",
              "676: assert",
              "677: retsub"
            ],
            [
              "629: frame_dig -2",
              "630: frame_dig -1",
              "631: callsub updateable_input_validation"
            ],
            [
              "386: updateable_input_validation:",
              "390: proto 2 1",
              "393: frame_dig -2",
              "394: len",
              "395: int 123",
              "396: <=",
              "397: assert",
              "400: frame_dig -2",
              "401: byte \"\"",
              "402: !=",
              "403: assert",
              "404: frame_dig -1",
              "405: retsub"
            ],
            [
              "632: frame_bury -1",
              "635: byte \"title\"",
              "638: frame_dig -2",
              "639: app_global_put",
              "642: byte \"cid\"",
              "645: frame_dig -1",
              "646: app_global_put",
              "647: retsub"
            ],
            [
              "116: int 1",
              "117: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "119: main_drop_proposal_route@6:",
              "122: txn OnCompletion",
              "123: !",
              "124: assert",
              "125: txn ApplicationID",
              "126: assert",
              "127: callsub drop_proposal"
            ],
            [
              "681: drop_proposal:",
              "685: proto 0 0",
              "688: callsub drop_check_authorization"
            ],
            [
              "794: drop_check_authorization:",
              "798: proto 0 0",
              "801: callsub is_proposer"
            ],
            [
              "274: is_proposer:",
              "278: proto 0 1",
              "281: int 0",
              "284: byte \"proposer\"",
              "287: app_global_get_ex",
              "288: assert",
              "289: txn Sender",
              "290: ==",
              "291: retsub"
            ],
            [
              "802: assert",
              "805: int 0",
              "808: byte \"status\"",
              "811: app_global_get_ex",
              "812: assert",
              "813: int 10",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "695: itxn_begin",
              "698: int 0",
              "701: byte \"proposer\"",
              "704: app_global_get_ex",
              "705: assert",
              "708: int 0",
              "711: byte \"locked_amount\"",
              "714: app_global_get_ex",
              "715: assert",
              "716: itxn_field Amount",
              "717: itxn_field Receiver",
              "720: int pay",
              "721: itxn_field TypeEnum",
              "724: int 0",
              "725: itxn_field Fee",
              "732: itxn_submit",
              "735: byte \"title\"",
              "739: byte \"\"",
              "740: app_global_put",
              "743: byte \"cid\"",
              "746: byte 0x",
              "747: app_global_put",
              "750: byte \"category\"",
              "753: int 0",
              "754: app_global_put",
              "757: byte \"funding_type\"",
              "760: int 0",
              "761: app_global_put",
              "764: byte \"requested_amount\"",
              "767: int 0",
              "768: app_global_put",
              "771: byte \"locked_amount\"",
              "774: int 0",
              "775: app_global_put",
              "778: byte \"submission_ts\"",
              "781: int 0",
              "782: app_global_put",
              "785: byte \"status\"",
              "788: int 0",
              "789: app_global_put",
              "790: retsub"
            ],
            [
              "128: int 1",
              "129: return"
            ]
          ]
        }
      ]
    }
  ]
}
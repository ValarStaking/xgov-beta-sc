{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 20,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 9 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "25: main_create_route@3:",
              "28: txn OnCompletion",
              "29: !",
              "30: assert",
              "31: txn ApplicationID",
              "32: !",
              "33: assert",
              "44: txna ApplicationArgs 1",
              "47: callsub create"
            ],
            [
              "92: create:",
              "96: proto 1 0",
              "99: byte \"proposer\"",
              "102: frame_dig -1",
              "103: app_global_put",
              "106: byte \"registry_app_id\"",
              "109: global CallerApplicationID",
              "110: app_global_put",
              "111: retsub"
            ],
            [
              "48: int 1",
              "49: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 9 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "25: main_create_route@3:",
              "28: txn OnCompletion",
              "29: !",
              "30: assert",
              "31: txn ApplicationID",
              "32: !",
              "33: assert",
              "44: txna ApplicationArgs 1",
              "47: callsub create"
            ],
            [
              "92: create:",
              "96: proto 1 0",
              "99: byte \"proposer\"",
              "102: frame_dig -1",
              "103: app_global_put",
              "106: byte \"registry_app_id\"",
              "109: global CallerApplicationID",
              "110: app_global_put",
              "111: retsub"
            ],
            [
              "48: int 1",
              "49: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 20,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 9 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "25: main_create_route@3:",
              "28: txn OnCompletion",
              "29: !",
              "30: assert",
              "31: txn ApplicationID",
              "32: !",
              "33: assert",
              "44: txna ApplicationArgs 1",
              "47: callsub create"
            ],
            [
              "92: create:",
              "96: proto 1 0",
              "99: byte \"proposer\"",
              "102: frame_dig -1",
              "103: app_global_put",
              "106: byte \"registry_app_id\"",
              "109: global CallerApplicationID",
              "110: app_global_put",
              "111: retsub"
            ],
            [
              "48: int 1",
              "49: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "553: __init__:",
              "556: proto 0 0",
              "560: txn GlobalNumByteSlice",
              "561: int 4",
              "562: ==",
              "563: assert",
              "566: txn GlobalNumUint",
              "567: int 13",
              "568: ==",
              "569: assert",
              "572: txn LocalNumByteSlice",
              "573: !",
              "574: assert",
              "577: txn LocalNumUint",
              "578: !",
              "579: assert",
              "582: byte \"proposer\"",
              "583: global ZeroAddress",
              "584: app_global_put",
              "587: byte \"registry_app_id\"",
              "588: int 0",
              "589: app_global_put",
              "592: byte \"title\"",
              "593: byte \"\"",
              "594: app_global_put",
              "597: byte \"cid\"",
              "600: byte 0x",
              "605: app_global_put",
              "608: byte \"submission_ts\"",
              "609: int 0",
              "610: app_global_put",
              "613: byte \"finalization_ts\"",
              "614: int 0",
              "615: app_global_put",
              "618: byte \"status\"",
              "619: int 0",
              "620: app_global_put",
              "623: byte \"category\"",
              "628: int 0",
              "629: app_global_put",
              "632: byte \"funding_type\"",
              "637: int 0",
              "638: app_global_put",
              "641: byte \"requested_amount\"",
              "642: int 0",
              "643: app_global_put",
              "646: byte \"locked_amount\"",
              "649: int 0",
              "654: app_global_put",
              "657: byte \"committee_id\"",
              "658: byte 0x",
              "659: app_global_put",
              "662: byte \"committee_members\"",
              "663: int 0",
              "664: app_global_put",
              "667: byte \"committee_votes\"",
              "668: int 0",
              "669: app_global_put",
              "672: byte \"voted_members\"",
              "673: int 0",
              "674: app_global_put",
              "677: byte \"approvals\"",
              "680: int 0",
              "685: app_global_put",
              "688: byte \"rejections\"",
              "691: int 0",
              "696: app_global_put",
              "697: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 9 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "25: main_create_route@3:",
              "28: txn OnCompletion",
              "29: !",
              "30: assert",
              "31: txn ApplicationID",
              "32: !",
              "33: assert",
              "44: txna ApplicationArgs 1",
              "47: callsub create"
            ],
            [
              "92: create:",
              "96: proto 1 0",
              "99: byte \"proposer\"",
              "102: frame_dig -1",
              "103: app_global_put",
              "106: byte \"registry_app_id\"",
              "109: global CallerApplicationID",
              "110: app_global_put",
              "111: retsub"
            ],
            [
              "48: int 1",
              "49: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 22 -> 24 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "304: frame_dig -2",
              "305: int 20",
              "306: ==",
              "310: bz submit_input_validation_bool_false@3"
            ],
            [
              "316: submit_input_validation_bool_false@3:",
              "317: int 0"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 38 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "492: byte \"category\"",
              "495: int 10",
              "496: app_global_put",
              "497: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 40 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "508: byte \"category\"",
              "511: int 20",
              "512: app_global_put",
              "513: b set_category_after_if_else@6"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 10 -> 16 -> 19 -> 17 -> 20 -> 18 -> 11 -> 21 -> 23 -> 25 -> 28 -> 26 -> 29 -> 27 -> 12 -> 30 -> 32 -> 34 -> 33 -> 31 -> 13 -> 35 -> 43 -> 36 -> 44 -> 37 -> 39 -> 41 -> 42 -> 14 -> 32 -> 34 -> 33 -> 15 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: txna ApplicationArgs 0",
              "22: match main_create_route@3 main_submit_proposal_route@4"
            ],
            [
              "51: main_submit_proposal_route@4:",
              "54: txn OnCompletion",
              "55: !",
              "56: assert",
              "57: txn ApplicationID",
              "58: assert",
              "69: txn GroupIndex",
              "70: int 1",
              "71: -",
              "72: dup",
              "73: Gtxns TypeEnum",
              "74: int pay",
              "75: ==",
              "76: assert",
              "77: txna ApplicationArgs 1",
              "78: extract 2 0",
              "79: txna ApplicationArgs 2",
              "80: txna ApplicationArgs 3",
              "81: btoi",
              "82: txna ApplicationArgs 4",
              "83: btoi",
              "86: callsub submit_proposal"
            ],
            [
              "115: submit_proposal:",
              "126: proto 5 0",
              "129: callsub submit_check_authorization"
            ],
            [
              "204: submit_check_authorization:",
              "208: proto 0 0",
              "211: callsub is_proposer"
            ],
            [
              "233: is_proposer:",
              "237: proto 0 1",
              "240: int 0",
              "243: byte \"proposer\"",
              "246: app_global_get_ex",
              "247: assert",
              "248: txn Sender",
              "249: ==",
              "250: retsub"
            ],
            [
              "212: assert",
              "215: callsub is_kyc_verified"
            ],
            [
              "254: is_kyc_verified:",
              "261: proto 0 1",
              "264: int 1",
              "265: retsub"
            ],
            [
              "216: assert",
              "219: int 0",
              "222: byte \"status\"",
              "225: app_global_get_ex",
              "226: assert",
              "227: !",
              "228: assert",
              "229: retsub"
            ],
            [
              "132: frame_dig -4",
              "133: frame_dig -3",
              "134: frame_dig -2",
              "135: frame_dig -1",
              "136: callsub submit_input_validation"
            ],
            [
              "269: submit_input_validation:",
              "279: proto 4 1",
              "282: frame_dig -4",
              "283: len",
              "284: int 123",
              "285: <=",
              "286: assert",
              "289: frame_dig -4",
              "290: byte \"\"",
              "291: !=",
              "292: assert",
              "295: frame_dig -2",
              "296: int 10",
              "297: ==",
              "301: bnz submit_input_validation_bool_true@2"
            ],
            [
              "312: submit_input_validation_bool_true@2:",
              "313: int 1",
              "314: b submit_input_validation_bool_merge@4"
            ],
            [
              "319: submit_input_validation_bool_merge@4:",
              "325: assert",
              "328: callsub get_min_requested_amount"
            ],
            [
              "352: get_min_requested_amount:",
              "367: proto 0 1",
              "370: int 10000000000",
              "371: retsub"
            ],
            [
              "331: callsub get_max_requested_amount_large"
            ],
            [
              "375: get_max_requested_amount_large:",
              "379: proto 0 1",
              "382: int 500000000000",
              "383: retsub"
            ],
            [
              "332: swap",
              "335: frame_dig -1",
              "336: <=",
              "337: assert",
              "340: frame_dig -1",
              "341: >=",
              "346: assert",
              "347: frame_dig -3",
              "348: retsub"
            ],
            [
              "137: frame_bury -3",
              "140: frame_dig -5",
              "141: frame_dig -1",
              "142: callsub submit_payment_validation"
            ],
            [
              "387: submit_payment_validation:",
              "393: proto 2 0",
              "396: frame_dig -1",
              "397: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "400: int 0",
              "403: byte \"proposer\"",
              "406: app_global_get_ex",
              "407: assert",
              "408: frame_dig -2",
              "409: Gtxns Sender",
              "410: ==",
              "411: assert",
              "414: frame_dig -2",
              "415: Gtxns Receiver",
              "416: global CurrentApplicationAddress",
              "417: ==",
              "422: assert",
              "425: frame_dig -2",
              "426: Gtxns Amount",
              "427: ==",
              "428: assert",
              "429: retsub"
            ],
            [
              "145: byte \"title\"",
              "148: frame_dig -4",
              "149: app_global_put",
              "152: byte \"cid\"",
              "155: frame_dig -3",
              "156: app_global_put",
              "159: frame_dig -1",
              "160: callsub set_category"
            ],
            [
              "473: set_category:",
              "477: proto 1 0",
              "480: callsub get_max_requested_amount_small"
            ],
            [
              "529: get_max_requested_amount_small:",
              "533: proto 0 1",
              "536: int 50000000000",
              "537: retsub"
            ],
            [
              "483: callsub get_max_requested_amount_medium"
            ],
            [
              "541: get_max_requested_amount_medium:",
              "545: proto 0 1",
              "548: int 250000000000",
              "549: retsub"
            ],
            [
              "484: swap",
              "487: frame_dig -1",
              "488: >=",
              "489: bz set_category_else_body@2"
            ],
            [
              "499: set_category_else_body@2:",
              "502: frame_dig -1",
              "503: frame_dig 0",
              "504: <=",
              "505: bz set_category_else_body@4"
            ],
            [
              "515: set_category_else_body@4:",
              "518: byte \"category\"",
              "521: int 33",
              "522: app_global_put"
            ],
            [
              "524: set_category_after_if_else@6:",
              "525: retsub"
            ],
            [
              "163: byte \"funding_type\"",
              "166: frame_dig -2",
              "167: app_global_put",
              "170: byte \"requested_amount\"",
              "173: frame_dig -1",
              "174: app_global_put",
              "177: frame_dig -1",
              "178: callsub get_expected_locked_amount"
            ],
            [
              "433: get_expected_locked_amount:",
              "437: proto 1 1",
              "442: frame_dig -1",
              "445: int 100",
              "450: callsub relative_to_absolute_amount"
            ],
            [
              "455: relative_to_absolute_amount:",
              "461: proto 2 1",
              "464: frame_dig -2",
              "465: frame_dig -1",
              "466: *",
              "467: int 10000",
              "468: /",
              "469: retsub"
            ],
            [
              "451: retsub"
            ],
            [
              "181: byte \"locked_amount\"",
              "184: swap",
              "185: app_global_put",
              "188: byte \"submission_ts\"",
              "191: global LatestTimestamp",
              "192: app_global_put",
              "195: byte \"status\"",
              "198: int 10",
              "199: app_global_put",
              "200: retsub"
            ],
            [
              "87: int 1",
              "88: return"
            ]
          ]
        }
      ]
    }
  ]
}
{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "47: txna ApplicationArgs 2",
              "50: callsub create"
            ],
            [
              "134: create:",
              "138: proto 2 0",
              "141: byte \"committee_publisher\"",
              "146: frame_dig -1",
              "147: app_global_put",
              "150: byte \"proposer\"",
              "153: frame_dig -2",
              "154: app_global_put",
              "157: byte \"registry_app_id\"",
              "160: global CallerApplicationID",
              "161: app_global_put",
              "162: retsub"
            ],
            [
              "51: int 1",
              "52: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "93: main_update_proposal_route@5:",
              "96: txn OnCompletion",
              "97: !",
              "98: assert",
              "99: txn ApplicationID",
              "100: assert",
              "111: txna ApplicationArgs 1",
              "112: extract 2 0",
              "113: txna ApplicationArgs 2",
              "116: callsub update_proposal"
            ],
            [
              "629: update_proposal:",
              "633: proto 2 0",
              "636: callsub update_check_authorization"
            ],
            [
              "661: update_check_authorization:",
              "665: proto 0 0",
              "668: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "669: assert",
              "672: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "673: assert",
              "676: int 0",
              "679: byte \"status\"",
              "682: app_global_get_ex",
              "683: assert",
              "684: int 10",
              "685: ==",
              "686: assert",
              "687: retsub"
            ],
            [
              "639: frame_dig -2",
              "640: frame_dig -1",
              "641: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "642: frame_bury -1",
              "645: byte \"title\"",
              "648: frame_dig -2",
              "649: app_global_put",
              "652: byte \"cid\"",
              "655: frame_dig -1",
              "656: app_global_put",
              "657: retsub"
            ],
            [
              "117: int 1",
              "118: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "120: main_drop_proposal_route@6:",
              "123: txn OnCompletion",
              "124: !",
              "125: assert",
              "126: txn ApplicationID",
              "127: assert",
              "128: callsub drop_proposal"
            ],
            [
              "691: drop_proposal:",
              "695: proto 0 0",
              "698: callsub drop_check_authorization"
            ],
            [
              "754: drop_check_authorization:",
              "758: proto 0 0",
              "761: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "762: assert",
              "765: int 0",
              "768: byte \"status\"",
              "771: app_global_get_ex",
              "772: assert",
              "773: int 10",
              "774: ==",
              "775: assert",
              "776: retsub"
            ],
            [
              "701: byte \"status\"",
              "704: int 0",
              "705: app_global_put",
              "712: itxn_begin",
              "715: int 0",
              "718: byte \"proposer\"",
              "721: app_global_get_ex",
              "722: assert",
              "725: int 0",
              "728: byte \"locked_amount\"",
              "731: app_global_get_ex",
              "732: assert",
              "733: itxn_field Amount",
              "734: itxn_field Receiver",
              "737: int pay",
              "738: itxn_field TypeEnum",
              "741: int 0",
              "742: itxn_field Fee",
              "749: itxn_submit",
              "750: retsub"
            ],
            [
              "129: int 1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "47: txna ApplicationArgs 2",
              "50: callsub create"
            ],
            [
              "134: create:",
              "138: proto 2 0",
              "141: byte \"committee_publisher\"",
              "146: frame_dig -1",
              "147: app_global_put",
              "150: byte \"proposer\"",
              "153: frame_dig -2",
              "154: app_global_put",
              "157: byte \"registry_app_id\"",
              "160: global CallerApplicationID",
              "161: app_global_put",
              "162: retsub"
            ],
            [
              "51: int 1",
              "52: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "93: main_update_proposal_route@5:",
              "96: txn OnCompletion",
              "97: !",
              "98: assert",
              "99: txn ApplicationID",
              "100: assert",
              "111: txna ApplicationArgs 1",
              "112: extract 2 0",
              "113: txna ApplicationArgs 2",
              "116: callsub update_proposal"
            ],
            [
              "629: update_proposal:",
              "633: proto 2 0",
              "636: callsub update_check_authorization"
            ],
            [
              "661: update_check_authorization:",
              "665: proto 0 0",
              "668: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "669: assert",
              "672: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "673: assert",
              "676: int 0",
              "679: byte \"status\"",
              "682: app_global_get_ex",
              "683: assert",
              "684: int 10",
              "685: ==",
              "686: assert",
              "687: retsub"
            ],
            [
              "639: frame_dig -2",
              "640: frame_dig -1",
              "641: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "642: frame_bury -1",
              "645: byte \"title\"",
              "648: frame_dig -2",
              "649: app_global_put",
              "652: byte \"cid\"",
              "655: frame_dig -1",
              "656: app_global_put",
              "657: retsub"
            ],
            [
              "117: int 1",
              "118: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "120: main_drop_proposal_route@6:",
              "123: txn OnCompletion",
              "124: !",
              "125: assert",
              "126: txn ApplicationID",
              "127: assert",
              "128: callsub drop_proposal"
            ],
            [
              "691: drop_proposal:",
              "695: proto 0 0",
              "698: callsub drop_check_authorization"
            ],
            [
              "754: drop_check_authorization:",
              "758: proto 0 0",
              "761: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "762: assert",
              "765: int 0",
              "768: byte \"status\"",
              "771: app_global_get_ex",
              "772: assert",
              "773: int 10",
              "774: ==",
              "775: assert",
              "776: retsub"
            ],
            [
              "701: byte \"status\"",
              "704: int 0",
              "705: app_global_put",
              "712: itxn_begin",
              "715: int 0",
              "718: byte \"proposer\"",
              "721: app_global_get_ex",
              "722: assert",
              "725: int 0",
              "728: byte \"locked_amount\"",
              "731: app_global_get_ex",
              "732: assert",
              "733: itxn_field Amount",
              "734: itxn_field Receiver",
              "737: int pay",
              "738: itxn_field TypeEnum",
              "741: int 0",
              "742: itxn_field Fee",
              "749: itxn_submit",
              "750: retsub"
            ],
            [
              "129: int 1",
              "130: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "47: txna ApplicationArgs 2",
              "50: callsub create"
            ],
            [
              "134: create:",
              "138: proto 2 0",
              "141: byte \"committee_publisher\"",
              "146: frame_dig -1",
              "147: app_global_put",
              "150: byte \"proposer\"",
              "153: frame_dig -2",
              "154: app_global_put",
              "157: byte \"registry_app_id\"",
              "160: global CallerApplicationID",
              "161: app_global_put",
              "162: retsub"
            ],
            [
              "51: int 1",
              "52: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "93: main_update_proposal_route@5:",
              "96: txn OnCompletion",
              "97: !",
              "98: assert",
              "99: txn ApplicationID",
              "100: assert",
              "111: txna ApplicationArgs 1",
              "112: extract 2 0",
              "113: txna ApplicationArgs 2",
              "116: callsub update_proposal"
            ],
            [
              "629: update_proposal:",
              "633: proto 2 0",
              "636: callsub update_check_authorization"
            ],
            [
              "661: update_check_authorization:",
              "665: proto 0 0",
              "668: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "669: assert",
              "672: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "673: assert",
              "676: int 0",
              "679: byte \"status\"",
              "682: app_global_get_ex",
              "683: assert",
              "684: int 10",
              "685: ==",
              "686: assert",
              "687: retsub"
            ],
            [
              "639: frame_dig -2",
              "640: frame_dig -1",
              "641: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "642: frame_bury -1",
              "645: byte \"title\"",
              "648: frame_dig -2",
              "649: app_global_put",
              "652: byte \"cid\"",
              "655: frame_dig -1",
              "656: app_global_put",
              "657: retsub"
            ],
            [
              "117: int 1",
              "118: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 63 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "780: __init__:",
              "783: proto 0 0",
              "787: txn GlobalNumByteSlice",
              "788: int 5",
              "789: ==",
              "790: assert",
              "793: txn GlobalNumUint",
              "794: int 13",
              "795: ==",
              "796: assert",
              "799: txn LocalNumByteSlice",
              "800: !",
              "801: assert",
              "804: txn LocalNumUint",
              "805: !",
              "806: assert",
              "809: byte \"committee_publisher\"",
              "812: global ZeroAddress",
              "817: app_global_put",
              "820: byte \"proposer\"",
              "821: global ZeroAddress",
              "822: app_global_put",
              "825: byte \"registry_app_id\"",
              "826: int 0",
              "827: app_global_put",
              "830: byte \"title\"",
              "831: byte \"\"",
              "832: app_global_put",
              "835: byte \"cid\"",
              "838: byte 0x",
              "843: app_global_put",
              "846: byte \"submission_ts\"",
              "847: int 0",
              "848: app_global_put",
              "851: byte \"finalization_ts\"",
              "852: int 0",
              "853: app_global_put",
              "856: byte \"status\"",
              "857: int 0",
              "858: app_global_put",
              "861: byte \"category\"",
              "866: int 0",
              "867: app_global_put",
              "870: byte \"funding_type\"",
              "875: int 0",
              "876: app_global_put",
              "879: byte \"requested_amount\"",
              "880: int 0",
              "881: app_global_put",
              "884: byte \"locked_amount\"",
              "887: int 0",
              "892: app_global_put",
              "895: byte \"committee_id\"",
              "896: byte 0x",
              "897: app_global_put",
              "900: byte \"committee_members\"",
              "901: int 0",
              "902: app_global_put",
              "905: byte \"committee_votes\"",
              "906: int 0",
              "907: app_global_put",
              "910: byte \"voted_members\"",
              "911: int 0",
              "912: app_global_put",
              "915: byte \"approvals\"",
              "918: int 0",
              "923: app_global_put",
              "926: byte \"rejections\"",
              "929: int 0",
              "934: app_global_put",
              "935: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "120: main_drop_proposal_route@6:",
              "123: txn OnCompletion",
              "124: !",
              "125: assert",
              "126: txn ApplicationID",
              "127: assert",
              "128: callsub drop_proposal"
            ],
            [
              "691: drop_proposal:",
              "695: proto 0 0",
              "698: callsub drop_check_authorization"
            ],
            [
              "754: drop_check_authorization:",
              "758: proto 0 0",
              "761: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "762: assert",
              "765: int 0",
              "768: byte \"status\"",
              "771: app_global_get_ex",
              "772: assert",
              "773: int 10",
              "774: ==",
              "775: assert",
              "776: retsub"
            ],
            [
              "701: byte \"status\"",
              "704: int 0",
              "705: app_global_put",
              "712: itxn_begin",
              "715: int 0",
              "718: byte \"proposer\"",
              "721: app_global_get_ex",
              "722: assert",
              "725: int 0",
              "728: byte \"locked_amount\"",
              "731: app_global_get_ex",
              "732: assert",
              "733: itxn_field Amount",
              "734: itxn_field Receiver",
              "737: int pay",
              "738: itxn_field TypeEnum",
              "741: int 0",
              "742: itxn_field Fee",
              "749: itxn_submit",
              "750: retsub"
            ],
            [
              "129: int 1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 13 -> 6",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "27: main_create_route@3:",
              "30: txn OnCompletion",
              "31: !",
              "32: assert",
              "33: txn ApplicationID",
              "34: !",
              "35: assert",
              "46: txna ApplicationArgs 1",
              "47: txna ApplicationArgs 2",
              "50: callsub create"
            ],
            [
              "134: create:",
              "138: proto 2 0",
              "141: byte \"committee_publisher\"",
              "146: frame_dig -1",
              "147: app_global_put",
              "150: byte \"proposer\"",
              "153: frame_dig -2",
              "154: app_global_put",
              "157: byte \"registry_app_id\"",
              "160: global CallerApplicationID",
              "161: app_global_put",
              "162: retsub"
            ],
            [
              "51: int 1",
              "52: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 27 -> 29 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "348: frame_dig -2",
              "349: int 20",
              "350: ==",
              "354: bz submit_input_validation_bool_false@3"
            ],
            [
              "360: submit_input_validation_bool_false@3:",
              "361: int 0"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 46 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "568: byte \"category\"",
              "571: int 10",
              "572: app_global_put",
              "573: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 48 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "584: byte \"category\"",
              "587: int 20",
              "588: app_global_put",
              "589: b set_category_after_if_else@6"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 7 -> 14 -> 20 -> 23 -> 21 -> 24 -> 22 -> 15 -> 25 -> 33 -> 26 -> 28 -> 30 -> 34 -> 31 -> 35 -> 32 -> 16 -> 36 -> 38 -> 41 -> 39 -> 42 -> 40 -> 37 -> 17 -> 43 -> 51 -> 44 -> 52 -> 45 -> 47 -> 49 -> 50 -> 18 -> 38 -> 41 -> 39 -> 42 -> 40 -> 19 -> 8",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "54: main_submit_proposal_route@4:",
              "57: txn OnCompletion",
              "58: !",
              "59: assert",
              "60: txn ApplicationID",
              "61: assert",
              "72: txn GroupIndex",
              "73: int 1",
              "74: -",
              "75: dup",
              "76: Gtxns TypeEnum",
              "77: int pay",
              "78: ==",
              "79: assert",
              "80: txna ApplicationArgs 1",
              "81: extract 2 0",
              "82: txna ApplicationArgs 2",
              "83: txna ApplicationArgs 3",
              "84: btoi",
              "85: txna ApplicationArgs 4",
              "86: btoi",
              "89: callsub submit_proposal"
            ],
            [
              "166: submit_proposal:",
              "177: proto 5 0",
              "180: callsub submit_check_authorization"
            ],
            [
              "255: submit_check_authorization:",
              "259: proto 0 0",
              "262: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "263: assert",
              "266: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "267: assert",
              "270: int 0",
              "273: byte \"status\"",
              "276: app_global_get_ex",
              "277: assert",
              "278: !",
              "279: assert",
              "280: retsub"
            ],
            [
              "183: frame_dig -4",
              "184: frame_dig -3",
              "185: frame_dig -2",
              "186: frame_dig -1",
              "187: callsub submit_input_validation"
            ],
            [
              "320: submit_input_validation:",
              "330: proto 4 1",
              "333: frame_dig -4",
              "334: frame_dig -3",
              "335: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "336: frame_bury -3",
              "339: frame_dig -2",
              "340: int 10",
              "341: ==",
              "345: bnz submit_input_validation_bool_true@2"
            ],
            [
              "356: submit_input_validation_bool_true@2:",
              "357: int 1",
              "358: b submit_input_validation_bool_merge@4"
            ],
            [
              "363: submit_input_validation_bool_merge@4:",
              "369: assert",
              "372: callsub get_min_requested_amount"
            ],
            [
              "419: get_min_requested_amount:",
              "434: proto 0 1",
              "437: int 10000000000",
              "438: retsub"
            ],
            [
              "375: callsub get_max_requested_amount_large"
            ],
            [
              "442: get_max_requested_amount_large:",
              "446: proto 0 1",
              "449: int 500000000000",
              "450: retsub"
            ],
            [
              "376: swap",
              "379: frame_dig -1",
              "380: <=",
              "381: assert",
              "384: frame_dig -1",
              "385: >=",
              "390: assert",
              "391: frame_dig -3",
              "392: retsub"
            ],
            [
              "188: frame_bury -3",
              "191: frame_dig -5",
              "192: frame_dig -1",
              "193: callsub submit_payment_validation"
            ],
            [
              "454: submit_payment_validation:",
              "460: proto 2 0",
              "463: frame_dig -1",
              "464: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "467: int 0",
              "470: byte \"proposer\"",
              "473: app_global_get_ex",
              "474: assert",
              "475: frame_dig -2",
              "476: Gtxns Sender",
              "477: ==",
              "478: assert",
              "481: frame_dig -2",
              "482: Gtxns Receiver",
              "483: global CurrentApplicationAddress",
              "484: ==",
              "489: assert",
              "492: frame_dig -2",
              "493: Gtxns Amount",
              "494: ==",
              "495: assert",
              "496: retsub"
            ],
            [
              "196: byte \"title\"",
              "199: frame_dig -4",
              "200: app_global_put",
              "203: byte \"cid\"",
              "206: frame_dig -3",
              "207: app_global_put",
              "210: frame_dig -1",
              "211: callsub set_category"
            ],
            [
              "549: set_category:",
              "553: proto 1 0",
              "556: callsub get_max_requested_amount_small"
            ],
            [
              "605: get_max_requested_amount_small:",
              "609: proto 0 1",
              "612: int 50000000000",
              "613: retsub"
            ],
            [
              "559: callsub get_max_requested_amount_medium"
            ],
            [
              "617: get_max_requested_amount_medium:",
              "621: proto 0 1",
              "624: int 250000000000",
              "625: retsub"
            ],
            [
              "560: swap",
              "563: frame_dig -1",
              "564: >=",
              "565: bz set_category_else_body@2"
            ],
            [
              "575: set_category_else_body@2:",
              "578: frame_dig -1",
              "579: frame_dig 0",
              "580: <=",
              "581: bz set_category_else_body@4"
            ],
            [
              "591: set_category_else_body@4:",
              "594: byte \"category\"",
              "597: int 33",
              "598: app_global_put"
            ],
            [
              "600: set_category_after_if_else@6:",
              "601: retsub"
            ],
            [
              "214: byte \"funding_type\"",
              "217: frame_dig -2",
              "218: app_global_put",
              "221: byte \"requested_amount\"",
              "224: frame_dig -1",
              "225: app_global_put",
              "228: frame_dig -1",
              "229: callsub get_expected_locked_amount"
            ],
            [
              "500: get_expected_locked_amount:",
              "504: proto 1 1",
              "507: callsub get_proposal_commitment_bps"
            ],
            [
              "519: get_proposal_commitment_bps:",
              "523: proto 0 1",
              "526: int 100",
              "527: retsub"
            ],
            [
              "512: frame_dig -1",
              "513: swap",
              "514: callsub relative_to_absolute_amount"
            ],
            [
              "531: relative_to_absolute_amount:",
              "537: proto 2 1",
              "540: frame_dig -2",
              "541: frame_dig -1",
              "542: *",
              "543: int 10000",
              "544: /",
              "545: retsub"
            ],
            [
              "515: retsub"
            ],
            [
              "232: byte \"locked_amount\"",
              "235: swap",
              "236: app_global_put",
              "239: byte \"submission_ts\"",
              "242: global LatestTimestamp",
              "243: app_global_put",
              "246: byte \"status\"",
              "249: int 10",
              "250: app_global_put",
              "251: retsub"
            ],
            [
              "90: int 1",
              "91: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 9 -> 53 -> 56 -> 23 -> 57 -> 24 -> 58 -> 54 -> 33 -> 55 -> 10",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "93: main_update_proposal_route@5:",
              "96: txn OnCompletion",
              "97: !",
              "98: assert",
              "99: txn ApplicationID",
              "100: assert",
              "111: txna ApplicationArgs 1",
              "112: extract 2 0",
              "113: txna ApplicationArgs 2",
              "116: callsub update_proposal"
            ],
            [
              "629: update_proposal:",
              "633: proto 2 0",
              "636: callsub update_check_authorization"
            ],
            [
              "661: update_check_authorization:",
              "665: proto 0 0",
              "668: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "669: assert",
              "672: callsub is_kyc_verified"
            ],
            [
              "305: is_kyc_verified:",
              "312: proto 0 1",
              "315: int 1",
              "316: retsub"
            ],
            [
              "673: assert",
              "676: int 0",
              "679: byte \"status\"",
              "682: app_global_get_ex",
              "683: assert",
              "684: int 10",
              "685: ==",
              "686: assert",
              "687: retsub"
            ],
            [
              "639: frame_dig -2",
              "640: frame_dig -1",
              "641: callsub updateable_input_validation"
            ],
            [
              "396: updateable_input_validation:",
              "400: proto 2 1",
              "403: frame_dig -2",
              "404: len",
              "405: int 123",
              "406: <=",
              "407: assert",
              "410: frame_dig -2",
              "411: byte \"\"",
              "412: !=",
              "413: assert",
              "414: frame_dig -1",
              "415: retsub"
            ],
            [
              "642: frame_bury -1",
              "645: byte \"title\"",
              "648: frame_dig -2",
              "649: app_global_put",
              "652: byte \"cid\"",
              "655: frame_dig -1",
              "656: app_global_put",
              "657: retsub"
            ],
            [
              "117: int 1",
              "118: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 11 -> 59 -> 61 -> 23 -> 62 -> 60 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.proposal.contract.Proposal.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "19: method create(address,address)void",
              "20: method submit_proposal(pay,string,byte[59],uint64,uint64)void",
              "21: method update_proposal(string,byte[59])void",
              "22: method drop_proposal()void",
              "23: txna ApplicationArgs 0",
              "24: match main_create_route@3 main_submit_proposal_route@4 main_update_proposal_route@5 main_drop_proposal_route@6"
            ],
            [
              "120: main_drop_proposal_route@6:",
              "123: txn OnCompletion",
              "124: !",
              "125: assert",
              "126: txn ApplicationID",
              "127: assert",
              "128: callsub drop_proposal"
            ],
            [
              "691: drop_proposal:",
              "695: proto 0 0",
              "698: callsub drop_check_authorization"
            ],
            [
              "754: drop_check_authorization:",
              "758: proto 0 0",
              "761: callsub is_proposer"
            ],
            [
              "284: is_proposer:",
              "288: proto 0 1",
              "291: int 0",
              "294: byte \"proposer\"",
              "297: app_global_get_ex",
              "298: assert",
              "299: txn Sender",
              "300: ==",
              "301: retsub"
            ],
            [
              "762: assert",
              "765: int 0",
              "768: byte \"status\"",
              "771: app_global_get_ex",
              "772: assert",
              "773: int 10",
              "774: ==",
              "775: assert",
              "776: retsub"
            ],
            [
              "701: byte \"status\"",
              "704: int 0",
              "705: app_global_put",
              "712: itxn_begin",
              "715: int 0",
              "718: byte \"proposer\"",
              "721: app_global_get_ex",
              "722: assert",
              "725: int 0",
              "728: byte \"locked_amount\"",
              "731: app_global_get_ex",
              "732: assert",
              "733: itxn_field Amount",
              "734: itxn_field Receiver",
              "737: int pay",
              "738: itxn_field TypeEnum",
              "741: int 0",
              "742: itxn_field Fee",
              "749: itxn_submit",
              "750: retsub"
            ],
            [
              "129: int 1",
              "130: return"
            ]
          ]
        }
      ]
    }
  ]
}